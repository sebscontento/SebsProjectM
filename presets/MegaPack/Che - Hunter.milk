[preset00]
fRating=3.000000
fGammaAdj=1.000000
fDecay=1.000000
fVideoEchoZoom=1.000499
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000416
fWaveScale=0.408556
fWaveSmoothing=0.000000
fWaveParam=-0.418000
fModWaveAlphaStart=1.000000
fModWaveAlphaEnd=1.000000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.000158
fShader=0.090000
zoom=1.000223
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.000000
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.500000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=0.000000
ib_size=0.000000
ib_r=0.250000
ib_g=1.000000
ib_b=0.250000
ib_a=1.000000
nMotionVectorsX=16.104000
nMotionVectorsY=18.096004
mv_dx=0.000000
mv_dy=0.080000
mv_l=2.500000
mv_r=0.000000
mv_g=1.000000
mv_b=0.000000
mv_a=0.200000
per_frame_1=// timed sidon sensor
per_frame_2=// le = signal level; desired average value = 2
per_frame_3=le=1.4*bass_att+.1*bass+.5*treb;
per_frame_4=pulse=above(le,th);
per_frame_5=// pulsefreq = running average of interval between last 5 pulses
per_frame_6=pulsefreq=if(equal(pulsefreq,0),2,
per_frame_7=if(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));
per_frame_8=lastpulse=if(pulse,time,lastpulse);
per_frame_9=// bt = relative time; 0 = prev beat; 1 = expected beat
per_frame_10=bt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);
per_frame_11=// hccp = handcicap for th driven by bt
per_frame_12=hccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),
per_frame_13=(pow(sin((bt-1)*7.854),4)-1),0);
per_frame_14=beat=band(above(le,th+hccp),btblock);
per_frame_15=btblock=1-above(le,th+hccp);
per_frame_16=lastbeat=if(beat,time,lastbeat);
per_frame_17=beatfreq=if(equal(beatfreq,0),2,
per_frame_18=if(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));
per_frame_19=// th = threshold
per_frame_20=th=if(above(le,th),le+114/(le+10)-7.407,
per_frame_21=th+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));
per_frame_22=th=if(above(th,6),6,th);
per_frame_23=thccl=thccl+(th-2.5144);
per_frame_24=leccl=leccl+le;
per_frame_25=
per_frame_26=wave_r=.2+.2*sin(.02*leccl)+.6*caught;
per_frame_27=
per_frame_28=wave_g=(.5+.5*sin(.021*leccl))*(1-.7*caught);
per_frame_29=wave_b=(.5+.5*sin(.025*leccl))*(1-.7*caught);
per_frame_30=wavedir=if(beat,vortexdir+rand(1000)*.00314-if(above(sqr(wxx-vortex_x)+sqr(xyy-vortex_y),
per_frame_31=.25),4.71,1.57),if(band(below(sqr(wxx-vortex_x)+sqr(xyy-vortex_y),.009),
per_frame_32=below(abs(vortexdir-wavedir),2)),vortexdir+3.14,wavedir+.073*sin(rand(567))));
per_frame_33=wavespd=(th-2)*.003*(1-caught);
per_frame_34=wx=wx+wavespd*cos(wavedir)+.001*rand(1000)*(1-caught)*cblock;
per_frame_35=wy=wy+wavespd*sin(wavedir)+.001*rand(1000)*(1-caught)*cblock;
per_frame_36=wxx=.001*((wx*1000)%1000)+.07*sin(rand(6543))*caught;
per_frame_37=wyy=.001*((wy*1000)%1000)+.07*sin(rand(6543))*caught;
per_frame_38=wave_x=wxx;
per_frame_39=wave_y=1-wyy;
per_frame_40=
per_frame_41=vortexdir=atan2(wyy-vortex_y,wxx-vortex_x);
per_frame_42=vortex_x=vortex_x+.0035*cos(vortexdir);
per_frame_43=vortex_y=vortex_y+.0035*sin(vortexdir);
per_frame_44=
per_frame_45=caught=band(below(abs(wxx-vortex_x),.1),below(abs(wyy-vortex_y),.1));
per_frame_46=ctime=if(band(caught,1-cblock),time,ctime);
per_frame_47=cblock=caught;
per_frame_48=caught=caught*below(time-ctime,2);
per_frame_49=monitor=time-ctime;
per_frame_50=
per_frame_51=q1=vortex_x;
per_frame_52=q2=vortex_y;
per_frame_53=cx=q1;cy=q2;
per_frame_54=q3=le*.03*sign(.5-caught);
per_frame_55=
per_frame_56=dx=.002*sin(.005*thccl);
per_frame_57=dy=.002*sin(.0055*thccl);
per_frame_58=
per_frame_59=mvr=if(beat,.001*rand(1000),mvr);mv_r=mvr;
per_frame_60=mvg=if(beat,.001*rand(1000),mvg);mv_g=mvg;
per_frame_61=mvb=if(beat,.001*rand(1000),mvb);mv_b=mvb;
per_pixel_1=// coordinates transfomation
per_pixel_2=// q1,q2 = position; q3 = 1/zoom; q4 = rotation
per_pixel_3=aang=atan2(y-q2,x-q1);
per_pixel_4=arad=sqrt(sqr(y-q2)+sqr(x-q1));
per_pixel_5=atx=cos(aang)*arad;
per_pixel_6=aty=sin(aang)*arad;
per_pixel_7=
per_pixel_8=box=band(below(abs(atx),.1),below(abs(aty),.1));
per_pixel_9=
per_pixel_10=//custom zoom
per_pixel_11=//zcx,zcy = center; zzoom = amount; zzexp = exponent;
per_pixel_12=zzoom=0.92;
per_pixel_13=dx=if(box,(x-q1)*(zzoom-1),dx);
per_pixel_14=dy=if(box,(y-q2)*(zzoom-1),dy);
per_pixel_15=rot=box*q3;
per_frame_init_1=wx=.7;
per_frame_init_2=wy=.7;
per_frame_init_3=vortex_x=.2;
per_frame_init_4=vortex_y=.2;

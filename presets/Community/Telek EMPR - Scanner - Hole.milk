[preset00]
fRating=1.000000
fGammaAdj=1.000000
fDecay=0.998999
fVideoEchoZoom=1.006596
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.099998
fWaveScale=1.886994
fWaveSmoothing=0.630000
fWaveParam=0.682026
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fWarpAnimSpeed=1.000000
fWarpScale=1.331000
fZoomExponent=1.000000
fShader=0.000000
zoom=0.999514
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=1.000000
sy=1.000000
wave_r=0.492541
wave_g=0.883197
wave_b=0.210436
wave_x=0.918598
wave_y=0.161971
ob_size=0.055000
ob_r=0.640092
ob_g=0.397455
ob_b=0.671936
ob_a=0.896284
ib_size=0.003500
ib_r=0.459231
ib_g=0.155796
ib_b=0.687135
ib_a=0.167520
nMotionVectorsX=38.399994
nMotionVectorsY=24.000004
mv_dx=0.587815
mv_dy=-0.627373
mv_l=5.000000
mv_r=0.689003
mv_g=0.318469
mv_b=0.080644
mv_a=0.029898
per_frame_1=high_bass = above(bass_att,2);
per_frame_2=high_treb = above(treb, 2);
per_frame_3=wave_b = if(high_treb,0,1);
per_frame_4=//mv_rr = if(high_bass,.5 ,mv_rr*.9);
per_frame_5=//mv_r = mv_rr;
per_frame_6=//mv_b = if(high_treb*high_bass,0,1);
per_frame_7=//mv_g = if(high_treb*high_bass,0,.1*sin(time*.302)+.1);
per_frame_8=//mv_a = if(above(bass_att,1.5),.6,mv_a);
per_frame_9=//mv_x = bits *3;
per_frame_10=//mv_y = mv_x *.8;
per_frame_11=ob_r = sin(time*.3)/2+.5;
per_frame_12=ob_g= sin(time*.34)/2+.5;
per_frame_13=ob_b = sin(time*.3714)/2+.5;
per_frame_14=boomnow = if(high_bass,time,boomnow);
per_frame_15=brightness = min(sqr(time-boomnow-.866)+.25,1);
per_frame_16=av_bass=if(high_bass,av_bass*.8+.2*bass,av_bass);
per_frame_17=count=count+above(bass,av_bass*1.2);
per_frame_18=ob_r = ob_r*brightness;
per_frame_19=ob_g = ob_g*brightness;
per_frame_20=ob_b = ob_b*brightness;
per_frame_21=w_dx = (above((w_y*bits)%2,0)*.01-.005)*sin(time);
per_frame_22=w_dy = (above((w_x*bits)%2,0)*.01-.005)*cos(time);
per_frame_23=w_x = w_x+w_dx;
per_frame_24=w_y = w_y +w_dy;
per_frame_25=monitor = bits;
per_frame_26=q1 = bits;
per_frame_27=w_x = if(above(abs(w_x-.5),.5),rand(10)/10,w_x);
per_frame_28=w_y = if(above(abs(w_y-.5),.5),rand(10)/10,w_y);
per_frame_29=wave_x = w_x;
per_frame_30=wave_y = w_y;
per_frame_31=monitor = brightness;
per_frame_32=monitor = av_bass;
per_frame_33=monitor = count;
per_frame_34=// Loaded Preset From C:\Program Files\Winamp\Plugins\MilkDrop\Self\Scanner (@ztec)2.milk
per_frame_35=ob_r = if(below(warp * treb_att , bass_att * treb) , wave_r - treb , time + zoom);
per_frame_36=wave_g = min(bass * mid_att , bass * bass_att);
per_frame_37=mv_y = 24.000004 + bass - wave_x;
per_frame_38=mv_r = warp * mid_att;
per_frame_39=wave_x = min(if(below(time + treb_att , mid * bass_att) , mid - bass , treb * time) , wave_b * bass);
per_frame_40=mv_r = min(mv_r * wave_b , warp + wave_g);
per_frame_41=wave_mode = 0 + min(if(below(wave_g + mid , time * bass_att) , treb * treb , mid_att + treb) , treb * wave_g);
per_frame_42=mv_g = max(wave_g * wave_b , bass + bass_att);
per_frame_43=wave_g = min(wave_g * bass , mid * bass);
per_frame_44=mv_y = 24.000004 + mv_y * wave_b;
per_frame_45=wave_x = max(wave_x + mid , wave_y * time);
per_frame_46=zoomexp = 1 + max(wave_y * treb , wave_x * bass_att);
per_frame_47=wave_g = if(equal(wave_g * bass , wave_r * warp) , min(bass - bass , bass * warp) , mid * mid_att);
per_frame_48=dx = 0 + if(equal(treb * bass , bass_att * bass) , max(wave_b - mid , time * zoom) , bass * bass);
per_frame_49=ib_g = min(wave_b + time , mid_att * wave_b);
per_frame_50=wave_y = min(wave_y - wave_y , mid_att * wave_b);
per_frame_51=wave_y = wave_y * time;
per_frame_52=wave_g = min(wave_g - frame , mid * treb_att);
per_frame_53=zoomexp=if(below(zoomexp,0.01), 0.01, zoomexp);
per_frame_54=zoomexp=if(above(zoomexp,100.0), 100.0, zoomexp);
per_frame_55=dx=if(below(dx,-1), -1, dx);
per_frame_56=dx=if(above(dx,1.0), 1.0, dx);
per_frame_57=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_58=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_59=wave_x=if(below(wave_x,0.0), 0.0, wave_x);
per_frame_60=wave_x=if(above(wave_x,1.0), 1.0, wave_x);
per_frame_61=wave_y=if(below(wave_y,0.0), 0.0, wave_y);
per_frame_62=wave_y=if(above(wave_y,1.0), 1.0, wave_y);
per_frame_63=wave_mode=if(below(wave_mode,0), 0, wave_mode);
per_frame_64=wave_mode=if(above(wave_mode,7.0), 7.0, wave_mode);
per_frame_65=ob_r=if(below(ob_r,0.0), 0.0, ob_r);
per_frame_66=ob_r=if(above(ob_r,1.0), 1.0, ob_r);
per_frame_67=ib_g=if(below(ib_g,0.0), 0.0, ib_g);
per_frame_68=ib_g=if(above(ib_g,1.0), 1.0, ib_g);
per_frame_69=mv_r=if(below(mv_r,0.0), 0.0, mv_r);
per_frame_70=mv_r=if(above(mv_r,1.0), 1.0, mv_r);
per_frame_71=mv_g=if(below(mv_g,0.0), 0.0, mv_g);
per_frame_72=mv_g=if(above(mv_g,1.0), 1.0, mv_g);
per_frame_73=mv_y=if(below(mv_y,0.0), 0.0, mv_y);
per_frame_74=mv_y=if(above(mv_y,48.0), 48.0, mv_y);
per_frame_75=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_76=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_77=ob_r=if(below(ob_r,0.0), 0.0, ob_r);
per_frame_78=ob_r=if(above(ob_r,1.0), 1.0, ob_r);
per_frame_79=wave_x=if(below(wave_x,0.0), 0.0, wave_x);
per_frame_80=wave_x=if(above(wave_x,1.0), 1.0, wave_x);
per_frame_81=wave_y=if(below(wave_y,0.0), 0.0, wave_y);
per_frame_82=wave_y=if(above(wave_y,1.0), 1.0, wave_y);
per_frame_83=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_84=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_85=ob_r=if(below(ob_r,0.0), 0.0, ob_r);
per_frame_86=ob_r=if(above(ob_r,1.0), 1.0, ob_r);
per_frame_87=ib_G=if(below(ib_G,0.0), 0.0, ib_G);
per_frame_88=ib_G=if(above(ib_G,1.0), 1.0, ib_G);
per_frame_89=mv_y=if(below(mv_y,0.0), 0.0, mv_y);
per_frame_90=mv_y=if(above(mv_y,48.0), 48.0, mv_y);
per_frame_91=mv_r=if(below(mv_r,0.0), 0.0, mv_r);
per_frame_92=mv_r=if(above(mv_r,1.0), 1.0, mv_r);
per_frame_93=mv_g=if(below(mv_g,0.0), 0.0, mv_g);
per_frame_94=mv_g=if(above(mv_g,1.0), 1.0, mv_g);
per_frame_95=wave_y=if(below(wave_y,0.0), 0.0, wave_y);
per_frame_96=wave_y=if(above(wave_y,1.0), 1.0, wave_y);
per_pixel_1=//---- Rotation Angle;
per_pixel_2=v_ang=time*.2*(x+y)*(.005+.003*(sin(time*.1)+cos(time*.14)));
per_pixel_3=v_ang = time+sin(x*(sin(time*.32)*3+4)+y*(sin(time*.42)*3+4));
per_pixel_4=;
per_pixel_5=//---- Initialisation: X, Y, ANG, CX, CY, DX, DY, SX, SY;
per_pixel_6=//---- to these: VX, VY, VANG, CVX, CVY, DVX, DVY, SVX, SVY;
per_pixel_7=vx = (x-.5)*cos(v_ang) - (y-.5)*sin(v_ang)+.5;
per_pixel_8=vy = (x-.5)*sin(v_ang) +(y-.5)*cos(v_ang)+.5;
per_pixel_9=vang=atan((vy-.5)/(vx+.000001-.5))+below(vx,.5)*sign(vy-.5)*3.14159;
per_pixel_10=cvx = (cx-.5)*cos(v_ang) - (cy-.5)*sin(v_ang)+.5;
per_pixel_11=cvy = (cx-.5)*sin(v_ang) +(cy-.5)*cos(v_ang)+.5;
per_pixel_12=svx=sx; svy=sy; dvx=dx; dvy=dy;
per_pixel_13=cang=atan((vy-cvy)/(vx+.000001-cvx));
per_pixel_14=+below(vx,cvx)*sign(vy-cvy)*3.14159; //Bonus var: angle about (cvx,cvy);
per_pixel_15=;
per_pixel_16=//---- Preset Code;
per_pixel_17=;
per_pixel_18=dx=above(vx,sin(time*.5)*.7+.5)*q2;
per_pixel_19=dy = above(vy,(cos(time*.5)*.6+.5))*q3;
per_pixel_20=;
per_pixel_21=//---- Realisation of virtual variables;
per_pixel_22=cx = (cvx-.5)*cos(-v_ang) - (cvy-.5)*sin(-v_ang)+.5;
per_pixel_23=cy = (cvx-.5)*sin(-v_ang) +(cvy-.5)*cos(-v_ang)+.5;
per_pixel_24=dvx = dvx + (vx-cvx)*(svx-1);
per_pixel_25=dvy = dvy - (vy-cvy)*(svy-1);
per_pixel_26=//dx = dvx*cos(v_ang) - dvy*sin(v_ang);
per_pixel_27=//dy = -dvx*sin(v_ang) - dvy*cos(v_ang);
per_pixel_28=//---- End Virtual Axis Code;
per_pixel_29=dy = 0 + 1.34468198*pow(y * zoom , sx + x);
per_pixel_30=zoom = 0.999514 + if(below(warp - x , rad * ang) , -0.01909196*pow(b + bass_att , sx * zoomexp) , sx + ang);
per_pixel_31=cy = 0.5 + q1 - b;
per_pixel_32=zoom = 0.999514 + if(below(zoom * newrad , zoomexp * warp) , if(above(bass_att - a , a + time) , zoom - sx , rot * a) , a + y);
per_pixel_33=warp = 1.331 + -2.87799194*sin(warp + sx);
per_pixel_34=zoom=if(below(zoom,0.01), 0.01, zoom);
per_pixel_35=zoom=if(above(zoom,100), 100, zoom);
per_pixel_36=warp=if(below(warp,0.01), 0.01, warp);
per_pixel_37=warp=if(above(warp,100.0), 100.0, warp);
per_pixel_38=cy=if(below(cy,-1.0), -1.0, cy);
per_pixel_39=cy=if(above(cy,2.0), 2.0, cy);
per_pixel_40=dy=if(below(dy,-1), -1, dy);
per_pixel_41=dy=if(above(dy,1.0), 1.0, dy);

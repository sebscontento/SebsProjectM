MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.950
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.34420
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = q1;
wave_0_per_frame2=t2 = q2;
wave_0_per_frame3=t3 = q3;
wave_0_per_frame4=t4 = q4;
wave_0_per_frame5=t5 = q5;
wave_0_per_frame6=t6 = q6;
wave_0_per_point1=gruff = sample * 512;
wave_0_per_point2=xp = gruff%32;
wave_0_per_point3=yp = int(gruff/32);
wave_0_per_point4=yp = if(equal(sample,1),yp-1,yp);
wave_0_per_point5=x = t1 + xp * q8;
wave_0_per_point6=y = t2 + yp * q8;
wave_0_per_point7=
wave_0_per_point8=dist1 = bass * 85 * sqrt(sqr(x-t3)+sqr(y-t4));
wave_0_per_point9=dist2 = treb * 85 * sqrt(sqr(x-t5)+sqr(y-t6));
wave_0_per_point10=
wave_0_per_point11=val1 = 0.3 * bass + 0.5 * sin(dist1-time - bass);
wave_0_per_point12=val2 = 0.3 * treb + 0.5 * sin(dist2-time - treb);
wave_0_per_point13=val = (val1 + val2) * 0.5;
wave_0_per_point14=
wave_0_per_point15=r = 0.5 * val * (0.5 + sin(time - bass));
wave_0_per_point16=g = 0.5 * val * (0.5 + sin((time - bass)+2));
wave_0_per_point17=b = 0.5 * val * (0.5 + sin((time - bass)+4));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q1;
wave_1_per_frame2=t2 = q2 + q8 * 16;
wave_1_per_frame3=t3 = q3;
wave_1_per_frame4=t4 = q4;
wave_1_per_frame5=t5 = q5;
wave_1_per_frame6=t6 = q6;
wave_1_per_point1=gruff = sample * 512;
wave_1_per_point2=xp = gruff%32;
wave_1_per_point3=yp = int(gruff/32);
wave_1_per_point4=yp = if(equal(sample,1),yp-1,yp);
wave_1_per_point5=x = t1 + xp * q8;
wave_1_per_point6=y = t2 + yp * q8;
wave_1_per_point7=
wave_1_per_point8=dist1 = bass * 85 * sqrt(sqr(x-t3)+sqr(y-t4));
wave_1_per_point9=dist2 = treb * 85 * sqrt(sqr(x-t5)+sqr(y-t6));
wave_1_per_point10=
wave_1_per_point11=val1 = 0.3 * bass + 0.5 * sin(dist1-time - bass);
wave_1_per_point12=val2 = 0.3 * treb + 0.5 * sin(dist2-time - treb);
wave_1_per_point13=val = (val1 + val2) * 0.5;
wave_1_per_point14=
wave_1_per_point15=r = 0.5 * val * (0.5 + sin(time - bass));
wave_1_per_point16=g = 0.5 * val * (0.5 + sin((time - bass)+2));
wave_1_per_point17=b = 0.5 * val * (0.5 + sin((time - bass)+4));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q1 + q8 * 32;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_point1=gruff = sample * 512;
wave_2_per_point2=xp = gruff%32;
wave_2_per_point3=yp = int(gruff/32);
wave_2_per_point4=yp = if(equal(sample,1),yp-1,yp);
wave_2_per_point5=x = t1 + xp * q8;
wave_2_per_point6=y = t2 + yp * q8;
wave_2_per_point7=
wave_2_per_point8=dist1 = bass * 85 * sqrt(sqr(x-t3)+sqr(y-t4));
wave_2_per_point9=dist2 = treb * 85 * sqrt(sqr(x-t5)+sqr(y-t6));
wave_2_per_point10=
wave_2_per_point11=val1 = 0.3 * bass + 0.5 * sin(dist1-time - bass);
wave_2_per_point12=val2 = 0.3 * treb + 0.5 * sin(dist2-time - treb);
wave_2_per_point13=val = (val1 + val2) * 0.5;
wave_2_per_point14=
wave_2_per_point15=r = 0.5 * val * (0.5 + sin(time - bass));
wave_2_per_point16=g = 0.5 * val * (0.5 + sin((time - bass)+2));
wave_2_per_point17=b = 0.5 * val * (0.5 + sin((time - bass)+4));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = q1 + q8 * 32;
wave_3_per_frame2=t2 = q2 + q8 * 16;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_point1=gruff = sample * 512;
wave_3_per_point2=xp = gruff%32;
wave_3_per_point3=yp = int(gruff/32);
wave_3_per_point4=yp = if(equal(sample,1),yp-1,yp);
wave_3_per_point5=x = t1 + xp * q8;
wave_3_per_point6=y = t2 + yp * q8;
wave_3_per_point7=
wave_3_per_point8=dist1 = bass * 85 * sqrt(sqr(x-t3)+sqr(y-t4));
wave_3_per_point9=dist2 = treb * 85 * sqrt(sqr(x-t5)+sqr(y-t6));
wave_3_per_point10=
wave_3_per_point11=val1 = 0.3 * bass + 0.5 * sin(dist1-time - bass);
wave_3_per_point12=val2 = 0.3 * treb + 0.5 * sin(dist2-time - treb);
wave_3_per_point13=val = (val1 + val2) * 0.5;
wave_3_per_point14=
wave_3_per_point15=r = 0.5 * val * (0.5 + sin(time - bass));
wave_3_per_point16=g = 0.5 * val * (0.5 + sin((time - bass)+2));
wave_3_per_point17=b = 0.5 * val * (0.5 + sin((time - bass)+4));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.76892
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.43439
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.800
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.04511
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shape_1_per_frame1=x = q3;
shape_1_per_frame2=y = q4;
shape_1_per_frame3=rad  = 0.02 + bass * 0.05;
shapecode_2_enabled=1
shapecode_2_sides=12
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.04511
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = q5;
shape_2_per_frame2=y = q6;
shape_2_per_frame3=rad = 0.02 + treb * 0.05;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=// Matterwaves
per_frame_init_2=// (I had no idea what to call this)
per_frame_init_3=
per_frame_init_4=// 2007.02.01 - raron
per_frame_1=//disp = (frame%2);
per_frame_2=//q1 = 0.18 + disp%2 * 0.4;
per_frame_3=//q2 = 0.4 + disp * 0.35;
per_frame_4=q1 = 0.5;
per_frame_5=q2 = 0.5;
per_frame_6=
per_frame_7=q3 = 0.5 + 0.4 * cos(time * 0.4);
per_frame_8=q4 = 0.5 + 0.4 * sin(time * 0.14);
per_frame_9=q5 = 0.5 - 0.4 * sin(time * 0.21);
per_frame_10=q6 = 0.5 + 0.4 * cos(time * 0.13);
per_frame_11=
per_frame_12=q8 = 1/512 + 1/512 * bass;
per_frame_13=q8 = if(below(q8,1/256),1/256,q8);
per_frame_14=
per_frame_15=q1 = q1 - 32 * q8;
per_frame_16=q2 = q2 - 20 * q8;
per_frame_17=
per_frame_18=//zoom = 1.05;
per_frame_19=rot = 0.1 - bass * 0.1;
per_pixel_1=zoom = zoom + rad * 0.02;
warp_1=`
warp_2=`shader_body
warp_3=`{
warp_4=`
warp_5=`ret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);
warp_6=`
warp_7=`ret.z += GetBlur1(uv_orig).z*.45;
warp_8=`ret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;
warp_9=`ret.z -= ret.x;
warp_10=`
warp_11=`float2 pixelsize = texsize.zw;
warp_12=`ret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);
warp_13=`
warp_14=`float1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;
warp_15=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;
warp_16=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;
warp_17=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;
warp_18=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;
warp_19=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;
warp_20=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;
warp_21=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;
warp_22=`
warp_23=`float1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);
warp_24=`
warp_25=`conway -= tex2D( sampler_pw_main, uv_orig).x;
warp_26=`
warp_27=`
warp_28=`if (conway > 0) {
warp_29=`if (saturate(ret.y) == 0) {
warp_30=`ret.y = floor(test*1.8)*q1;
warp_31=`}
warp_32=`}
warp_33=`
warp_34=`ret.y -= ret.x;
warp_35=`
warp_36=`ret.xyz -= 1-q2;
warp_37=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`uv = 0.5 + (uv-0.5)*0.95;
comp_7=`float2 uvo = uv;
comp_8=`uv = (uv-0.5);
comp_9=`factorA = uv+ float2(q1,q2);
comp_10=`factorB = float2(8,0);
comp_11=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_12=`float2 uv1 = product;
comp_13=`factorA = uv+ float2(q3,q4);
comp_14=`factorB = float2(8,0);
comp_15=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_16=`float2 uv2 = product;
comp_17=`factorA = uv+ float2(q5,q6);
comp_18=`factorB = float2(8,0);
comp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_20=`float2 uv3 = product;
comp_21=`factorA = uv+ float2(q7,q8);
comp_22=`factorB = float2(8,0);
comp_23=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_24=`float2 uv4 = product;
comp_25=`factorA = uv1;
comp_26=`factorB = uv2;
comp_27=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_28=`float2 uv12 = product;
comp_29=`factorA = uv3;
comp_30=`factorB = uv4;
comp_31=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_32=`float2 uv34 = product;
comp_33=`factorA = uv12;
comp_34=`factorB = uv34;
comp_35=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_36=`numerator = float2(1,0);
comp_37=`denominator = product;
comp_38=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_39=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_40=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_41=`uv = fraction.yx*float2(-1,1)*32;
comp_42=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_43=`float l = length(uv-0.5);
comp_44=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_45=`ret = lerp(float3(0.8,0.5,0),-0.5,(GetBlur2(uv)*2-GetPixel(uv)).x);
comp_46=`ret = lerp(ret,1,(GetBlur3(uv)*2-GetPixel(uv)).y*1.5);
comp_47=`float c =saturate(1.6-pow(l,6)*0.004);
comp_48=`ret = lerp((GetBlur3(uvo)*2-GetPixel(uvo)).y,ret,c);
comp_49=`}

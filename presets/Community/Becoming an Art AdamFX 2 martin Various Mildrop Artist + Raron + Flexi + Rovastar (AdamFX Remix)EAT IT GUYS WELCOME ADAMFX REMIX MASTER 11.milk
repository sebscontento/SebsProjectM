MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=4.950
mv_r=0.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.3;
wave_0_per_point6=v = sample*10000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=r = 0.5 + 0.5*sin(q1*0.22);
wave_0_per_point17=g = 0.5 + 0.5*sin(q1*0.307) + x;
wave_0_per_point18=//b = 0.4 + 0.4*sin(time*0.959);
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point22=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//apply zoom burst on beat
wave_3_per_point2=flag = above(q3,2);
wave_3_per_point3=//state zero is ready state
wave_3_per_point4=state = state + flag*equal(state,0);
wave_3_per_point5=
wave_3_per_point6=//upwards flight
wave_3_per_point7=yval = if(equal(state,0),0, yval);
wave_3_per_point8=yval = yval + 0.00004*equal(state,1);
wave_3_per_point9=ymax = if(equal(state,0),int(rand(100))*0.004,ymax);
wave_3_per_point10=
wave_3_per_point11=//hit apogee
wave_3_per_point12=state = if(above(yval,0.5+ymax),2,state);
wave_3_per_point13=
wave_3_per_point14=//reset variable
wave_3_per_point15=yval = if(equal(state,0),0, yval);
wave_3_per_point16=burst = if(equal(state,0),0.001,burst);
wave_3_per_point17=alphax = if(equal(state,0),1,alphax);
wave_3_per_point18=xdriftinc = if(equal(state,0),0,xdriftinc);
wave_3_per_point19=
wave_3_per_point20=burstspeed = if(equal(state,0),int(rand(10)),burstspeed);
wave_3_per_point21=xdrift = if(equal(state,0),int(rand(20)),xdrift);
wave_3_per_point22=//to get the numbers small enough have to use constants
wave_3_per_point23=xdriftinc = xdriftinc
wave_3_per_point24=+ equal(xdrift,0)*equal(state,1)*0.00002
wave_3_per_point25=+ equal(xdrift,1)*equal(state,1)*0.000018
wave_3_per_point26=+ equal(xdrift,2)*equal(state,1)*0.000016
wave_3_per_point27=+ equal(xdrift,3)*equal(state,1)*0.000014
wave_3_per_point28=+ equal(xdrift,4)*equal(state,1)*0.000012
wave_3_per_point29=+ equal(xdrift,5)*equal(state,1)*0.00001
wave_3_per_point30=+ equal(xdrift,6)*equal(state,1)*0.000008
wave_3_per_point31=+ equal(xdrift,7)*equal(state,1)*0.000006
wave_3_per_point32=+ equal(xdrift,8)*equal(state,1)*0.000004
wave_3_per_point33=+ equal(xdrift,9)*equal(state,1)*0.000002
wave_3_per_point34=+ equal(xdrift,11)*equal(state,1)*-0.000002
wave_3_per_point35=+ equal(xdrift,12)*equal(state,1)*-0.000004
wave_3_per_point36=+ equal(xdrift,13)*equal(state,1)*-0.000006
wave_3_per_point37=+ equal(xdrift,14)*equal(state,1)*-0.000008
wave_3_per_point38=+ equal(xdrift,15)*equal(state,1)*-0.00001
wave_3_per_point39=+ equal(xdrift,16)*equal(state,1)*-0.000012
wave_3_per_point40=+ equal(xdrift,17)*equal(state,1)*-0.000014
wave_3_per_point41=+ equal(xdrift,18)*equal(state,1)*-0.000016
wave_3_per_point42=+ equal(xdrift,19)*equal(state,1)*-0.000018;
wave_3_per_point43=
wave_3_per_point44=burst = burst
wave_3_per_point45=+ equal(burstspeed,0)*equal(state,2)*0.000024
wave_3_per_point46=+ equal(burstspeed,1)*equal(state,2)*0.000022
wave_3_per_point47=+ equal(burstspeed,2)*equal(state,2)*0.00002
wave_3_per_point48=+ equal(burstspeed,3)*equal(state,2)*0.000018
wave_3_per_point49=+ equal(burstspeed,4)*equal(state,2)*0.000016
wave_3_per_point50=+ equal(burstspeed,5)*equal(state,2)*0.000014
wave_3_per_point51=+ equal(burstspeed,6)*equal(state,2)*0.000012
wave_3_per_point52=+ equal(burstspeed,7)*equal(state,2)*0.00001
wave_3_per_point53=+ equal(burstspeed,8)*equal(state,2)*0.000008
wave_3_per_point54=+ equal(burstspeed,9)*equal(state,2)*0.000008;
wave_3_per_point55=
wave_3_per_point56=alphax = alphax - 0.00004*equal(state,2);
wave_3_per_point57=state = if(below(alphax,0),0,state);
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=s = sample*3.14*100;
wave_3_per_point61=ss = sample*6.28*1000;
wave_3_per_point62=
wave_3_per_point63=//draw torus
wave_3_per_point64=xs = (burst + 0.0001*cos(s))*cos(ss);
wave_3_per_point65=ys = (burst + 0.0001*cos(s))*sin(ss);
wave_3_per_point66=zs = 0.1*burst*sin(s);
wave_3_per_point67=
wave_3_per_point68=
wave_3_per_point69=//rotate x axis
wave_3_per_point70=angle = sin(-q1*0.035)*6.28;
wave_3_per_point71=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point72=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point73=xx = xs;
wave_3_per_point74=
wave_3_per_point75=//rotate y axis
wave_3_per_point76=angle2 = sin(-q1*0.03)*6.28;
wave_3_per_point77=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point78=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point79=yd = yx;
wave_3_per_point80=
wave_3_per_point81=//rotaye z axis
wave_3_per_point82=angle3 = sin(-q1*0.022)*6.28;
wave_3_per_point83=xn = xd*cos(angle3) - yd*sin(angle3);
wave_3_per_point84=yn = xd*sin(angle3) + yd*cos(angle3);
wave_3_per_point85=
wave_3_per_point86=zd = zd + 2;
wave_3_per_point87=
wave_3_per_point88=x = xn*zd*0.3 + 0.5;
wave_3_per_point89=y = yn*zd*0.3*1.2;
wave_3_per_point90=
wave_3_per_point91=
wave_3_per_point92=x = x + xdriftinc;
wave_3_per_point93=y = y + sin(yval*1.5) - 0.18;
wave_3_per_point94=
wave_3_per_point95=
wave_3_per_point96=r = 0.5 + 0.5*sin(q1*1.3 + x + x);
wave_3_per_point97=g = 0.5 + 0.5*sin(q1*1.1 + x + y);
wave_3_per_point98=b = 0.5 + 0.5*sin(q1*1.66 + y + y);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66718
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.350
shapecode_1_y=0.000
shapecode_1_rad=0.09959
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.42497
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.10201
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.650
shapecode_3_y=0.000
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=t1=100+bass*100;
per_frame_init_2=t2=100+treb*100;
per_frame_init_3=t3=100+bass_att*100;
per_frame_init_4=t4=100+treb_att*100;
per_frame_1=db=(bass-lbass)*fps*.1;
per_frame_2=lbass=bass;
per_frame_3=avgdb=avgdb*.99+abs(db)*.01;
per_frame_4=
per_frame_5=dt=(treb-ltreb)*fps*.06;
per_frame_6=ltreb=treb;
per_frame_7=avgdt=avgdt*.99+abs(dt)*.01;
per_frame_8=
per_frame_9=
per_frame_10=pitch=(y*cos(avgdt)+cos(avgdb))*.5+.5;
per_frame_11=
per_frame_12=avgvol=avgvol*.99+(avgdb+avgdt)*.005;
per_frame_13=
per_frame_14=
per_frame_15=monitor=pitch;
per_frame_16=
per_frame_17=fc=(30/fps)*avgvol*.01;
per_frame_18=bb=above(abs(db),avgdb*6);
per_frame_19=bt=above(abs(dt),avgdt*6);
per_frame_20=
per_frame_21=t1=t1+(avgdb*.01*(1.5-pitch)+bb*db)*fc;
per_frame_22=t2=t2+(avgdt*.01*pitch+bt*dt)*fc;
per_frame_23=t3=t3+abs(db)*.1*avgvol*fc;
per_frame_24=t4=t4+abs(dt)*.1*-avgvol*fc;
per_frame_25=
per_frame_26=
per_frame_27=
per_frame_28=wave_r = 0.5 + 0.5*y*cos((t1-t4)*2);
per_frame_29=wave_g = 0.4 + 0.4*y*cos((t3-t2)*2);
per_frame_30=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_31=wave_a = min(bass_att,1);
per_frame_32=warp = 0;
per_frame_33=wave_x = wave_x + 0.4*cos(12*t2)*y*cos(11*t3);
per_frame_34=wave_y = wave_y + 0.4*y*cos(12*t1)*cos(11*t4);
per_frame_35=wave_usedots=1;
per_frame_36=
per_frame_37=ob_r = 1-abs(wave_g);
per_frame_38=ob_b = 1-abs(wave_r);
per_frame_39=ob_g = 1-abs(wave_b);
per_frame_40=ob_a=.3;
per_frame_41=ib_a=1;
per_frame_42=
per_frame_43=
per_frame_44=dx_r=avgdt*.001;
per_frame_45=dy_r=avgdb*.001;
per_frame_46=
per_frame_47=q1=dx_r;
per_frame_48=q2=dy_r;
per_frame_49=
per_frame_50=q3=t1;
per_frame_51=q4=t2;
per_frame_52=q5=t3;
per_frame_53=q6=t4;
per_frame_54=q7=pitch-.5;
per_frame_55=q8=avgvol;
per_frame_56=
per_frame_57=wrap=1;
per_frame_58=
per_frame_59=decay=.99+min(max((avgdt-avgdtb)*.004,-.01),.01);
per_frame_60=
per_frame_61=
per_frame_62=cx=.5+.5*y*cos(q5-q4);
per_frame_63=cy=.5+.5*y*cos(q6-q3);
per_pixel_1=kdx=dx;//////////////////////////////////////////
per_pixel_2=kdy=dy;
per_pixel_3=ksx=sx;
per_pixel_4=ksy=sy;
per_pixel_5=krt=rot;
per_pixel_6=kzm=zoom;
per_pixel_7=kcx=cx;
per_pixel_8=kcy=cy;
per_pixel_9=kwp=warp;
per_pixel_10=
per_pixel_11=dx=0;
per_pixel_12=dy=0;
per_pixel_13=sx=1;
per_pixel_14=sy=1;
per_pixel_15=rot=0;
per_pixel_16=zoom=1;
per_pixel_17=cx=.5;
per_pixel_18=cy=.5;
per_pixel_19=warp=0;/////////////////////////////////////////////////////
per_pixel_20=
per_pixel_21=
per_pixel_22=//c3=0;
per_pixel_23=c1=max(y*cos((x-y)*5*q8+q3)-.5,0);
per_pixel_24=c2=max(y*cos((x-y)*q7+q6)-.5,0);
per_pixel_25=c3=max(y*cos((y+x)*5*q7+q5)-.5,0);
per_pixel_26=c4=max(y*cos((y+x)*q8+q4)-.5,0);
per_pixel_27=
per_pixel_28=cx=.5;
per_pixel_29=cy=.5;
per_pixel_30=
per_pixel_31=
per_pixel_32=
per_pixel_33=sx=y*cos((q5*c2-q4*c4)*.01)*.1-1+2*fc;
per_pixel_34=sy=y*cos((q6*c1-q3*c3)*.01)*.1-1+2*fc;
per_pixel_35=///////////////////////////////////////
per_pixel_36=cr1=18*.01;
per_pixel_37=cr2=1*.01;     ;
per_pixel_38=crx=cr2-cr1;
per_pixel_39=ci=(1-abs(-2*x+1)+(1-abs(-2*y+1)));
per_pixel_40=cb=.25  ;
per_pixel_41=crs=2;
per_pixel_42=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_43=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_44=jx1=crr;
per_pixel_45=kx1=1-crr;
per_pixel_46=
per_pixel_47=jdx=dx;
per_pixel_48=jdy=dy;
per_pixel_49=jsx=sx;
per_pixel_50=jsy=sy;
per_pixel_51=jrt=rot;
per_pixel_52=jzm=zoom;
per_pixel_53=jcx=cx;
per_pixel_54=jcy=cy;
per_pixel_55=jwp=warp;
per_pixel_56=
per_pixel_57=dx=(jx1*jdx+kx1*kdx);
per_pixel_58=dy=(jx1*jdy+kx1*kdy);
per_pixel_59=sx=(jx1*jsx+kx1*ksx);
per_pixel_60=sy=(jx1*jsy+kx1*ksy);
per_pixel_61=rot=(jx1*jrt+kx1*krt);
per_pixel_62=zoom=(jx1*jzm+kx1*kzm);
per_pixel_63=cx=(jx1*jcx+kx1*kcx);
per_pixel_64=cy=(jx1*jcy+kx1*kcy);
per_pixel_65=warp=(jx1*jwp+kx1*kwp);////////////////////////////////////////////////////
per_pixel_66=jkdx=dx;//////////////////////////////////////////
per_pixel_67=jkdy=dy;
per_pixel_68=jksx=sx;
per_pixel_69=jksy=sy;
per_pixel_70=jkrt=rot;
per_pixel_71=jkzm=zoom;
per_pixel_72=jkcx=cx;
per_pixel_73=jkcy=cy;
per_pixel_74=jkwp=warp;
per_pixel_75=
per_pixel_76=dx=0;
per_pixel_77=dy=0;
per_pixel_78=sx=1;
per_pixel_79=sy=1;
per_pixel_80=rot=0;
per_pixel_81=zoom=1;
per_pixel_82=cx=.5;
per_pixel_83=cy=.5;
per_pixel_84=warp=0;/////////////////////////////////////////////////////
per_pixel_85=
per_pixel_86=ci=(1-abs(-2*x+1)*1.33+(1-abs(-2*y+1)))-time/3 ;
per_pixel_87=
per_pixel_88=grid=sin(ci*29);//+(cj*13)%2;
per_pixel_89=zoom=1-grid/39;//q8*.07*cos(rad*3.14*q3+abs(rad-.1*q6)*q2+rad*3.14*sin(time*q1)+q7)*bnot(grid);
per_pixel_90=///////////////////////////////////////
per_pixel_91=cr1=10*.01;
per_pixel_92=cr2=10*.01;;
per_pixel_93=crx=cr2-cr1;
per_pixel_94=ci=rad;
per_pixel_95=cb=.0;
per_pixel_96=crs=2;
per_pixel_97=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_98=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_99=jx1=crr;
per_pixel_100=kx1=1-crr;
per_pixel_101=
per_pixel_102=jjdx=dx;
per_pixel_103=jjdy=dy;
per_pixel_104=jjsx=sx;
per_pixel_105=jjsy=sy;
per_pixel_106=jjrt=rot;
per_pixel_107=jjzm=zoom;
per_pixel_108=jjcx=cx;
per_pixel_109=jjcy=cy;
per_pixel_110=jjwp=warp;
per_pixel_111=
per_pixel_112=dx=(jx1*jjdx+kx1*jkdx);
per_pixel_113=dy=(jx1*jjdy+kx1*jkdy);
per_pixel_114=sx=(jx1*jjsx+kx1*jksx);
per_pixel_115=sy=(jx1*jjsy+kx1*jksy);
per_pixel_116=rot=(jx1*jjrt+kx1*jkrt);
per_pixel_117=zoom=(jx1*jjzm+kx1*jkzm);
per_pixel_118=cx=(jx1*jjcx+kx1*jkcx);
per_pixel_119=cy=(jx1*jjcy+kx1*jkcy);
per_pixel_120=warp=(jx1*jjwp+kx1*jkwp);////////////////////////////////////////////////////
per_pixel_121=
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`    // take the difference between the crisp and blurred images,
warp_7=`    // then add it back into the image.  Creates spots and stripes over time.
warp_8=`    ret += (ret - GetBlur1(uv))*0.3;
warp_9=`    ret *= 0.9;
warp_10=`
warp_11=`   // add noise:
warp_12=`   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;
warp_13=`   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;
warp_14=`
warp_15=`   // desaturate over time, to keep the globs white
warp_16=`   ret = lerp(ret, lum(ret), 0.04);
warp_17=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uv1 = uv-.5;
comp_5=`
comp_6=`float3 ret1 = tex2D(sampler_main, uv) * (1-rad);
comp_7=`
comp_8=`
comp_9=`float2 hor = float2 (texsize.z,0);
comp_10=`float2 ver = float2 (0,texsize.w);
comp_11=`float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_12=`float dy = GetPixel (uv-ver) - GetPixel (uv+ver);
comp_13=`float2 dz = float2 (dx,dy);
comp_14=`
comp_15=`uv1 = uv1*0+.3*cos(uv1*2) - dz;;
comp_16=`float dots = saturate(.04/length(uv1));
comp_17=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;
comp_18=`float3 dots2 = saturate(.04/length(uv1));
comp_19=`
comp_20=`
comp_21=`ret = (-ret1) + dots + .0 + 12*dots2*(-0+sqrt(ret1));
comp_22=`}

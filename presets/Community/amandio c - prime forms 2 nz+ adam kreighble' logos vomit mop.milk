MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=4
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.000
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.002
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=60.80387
wavecode_0_smoothing=0.70000
wavecode_0_r=1.000
wavecode_0_g=0.900
wavecode_0_b=0.900
wavecode_0_a=0.210
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=67.16520
wavecode_1_smoothing=0.70000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.700
wavecode_3_g=0.700
wavecode_3_b=1.000
wavecode_3_a=0.600
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.550
shapecode_0_y=0.500
shapecode_0_rad=2.90521
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27705
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.700
shapecode_0_border_b=0.100
shapecode_0_border_a=0.000
shape_0_per_frame1=i=2*instance;     
shape_0_per_frame2=
shape_0_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_0_per_frame4=
shape_0_per_frame5=d=sqrt(x1*x1+y1*y1);
shape_0_per_frame6=rad=.00015+pow(10,-5)*rad*pow(d,1.5);
shape_0_per_frame7=rad=if(above(rad,.015),.015,rad);
shape_0_per_frame8=
shape_0_per_frame9=zoom=q2;
shape_0_per_frame10=x= .5+zoom*x1/q6;
shape_0_per_frame11=y= .5+zoom*y1;      
shape_0_per_frame12=
shape_0_per_frame13=sample=.5*i/1024;
shape_0_per_frame14=r= .3+.1*sin(3*sample+.7*q2*d+.2*time);
shape_0_per_frame15=g= .3+.1*sin(3*sample+.8*q2*d+.23*time);
shape_0_per_frame16=b= .1+.1*sin(3*sample+.4*q2*d+.15*time);
shapecode_1_enabled=0
shapecode_1_sides=50
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.14251
shapecode_1_ang=0.00000
shapecode_1_tex_ang=4.08407
shapecode_1_tex_zoom=5.76110
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.800
shapecode_1_border_r=1.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.100
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1024
shapecode_2_x=0.500
shapecode_2_y=0.610
shapecode_2_rad=0.22078
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=6.17732
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.700
shapecode_2_border_b=0.100
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.380
shapecode_3_y=0.280
shapecode_3_rad=0.06056
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.54929
shapecode_3_r=1.000
shapecode_3_g=0.700
shapecode_3_b=0.200
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.700
shapecode_3_border_b=0.100
shapecode_3_border_a=0.000
per_frame_init_1=i=0;  
per_frame_init_2=loop(10000, gmegabuf(i)=0;
per_frame_init_3=
per_frame_init_4=i=i+1;);
per_frame_init_5=
per_frame_init_6=t=0;
per_frame_init_7=
per_frame_init_8=t0=time;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=q6=aspecty;            t=t+.1/fps;    t1=t1+1/fps; 
per_frame_26=s=150+140*sin(t);      q1=pow(abs(s),.25);
per_frame_27=
per_frame_28=i=0;    x=0;     y=0;   p=0;   p1=0;
per_frame_29=
per_frame_30=loop(1024*c,
per_frame_31=
per_frame_32=p=p+ s*(sin(i*s)-cos(i*s))/i;    p1=p1-p;
per_frame_33=x=x+sin(p1);                     y=y+cos(p1);
per_frame_34=gmegabuf(2*i)=x;                 gmegabuf(2*i+1)=y;
per_frame_35=
per_frame_36=i=i+1;);
per_frame_37=
per_frame_38=
per_frame_39=///// clears the screen each n seconds
per_frame_40=
per_frame_41=n=10;
per_frame_42=decay=above(time-t0,.2)-equal((5*t1)%(5*n),0);
per_frame_43=
per_frame_44=monitor=s;
per_frame_45=
per_frame_46=
per_frame_47=
per_frame_48=////  if the images become too saturated, raise value of m (integer); 
per_frame_49=////  1 frame is drawn in every m frames ;
per_frame_50=
per_frame_51=m=1;
per_frame_52=
per_frame_53=c=bnot(frame%m);    
per_frame_54=
per_frame_55=
per_frame_56=q2=.005;   //// zoom
per_frame_57=
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1,uv6;
warp_4=`float dx,dy;
warp_5=`shader_body {
warp_6=`uv1 = (uv-.5) * aspect.xy;
warp_7=`float rota = lum(tex2D (sampler_noise_hq,q30*uv+.001*time))*3.14;
warp_8=`uv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));
warp_9=`mus = .2/(sqrt(uv6.y)+.2);
warp_10=`mus = abs(mus);
warp_11=`mus *= float3 (1,.96,.9);
warp_12=`float3 no = tex2D (sampler_noise_lq,uv)-.5;
warp_13=`mus *= float3 (1,.96,.9) + 0.1*no;
warp_14=`color =  1;
warp_15=`float3 blur = GetBlur1(frac(uv));
warp_16=`float2 hor = float2 (0.004,0);
warp_17=`float2 ver = float2 (0,.004);
warp_18=`dx = lum(tex2D(sampler_main,uv+hor) 
warp_19=`         - tex2D(sampler_main,uv-hor));
warp_20=`dy = lum(tex2D(sampler_main,uv+ver) 
warp_21=`         - tex2D(sampler_main,uv-ver));
warp_22=`float2 zz = float2 (dx,dy);
warp_23=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_24=`float3 crisp2 = .5*tex2D(sampler_main,uv);
warp_25=`crisp += crisp2;
warp_26=`crisp *= .667;
warp_27=`crisp +=.018*color - length(zz)*blur;
warp_28=`float3 ret1 = crisp - blur*.03 + .04*mus;
warp_29=`ret = ret1 * .99 -  .04 ;
warp_30=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_31=`                      ((zz.xyy*q27
warp_32=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_33=`                      ).xyz*
warp_34=`                      float3(1,1,0)*0.05 + 
warp_35=`                      time*float3(0,0,1)*q29
warp_36=`                     );
warp_37=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_38=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_39=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_40=`}
comp_1=`
comp_2=`sampler sampler_pw_noise_lq;
comp_3=`shader_body
comp_4=`{
comp_5=`
comp_6=`float corr = texsize.xy*texsize_noise_hq.zw;
comp_7=`float2 p0 = .5 + float2(q1,q2);
comp_8=`
comp_9=`float2 uv1 = (uv-p0)*aspect.xy;
comp_10=`float ang1 = atan2(uv1.y, uv1.x);
comp_11=`
comp_12=`float rad2 = length(uv1);
comp_13=`float rad1 = -1*rad2 + 0.05/(rad2-0.08);
comp_14=`
comp_15=`float2 uv2 = float2 (ang1/6.28, clamp(rad1,-8, 8));
comp_16=`uv2.y = uv2.y/2 + time/2;
comp_17=`
comp_18=`float3 tube = lum(tex2D(sampler_noise_hq, corr*uv2));
comp_19=`//tube  = sqrt(abs (tube-.8));
comp_20=`
comp_21=`
comp_22=`float2 uv3 = uv + tube/64;
comp_23=`double3 blur = lum(GetBlur1 (uv3));
comp_24=`double3 crisp =(GetPixel(uv3));
comp_25=`
comp_26=`double3 ret2 = crisp + blur;
comp_27=`
comp_28=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_29=`                      ((uv.xyy*q28
comp_30=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_31=`                      ).xyz*
comp_32=`                      float3(1,1,0)*0.05 + 
comp_33=`                      time*float3(0,0,1)*q30 
comp_34=`                     );
comp_35=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; 
comp_36=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; 
comp_37=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; 
comp_38=`
comp_39=`double3 lblue = float3 (0.3, 0.5, 1)/3 *(1-rad);
comp_40=`ret2 = ret2 + lblue;
comp_41=`
comp_42=`ret = -1*tube*rad + (1+q24/4)*ret2 * (1-tube/2); 
comp_43=`ret=.3-ret;
comp_44=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.335
fWaveSmoothing=0.750
fWaveParam=-0.220
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.300
zoom=0.99990
rot=0.10000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.800
ib_size=0.005
ib_r=0.400
ib_g=0.000
ib_b=0.000
ib_a=0.300
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.000
mv_g=0.700
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.800
wavecode_0_b=0.300
wavecode_0_a=1.000
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=
wave_0_per_point3=xp=sin(n);
wave_0_per_point4=yp=cos(n);
wave_0_per_point5=
wave_0_per_point6=tm=q3 - sample;
wave_0_per_point7=
wave_0_per_point8=xof=sin(tm) * sin(tm*3) * 0.4 + 0.5;
wave_0_per_point9=yof=cos(tm*1.3) * sin(tm*5.4) * 0.4 + 0.5;
wave_0_per_point10=
wave_0_per_point11=
wave_0_per_point12=x= xof;
wave_0_per_point13=y= (1-yof);
wave_0_per_point14=
wave_0_per_point15=a=1-sample;
wave_0_per_point16=
wave_0_per_point17=
wave_0_per_point18=
wave_0_per_point19=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=0.700
wavecode_1_b=0.200
wavecode_1_a=1.000
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=n2=(sample-q3 - time*0.1)*6;
wave_1_per_point3=
wave_1_per_point4=xp=sin(n);
wave_1_per_point5=yp=cos(n);
wave_1_per_point6=
wave_1_per_point7=tm=q3 - sample;
wave_1_per_point8=
wave_1_per_point9=tx= sin(n2*13)*sin(n2*5) * sample * 0.05;
wave_1_per_point10=ty= cos(n2*13)*sin(n2*7) * sample * 0.05;
wave_1_per_point11=
wave_1_per_point12=xof=sin(tm) * sin(tm*3) * 0.4 + 0.5 + tx;
wave_1_per_point13=yof=cos(tm*1.3) * sin(tm*5.4) * 0.4 + 0.5 + ty;
wave_1_per_point14=
wave_1_per_point15=xran=(int(rand(10)) - 5) * 0.0005; xran=xran*sample;
wave_1_per_point16=yran=(int(rand(10)) - 5) * 0.0005; yran=yran*sample;
wave_1_per_point17=
wave_1_per_point18=x= xof + xran;
wave_1_per_point19=y= (1-yof) + yran;
wave_1_per_point20=
wave_1_per_point21=a=(1-sample);
wave_1_per_point22=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.780
wavecode_2_b=0.200
wavecode_2_a=1.000
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=n2=(sample-q3 - time*0.1)*6;
wave_2_per_point3=
wave_2_per_point4=xp=sin(n);
wave_2_per_point5=yp=cos(n);
wave_2_per_point6=
wave_2_per_point7=tm=q3 - sample;
wave_2_per_point8=
wave_2_per_point9=tx= sin(n2*13.6)*cos(n2*5) * sample * 0.2;
wave_2_per_point10=ty= cos(n2*13)*sin(n2*7.5) * sample * 0.2;
wave_2_per_point11=
wave_2_per_point12=xof=sin(tm) * sin(tm*3) * 0.4 + 0.5 + tx;
wave_2_per_point13=yof=cos(tm*1.3) * sin(tm*5.4) * 0.4 + 0.5 + ty;
wave_2_per_point14=
wave_2_per_point15=xran=(int(rand(10)) - 5) * 0.0005; xran=xran*sample;
wave_2_per_point16=yran=(int(rand(10)) - 5) * 0.0005; yran=yran*sample;
wave_2_per_point17=
wave_2_per_point18=x= xof + xran;
wave_2_per_point19=y= (1-yof) + yran;
wave_2_per_point20=
wave_2_per_point21=a=(1-sample)*0.6 * above(sin(n2*32),0);
wave_2_per_point22=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=n2=(sample-q3 - time*0.1)*6;
wave_3_per_point3=
wave_3_per_point4=xp=sin(n);
wave_3_per_point5=yp=cos(n);
wave_3_per_point6=
wave_3_per_point7=tm=q3 - sample;
wave_3_per_point8=
wave_3_per_point9=tx= sin(n2*13)*sin(n2*5) * sample * 0.05;
wave_3_per_point10=ty= cos(n2*13)*sin(n2*7) * sample * 0.05;
wave_3_per_point11=
wave_3_per_point12=xof=sin(tm) * sin(tm*3) * 0.4 + 0.5 + tx;
wave_3_per_point13=yof=cos(tm*1.3) * sin(tm*5.4) * 0.4 + 0.5 + ty;
wave_3_per_point14=
wave_3_per_point15=xran=(int(rand(10)) - 5) * 0.0005; xran=xran*sample;
wave_3_per_point16=yran=(int(rand(10)) - 5) * 0.0005; yran=yran*sample;
wave_3_per_point17=
wave_3_per_point18=x= xof + xran;
wave_3_per_point19=y= (1-yof) + yran;
wave_3_per_point20=
wave_3_per_point21=a=(1-sample);
wave_3_per_point22=
wave_3_per_point23=r=(1-sample);
wave_3_per_point24=g=0;
wave_3_per_point25=b=sample
shapecode_0_enabled=1
shapecode_0_sides=5
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.500
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.500
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=x=q1;
shape_0_per_frame2=y=1-q2
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=warp=0;
per_frame_29=wave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));
per_frame_30=wave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));
per_frame_31=wave_g = wave_g + 0.4*sin(time*1.931);
per_frame_32=wave_r = 0.2125*wave_r + 0.7154*wave_g + 0.0721*wave_b;
per_frame_33=wave_g = wave_r;
per_frame_34=wave_b = wave_r;
per_frame_35=vol = 0.167*(bass+mid);
per_frame_36=xamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);
per_frame_37=xamp = xamp + 0.5*(xamptarg-xamp);
per_frame_38=xdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
per_frame_39=xspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);
per_frame_40=xpos = xpos + 0.001*xspeed;
per_frame_41=wave_x = 1.25*xpos + 0.5;
per_frame_42=yamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);
per_frame_43=yamp = yamp + 0.5*(yamptarg-yamp);
per_frame_44=ydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
per_frame_45=yspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);
per_frame_46=ypos = ypos + 0.001*yspeed;
per_frame_47=wave_y = 1.25*ypos + 0.5;
per_frame_48=dx = dx + dx_residual;
per_frame_49=dy = dy + dy_residual;
per_frame_50=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_51=dx_residual = equal(bass_thresh,2)*0.003*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;
per_frame_52=dy_residual = equal(bass_thresh,2)*0.001*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;
per_frame_53=rot = 0.1;
per_frame_54=
per_frame_55=vol=(bass+mid+treb)*0.25;
per_frame_56=vol=vol*vol;
per_frame_57=mtime=mtime + vol*0.01;
per_frame_58=q3=mtime;
per_frame_59=
per_frame_60=
per_frame_61=q1=sin(mtime) * sin(mtime*3) * 0.4 + 0.5;
per_frame_62=q2=cos(mtime*1.3) * sin(mtime*5.4) * 0.4 + 0.5;
per_frame_63=
per_frame_64=
per_frame_65=
per_frame_66=ib_r = tan(time);
per_frame_67=ib_r = min(1, max(ib_r,0));
per_frame_68=
per_frame_69=ib_g = tan(time+2.1);
per_frame_70=ib_g = min(1, max(ib_g,0));
per_frame_71=
per_frame_72=ib_b = tan(time+4.2);
per_frame_73=ib_b = min(1, max(ib_b,0));
per_frame_74=
per_frame_75=
per_frame_76=
per_pixel_1=cx = (0&(x*10-0.5))*0.1+0.05;
per_pixel_2=cy = (0&(y*10-0.5))*0.1+0.05;
per_pixel_3=newx = q1-x;
per_pixel_4=newy = q2-y;
per_pixel_5=newrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;
per_pixel_6=newzoom = pow(1.05 + 0.03*newrad, pow(0.01+sin(newrad*newrad), newrad*2-1));
per_pixel_7=dx = (newx)*newzoom - newx;
per_pixel_8=dy = (newy)*newzoom - newy;
per_pixel_9=dx =dx*0.1;
per_pixel_10=dy=dy*0.1;
per_pixel_11=rot = 2*newrad*(0.5*(0.5-rad)+0.1);
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1, uv6;
warp_4=`float dx,dy;
warp_5=`
warp_6=`shader_body {
warp_7=`
warp_8=`uv1 = (uv-.5);
warp_9=`
warp_10=`float2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;
warp_11=`uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));
warp_12=`
warp_13=`mus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));
warp_14=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_15=`                      ((uv6.xyy*q27
warp_16=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_17=`                      ).xyz*
warp_18=`                      float3(1,1,0)*0.05 + 
warp_19=`                      time*float3(0,0,1)*q29
warp_20=`                     );
warp_21=`if(mus.x> q21*q13         && mus.x<= q24*q11        )mus.y -= (noise9).x*.5; 
warp_22=`if(mus.y> q22*q11         && mus.y<= q25*q12        )mus.z -= (noise9).y*.5; 
warp_23=`if(mus.z> q23*q12         && mus.z<= q26*q13        )mus.x -= (noise9).z*.5; 
warp_24=`mus *= float3 (1,.96,.9)/25;
warp_25=`
warp_26=`uv6 = .2*sin(12*uv+rand_frame);
warp_27=`float3 dots = .001/length(uv6)* float3 (0.2,1,1);
warp_28=`
warp_29=`//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));
warp_30=`//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);
warp_31=`
warp_32=`mus -= dots;
warp_33=`
warp_34=`
warp_35=`float3 blur = GetBlur1(frac(uv));
warp_36=`
warp_37=`float2 hor = float2 (texsize.z,0);
warp_38=`float2 ver = float2 (0,texsize.w);
warp_39=`hor = float2 (.004,0);
warp_40=`ver = float2 (0,.004);
warp_41=`
warp_42=`
warp_43=`
warp_44=`float dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));
warp_45=`float dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));
warp_46=`
warp_47=`float2 zz = float2 (dx,dy);
warp_48=`
warp_49=`
warp_50=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_51=`crisp +=.015 - length(zz)*blur/1.5;
warp_52=`
warp_53=`float3 ret1 = crisp - lum(blur)*.012 + mus;
warp_54=`//ret1 = abs(mus)/2;
warp_55=`ret = ret1 * .99 -  .04 ;
warp_56=`}
comp_1=`float z;
comp_2=`float3 ret1, neu, mus;
comp_3=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uv2;
comp_7=`//uv = (uv-0.5) * aspect.xy + .5;    
comp_8=`dz = 0;
comp_9=`
comp_10=`float2 hor = float2(texsize.z,0);
comp_11=`float2 ver = float2(0,texsize.w);
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`ret1 = 0;
comp_16=`float anz = 1;
comp_17=`float n = 0;
comp_18=`uv4 = (uv);
comp_19=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_20=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_21=`
comp_22=`
comp_23=`mus = .5*GetPixel(uv4-0*dz)-0*dz.x;
comp_24=`
comp_25=`uv2 = uv-.5;
comp_26=`while (n <= anz) {
comp_27=`    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;
comp_28=`
comp_29=`    inten =  sqrt(dist)*(1-dist*dist)*4;
comp_30=`
comp_31=`    uv3 = q27*2*uv2*dist + float2 (time/8,0);
comp_32=`    uv3 = frac(uv3);
comp_33=`    uv3 *= aspect.yx;
comp_34=`    uv3 = .1 * cos(22*uv3) + 18 *dz ;
comp_35=`    neu = saturate(.02/length(uv3));
comp_36=`    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);
comp_37=`    ret1 = max(ret1,neu*inten);
comp_38=`n++;
comp_39=`}
comp_40=`
comp_41=`ret = ret1  +  saturate(8*mus*(.2+ret1)) ;
comp_42=`}

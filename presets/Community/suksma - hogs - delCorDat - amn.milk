MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.210
fDecay=0.960
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.800
fWaveScale=0.010
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.01000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.02010
sy=1.02010
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=24
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.800
wavecode_0_g=0.800
wavecode_0_b=1.000
wavecode_0_a=0.500
wave_0_per_point1=///// Cylinder
wave_0_per_point2=r1=1;
wave_0_per_point3=q10= 300*sample+q1;
wave_0_per_point4=q11=-3+6*sample;
wave_0_per_point5=
wave_0_per_point6=my_x = r1*cos(q10);
wave_0_per_point7=my_y = r1*sin(q10);
wave_0_per_point8=my_z = q11;
wave_0_per_point9=
wave_0_per_point10=//////rotations .... by flexi
wave_0_per_point11=
wave_0_per_point12=d = 12;    ////  distance
wave_0_per_point13=zoom = 1;
wave_0_per_point14=
wave_0_per_point15=w1 = q2;
wave_0_per_point16=w2 = 0;
wave_0_per_point17=w3 = -1.4;
wave_0_per_point18=
wave_0_per_point19=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_0_per_point20=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_0_per_point21=z1 = my_z;
wave_0_per_point22=
wave_0_per_point23=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_0_per_point24=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_0_per_point25=y2 = y1;
wave_0_per_point26=
wave_0_per_point27=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_0_per_point28=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_0_per_point29=x3 = x2;
wave_0_per_point30=
wave_0_per_point31=// perspective calculation
wave_0_per_point32=
wave_0_per_point33=l = sqrt(x3*x3 + y3*y3);
wave_0_per_point34=w = atan2(x3,y3);
wave_0_per_point35=p = tan(asin(1) + atan2(d+z3,l));
wave_0_per_point36=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_0_per_point37=
wave_0_per_point38=my_x = zoom*sin(w)*p;
wave_0_per_point39=my_y = zoom*cos(w)*p;
wave_0_per_point40=
wave_0_per_point41=x = 0.5 + my_x;
wave_0_per_point42=y = 0.5 + my_y;
wave_0_per_point43=
wave_0_per_point44=r=.5+.5*sin(22*sample);
wave_0_per_point45=g=.5+.5*sin(26*sample);
wave_0_per_point46=b=.5+.5*sin(32*sample);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.20929
wavecode_1_smoothing=0.00000
wavecode_1_r=0.300
wavecode_1_g=0.200
wavecode_1_b=1.000
wavecode_1_a=0.100
wave_1_per_frame1=t8 = .07;
wave_1_per_frame2=t7 = 1;
wave_1_per_point1=///// Helicoid
wave_1_per_point2=r1=.01;
wave_1_per_point3=q10=10*sample;
wave_1_per_point4=q11=900*sample;
wave_1_per_point5=
wave_1_per_point6=my_x = q10*cos(q11);
wave_1_per_point7=my_y = q10*sin(q11);
wave_1_per_point8=my_z = r1*q11;
wave_1_per_point9=
wave_1_per_point10=//////rotations .... by flexi
wave_1_per_point11=
wave_1_per_point12=d =25;    ////  distance
wave_1_per_point13=zoom = 1;
wave_1_per_point14=
wave_1_per_point15=w1 = q1;
wave_1_per_point16=w2 = 0;
wave_1_per_point17=w3 = .7;
wave_1_per_point18=
wave_1_per_point19=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_1_per_point20=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_1_per_point21=z1 = my_z;
wave_1_per_point22=
wave_1_per_point23=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_1_per_point24=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_1_per_point25=y2 = y1;
wave_1_per_point26=
wave_1_per_point27=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_1_per_point28=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_1_per_point29=x3 = x2;
wave_1_per_point30=
wave_1_per_point31=// perspective calculation
wave_1_per_point32=
wave_1_per_point33=l = sqrt(x3*x3 + y3*y3);
wave_1_per_point34=w = atan2(x3,y3);
wave_1_per_point35=p = tan(asin(1) + atan2(d+z3,l));
wave_1_per_point36=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_1_per_point37=
wave_1_per_point38=my_x = zoom*sin(w)*p;
wave_1_per_point39=my_y = zoom*cos(w)*p;
wave_1_per_point40=
wave_1_per_point41=x = 0.5 + my_x;
wave_1_per_point42=y = 0.7 + my_y;
wave_1_per_point43=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.800
wavecode_2_g=0.800
wavecode_2_b=1.000
wavecode_2_a=0.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.40000
wavecode_3_r=1.000
wavecode_3_g=0.600
wavecode_3_b=1.000
wavecode_3_a=0.000
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=150
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.52373
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=sample=instance/num_inst;
shape_0_per_frame2=
shape_0_per_frame3=
shape_0_per_frame4=///// Cylinder
shape_0_per_frame5=r1=1;
shape_0_per_frame6=q10= 300*sample+q1;
shape_0_per_frame7=q11=-4+10*sample;
shape_0_per_frame8=
shape_0_per_frame9=my_x = r1*cos(q10);
shape_0_per_frame10=my_y = r1*sin(q10);
shape_0_per_frame11=my_z = q11;
shape_0_per_frame12=
shape_0_per_frame13=my_x = if( equal(100*sample%2,0) , my_x+.4*my_y ,my_x) ;
shape_0_per_frame14=my_y = if( equal(100*sample%2,0) , my_y+.4*my_x, my_y) ;
shape_0_per_frame15=
shape_0_per_frame16=
shape_0_per_frame17=//////rotations .... by flexi
shape_0_per_frame18=
shape_0_per_frame19=d = 12;    ////  distance
shape_0_per_frame20=zoom = 1;
shape_0_per_frame21=
shape_0_per_frame22=
shape_0_per_frame23=
shape_0_per_frame24=w1 = q2;
shape_0_per_frame25=w2 = 0;
shape_0_per_frame26=w3 = -1.4;
shape_0_per_frame27=
shape_0_per_frame28=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame29=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame30=z1 = my_z;
shape_0_per_frame31=
shape_0_per_frame32=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame33=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame34=y2 = y1;
shape_0_per_frame35=
shape_0_per_frame36=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame37=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame38=x3 = x2;
shape_0_per_frame39=
shape_0_per_frame40=// perspective calculation
shape_0_per_frame41=
shape_0_per_frame42=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame43=w = atan2(x3,y3);
shape_0_per_frame44=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame45=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame46=rad=60*rad/d;
shape_0_per_frame47=rad=sin(instance/10+time*.5)/70+.08;//(z2/z1-z3)/50+.05;
shape_0_per_frame48=
shape_0_per_frame49=my_x = zoom*sin(w)*p;
shape_0_per_frame50=my_y = zoom*cos(w)*p;
shape_0_per_frame51=
shape_0_per_frame52=x =  .5+my_x;
shape_0_per_frame53=y =  .5+my_y;
shape_0_per_frame54=
shape_0_per_frame55=r=.5+.25*sin(time*5*sample);
shape_0_per_frame56=g=.5+.25*sin(time*7*sample);
shape_0_per_frame57=b=.5+.25*sin(time*11*sample);
shape_0_per_frame58=
shape_0_per_frame59=r2=.1*(1-g);//.1*g;
shape_0_per_frame60=g2=.1*(1-b);//.1*b;
shape_0_per_frame61=b2=.1*(1-r);//.1*r;
shape_0_per_frame62=a2=sin(sample)*(bass+treb+mid)*.1;
shape_0_per_frame63=//border_r=(sin(time)+1)*(1-b);//.1*g;
shape_0_per_frame64=//border_g=(sin(time+2.3)+1)*(1-r);//.1*b;
shape_0_per_frame65=//border_b=(sin(time+6.6)+1)*(1-g);//.1*r;
shape_0_per_frame66=//border_a=(.5+sin(sample)*.1)*(bass+treb+mid)*.06;
shape_0_per_frame67=
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*112;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=q4=(q1+q2+q3)*5;
per_frame_15=q5=(q1+q2+q3)*5;
per_frame_16=q6=(q1+q2+q3)*5;
per_frame_17=q7=(q1+q2+q3)*5;
per_frame_18=//martin no religion / my omniversal absence for changing the background light
per_frame_19=runbass=runbass+vvb;
per_frame_20=runmids=runmids+vvm ;
per_frame_21=runtreb=runtreb+vvt;
per_frame_22=pi23=4*asin(-1)*.33333333333333;
per_frame_23=atime=(runtreb+runmids+runbass)*.05;
per_frame_24=q8= (sin(atime-0*pi23)+1)*.5;
per_frame_25=q9= (sin(atime-1*pi23)+1)*.5;
per_frame_26=q10=(sin(atime-2*pi23)+1)*12.5;
per_frame_27=
per_frame_28=q11=(q1+q2+q3)*115;
per_frame_29=q12=(q1+q2+q3)*5;
per_frame_30=q13=(q1+q2+q3)*5;
per_frame_31=q14=(q1+q2+q3)*5;
per_frame_32=q15=(q1+q2+q3)*5;
per_frame_33=q16=(q1+q2+q3)*5;
per_frame_34=q17=(q1+q2+q3)*5;
per_frame_35=q18=(q1+q2+q3)*5;
per_frame_36=q19=(q1+q2+q3)*5;
per_frame_37=q20=(q1+q2+q3)*5;
per_frame_38=q21=(q1+q2+q3)*5;
per_frame_39=q22=(q1+q2+q3)*5;
per_frame_40=q23=(q1+q2+q3)*5;
per_frame_41=q24=(q1+q2+q3)*5;
per_frame_42=q25=(q1+q2+q3)*5;
per_frame_43=q26=(q1+q2+q3)*5;
per_frame_44=q27=(q1+q2+q3)*5;
per_frame_45=q28=(q1+q2+q3)*5;
per_frame_46=q29=(q1+q2+q3)*5;
per_frame_47=q30=(q1+q2+q3)*5;
per_frame_48=q31=(q1+q2+q3)*5;
per_frame_49=q32=(q1+q2+q3)*5;
per_frame_50=
per_frame_51=warp=0;
per_frame_52=wave_a=0;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`    float2 d = 0.02*aspect.zw;
warp_5=`    float3 dx = ( GetBlur2(uv+float2(1,0)*d-floor(uv+float2(1,0)*d))-GetBlur2(uv-float2(1,0)*d-floor(uv-float2(1,0)*d)) );
warp_6=`    float3 dy = ( GetBlur2(uv+float2(0,1)*d-floor(uv+float2(0,1)*d))-GetBlur2(uv-float2(0,1)*d-floor(uv-float2(0,1)*d)) );
warp_7=`    float3 b1 = GetBlur1(uv) - 0;
warp_8=`    d = 0.01;
warp_9=`    float d2 = -0.02;
warp_10=`    float1 thr = 0;
warp_11=`    float1 c = 0.005;
warp_12=`
warp_13=`
warp_14=`    float2 my_uv = uv - float2(dx.y,dy.y)*d - float2(dy.x,-dx.x)*d2;
warp_15=`    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;
warp_16=`    ret.y += (ret.y - b1.y - thr)*.02 +c;
warp_17=`
warp_18=`
warp_19=`    my_uv = uv - float2(dx.x,dy.x)*d - float2(dy.z,-dx.z)*d2;
warp_20=`    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;
warp_21=`    ret.x += (ret.x - b1.x - thr)*.02 +c;
warp_22=`
warp_23=`
warp_24=`    my_uv = uv - float2(dx.z,dy.z)*d - float2(dy.y,-dx.y)*d2;
warp_25=`    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;
warp_26=`    ret.z += (ret.z - b1.z - thr)*.02 +c;
warp_27=`
warp_28=`
warp_29=`}
comp_1=`float z;
comp_2=`float3 ret1, neu, mus;
comp_3=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uv2;
comp_7=`//uv = (uv-0.5) * aspect.xy + .5;    
comp_8=`dz = 0;
comp_9=`
comp_10=`float2 hor = float2(texsize.z,0);
comp_11=`float2 ver = float2(0,texsize.w);
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`ret1 = 0;
comp_16=`float anz = 1;
comp_17=`float n = 0;
comp_18=`uv4 = (uv);
comp_19=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_20=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_21=`
comp_22=`
comp_23=`mus = .5*GetPixel(uv4-0*dz)-0*dz.x;
comp_24=`
comp_25=`uv2 = uv-.5;
comp_26=`while (n <= anz) {
comp_27=`    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;
comp_28=`
comp_29=`    inten =  sqrt(dist)*(1-dist*dist)*4;
comp_30=`
comp_31=`    uv3 = q27*2*uv2*dist + float2 (time/8,0);
comp_32=`    uv3 = frac(uv3);
comp_33=`    uv3 *= aspect.yx;
comp_34=`    uv3 = .1 * cos(22*uv3) + 18 *dz ;
comp_35=`    neu = saturate(.02/length(uv3));
comp_36=`    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);
comp_37=`    ret1 = max(ret1,neu*inten);
comp_38=`n++;
comp_39=`}
comp_40=`
comp_41=`ret = ret1  +  saturate(8*mus*(.2+ret1)) ;
comp_42=`ret=1-ret;
comp_43=`}

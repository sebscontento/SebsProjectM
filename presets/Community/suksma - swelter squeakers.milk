MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=1.119
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.200
fModWaveAlphaEnd=1.200
fWarpAnimSpeed=0.156
fWarpScale=3.825
fZoomExponent=2.30246
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.42154
sx=0.99010
sy=1.00000
wave_r=0.000
wave_g=0.930
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=q1 = below(int(rand(100)),4 + 10*(treb+mid+bass));
wave_0_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_0_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_0_per_point3=
wave_0_per_point4=sw = 1-equal(it,0)*equal(ita,0);
wave_0_per_point5=swi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);
wave_0_per_point6=xv = if(sw - swi,xv,int(rand(1001))*.001*.8);
wave_0_per_point7=mx = xv + ita*.025;
wave_0_per_point8=my = if(sw - swi,my,int(rand(1001))*.001*.975);
wave_0_per_point9=
wave_0_per_point10=sz = .01;
wave_0_per_point11=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_0_per_point12=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_0_per_point13=
wave_0_per_point14=sa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;
wave_0_per_point15=sb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;
wave_0_per_point16=sc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;
wave_0_per_point17=sd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;
wave_0_per_point18=se = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;
wave_0_per_point19=sf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;
wave_0_per_point20=sg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;
wave_0_per_point21=sh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;
wave_0_per_point22=si = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;
wave_0_per_point23=sj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;
wave_0_per_point24=
wave_0_per_point25=lr = if(sw,lr,int(rand(10)));
wave_0_per_point26=let = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;
wave_0_per_point27=
wave_0_per_point28=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_0_per_point29=vb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_0_per_point30=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point31=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_0_per_point32=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_0_per_point33=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_0_per_point34=vg = equal(let,1);
wave_0_per_point35=vh = equal(let,9) + equal(let,20);
wave_0_per_point36=vi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);
wave_0_per_point37=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_0_per_point38=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_0_per_point39=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_0_per_point40=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point41=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_0_per_point42=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_0_per_point43=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point44=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_0_per_point45=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_0_per_point46=vs = equal(let,22);
wave_0_per_point47=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point48=
wave_0_per_point49=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_0_per_point50=
wave_0_per_point51=a = a*below(ita,8)*q1;
wave_0_per_point52=
wave_0_per_point53=x = mx + vx*sz*.75;
wave_0_per_point54=y = my + vy*sz*1.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=24
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.480
shapecode_0_y=0.500
shapecode_0_rad=0.09901
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.36077
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = q4;
shape_0_per_frame2=y = q8;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.700
shapecode_1_y=0.300
shapecode_1_rad=0.66230
shapecode_1_ang=2.45044
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.74934
shapecode_1_r=0.000
shapecode_1_g=1.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=xx = 0.5;
shape_1_init2=yy = 0.4;
shape_1_per_frame1=d = sqrt( sqr(xx-q4)+sqr(yy-q8));
shape_1_per_frame2=
shape_1_per_frame3=xx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);
shape_1_per_frame4=yy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);
shape_1_per_frame5=aang = if(below(d,0.12),int(rand(1000))/1000,aang);
shape_1_per_frame6=ang =aang*4*asin(1);
shape_1_per_frame7=x = xx;
shape_1_per_frame8=y = yy;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.430
shapecode_2_y=0.600
shapecode_2_rad=1.16781
shapecode_2_ang=5.96903
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.67165
shapecode_2_r=0.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=xx = 0.5;
shape_2_init2=yy = 0.4;
shape_2_per_frame1=d = sqrt( sqr(xx-q4)+sqr(yy-q8));
shape_2_per_frame2=
shape_2_per_frame3=xx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);
shape_2_per_frame4=yy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);
shape_2_per_frame5=aang = if(below(d,0.12),int(rand(1000))/1000,aang);
shape_2_per_frame6=ang =aang*4*asin(1);
shape_2_per_frame7=x = xx;
shape_2_per_frame8=y = yy;
shapecode_3_enabled=0
shapecode_3_sides=36
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.63647
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.53390
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=decay = 1;
per_frame_26=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_27=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_28=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_29=
per_frame_30=x1 = 0.5 + xx1-xx2;
per_frame_31=y1 = 0.5 + yy1;
per_frame_32=
per_frame_33=//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;
per_frame_34=
per_frame_35=spring = 18;
per_frame_36=grav = 1;
per_frame_37=resist = 0.2;
per_frame_38=bounce = 0.9;
per_frame_39=dt = 0.0003;
per_frame_40=
per_frame_41=vx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);
per_frame_42=vy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);
per_frame_43=vx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);
per_frame_44=vy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);
per_frame_45=vx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);
per_frame_46=vy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);
per_frame_47=
per_frame_48=x2 = x2 + vx2;
per_frame_49=y2 = y2 + vy2;
per_frame_50=x3 = x3 + vx3;
per_frame_51=y3 = y3 + vy3;
per_frame_52=x4 = x4 + vx4;
per_frame_53=y4 = y4 + vy4;
per_frame_54=
per_frame_55=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_56=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_57=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_58=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_59=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_60=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_61=
per_frame_62=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_63=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_64=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_65=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_66=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_67=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_68=
per_frame_69=
per_frame_70=q1 = x1;
per_frame_71=q2 = x2;
per_frame_72=q3 = x3;
per_frame_73=q4 = x4;
per_frame_74=
per_frame_75=q5 = y1;
per_frame_76=q6 = y2;
per_frame_77=q7 = y3;
per_frame_78=q8 = y4;
per_frame_79=
per_frame_80=
per_frame_81=zoom = 1.01;
per_frame_82=
per_frame_83=
per_frame_84=
per_frame_85=bb = bb*0.99 + bass*0.02;
per_frame_86=mm = mm*0.99 + mid*0.02;
per_frame_87=tt = tt*0.99 + treb*0.02;
per_frame_88=
per_frame_89=q6 = atan2(vx4,vy4);
per_frame_90=q5 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_91=q9 = x1*0.4 - 0.2;
per_frame_92=q10 = y1 - 0.6;
per_pixel_1=
per_pixel_2=dir = -q6*1 + asin(1)*1;
per_pixel_3=
per_pixel_4=b1 = 0.08; // distance
per_pixel_5=m1 = q5*45;//-0.6 + q5*200; // size
per_pixel_6=t1 = 0.5; // velocity
per_pixel_7=
per_pixel_8=xx = 0.5 + (q4-0.5)/aspectx;
per_pixel_9=yy = 1-(0.5 + (q8-0.5)/aspecty);
per_pixel_10=
per_pixel_11=
per_pixel_12=x1 = xx   +cos(dir+1.5708)*b1;
per_pixel_13=y1 = yy -sin(dir+1.5708)*b1;
per_pixel_14=
per_pixel_15=x2 = xx   -cos(dir+1.5708)*b1;
per_pixel_16=y2 = yy +sin(dir+1.5708)*b1;
per_pixel_17=
per_pixel_18=d1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;
per_pixel_19=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_20=
per_pixel_21=d2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;
per_pixel_22=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_23=
per_pixel_24=si3 = -pow(q5,3)*00;
per_pixel_25=
per_pixel_26=dx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2/aspectx;
per_pixel_27=dy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2/aspecty;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.3;        // maximum random pixel offset
warp_6=`float diffusion = 0.004;      // dither strength
warp_7=`float fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));
warp_11=`uv = lerp(uv_orig,uv, magic*8 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_14=`                      ((uv.xyy*q27
warp_15=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_16=`                      ).xyz*
warp_17=`                      float3(1,1,0)*0.05 + 
warp_18=`                      time*float3(0,0,1)*q29
warp_19=`                     );
warp_20=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_21=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_22=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_23=`ret-=roam_sin*slow_roam_cos.wzy*.5;
warp_24=`
warp_25=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw;
comp_4=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_6=`float2 dz = float2(dx.y,dy.y)*3;
comp_7=`
comp_8=`d = texsize.zw*2;
comp_9=`dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;
comp_10=`dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;
comp_11=`
comp_12=`dz +=float2(dx.y,dy.y);
comp_13=`
comp_14=`float3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;
comp_15=`
comp_16=`ret = bg*float3(0.2,0.3,0.6);
comp_17=`float2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));
comp_18=`ret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);
comp_19=`ret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);
comp_20=`ret = lerp(ret,float3(0,0,0),0.75*GetPixel(uv_swimmer).x);
comp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_22=`                      ((dz.xyy*q28
comp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_24=`                      ).xyz*
comp_25=`                      float3(1,1,0)*0.05 + 
comp_26=`                      time*float3(0,0,1)*q31
comp_27=`                     );
comp_28=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_29=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_30=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_31=`ret = lerp(ret,0,GetBlur1(uv).z*4);
comp_32=`ret = lerp(ret,2,GetPixel(uv).z);
comp_33=`//ret = GetPixel(uv);
comp_34=`}

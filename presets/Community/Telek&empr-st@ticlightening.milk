[preset00]
fRating =3.000000
fGammaAdj = 1.000001
fDecay = 1
fVideoEchoZoom = 1
fVideoEchoAlpha = 0
nVideoEchoOrientation = 0
nWaveMode = 3
bAdditiveWaves = 1
bWaveDots = 0
bWaveThick = 1
bModWaveAlphaByVolume = 0
bMaximizeWaveColor = 0
bTexWrap = 0
bDarkenCenter = 0
bRedBlueStereo = 0
bBrighten = 0
bDarken = 0
bSolarize = 0
bInvert = 0
fWaveAlpha = 4.099998
fWaveScale = 0.3873
fWaveSmoothing = 0.63
fWaveParam = 0.431979179382324
fModWaveAlphaStart = 0.71
fModWaveAlphaEnd = 1.3
fWarpAnimSpeed = 1
fWarpScale = 1
fZoomExponent = 1
fShader = 0
Zoom = 1
rot = 0
cx = 0.5
cy = 0.5
dx = 0
dy = 0
warp = 0.001
sx = 1
sy = 1
wave_r = 0.4159493
wave_g = 0.3937346
wave_b = 0.3365384
wave_x = 6.714803E-02
wave_y = 0.6357563
ob_size = 0.005
ob_r = 0.9539608
ob_g = 0.1311408
ob_b = 0.9449987
ob_a = 0.154731
ib_size = 0.5
ib_r = 0.6827167
ib_g = 0.889148
ib_b = 0.7756523
ib_a = 0.5362443
nMotionVectorsX =  38.399994
nMotionVectorsY =  15.647999
mv_dx = -7.62295722961426E-02
mv_dy = 0.117689371109009
mv_l = 0.5
mv_r = 0.3181531
mv_g = 0.7664689
mv_b = 0.2302984
mv_a = 0.599979519844055
per_frame_1=//virtual;
per_frame_2=vnum_increment = 2/fps;
per_frame_3=vtarget = vtarget + if(above(bass*bass_att,4.5), if(below(vtarget,vnum+1),1,0),0);
per_frame_4=vnum = vnum + if(below(vnum,vtarget-vnum_increment*.5), vnum_increment,0);
per_frame_5=monitor = vnum;
per_frame_6=;
per_frame_7=vang = vnum*3.14159265358979323*.25;
per_frame_8=q1=vang;
per_frame_9=q2 = vnum_increment;
per_frame_10=q3 = vnum;
per_frame_11=q4=vtarget;
per_frame_12=//vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_frame_13=//vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_frame_14=;
per_frame_15=bass_x = max(bass_x*.7+max(bass_att-.9,0)*.3,0);    //decaying bass max;
per_frame_16=wave_vx = ((frame%3-1)*bass_x* above(vnum,vtarget-vnum_increment*.5) +1)*wave_x;    //spreads flame;
per_frame_17=wave_vy=wave_y;
per_frame_18=;
per_frame_19=wave_x = -(wave_vx-.5)*cos(vang) + (wave_vy-.5)*sin(vang)+.5;
per_frame_20=wave_y = -(wave_vx-.5)*sin(vang) - (wave_vy-.5)*cos(vang)+.5;
per_frame_21=//end virtual;
per_frame_22=wave_r = above(vnum,vtarget-vnum_increment*.5);
per_frame_23=//wave_g = below(bass*bass_att,3.5);
per_frame_24=decay = 3000000+57.75;                                      // Magic 'flame' decay;
per_frame_25=//wave_mystery = sin(time*.2)*.05+1;
per_frame_26=;
per_frame_27=ob_a = max(sqr(sqr(sin(time*1)*.25+.25)),if(below(vnum,vtarget-.1),.2,0));     // 'ad-lib decay' to black - no ugly artefacts;
per_frame_28=// ^4 to get it up there quick -> min time with decay on.;
per_frame_29=;
per_frame_30=ob_a = ob_a*(1-bass_x);                         // just so we don't get rid of the wide impressive;
per_frame_31=// flames so quickly;
per_frame_32=;
per_frame_33=//ob_a=0;
per_frame_34=//monitor = ob_a;
per_frame_35=;
per_frame_36=//Other decays to try:;
per_frame_37=//300000 +  42.53, 90.63, 43.00   These are all fairly similar, but all are stable (equiv to decay  0.990 -> 1 in terms of speed of fade);
per_frame_38=//3000000 + 57.75 <<<  =:-);
per_frame_39=;
per_frame_40=dx = bass * wave_b;
per_frame_41=ib_size = wave_g * wave_g;
per_frame_42=ob_g = wave_r * wave_g;
per_frame_43=wave_b = wave_r * treb;
per_frame_44=wave_b = wave_b + wave_g;
per_frame_45=ib_g = time + bass;
per_frame_46=ob_b = bass * treb;
per_frame_47=warp = treb + wave_r;
per_frame_48=dx = dx + wave_r;
per_frame_49=ob_size = wave_b * bass;
per_frame_50=mv_b = bass * bass;
per_frame_51=ob_b = ob_b * bass;
per_frame_52=warp=if(below(warp,0.01), 0.01, warp);
per_frame_53=warp=if(above(warp,100.0), 100.0, warp);
per_frame_54=dx=if(below(dx,-1), -1, dx);
per_frame_55=dx=if(above(dx,1.0), 1.0, dx);
per_frame_56=wave_b=if(below(wave_b,0.0), 0.0, wave_b);
per_frame_57=wave_b=if(above(wave_b,1.0), 1.0, wave_b);
per_frame_58=ob_size=if(below(ob_size,0.0), 0.0, ob_size);
per_frame_59=ob_size=if(above(ob_size,0.5), 0.5, ob_size);
per_frame_60=ob_g=if(below(ob_g,0.0), 0.0, ob_g);
per_frame_61=ob_g=if(above(ob_g,1.0), 1.0, ob_g);
per_frame_62=ob_b=if(below(ob_b,0.0), 0.0, ob_b);
per_frame_63=ob_b=if(above(ob_b,1.0), 1.0, ob_b);
per_frame_64=ib_size=if(below(ib_size,0.0), 0.0, ib_size);
per_frame_65=ib_size=if(above(ib_size,0.5), 0.5, ib_size);
per_frame_66=ib_g=if(below(ib_g,0.0), 0.0, ib_g);
per_frame_67=ib_g=if(above(ib_g,1.0), 1.0, ib_g);
per_frame_68=mv_b=if(below(mv_b,0.0), 0.0, mv_b);
per_frame_69=mv_b=if(above(mv_b,1.0), 1.0, mv_b);
per_frame_70=wave_b=if(below(wave_b,0.0), 0.0, wave_b);
per_frame_71=wave_b=if(above(wave_b,1.0), 1.0, wave_b);
per_frame_72=ob_g=if(below(ob_g,0.0), 0.0, ob_g);
per_frame_73=ob_g=if(above(ob_g,1.0), 1.0, ob_g);
per_frame_74=ob_b=if(below(ob_b,0.0), 0.0, ob_b);
per_frame_75=ob_b=if(above(ob_b,1.0), 1.0, ob_b);
per_pixel_1=rot = below(q3, q4-q2*.5)*q2*.8*(1-0*(rad));
per_pixel_2=;
per_pixel_3=//virtual axes;
per_pixel_4=vang=q1;
per_pixel_5=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_6=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_7=vy=1-vy;
per_pixel_8=;
per_pixel_9=dvy = (vx+.08*sin(rand(100)))*2%2*-.01-.005;
per_pixel_10=dvy = -.0025*((1-vy)*10+rand(5));    //wobble, and faster at top - accelerating like real flames;
per_pixel_11=;
per_pixel_12=dvx = rand(20)*.0001*sin(rand(2)-.5);                       //flicker;
per_pixel_13=dvx = dvx*sqr(vy);                                                                //dampens top;
per_pixel_14=//dvx = dvx*(1-x/2);                                                        //slows sides;
per_pixel_15=dvx = dvx*-.2*(rand(10)-5);                                         //random damper;
per_pixel_16=dvx = dvx -(vx-.5)*.04*(.8-sqr(vy));                                 //drift towards centre;
per_pixel_17=dvx = dvx + cos(sqr(vy-.5)*10-time*1.1)*sqr(1-(vy))*.01; //add flutter at top;
per_pixel_18=;
per_pixel_19=//de-virtualise;
per_pixel_20=dx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_21=dy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_22=;
per_pixel_23=// Telek - 09/11/2002;
per_pixel_24=cy = a + bass_att;
per_pixel_25=sy = rot - y;
per_pixel_26=rot = b * x;
per_pixel_27=cy = cy - q1;
per_pixel_28=zoomexp = bass_att - b;
per_pixel_29=zoomexp = zoomexp + b;
per_pixel_30=dy = time + a;
per_pixel_31=sx = time * y;
per_pixel_32=cy = cy * b;
per_pixel_33=zoomexp=if(below(zoomexp,0.01), 0.01, zoomexp);
per_pixel_34=zoomexp=if(above(zoomexp,100.0), 100.0, zoomexp);
per_pixel_35=rot=if(below(rot,-1.0), -1.0, rot);
per_pixel_36=rot=if(above(rot,1.0), 1.0, rot);
per_pixel_37=cy=if(below(cy,-1.0), -1.0, cy);
per_pixel_38=cy=if(above(cy,2.0), 2.0, cy);
per_pixel_39=dy=if(below(dy,-1), -1, dy);
per_pixel_40=dy=if(above(dy,1.0), 1.0, dy);
per_pixel_41=sx=if(below(sx,0.01), 0.01, sx);
per_pixel_42=sx=if(above(sx,100.0), 100.0, sx);
per_pixel_43=sy=if(below(sy,0.01), 0.01, sy);
per_pixel_44=sy=if(above(sy,100.0), 100.0, sy);

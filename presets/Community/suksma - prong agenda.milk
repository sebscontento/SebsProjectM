MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=1
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=1.470
fZoomExponent=4.77802
fShader=1.000
zoom=0.99816
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00183
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=0.500
ob_b=0.500
ob_a=1.000
ib_size=0.500
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.020
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.450
wavecode_0_g=0.680
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = q2;
wave_0_per_frame2=t2 = sin( q2 * 0.2 ) * 6;
wave_0_per_frame3=t3 = 255.0;//sin( q2 * 0.3 ) * 3.0 + 100.0;
wave_0_per_point1=n= sample;
wave_0_per_point2=
wave_0_per_point3=t = t1 + n;
wave_0_per_point4=ang = sin( t ) * 6.0;
wave_0_per_point5=xp = sin( ang );
wave_0_per_point6=yp = cos( ang );
wave_0_per_point7=zp = 0.0;
wave_0_per_point8=
wave_0_per_point9=
wave_0_per_point10=ncyc = n * t3 + t1;
wave_0_per_point11=ncyc = ncyc - int( ncyc );
wave_0_per_point12=t =  ncyc;
wave_0_per_point13=ang = t * 0.3;
wave_0_per_point14=sang = sin( ang ); cang = cos( ang );
wave_0_per_point15=yr = yp * cang - zp * sang;
wave_0_per_point16=zr = yp * sang + zp * cang;
wave_0_per_point17=yp = yr;
wave_0_per_point18=zp = zr;
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=
wave_0_per_point22=ncyc = n * t3 - t1;
wave_0_per_point23=ncyc = ncyc - int( ncyc );
wave_0_per_point24=ang = t2 - n*2 + ncyc*0.1;
wave_0_per_point25=sang = sin( ang ); cang = cos( ang );
wave_0_per_point26=xr = xp * cang - zp * sang;
wave_0_per_point27=zr = xp * sang + zp * cang;
wave_0_per_point28=xp = xr;
wave_0_per_point29=zp = zr;
wave_0_per_point30=
wave_0_per_point31=
wave_0_per_point32=
wave_0_per_point33=
wave_0_per_point34=
wave_0_per_point35=zp = zp + 1.6;
wave_0_per_point36=
wave_0_per_point37=x = xp/zp * 0.25 + 0.5;
wave_0_per_point38=y = yp/zp * 0.25 + 0.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.450
wavecode_1_g=0.680
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q2;
wave_1_per_frame2=t2 = sin( q2 * 0.2 ) * 6;
wave_1_per_frame3=t3 = 255.0;//sin( q2 * 0.3 ) * 3.0 + 100.0;
wave_1_per_point1=n= sample;
wave_1_per_point2=
wave_1_per_point3=t = t1 + n;
wave_1_per_point4=ang = sin( t ) * 6.0;
wave_1_per_point5=xp = sin( ang );
wave_1_per_point6=yp = cos( ang );
wave_1_per_point7=zp = 0.0;
wave_1_per_point8=
wave_1_per_point9=
wave_1_per_point10=ncyc = n * t3 + t1;
wave_1_per_point11=ncyc = ncyc - int( ncyc );
wave_1_per_point12=t =  ncyc;
wave_1_per_point13=ang = t * 0.3;
wave_1_per_point14=sang = sin( ang ); cang = cos( ang );
wave_1_per_point15=yr = yp * cang - zp * sang;
wave_1_per_point16=zr = yp * sang + zp * cang;
wave_1_per_point17=yp = yr;
wave_1_per_point18=zp = zr;
wave_1_per_point19=
wave_1_per_point20=
wave_1_per_point21=
wave_1_per_point22=ncyc = n * t3 - t1;
wave_1_per_point23=ncyc = ncyc - int( ncyc );
wave_1_per_point24=ang = t2 - n*2 + ncyc*0.1;
wave_1_per_point25=sang = sin( ang ); cang = cos( ang );
wave_1_per_point26=xr = xp * cang - zp * sang;
wave_1_per_point27=zr = xp * sang + zp * cang;
wave_1_per_point28=xp = xr;
wave_1_per_point29=zp = zr;
wave_1_per_point30=
wave_1_per_point31=
wave_1_per_point32=
wave_1_per_point33=
wave_1_per_point34=
wave_1_per_point35=zp = zp + 1.6;
wave_1_per_point36=
wave_1_per_point37=x = xp/zp *-0.25 + 0.5;
wave_1_per_point38=y = yp/zp * 0.25 + 0.5;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.610
wavecode_3_g=0.720
wavecode_3_b=0.950
wavecode_3_a=1.000
wave_3_per_frame1=advance=advance+ 0.008;
wave_3_per_frame2=advance=if( above(advance,2) , 0, advance);
wave_3_per_frame3=t1=advance
wave_3_per_point1=sparkle=sin(sample*6.283*3+time*5)*0.5+0.5;
wave_3_per_point2=
wave_3_per_point3=s=sample*6.28;
wave_3_per_point4=
wave_3_per_point5=//plot random x position via function of sample pos;
wave_3_per_point6=xp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);
wave_3_per_point7=xp=xp*0.20;
wave_3_per_point8=
wave_3_per_point9=//plot random y position via function of sample pos;
wave_3_per_point10=yp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);
wave_3_per_point11=yp=yp*0.20;
wave_3_per_point12=
wave_3_per_point13=//plot random z position via function of sample pos;
wave_3_per_point14=zp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);
wave_3_per_point15=zp=zp*0.25;
wave_3_per_point16=
wave_3_per_point17=//pull stars toward screen
wave_3_per_point18=zp=zp + 1 - t1;
wave_3_per_point19=
wave_3_per_point20=//correct when below 0
wave_3_per_point21=zp=if( below(zp,0) , zp+2 , zp );
wave_3_per_point22=
wave_3_per_point23=//darken far stars
wave_3_per_point24=a=(1 - zp*0.5);
wave_3_per_point25=a=a*sparkle;
wave_3_per_point26=
wave_3_per_point27=zp=zp*0.7;
wave_3_per_point28=
wave_3_per_point29=x_screen=xp/zp + 0.5;
wave_3_per_point30=y_screen=yp/zp*1.333 + 0.5;
wave_3_per_point31=
wave_3_per_point32=x=x_screen;
wave_3_per_point33=y=y_screen;
wave_3_per_point34=
wave_3_per_point35=ag=atan( (y-0.5)/(x-0.5) );
wave_3_per_point36=
shapecode_0_enabled=1
shapecode_0_sides=32
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.51645
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.300
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.480
shapecode_0_r2=0.140
shapecode_0_g2=0.450
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=textured=tan(time*3000);
shapecode_1_enabled=1
shapecode_1_sides=5
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.50627
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.17914
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=sin(time);
shape_1_per_frame2=tex_zoom=bass;
shapecode_2_enabled=1
shapecode_2_sides=6
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.98609
shapecode_2_ang=0.00000
shapecode_2_tex_ang=3.95841
shapecode_2_tex_zoom=0.36605
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=a=tan(q2*90);
shape_2_per_frame2=a = abs( a );
shape_2_per_frame3=a = min( a, 1 );
shape_2_per_frame4=a = max( a, 0 );
shape_2_per_frame5=
shape_2_per_frame6=a2 = 0;//a*0.15;
shape_2_per_frame7=//additive=bass;
shape_2_per_frame8=tex_zoom=((sin(time)*0.5+0.5)*0.2+0.3)+(treb_att*0.1);
shapecode_3_enabled=1
shapecode_3_sides=64
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.88385
shapecode_3_ang=0.00000
shapecode_3_tex_ang=6.28319
shapecode_3_tex_zoom=0.18423
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.060
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ang=time*0.2;
shape_3_per_frame2=tex_zoom=sin(time)*0.1+0.3;
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=q4=(q1+q2+q3)*5;
per_frame_15=q5=(q1+q2+q3)*5;
per_frame_16=q6=(q1+q2+q3)*5;
per_frame_17=q7=(q1+q2+q3)*5;
per_frame_18=q8=(q1+q2+q3)*5;
per_frame_19=q9=(q1+q2+q3)*5;
per_frame_20=q10=(q1+q2+q3)*5;
per_frame_21=q11=(q1+q2+q3)*5;
per_frame_22=q12=(q1+q2+q3)*5;
per_frame_23=q13=(q1+q2+q3)*5;
per_frame_24=q14=(q1+q2+q3)*5;
per_frame_25=q15=(q1+q2+q3)*5;
per_frame_26=q16=(q1+q2+q3)*5;
per_frame_27=q17=(q1+q2+q3)*5;
per_frame_28=q18=(q1+q2+q3)*5;
per_frame_29=q19=(q1+q2+q3)*5;
per_frame_30=q20=(q1+q2+q3)*5;
per_frame_31=q21=(q1+q2+q3)*5;
per_frame_32=q22=(q1+q2+q3)*5;
per_frame_33=q23=(q1+q2+q3)*5;
per_frame_34=q24=(q1+q2+q3)*5;
per_frame_35=q25=(q1+q2+q3)*5;
per_frame_36=q26=(q1+q2+q3)*5;
per_frame_37=q27=(q1+q2+q3)*5;
per_frame_38=q28=(q1+q2+q3)*5;
per_frame_39=q29=(q1+q2+q3)*5;
per_frame_40=q30=(q1+q2+q3)*5;
per_frame_41=q31=(q1+q2+q3)*5;
per_frame_42=q32=(q1+q2+q3)*5;
per_frame_43=
per_frame_44=decay=.999;
per_frame_45=wrap=sin(time*10);
per_frame_46=mv_dx=bass;
per_frame_47=//ib_a=.005;
per_pixel_1=zoom=1.001-(rad/100)+(bass*0.01);
per_pixel_2=rot=rad/600;
per_pixel_3=sy=-1;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float2 uvm = uv;
warp_5=`
warp_6=`float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
warp_8=`
warp_9=`ret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));
warp_10=`ret.xyz = tex2D( sampler_pw_main,uvm).xyz;
warp_11=`
warp_12=`
warp_13=`float3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;
warp_14=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_15=`ret.xy = rsamp.xy;
warp_16=`}
warp_17=`
warp_18=`rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;
warp_19=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_20=`ret.xy = rsamp.xy;
warp_21=`}
warp_22=`
warp_23=`ret.z = tex2D(sampler_fw_main,ret.xy).z;
warp_24=`
warp_25=`ret.z -= q1*.005;
warp_26=`
warp_27=`
warp_28=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float3 goo = tex2D(sampler_main, uv).xyz;    
comp_4=`ret=goo;
comp_5=`    float3 d = float3(texsize.zw, 0)*2.5;
comp_6=`    float b1 = lum(GetBlur1(uv + d.xz));
comp_7=`    float b2 = lum(GetBlur1(uv - d.xz));
comp_8=`    float b3 = lum(GetBlur1(uv + d.zy));
comp_9=`    float b4 = lum(GetBlur1(uv - d.zy));
comp_10=`
comp_11=`    ret *= 0.5; 
comp_12=`    ret += (b1-b2)*3.4*float3(1,0.7,0.3);
comp_13=`    ret += (b3-b4)*3.4*float3(0.2,0.5,0.7);
comp_14=`    if (lum(ret)>0.6){ret=lerp(ret, tex2d(sampler_noise_lq,uv*10),0.1)*1.1;};
comp_15=`   ret*=ret*0.8+q6*q5*0.35;
comp_16=`}

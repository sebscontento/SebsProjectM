MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.500
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.100
wavecode_0_g=0.280
wavecode_0_b=1.000
wavecode_0_a=0.200
wave_0_init1=t2 = 0
wave_0_per_frame1=t1 = time * 13;
wave_0_per_frame2=
wave_0_per_frame3=t2 = sin(time*3) * 0.5 + 0.5;
wave_0_per_frame4=t2 = t2 * 0.3 + 0.1; //size of circle;
wave_0_per_frame5=
wave_0_per_frame6=t2= q2 * 0.003 + 0.06;
wave_0_per_frame7=
wave_0_per_frame8=t3= q1;
wave_0_per_frame9=
wave_0_per_frame10=t4 = time/8;
wave_0_per_frame11=
wave_0_per_frame12=t5 = sin( time / 4 ) * 0.5 + 0.5; //bias value
wave_0_per_frame13=t5 = t5 * 17 + 2;
wave_0_per_point1=n = sample*6.283;
wave_0_per_point2=pi = 3.1415;
wave_0_per_point3=pi2 = 6.283;
wave_0_per_point4=
wave_0_per_point5=phs = t1 + sample*9;
wave_0_per_point6=
wave_0_per_point7=bias = t5;
wave_0_per_point8=bias_i = bias - 1;
wave_0_per_point9=
wave_0_per_point10=cc = phs / 3;
wave_0_per_point11=cc_int = int(cc);
wave_0_per_point12=cc_ramp = cc - cc_int;
wave_0_per_point13=cc_ad_a = (cc_ramp * bias - 1) / bias_i;
wave_0_per_point14=cc_ad_a = if( below(cc_ad_a,0) , 0 , cc_ad_a );
wave_0_per_point15=
wave_0_per_point16=cc_ad_b = cc_ramp * bias;
wave_0_per_point17=cc_ad_b = if( above(cc_ad_b,1) , 1 , cc_ad_b );
wave_0_per_point18=
wave_0_per_point19=cc_a = cc_ad_a + cc_int;
wave_0_per_point20=cc_b = (cc_ad_b + cc_int) ;
wave_0_per_point21=
wave_0_per_point22=xp = t2 * above(cc_ad_a , 0);
wave_0_per_point23=yp = 1;
wave_0_per_point24=zp = 0;
wave_0_per_point25=
wave_0_per_point26=ang = cc_a * 6.283 * 16;
wave_0_per_point27=sang = sin(ang) ; cang = cos(ang);
wave_0_per_point28=xq = sang*xp + cang*zp;
wave_0_per_point29=yq = yp;
wave_0_per_point30=zq = cang*xp - sang*zp;
wave_0_per_point31=xp=xq;yp=yq;zp=zq;
wave_0_per_point32=
wave_0_per_point33=ang2 = cc_b + t4;
wave_0_per_point34=sang = sin(ang2) ; cang = cos(ang2);
wave_0_per_point35=xq = xp;
wave_0_per_point36=yq = sang*yp + cang*zp;
wave_0_per_point37=zq = cang*yp - sang*zp;
wave_0_per_point38=xp=xq;yp=yq;zp=zq;
wave_0_per_point39=
wave_0_per_point40=ang2 = cc_b * 3.13 + t4;
wave_0_per_point41=sang = sin(ang2) ; cang = cos(ang2);
wave_0_per_point42=xq = sang*xp + cang*yp;
wave_0_per_point43=yq = cang*xp - sang*yp;
wave_0_per_point44=zq = zp;
wave_0_per_point45=xp=xq;yp=yq;zp=zq;
wave_0_per_point46=
wave_0_per_point47=ang2 = cc_b * 1.43 + t4;
wave_0_per_point48=sang = sin(ang2) ; cang = cos(ang2);
wave_0_per_point49=xq = sang*xp + cang*zp;
wave_0_per_point50=yq = yp;
wave_0_per_point51=zq = cang*xp - sang*zp;
wave_0_per_point52=xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=
wave_0_per_point55=zp = zp+3.1;
wave_0_per_point56=xs = xp/zp + 0.5;
wave_0_per_point57=ys = yp/zp * 1.333 + 0.5;
wave_0_per_point58=
wave_0_per_point59=x=xs;
wave_0_per_point60=y=ys;
wave_0_per_point61=
wave_0_per_point62=
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=22
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.54822
shapecode_0_ang=1.44513
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.300
shapecode_0_g=0.910
shapecode_0_b=1.000
shapecode_0_a=0.220
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=33
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.24979
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.400
shapecode_1_g=0.200
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.100
shapecode_1_g2=0.200
shapecode_1_b2=0.300
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=1
shapecode_2_sides=22
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.24979
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.100
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.500
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=db=.01;
per_frame_init_2=beatrate=1;
per_frame_init_3=avgbeatrate=2;
per_frame_init_4=lbbtime=time;
per_frame_init_5=avgdb=.01;
per_frame_init_6=vol=1;
per_frame_init_7=avgvol=.2;
per_frame_init_8=phase=0;
per_frame_init_9=bool=0;
per_frame_init_10=const=.02;
per_frame_init_11=
per_frame_init_12=mtime=1000+bass_att*1000;
per_frame_init_13=t1=500+bass*500;
per_frame_init_14=t2=500+treb*500;
per_frame_init_15=t3=500+mid*500;
per_frame_init_16=
per_frame_init_17=c1=0;
per_frame_init_18=cx1=.5;
per_frame_init_19=cy1=.5;
per_frame_init_20=cx2=.5;
per_frame_init_21=cy2=.5;
per_frame_init_22=
per_frame_init_23=sw1=0;
per_frame_init_24=sw2=0;
per_frame_init_25=sw3=0;
per_frame_init_26=sw4=0;
per_frame_init_27=sw5=0;
per_frame_init_28=sw6=0;
per_frame_init_29=h=0;
per_frame_init_30=hue=0;
per_frame_1=db=(bass-lbass)*fps;
per_frame_2=lbass=bass;
per_frame_3=avgdb=avgdb*.99+abs(db)*.01;
per_frame_4=avgvol=avgvol*.99+(bass+mid+treb)*.0033;
per_frame_5=
per_frame_6=//beatdection
per_frame_7=rawbeatb=above(abs(db),avgdb*avgvol*5);
per_frame_8=beatb=rawbeatb*above(time-lbbtime,avgbeatrate*.75);
per_frame_9=beathard=beatb*(abs(db)-avgdb*4);
per_frame_10=//beatrate calc
per_frame_11=beatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;
per_frame_12=avgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;
per_frame_13=lbbtime=time*beatb+(1-beatb)*lbbtime;
per_frame_14=
per_frame_15=ph=(time-lbbtime)*(60/avgbeatrate)*const;
per_frame_16=phase=max(min( ph, 1 ),0);
per_frame_17=
per_frame_18=//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;
per_frame_19=const=const*(1-beatb)+beatb*( const+ (.01*bool) );
per_frame_20=
per_frame_21=bool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);
per_frame_22=
per_frame_23=bc=bc+beatb;
per_frame_24=
per_frame_25=
per_frame_26=monitor=avgbeatrate;
per_frame_27=vol=(rawbeatb*(abs(db)-(avgdb))*.01);
per_frame_28=avgvol=avgvol*.999+vol*.01;
per_frame_29=
per_frame_30=c1=(60/avgbeatrate)*vol*.1;
per_frame_31=mtime=mtime+min(c1*avgvol,.25)*(60/fps);
per_frame_32=
per_frame_33=zoom=1;
per_frame_34=decay=1;
per_frame_35=warp=0;
per_frame_36=wrap=1;
per_frame_37=
per_frame_38=
per_frame_39=// This is the version you should use...
per_frame_40=// ----------- start copying -----------
per_frame_41=hue=(mtime*.1+phase*.5); // change this
per_frame_42=h=6*(hue-int(hue));
per_frame_43=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
per_frame_44=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
per_frame_45=ib_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
per_frame_46=ib_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
per_frame_47=ib_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
per_frame_48=// ----------- end ----------------
per_frame_49=
per_frame_50=ob_r=vol-ib_r;
per_frame_51=ob_g=vol-ib_g;
per_frame_52=ob_b=vol-ib_b;
per_frame_53=
per_frame_54=
per_frame_55=
per_frame_56=
per_frame_57=t1=t1+min(c1*bass+bass_att*.1,.25)*(60/fps);
per_frame_58=t2=t2+min(c1*treb+treb_att*.1,.25)*(60/fps);
per_frame_59=t3=t3+min(c1*mid+mid_att*.1,.25)*(60/fps);
per_frame_60=
per_frame_61=q1=mtime;
per_frame_62=q2=t1;
per_frame_63=q3=t2;
per_frame_64=q4=t3;
per_frame_65=
per_frame_66=cx1=.5+.4*sin(mtime*.12-t4*.05);
per_frame_67=cy1=.5+.4*sin(t1*.14-t2*.033);
per_frame_68=
per_frame_69=
per_frame_70=cx2=.5+.4*sin(t2*.113-mtime*.05);
per_frame_71=cy2=.5+.4*sin(t3*.13-t4*.001);
per_frame_72=
per_frame_73=q5=cx1;
per_frame_74=q6=cy1;
per_frame_75=
per_frame_76=q7=cx2;
per_frame_77=q8=cy2;
per_pixel_1=crot=sin(q1*.01-q2*.01)*.1;
per_pixel_2=
per_pixel_3=
per_pixel_4=cx1=q5;
per_pixel_5=cy1=q6;
per_pixel_6=
per_pixel_7=myx=(cx1-x);
per_pixel_8=myy=(cy1-(1-y));
per_pixel_9=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_10=mang=asin( abs(myy)/(mrad) );
per_pixel_11=mr1=mrad;
per_pixel_12=
per_pixel_13=ax=mang;
per_pixel_14=ay=mang;
per_pixel_15=
per_pixel_16=mrot=crot*(1-mrad)*sin(q2*.1);
per_pixel_17=
per_pixel_18=dx1= sign(myy)*sin(ax)*mrot;
per_pixel_19=dy1= sign(myx)*(cos(ay)*mrot);
per_pixel_20=
per_pixel_21=
per_pixel_22=cx2=q7;
per_pixel_23=cy2=q8;
per_pixel_24=
per_pixel_25=myx=(cx2-x);
per_pixel_26=myy=(cy2-(1-y));
per_pixel_27=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_28=mang=asin( abs(myy)/(mrad) );
per_pixel_29=mr2=mrad;
per_pixel_30=
per_pixel_31=ax=mang;
per_pixel_32=ay=mang;
per_pixel_33=
per_pixel_34=mrot=crot*(1-mrad)*sin(q4*.1);
per_pixel_35=
per_pixel_36=dx2=sign(myy)*sin(ax)*mrot;
per_pixel_37=dy2= sign(myx)*(cos(ay)*mrot);
per_pixel_38=
per_pixel_39=
per_pixel_40=
per_pixel_41=
per_pixel_42=n1=(mr1-mr2);
per_pixel_43=n2=(mr2-mr1);
per_pixel_44=
per_pixel_45=dx=dx1*n1*(1-mr1)+dx2*n2*(1-mr2);
per_pixel_46=dy=dy1*n1*(1-mr1)+dy2*n2*(1-mr2);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    // darken (decay) over time
warp_5=`    float2 uv2 = float2(uv.x+(2*sin(uv.x*((bass*500))+(time*10))-.5)*.002,uv.y+(2*sin(uv.y*((treb*500))+(time*10))-.5)*.002);
warp_6=`    ret = tex2D( sampler_fc_main, uv2 ).xyz;
warp_7=`    
warp_8=`
warp_9=`    ret = (ret - .005)*0.97; //or try: ret -= 0.004;
warp_10=`}
comp_1=`sampler sampler_grad = sampler_state {
comp_2=` AddressU = WRAP; 
comp_3=` AddressV = WRAP;
comp_4=`};
comp_5=`
comp_6=`sampler sampler_grad2 = sampler_state {
comp_7=` AddressU = WRAP; 
comp_8=` AddressV = WRAP;
comp_9=`};
comp_10=`
comp_11=`
comp_12=`shader_body
comp_13=`{
comp_14=`        float2x2 rot = { cos(-q2) - 0.01, sin(-q2),
comp_15=`                    -sin(-q2), cos(-q2) - 0.01
comp_16=`              };
comp_17=`
comp_18=`    float final_noise = 0;
comp_19=`    for(int i = 0 ; i < 4 ; i++){
comp_20=`      final_noise += (1.0/pow(2,i))*(tex2D(sampler_noise_hq, uv*pow(2,i))*2-1); 
comp_21=`    }    
comp_22=`
comp_23=`    ret = tex2D(sampler_grad, mul(uv-0.5,rot) + 0.5);
comp_24=`    ret += tex2D(sampler_grad2, mul(uv-0.5,rot) + 0.5);
comp_25=`
comp_26=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;
comp_27=`    float3 output =  tex2D(sampler_main, uv).xyz;
comp_28=`    float3 blur =  tex2D(sampler_main, GetBlur1(uv)).xyz;
comp_29=`    
comp_30=`    ret *= cross(blur,output);
comp_31=`    ret = pow(ret,2);
comp_32=`    ret *= 2.00; //gamma
comp_33=`   
comp_34=`}

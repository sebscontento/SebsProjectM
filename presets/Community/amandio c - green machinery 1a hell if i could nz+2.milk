MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.000
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=60.80387
wavecode_0_smoothing=0.70000
wavecode_0_r=0.500
wavecode_0_g=1.000
wavecode_0_b=0.300
wavecode_0_a=0.100
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=67.16520
wavecode_1_smoothing=0.70000
wavecode_1_r=0.400
wavecode_1_g=0.400
wavecode_1_b=0.800
wavecode_1_a=0.080
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.400
wavecode_2_g=0.400
wavecode_2_b=0.800
wavecode_2_a=0.080
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=0.080
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.02987
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27705
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.300
shapecode_0_a=0.100
shapecode_0_r2=0.200
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.700
shapecode_0_border_b=0.100
shapecode_0_border_a=0.000
shape_0_per_frame1=i=2*instance;
shape_0_per_frame2=
shape_0_per_frame3=x1=gmegabuf(i);    y1=gmegabuf(i+1);
shape_0_per_frame4=
shape_0_per_frame5=z=.0015;
shape_0_per_frame6=x=.5+z*x1/q6;    y=.5+z*y1;
shape_0_per_frame7=
shape_0_per_frame8=x=x-int(x);      y=y-int(y);    //// wrap
shape_0_per_frame9=
shape_0_per_frame10=rad=.1*rad;
shape_0_per_frame11=r=i/(q6);
shape_0_per_frame12=g=x1/y1-i/(q6);
shape_0_per_frame13=b=x/y-i/(q6);
shape_0_per_frame14=r1=10/x1-i/(q6);
shape_0_per_frame15=g2=10/y1-i/(10/q6);
shape_0_per_frame16=b2=y-i/(q6);
shape_0_per_frame17=
shapecode_1_enabled=0
shapecode_1_sides=12
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03048
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.69115
shapecode_1_tex_zoom=0.86985
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.300
shapecode_1_a=0.100
shapecode_1_r2=0.200
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.130
shapecode_1_border_b=0.210
shapecode_1_border_a=0.000
shape_1_per_frame1=i=2*(instance+1024);
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=z=.0015;
shape_1_per_frame6=x=.5+z*x1/q6;    y=.5+z*y1;
shape_1_per_frame7=
shape_1_per_frame8=x=x-int(x);      y=y-int(y);    //// wrap
shape_1_per_frame9=
shape_1_per_frame10=rad=.1*rad;
shape_1_per_frame11= 
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.290
shapecode_2_y=0.370
shapecode_2_rad=1.05294
shapecode_2_ang=1.82205
shapecode_2_tex_ang=1.88496
shapecode_2_tex_zoom=0.86993
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.500
shapecode_2_border_b=0.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=50
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.11001
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.54929
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.600
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.700
shapecode_3_border_b=0.100
shapecode_3_border_a=0.000
shape_3_per_frame1=sample=instance/50;
shape_3_per_frame2=y=sample;
shape_3_per_frame3=x=.5+sin(.25*time);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=q6=aspecty;        t1=t1+1;
per_frame_29=q1=bnot(t1%400);   decay=(t1>1);
per_frame_30=
per_frame_31=t=t+.001/fps;  
per_frame_32=s1=500*sin(t);     s2=20+10*sin(.5*t);   
per_frame_33=i=0;
per_frame_34=
per_frame_35=loop(1024,
per_frame_36=
per_frame_37=p1=.5*p1+s2*sin(s1*i);     p2= p1-p2;
per_frame_38=
per_frame_39=x1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);
per_frame_40=
per_frame_41=gmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;
per_frame_42=
per_frame_43=i=i+1;);
per_frame_44=
per_frame_45=
per_frame_46=zoom=1+(bass+treb+mid)*.0001;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy*q27
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*q29
warp_11=`                     );
warp_12=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_13=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_14=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_15=`    //ret = lerp(GetBlur1(uv)*1,ret,ret);
warp_16=`    // darken (decay) over time
warp_17=`    if (ret.x+ret.y+ret.z < (0+((mid+bass+treb)/3)*.3)){
warp_18=`       ret.x = ret.x+.6;
warp_19=`       ret.y = ret.y+.6;
warp_20=`       ret.z = ret.z+.6;
warp_21=`       }else{
warp_22=`       ret = (ret - .005)*0.99; //or try: ret -= 0.004;
warp_23=`    }
warp_24=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`ret = lerp(GetPixel(uv),1-GetPixel(uv)*1.5,stars);
comp_89=`}
comp_90=`
comp_91=`

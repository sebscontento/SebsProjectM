MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=0.282
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.137
fWarpScale=13.125
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.99213
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.22480
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=r = bass;
wave_0_per_frame2=g = treb;
wave_0_per_frame3=b = .5;
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.27430
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=r = bass;
wave_1_per_frame2=g = treb;
wave_1_per_frame3=b = .5;
wave_1_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_1_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0004*cos(ma));
wave_1_per_point5=my=my+(.0004*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.3));
wave_1_per_point16=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.02310
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=t2 = 0;
wave_2_init2=t3 = 0;
wave_2_init3=t4 = 0;
wave_2_init4=cl = 0;
wave_2_per_frame1=vol = bass*8 + mid*5 + treb*3;
wave_2_per_frame2=m = m*0.97 + vol*0.08;
wave_2_per_frame3=monitor = vol;
wave_2_per_frame4=beat = above(vol,res)*above(vol,m)*above(vol,16);
wave_2_per_frame5=diff = (1-beat)*diff + beat*(vol-res);
wave_2_per_frame6=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
wave_2_per_frame7=res = max(0,res);
wave_2_per_frame8=
wave_2_per_frame9=//a = beat;
wave_2_per_point1=tt3 = tt3*0.6 + (value1)*1;
wave_2_per_point2=tt2 = tt2*0.7 + tt3*0.2;
wave_2_per_point3=tt1 = tt1*0.8 + tt2*0.1;
wave_2_per_point4=d = d*0.9 + tt1*0.2;
wave_2_per_point5=
wave_2_per_point6=y = 0.5 + d*sample*(1-sample)*2;
wave_2_per_point7=x =  -0.05 + sample*1.1;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16446
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=a = if(above(bass,2.5),1,0);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=// elastic thread code
per_frame_2=
per_frame_3=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_4=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_5=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_6=x1 = 0.5 + (xx1-xx2)*2;
per_frame_7=y1 = 0.4 + yy1*1.5;
per_frame_8=dt = 0.03/fps;
per_frame_9=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_10=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_11=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_12=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_13=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_14=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_15=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_16=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_17=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_18=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_19=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_20=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_21=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_22=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_23=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_24=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_25=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_26=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_27=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_28=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_29=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_30=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_31=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_32=q9 = 1/aspectx;
per_frame_33=q10 = 1/aspecty;
per_frame_34=q11 = aspectx;
per_frame_35=q12 = aspecty;
per_frame_36=q13 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_37=q14 = atan2(vx4,vy4);
per_frame_38=q15 = sin(q14);
per_frame_39=q16 = cos(q14);
per_frame_40=
per_frame_41=// Flexis dampened sound response functions
per_frame_42=
per_frame_43=db = db*0.98 + bass*0.2; // dampener
per_frame_44=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_45=
per_frame_46=ddt = ddt*0.98 + treb*0.2;
per_frame_47=tt = tt + ddt*0.1;
per_frame_48=
per_frame_49=dm = dm*0.98 + mid*0.2;
per_frame_50=mm = mm + dm*0.1;
per_frame_51=
per_frame_52=
per_frame_53=//***** [q21-q28] variables for Flexis caleidoscope shader code *****
per_frame_54=
per_frame_55=// change
per_frame_56=q23 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_57=q24 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_58=w = (bb-tt)*0.1;                   // angle
per_frame_59=q26 = 0.25 - (db-ddt)*0.025;        // size
per_frame_60=
per_frame_61=//don't change
per_frame_62=q21 = sin(w);
per_frame_63=q22 = cos(w);
per_frame_64=q27 = sin(-w);
per_frame_65=q28 = cos(-w);
per_frame_66=q25 = 1/q26;
warp_1=`float2 complex_div(float2 numerator, float2 denominator){
warp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_5=`}
warp_6=`
warp_7=`float2 uv_polar(float2 domain, float2 center){
warp_8=`   float2 c = domain - center;
warp_9=`   float rad_hq = length(c);
warp_10=`   float ang_hq = atan2(c.x,c.y);
warp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
warp_12=`}
warp_13=`
warp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_15=`   float2 polar = uv_polar(domain, center);
warp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
warp_17=`}
warp_18=`
warp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_21=`}
warp_22=`
warp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
warp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
warp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
warp_26=`}
warp_27=`
warp_28=`
warp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
warp_30=`   float2 uv_r = (domain-center);
warp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
warp_32=`}
warp_33=`
warp_34=`float3 maxNeumann(float2 domain){
warp_35=`   float3 maxneumann = float3(0,0,0);
warp_36=`   float2 pixel = texsize.zw;
warp_37=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2(-1, 0) ));
warp_38=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0,-1) ));
warp_39=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 0) ));
warp_40=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 1) ));
warp_41=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 1, 0) ));
warp_42=`   return maxneumann;
warp_43=`}
warp_44=`
warp_45=`shader_body
warp_46=`{
warp_47=`   float3 noise = (tex2D(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).y-0.5);
warp_48=`   float2 uvo = uv;
warp_49=`
warp_50=`   uv = uv_orig;
warp_51=`
warp_52=`   float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q7, -q6, 2) + noise.xy*texsize.zw*4;
warp_53=`   float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q9*0.5,q8*0.5));
warp_54=`   float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
warp_55=`
warp_56=`   ret.x = GetBlur1(mirror_uv).x*0.97-0.02;
warp_57=`
warp_58=`
warp_59=`   ret.z = GetPixel(0.5+(uv-0.5)*0.985 + noise.xy*texsize.zw*0.5).z*0.85 - 0.004;
warp_60=`
warp_61=`   float2 d = texsize.zw*4;
warp_62=`   float dx = (2*GetBlur1(uv+d*float2(1,0))-2*GetBlur1(uv+d*float2(-1,0)) ).y*0.5;
warp_63=`   float dy = (2*GetBlur1(uv+d*float2(0,1))-2*GetBlur1(uv+d*float2(0,-1)) ).y*0.5;
warp_64=`
warp_65=`   d = float2(dx,dy)*texsize.zw;
warp_66=`
warp_67=`   ret.y = maxNeumann(uv-d*2.5).y + (GetPixel(uv+d*4).y - GetBlur1(uv + d*4).y)*0.206 - 0.09;
warp_68=`
warp_69=`   ret.y += GetBlur1(mirror_uv).z*0.25;
warp_70=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw;
comp_4=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_6=`float2 dz = float2(dx.y,dy.y)*3;
comp_7=`
comp_8=`d = texsize.zw*2;
comp_9=`dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_10=`dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_11=`
comp_12=`dz +=float2(dx.y,dy.y);
comp_13=`
comp_14=`float3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;
comp_15=`
comp_16=`ret = bg*float3(0.25,0.75,0.2);
comp_17=`ret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);
comp_18=`ret = lerp(ret,float3(1,0.9,0.7),GetPixel(uv).z);
comp_19=`
comp_20=`//ret = GetPixel(uv);
comp_21=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=0.987
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=4.100
fWaveScale=15.473
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=30.048
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=1.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//Variables controling the glitch effect////////////////////////////////////////
per_frame_2=decayrate = 0.9;   //How fast the glitch effect decays back to original image
per_frame_3=trebresp = 2;    //Level of treb needed for effect to take place
per_frame_4=////////////////////////////////////////////////////////////////////////////////
per_frame_5=
per_frame_6=
per_frame_7=cdecay = pow(decayrate, 30/fps);
per_frame_8=count = above(treb, trebresp)*1 + (1-above(treb, 3))*count;
per_frame_9=count = count - above(count, cdecay)*cdecay;
per_frame_10=q20=count;
per_frame_11=
per_frame_12=
per_frame_13=vol_now =  .4 * bass + 0.1 * (bass_att + treb + mid);
per_frame_14=vol_mean =  if(equal(frame%50,0),vol_mean - 0.5 * (vol_mean-vol_now),0.1 * (vol_mean * 9 + vol_now));
per_frame_15=beat = if(above(vol_now,1.15 * vol_mean),1,0);
per_frame_16=sinbeat =sin(beat * (vol_now-vol_mean));
per_frame_17=slowtime = slowtime+beat*time;
per_frame_18=q4=slowtime;
per_frame_19=wave_b = cos(slowtime)  + abs(cos(slowtime));
per_frame_20=wave_g = abs(sin(slowtime)) ;
per_frame_21=wave_r = (-1 * cos(slowtime))  + abs(-1 * cos(slowtime)) + 0.2 * (cos(sin(slowtime))+(abs(cos(sin(slowtime)))+cos(sin(slowtime))));
per_frame_22=wave_r = 1 - if(above(wave_r,1),1,if(above(wave_r,0), abs(wave_r),0));
per_frame_23=wave_g = 1 - if(above(wave_g,1),1,if(above(wave_g,0), abs(wave_g),0));
per_frame_24=wave_b = 1 - if(above(wave_b,1),1,if(above(wave_b,0), abs(wave_b),0));
per_frame_25=ez=sin(wave_g)*cos(wave_R-wave_b)+.3*Sin(if(below(ez,.7),ez,ez+.2));
per_frame_26=echo_zoom=ez;
per_frame_27=q1 = 1+vol_now;
per_frame_28=q2 = 1+sinbeat;
per_frame_29=q3 = 1+sin(slowtime);
per_frame_30=
per_frame_31=
per_frame_32=mv_b = cos(slowtime)  + abs(cos(slowtime));
per_frame_33=mv_g = abs(sin(slowtime)) ;
per_frame_34=mv_r = (-1 * cos(slowtime))  + abs(-1 * cos(slowtime)) + 0.2 * (cos(sin(slowtime))+(abs(cos(sin(slowtime)))+cos(sin(slowtime))));
per_frame_35=mv_r = 1 - if(above(mv_r,1),1,if(above(mv_r,0), abs(mv_r),0));
per_frame_36=mv_g = 1 - if(above(mv_g,1),1,if(above(mv_g,0), abs(mv_g),0));
per_frame_37=mv_b = 1 - if(above(mv_b,1),1,if(above(mv_b,0), abs(mv_b),0));
per_frame_38=mv_a = sin(q20);
per_frame_39=
per_frame_40=
per_frame_41=
per_frame_42=
per_frame_43=
per_frame_44=
per_frame_45=
per_frame_46=warp = 0;
per_frame_47=zoom = 1;
per_frame_48=q1 = aspectx;
per_frame_49=q2 = aspecty;
per_frame_50=
per_frame_51=// Geiss' custom beat detection code: (fps-independent; quiet songs don't freak out)
per_frame_52=decay_rate = pow(0.993, fps);  // lower # = more hasty to declare a beat
per_frame_53=min_att    = 2.5;               // lower # = quieter songs can declare beats
per_frame_54=decay_to   = 1.0;               // lower # = more hasty to declare a beat
per_frame_55=beat =           bass/max(min_att,bass_att);
per_frame_56=beat = max(beat, mid /max(min_att,mid_att ));
per_frame_57=beat = max(beat, treb/max(min_att,treb_att));
per_frame_58=beat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );
per_frame_59=beat_level     = (beat - prev_beat - 0.0)*24;
per_frame_60=is_beat = above(beat_level, 0.5);
per_frame_61=prev_beat = beat;
per_frame_62=
per_frame_63=// Flexis separation and limitation code
per_frame_64=
per_frame_65=max_bpm = 145; 
per_frame_66=sync = 1; // 1 - enable; 0 - disable
per_frame_67=
per_frame_68=mx = max(bass_att,max(treb_att,mid_att));
per_frame_69=mn = min(bass_att,min(treb_att,mid_att));
per_frame_70=isbass = equal((bass_att-mn)/(mx-mn),1);
per_frame_71=ismid = equal((mid_att-mn)/(mx-mn),1);
per_frame_72=istreb = equal((treb_att-mn)/(mx-mn),1);
per_frame_73=
per_frame_74=res = max(0, min(1,max(res,is_beat*below(res,0))));
per_frame_75=bassres = max(0, min(if(sync,res,1),max(bassres,isbass*is_beat*below(bassres,0))));
per_frame_76=midres = max(0, min(if(sync,res,1),max(midres,ismid*is_beat*below(midres,0))));
per_frame_77=trebres = max(0, min(if(sync,res,1),max(trebres,istreb*is_beat*below(trebres,0))));
per_frame_78=
per_frame_79=q8 = equal(bassres,1)*isbass;
per_frame_80=q7 = equal(midres,1)*ismid;
per_frame_81=q6 = equal(trebres,1)*istreb;
per_frame_82=q3 = equal(res,1);
per_frame_83=
per_frame_84=res = res - max_bpm/(60*fps);
per_frame_85=bassres = bassres - max_bpm/(60*fps);
per_frame_86=midres = midres - max_bpm/(60*fps);
per_frame_87=trebres = trebres - max_bpm/(60*fps);
per_frame_88=
per_frame_89=
per_frame_90=//wave_mode = if(above(q8,0),4,6);
per_frame_91=//wave_mode = if(above(q7,0),4,6);
per_frame_92=//wave_mode = if(above(q6,0),4,6);
per_frame_93=monitor =  q8;
per_frame_94=wave_r = 0.5 + 0.5*sin(frame*2.5);
per_frame_95=wave_b = 0.5 + 0.5*sin(frame*0.5 + 2.094);
per_frame_96=wave_g = 0.5 + 0.5*sin(frame*0.5 + 1.188);
per_frame_97=//wave_a = wave_a + (mid_att+bass_att);
per_frame_98=//wave_mode = if(above(treb_att,1),6,0);
per_frame_99=
per_frame_100=//dy = 0 + (sin(time));
per_frame_101=//sy = 0 + (sin(time));
per_frame_102=mv_l = sin(q20)*0+8;
per_frame_103=mv_a = 0.2;
per_frame_104=wave_a = 0;
per_frame_105=monitor = q20;
per_pixel_1=zoom=zoom+.01*Sin(Rad*3.14-q20)+.03*sin(q20);
per_pixel_2=rot=rot-.01*sin(rad*3.14)+.02*sin(Above(q20,q20));
per_pixel_3=effect=above(pow(rad-.03*cos(ang*3.14-rad),ang-.03*sin(ang-rad*3.14)),x&y-.03*Sin(x-3.14*ang-rad*ang*x+.1+.2+.3*Sin(q20))*sin(q20));
per_pixel_4=pick=if(Above(q20,q20),rad,ang);
per_pixel_5=zoom=zoom+.05*sin(Rad*3.14-effect*sin(q20*3.14));
per_pixel_6=dx=dx+.05*Sin(rad*5)*sin(q20*.54-q3);
per_pixel_7=
per_pixel_8=//zoom = zoom + (treb_att * .15);
per_pixel_9=zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));
per_pixel_10=sx=sx-(zoom-1)*(treb_att * 0.1);
per_pixel_11=sy=sy-(zoom-1)*(mid_att * 0.1);
per_pixel_12=mv_l = 0 + (mid_att + treb_att);
per_pixel_13=zoom = zoom + q16+q17+q18;
warp_1=`float2 complex_mul(float2 factorA, float2 factorB){
warp_2=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_3=`}
warp_4=`
warp_5=`float2 complex_pow(float2 base, int exponent){
warp_6=`   float2 exponentiation = float2(1,0);
warp_7=`   for(int i = 0; i<exponent; i++){
warp_8=`      exponentiation = complex_mul(base,exponentiation);
warp_9=`   }
warp_10=`   return exponentiation;
warp_11=`}
warp_12=`
warp_13=`float2 uv_scale(float2 domain, float2 center, float2 scale){
warp_14=`   return center + (domain-center)*scale;
warp_15=`}
warp_16=`float figure_ring(float2 domain, float2 center, float radius, float thickness){
warp_17=`   return saturate(1 - abs(length(domain-center)-radius)/thickness);
warp_18=`}
warp_19=`
warp_20=`float3 palette_rings(float2 domain){
warp_21=`   float2 help_uv = domain;
warp_22=`   return   figure_ring(help_uv,float2(-0.45,0.5),0.896,0.016)*float3(1.3,0.8,0.1)
warp_23=`          + figure_ring(help_uv,float2(-0.45,0.5),0.8802,0.0011)*float3(0,0,1)
warp_24=`          + figure_ring(help_uv,float2(-0.45,0.5),0.87,0.012)*float3(1,0,0.5)
warp_25=`          + figure_ring(help_uv,float2(-0.45,0.5),0.82,0.05)*float3(0.5,1,0)
warp_26=`          + figure_ring(help_uv,float2(-0.45,0.5),0.75,0.04);
warp_27=`
warp_28=`}
warp_29=`
warp_30=`shader_body
warp_31=`{
warp_32=`float2 base_uv = 1-lerp(uv_orig, uv, 2).yx;
warp_33=`   float2 help_uv = base_uv;
warp_34=`   help_uv = uv_scale(help_uv, 0.5,float2(0.6,0.5)) + float2(0.62,0.025);
warp_35=`   help_uv = 0.5 + complex_pow(help_uv-0.5,5);
warp_36=`   help_uv = uv_scale(help_uv-float2(0.1,0), 0.5, 4);
warp_37=`   help_uv = uv_scale(help_uv, 0.5, 1);
warp_38=`   help_uv = 0.5 + complex_pow(help_uv-0.61,3);
warp_39=`   help_uv = uv_scale(help_uv-float2(0.15,0), 0.5, 4);
warp_40=`   help_uv = 0.5 + complex_pow(help_uv-0.48,9);
warp_41=`   help_uv = uv_scale(help_uv, 0.5, 10);
warp_42=`
warp_43=`ret = palette_rings(help_uv);
warp_44=`
warp_45=`ret = lerp(GetPixel(uv_orig),ret,0.4)-0.004;
warp_46=`}
comp_1=`shader_body
comp_2=`{
comp_3=`ret = pow(abs(GetBlur3(uv)-GetPixel(uv))*3+0.1,1.5);
comp_4=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=0.000
fGammaAdj=1.980
fDecay=1.000
fVideoEchoZoom=1.006
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=0.107
fZoomExponent=4.10046
fShader=0.320
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.400
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=44.800
nMotionVectorsY=24.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.2;
wave_0_per_point6=v = sample*100000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_0_per_point14=
wave_0_per_point15=x = x;
wave_0_per_point16=y = y;
wave_0_per_point17=y = y;
wave_0_per_point18=
wave_0_per_point19=//r = 0.5 + 0.5*sin(time*1.22) + 0.1;
wave_0_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_0_per_point21=//b = 0.4 + 0.4*sin(time*1.959);
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 = 0;
wave_1_per_point5=speed = bass_att*0.2;
wave_1_per_point6=v = sample*100000 + value2*bass*0.1;
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_1_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);
wave_1_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);
wave_1_per_point14=
wave_1_per_point15=x = x;
wave_1_per_point16=y = y;
wave_1_per_point17=y = y;
wave_1_per_point18=
wave_1_per_point19=//r = 0.5 + 0.5*sin(time*1.4) + 0.1;
wave_1_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_1_per_point21=//b = 0.4 + 0.4*sin(time*1.259);
wave_1_per_point22=
wave_1_per_point23=
wave_1_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 = 0;
wave_2_per_point5=speed = bass_att*0.2;
wave_2_per_point6=v = sample*100000 + value2*bass*0.1;
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_2_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_2_per_point11=
wave_2_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);
wave_2_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);
wave_2_per_point14=
wave_2_per_point15=x = x;
wave_2_per_point16=y = y;
wave_2_per_point17=y = y;
wave_2_per_point18=
wave_2_per_point19=//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;
wave_2_per_point20=g = 1;//0.4 + 0.4*sin(time*1.807) + x;
wave_2_per_point21=//b = 0.4 + 0.4*sin(time*1.359);
wave_2_per_point22=
wave_2_per_point23=
wave_2_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=speed = bass*0.1;
wave_3_per_point2=v = sample*10000 + value2*bass*0.1;
wave_3_per_point3=
wave_3_per_point4=//state 0 elipse
wave_3_per_point5=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_3_per_point6=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_3_per_point7=
wave_3_per_point8=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_3_per_point9=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_3_per_point10=
wave_3_per_point11=y = y - sample*0.1;
wave_3_per_point12=
wave_3_per_point13=x = x*0.6 + 0.2;
wave_3_per_point14=y = y + bass*0.1;
wave_3_per_point15=y = y*0.8;
wave_3_per_point16=
wave_3_per_point17=r = 0.5 + 0.5*sin(time*6.22) + 0.1;
wave_3_per_point18=g = 0.4 + 0.4*sin(time*5.307);
wave_3_per_point19=b = 0.4 + 0.4*sin(time*4.959)*x;
wave_3_per_point20=
wave_3_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_3_per_point22=ys = if(above(ys,1000),0 ,ys);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66710
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27425
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.400
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.100
shape_0_per_frame1=tex_capture  = q1;
shape_0_per_frame2=
shape_0_per_frame3=saw = saw - 0.001*bass;
shape_0_per_frame4=saw = if(below(saw,0.2),0.6,saw);
shape_0_per_frame5=
shape_0_per_frame6=tex_zoom = saw;
shape_0_per_frame7=
shape_0_per_frame8=
shape_0_per_frame9=
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=2.66710
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27425
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.100
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.400
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.100
shape_1_per_frame1=tex_capture  = q1;
shape_1_per_frame2=
shape_1_per_frame3=saw = saw - 0.001*bass;
shape_1_per_frame4=saw = if(below(saw,0.1),0.6,saw);
shape_1_per_frame5=
shape_1_per_frame6=tex_zoom = saw;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=2.66718
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.36964
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.100
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.400
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=2.66718
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.30294
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.100
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.400
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1= //begin beat code
per_frame_2= volume = 0.3*(bass+mid);
per_frame_3= beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_4= lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_5= meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_6= peakbass_att = max(bass_att,peakbass_att);
per_frame_7= beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_8= beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_9= //Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_10=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_11=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_12=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_13=//end beat code
per_frame_14=
per_frame_15=zoom = 1;
per_frame_16=decay = 1;
per_frame_17=warp = 0;
per_frame_18=wave_a = 0;
per_frame_19=
per_frame_20=tic = min(time-tin,.1);
per_frame_21=tin = time;
per_frame_22=
per_frame_23=q2 = 1;
per_frame_24=
per_frame_25=q1=1;
per_frame_26=vol = vol + ((alt + bass + mid)/3-vol)*tic*1;
per_frame_27=q5 = vol*vol*vol*2;
per_frame_28=
per_frame_29=
per_frame_30=q8 = sin(time)*.5;
per_frame_31=q9 = sin(time*.75)*.5;
per_frame_32=
per_frame_33=sw = abs(sw - beat);
per_frame_34=an = an + tic*.5*(1-2*sw);
per_frame_35=
per_frame_36=
per_frame_37=q7 = 1+(pow(q8,2) + pow(q9,2))*1;
per_frame_38=q10 = sin(an);
per_frame_39=q11 = cos(an);
per_frame_40=
per_frame_41=sp = sp + tic*vol*vol*.5;
per_frame_42=
per_frame_43=q12 = sp;
per_frame_44=
per_frame_45=monitor = q12;
per_pixel_1=//zoom = pow(rad,2)+.01;
warp_1=`sampler sampler_rand02;
warp_2=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_3=`shader_body
warp_4=`{
warp_5=`    // sample previous frame
warp_6=`    float3 main = tex2D( sampler_main, uv ).xyz;
warp_7=`    float3 mblur = GetBlur1( uv );
warp_8=`    main = ( min(mblur,main) )*5;
warp_9=`    float zoom = 1;
warp_10=`    float rot = 0;
warp_11=`    float2 zcr = float2(.5,.5);
warp_12=`    float2 cr = float2(.5,.5);
warp_13=`    float2 newuv = uv;
warp_14=`
warp_15=`    ///////////////////rotation////////////////
warp_16=`    newuv = uv - cr;
warp_17=`    float s = sin(rot);
warp_18=`    float c = cos(rot);
warp_19=`    newuv = float2( (uv.x-cr.x)*c-(uv.y-cr.y)*s , (uv.x-cr.x)*s+(uv.y-cr.y)*c  );
warp_20=`    newuv = newuv + cr;
warp_21=`    ///////////////////rotation////////////////
warp_22=`
warp_23=`    ///////////////////zoom////////////////
warp_24=`    newuv = newuv-zcr;
warp_25=`    newuv = newuv * zoom;
warp_26=`    newuv= newuv+zcr;
warp_27=`    ///////////////////zoom////////////////
warp_28=`
warp_29=`
warp_30=`    float3 colorwarp = tex2D( sampler_main, newuv ).xyz *1.02;
warp_31=`
warp_32=`    float3 color = tex2D(sampler_rand02, newuv ).xyz;
warp_33=`    ret = ( (  ((colorwarp*4-normalize(main))*1.1+(color)*2)*.23 ) );
warp_34=`//    ret= main;
warp_35=`    // darken (decay) over time
warp_36=`    ret *= 0.96; //or try: ret -= 0.004;
warp_37=`}
comp_1=`sampler sampler_rand03;
comp_2=`float4  texsize_rand03;    // ...it's smart enough to get it from just this.
comp_3=`shader_body
comp_4=`{
comp_5=`    // sample previous frame
comp_6=`    float3 main = tex2D( sampler_main, uv ).xyz;
comp_7=`    float zoom = 1+( (uv.x-uv.y)*5 );
comp_8=`    float rot = sin(q5+rad)*3;
comp_9=`    float2 zcr = float2(.5,.5);
comp_10=`    float n = q15;//40;
comp_11=`    float2 cr = .5;
comp_12=`
comp_13=`//    float3 moz = tex2D( sampler_main, cr ).xyz;
comp_14=`    float2 newuv = uv;
comp_15=`
comp_16=`    ///////////////////rotation////////////////
comp_17=`    newuv = uv - cr;
comp_18=`    float s = sin(rot);
comp_19=`    float c = cos(rot);
comp_20=`    newuv = float2( (uv.x-cr.x)*c-(uv.y-cr.y)*s , (uv.x-cr.x)*s+(uv.y-cr.y)*c  );
comp_21=`    newuv = newuv + cr;
comp_22=`    ///////////////////rotation////////////////
comp_23=`
comp_24=`    ///////////////////zoom////////////////
comp_25=`    newuv = newuv-zcr;
comp_26=`    newuv = newuv * zoom;
comp_27=`    newuv= newuv+zcr;
comp_28=`    ///////////////////zoom////////////////
comp_29=`
comp_30=`
comp_31=`//    float3 colorwarp = tex2D( sampler_main, newuv ).xyz *1.02;
comp_32=`
comp_33=`    float3 color = tex2D( sampler_rand03, newuv ).xyz;
comp_34=`    float mask = main.x*main.y*main.z == 1;
comp_35=`    float2 cm = ((uv*n-frac(uv*n))%n)/n + .5/n;//float2(((uv.x*10)%10)/10,((uv.y*10)%10)/10);
comp_36=`    float3 moz = GetBlur1( cm )*(1-mask);
comp_37=`
comp_38=`//ret = moz;    
comp_39=`ret = ( color*mask + (1-mask)*lerp(  moz , main , q7 ) );
comp_40=`    // darken (decay) over time
comp_41=`    ret *= 0.98; //or try: ret -= 0.004;
comp_42=`}

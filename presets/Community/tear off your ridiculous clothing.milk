MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000000
fGammaAdj=1.000
fDecay=0.930
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.037
fWarpScale=0.015
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.03300
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=1.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t3 = q7;
wave_0_per_frame2=
wave_0_per_frame3=t1 = .5;
wave_0_per_frame4=t2 = .5;
wave_0_per_frame5=
wave_0_per_frame6=//r = .5 + .5*sin(q2);
wave_0_per_frame7=//g = .5 + .5*sin(q2 + 2.0944);
wave_0_per_frame8=//b = .5 + .5*sin(q2 + 4.1888);
wave_0_per_point1=sp = sample*6.2832;
wave_0_per_point2=ti = time*20;
wave_0_per_point3=raa = sin(ti*12.87 - sp*15.87)*2.5 - cos(ti*7.98 + sp*9.5)*6 + sin(ti*8.9 + sp*48)*7.4;
wave_0_per_point4=raa = abs(raa - int(raa));
wave_0_per_point5=rab = sin(ti*6.74 - sp*18.52)*5.7 + cos(ti*3.94 + sp*27.55)*1.7 + sin(ti*14.8 + sp*3.5)*4;
wave_0_per_point6=rab = abs(rab - int(rab));
wave_0_per_point7=
wave_0_per_point8=cou = 30;
wave_0_per_point9=
wave_0_per_point10=seg = seg*above(sample,0);
wave_0_per_point11=it = (it + 1)*above(sample,0);
wave_0_per_point12=seg = seg + equal(ita,0);
wave_0_per_point13=ita = (ita + 1)*above(sample,0)*below(ita,cou);
wave_0_per_point14=cop = equal(ita,cou);
wave_0_per_point15=
wave_0_per_point16=toll = toll*above(sample,0);
wave_0_per_point17=toll = toll + value1 + value2;
wave_0_per_point18=tav = toll/cou*.1;
wave_0_per_point19=mod = raa*bass*.5 - rab*(mid+treb)*.125;
wave_0_per_point20=mod = if(q1,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_0_per_point21=
wave_0_per_point22=toll = toll*(1-cop);
wave_0_per_point23=//toll = 15;
wave_0_per_point24=
wave_0_per_point25=
wave_0_per_point26=la = if((1-t3)*cop*equal(seg,1),tav,la);
wave_0_per_point27=lb = if((1-t3)*cop*equal(seg,2),tav,lb);
wave_0_per_point28=lc = if((1-t3)*cop*equal(seg,3),tav,lc);
wave_0_per_point29=ld = if((1-t3)*cop*equal(seg,4),tav,ld);
wave_0_per_point30=le = if((1-t3)*cop*equal(seg,5),tav,le);
wave_0_per_point31=lf = if((1-t3)*cop*equal(seg,6),tav,lf);
wave_0_per_point32=lg = if((1-t3)*cop*equal(seg,7),tav,lg);
wave_0_per_point33=li = if((1-t3)*cop*equal(seg,8),tav,li);
wave_0_per_point34=lj = if((1-t3)*cop*equal(seg,9),tav,lj);
wave_0_per_point35=lk = if((1-t3)*cop*equal(seg,10),tav,lk);
wave_0_per_point36=
wave_0_per_point37=aa = if((1-t3)*cop*equal(seg,1),mod,aa);
wave_0_per_point38=ab = if((1-t3)*cop*equal(seg,2),mod,ab);
wave_0_per_point39=ac = if((1-t3)*cop*equal(seg,3),mod,ac);
wave_0_per_point40=ad = if((1-t3)*cop*equal(seg,4),mod,ad);
wave_0_per_point41=ae = if((1-t3)*cop*equal(seg,5),mod,ae);
wave_0_per_point42=af = if((1-t3)*cop*equal(seg,6),mod,af);
wave_0_per_point43=ag = if((1-t3)*cop*equal(seg,7),mod,ag);
wave_0_per_point44=ai = if((1-t3)*cop*equal(seg,8),mod,ai);
wave_0_per_point45=aj = if((1-t3)*cop*equal(seg,9),mod,aj);
wave_0_per_point46=ak = if((1-t3)*cop*equal(seg,10),mod,ak)*0;
wave_0_per_point47=
wave_0_per_point48=
wave_0_per_point49=lev = lev*above(sample,0); ud = ud*above(sample,0); rep = rep*above(sample,0); lev = if(ud,lev-1,lev+1); rep = (rep + equal(lev,0)); ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_0_per_point50=
wave_0_per_point51=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_0_per_point52=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_0_per_point53=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_0_per_point54=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_0_per_point55=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_0_per_point56=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_0_per_point57=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_0_per_point58=
wave_0_per_point59=my = min(my,.25);
wave_0_per_point60=
wave_0_per_point61=// add branches via rotation
wave_0_per_point62=poi = q3;
wave_0_per_point63=modx = if(equal(lev,poi)*ud,mx,modx);
wave_0_per_point64=mody = if(equal(lev,poi)*ud,my,mody);
wave_0_per_point65=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_0_per_point66=modx = 0;
wave_0_per_point67=mx = mx - modx;
wave_0_per_point68=my = my - mody;
wave_0_per_point69=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point70=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point71=mx = ox + modx;
wave_0_per_point72=my = oy + mody;
wave_0_per_point73=
wave_0_per_point74=
wave_0_per_point75=mang = above(rep,1)*rep*1.0472;
wave_0_per_point76=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point77=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point78=mx = ox;
wave_0_per_point79=my = oy;
wave_0_per_point80=
wave_0_per_point81=
wave_0_per_point82=sz = .5;
wave_0_per_point83=x = mx*.75*sz + t1;
wave_0_per_point84=y = my*sz + t2;
wave_0_per_point85=
wave_0_per_point86=
wave_0_per_point87=
wave_0_per_point88=a = t3; // drawn every 2nd frame, gets values in other one
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t3 = q7;
wave_1_per_frame2=
wave_1_per_frame3=t1 = .5;
wave_1_per_frame4=t2 = .5;
wave_1_per_point1=sp = sample*6.2832;
wave_1_per_point2=ti = time*20;
wave_1_per_point3=raa = sin(ti*12.87 - sp*15.87)*2.5 - cos(ti*7.98 + sp*9.5)*6 + sin(ti*8.9 + sp*48)*7.4;
wave_1_per_point4=raa = abs(raa - int(raa));
wave_1_per_point5=rab = sin(ti*6.74 - sp*18.52)*5.7 + cos(ti*3.94 + sp*27.55)*1.7 + sin(ti*14.8 + sp*3.5)*4;
wave_1_per_point6=rab = abs(rab - int(rab));
wave_1_per_point7=
wave_1_per_point8=cou = 30;
wave_1_per_point9=
wave_1_per_point10=seg = seg*above(sample,0);
wave_1_per_point11=it = (it + 1)*above(sample,0);
wave_1_per_point12=seg = seg + equal(ita,0);
wave_1_per_point13=ita = (ita + 1)*above(sample,0)*below(ita,cou);
wave_1_per_point14=cop = equal(ita,cou);
wave_1_per_point15=
wave_1_per_point16=toll = toll*above(sample,0);
wave_1_per_point17=toll = toll + value1 + value2;
wave_1_per_point18=tav = toll/cou*.1;
wave_1_per_point19=mod = raa*bass*.5 - rab*(mid+treb)*.125;
wave_1_per_point20=mod = if(q1,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_1_per_point21=
wave_1_per_point22=toll = toll*(1-cop);
wave_1_per_point23=//toll = 15;
wave_1_per_point24=
wave_1_per_point25=
wave_1_per_point26=la = if((1-t3)*cop*equal(seg,1),tav,la);
wave_1_per_point27=lb = if((1-t3)*cop*equal(seg,2),tav,lb);
wave_1_per_point28=lc = if((1-t3)*cop*equal(seg,3),tav,lc);
wave_1_per_point29=ld = if((1-t3)*cop*equal(seg,4),tav,ld);
wave_1_per_point30=le = if((1-t3)*cop*equal(seg,5),tav,le);
wave_1_per_point31=lf = if((1-t3)*cop*equal(seg,6),tav,lf);
wave_1_per_point32=lg = if((1-t3)*cop*equal(seg,7),tav,lg);
wave_1_per_point33=li = if((1-t3)*cop*equal(seg,8),tav,li);
wave_1_per_point34=lj = if((1-t3)*cop*equal(seg,9),tav,lj);
wave_1_per_point35=lk = if((1-t3)*cop*equal(seg,10),tav,lk);
wave_1_per_point36=
wave_1_per_point37=aa = if((1-t3)*cop*equal(seg,1),mod,aa);
wave_1_per_point38=ab = if((1-t3)*cop*equal(seg,2),mod,ab);
wave_1_per_point39=ac = if((1-t3)*cop*equal(seg,3),mod,ac);
wave_1_per_point40=ad = if((1-t3)*cop*equal(seg,4),mod,ad);
wave_1_per_point41=ae = if((1-t3)*cop*equal(seg,5),mod,ae);
wave_1_per_point42=af = if((1-t3)*cop*equal(seg,6),mod,af);
wave_1_per_point43=ag = if((1-t3)*cop*equal(seg,7),mod,ag);
wave_1_per_point44=ai = if((1-t3)*cop*equal(seg,8),mod,ai);
wave_1_per_point45=aj = if((1-t3)*cop*equal(seg,9),mod,aj);
wave_1_per_point46=ak = if((1-t3)*cop*equal(seg,10),mod,ak)*0;
wave_1_per_point47=
wave_1_per_point48=
wave_1_per_point49=lev = lev*above(sample,0); ud = ud*above(sample,0); rep = rep*above(sample,0); lev = if(ud,lev-1,lev+1); rep = (rep + equal(lev,0)); ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_1_per_point50=
wave_1_per_point51=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_1_per_point52=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_1_per_point53=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_1_per_point54=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_1_per_point55=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_1_per_point56=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_1_per_point57=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_1_per_point58=
wave_1_per_point59=my = min(my,.25);
wave_1_per_point60=
wave_1_per_point61=// add branches via rotation
wave_1_per_point62=poi = q3;
wave_1_per_point63=modx = if(equal(lev,poi)*ud,mx,modx);
wave_1_per_point64=mody = if(equal(lev,poi)*ud,my,mody);
wave_1_per_point65=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_1_per_point66=modx = 0;
wave_1_per_point67=mx = mx - modx;
wave_1_per_point68=my = my - mody;
wave_1_per_point69=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point70=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point71=mx = ox + modx;
wave_1_per_point72=my = oy + mody;
wave_1_per_point73=
wave_1_per_point74=
wave_1_per_point75=mang = above(rep,1)*rep*1.0472;
wave_1_per_point76=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point77=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point78=mx = ox;
wave_1_per_point79=my = oy;
wave_1_per_point80=
wave_1_per_point81=
wave_1_per_point82=
wave_1_per_point83=sz = .5;
wave_1_per_point84=x = mx*.75*sz + t1;
wave_1_per_point85=y = my*sz + t2;
wave_1_per_point86=
wave_1_per_point87=a = t3; // drawn every 2nd frame, gets values in other one
wave_1_per_point88=
wave_1_per_point89=//r = .5 - .5*sin(q2);
wave_1_per_point90=//g = .5 - .5*sin(q2 + 2.0944);
wave_1_per_point91=//b = .5 - .5*sin(q2 + 4.1888);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=sw = 1-sw;
wave_2_per_point2=sp = sample*6.2832 - time;
wave_2_per_point3=
wave_2_per_point4=sz = sp - q1 - .7854*.5;
wave_2_per_point5=sz = .5 + .5*sin(sz*4) + value1 + value2;
wave_2_per_point6=
wave_2_per_point7=cv = sz*6.2832;
wave_2_per_point8=
wave_2_per_point9=sz = pow(sz,.5)*.05*sw;
wave_2_per_point10=
wave_2_per_point11=x = .5 + sz*sin(sp)*.75;
wave_2_per_point12=y = .5 + sz*cos(sp);
wave_2_per_point13=
wave_2_per_point14=r = .5 + .5*sin(.5*(time - cv));
wave_2_per_point15=g = .5 + .5*sin(.5*(time - cv + 2.094));
wave_2_per_point16=b = .5 + .5*sin(.5*(time - cv + 4.188));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=1.000
wavecode_3_b=0.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=50
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=1.800
shapecode_0_rad=0.66230
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.100
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=//r = .5 + .5*sin(time*1.123);
shape_0_per_frame3=//g = .5 + .5*sin(time*1.456);
shape_0_per_frame4=//b = .5 + .5*sin(time*1.789);
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=//r = .5 - .5*sin(q2);
shape_0_per_frame8=//g = .5 - .5*sin(q2 + 2.0944);
shape_0_per_frame9=//b = .5 - .5*sin(q2 + 4.1888);
shapecode_1_enabled=1
shapecode_1_sides=50
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.800
shapecode_1_rad=0.66230
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.000
shapecode_1_r2=0.400
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.200
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=tex_zoom = 1/rad;
shapecode_2_enabled=1
shapecode_2_sides=50
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=1.000
shapecode_2_y=1.000
shapecode_2_rad=0.98609
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=50
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=1.000
shapecode_3_y=0.000
shapecode_3_rad=0.98609
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0;
per_frame_init_8=warp=0
per_frame_init_9=
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=q4=(q1+q2+q3);
per_frame_15=q5=(q1+q2+q3);
per_frame_16=q6=(q1+q2+q3);
per_frame_17=q7=(q1+q2+q3);
per_frame_18=q8=(q1+q2+q3);
per_frame_19=q9=(q1+q2+q3);
per_frame_20=q10=(q1+q2+q3);
per_frame_21=q11=(q1+q2+q3);
per_frame_22=q12=(q1+q2+q3);
per_frame_23=q13=(q1+q2+q3);
per_frame_24=q14=(q1+q2+q3);
per_frame_25=q15=(q1+q2+q3);
per_frame_26=q16=(q1+q2+q3);
per_frame_27=q17=(q1+q2+q3);
per_frame_28=q18=(q1+q2+q3);
per_frame_29=q19=(q1+q2+q3);
per_frame_30=q20=(q1+q2+q3);
per_frame_31=q21=(q1+q2+q3);
per_frame_32=q22=(q1+q2+q3);
per_frame_33=q23=(q1+q2+q3);
per_frame_34=q24=(q1+q2+q3);
per_frame_35=q25=(q1+q2+q3);
per_frame_36=q26=(q1+q2+q3);
per_frame_37=q27=(q1+q2+q3);
per_frame_38=q28=(q1+q2+q3);
per_frame_39=q29=(q1+q2+q3);
per_frame_40=q30=(q1+q2+q3);
per_frame_41=q31=(q1+q2+q3);
per_frame_42=q32=(q1+q2+q3);
per_frame_43=
per_frame_44=zoom=1;
per_frame_45=//krash's beat detection code
per_frame_46=volume = 0.3*(bass+mid+att);
per_frame_47=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_48=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_49=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_50=peakbass_att = max(bass_att,peakbass_att);
per_frame_51=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_52=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);
per_frame_53=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_54=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_55=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_56=beatcounter = beatcounter + beat;
per_frame_57=mode = if(beat*equal(beatcounter%2,0),1-mode,mode);
per_frame_58=flip = 2*mode-1;
per_frame_59=monitor=flip;
per_frame_60=q8=flip;
per_frame_61=
per_frame_62=angadv=angadv+beat;
per_frame_63=angadv=if( above(angadv,5) , 2 , angadv );
per_frame_64=q7=angadv;
per_frame_65=
per_frame_66=
per_frame_67=decay=0.95;
per_frame_68=zoom=1.002;
per_frame_69=
per_frame_70=vol=(bass_att+mid_att+treb_att)*0.25;
per_frame_71=vol=vol*vol;
per_frame_72=mtime=mtime+vol*0.1*flip*(37/fps);
per_frame_73=
per_frame_74=q1=mtime*0.4;
per_frame_75=
per_frame_76=warp=0.0;
per_frame_77=
per_frame_78=cx=sin(mtime*0.2)*0.4 + 0.5;
per_frame_79=cy=sin(mtime*0.33);
per_frame_80=cys=sign(cy);
per_frame_81=cy=cy*cy*cys;
per_frame_82=cy=cy*0.4+0.5;
per_frame_83=
per_frame_84=//cx=sin(time)*0.5+0.5;
per_frame_85=//cy=cos(time)*0.5+0.5;
per_frame_86=//cx=0.5;
per_frame_87=//cy=0.5;
per_frame_88=rot=sin(time*0.25)*0.31;
per_frame_89=
per_frame_90=
per_frame_91=q23 = rand(1000)/1000;
per_frame_92=q24 = rand(1000)/1000;
per_frame_93=q25 = (rand(1000)/1000)*6.28;
per_frame_94=q26 = q25 - 3.14;
per_frame_95=q27 = (rand(1000)/8000)+0.1;
per_frame_96=
per_frame_97=q28 = rand(1000)/1000;
per_frame_98=q29 = rand(1000)/1000;
per_frame_99=q30 = (rand(1000)/1000)*6.28;
per_frame_100=q31 = q30 - 3.14;
per_frame_101=q32 = (rand(1000)/8000)+0.1;
per_pixel_1=//tm=time+(sin(time)*rad);
per_pixel_2=//var=tan(time)*treb;
per_pixel_3=tbr=0.7+treb*0.3;
per_pixel_4=var=-2*tbr*0.75;
per_pixel_5=
per_pixel_6=ag=atan( (y-0.5-(cy-0.5))/(x-0.5-(cx-0.5)) )*1.75;
per_pixel_7=star=sin(ang*q7)*tbr;
per_pixel_8=
per_pixel_9=rdd=max( abs(x-0.5) , abs(y-0.5) )*4 ;
per_pixel_10=zm=1+(rdd/40)+(var/40)+star*0.003 ;
per_pixel_11=
per_pixel_12=//sx=zm;
per_pixel_13=//sy=zm;
per_pixel_14=//sx=1+star*0.1;sy=1+star*0.1;
per_pixel_15=sx=0.8;sy=sx;
per_pixel_16=//rot=star*0.01*tbr
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`    //ret = lerp(GetBlur1(uv)*1,ret,ret);
warp_6=`    // darken (decay) over time
warp_7=`    if (ret.x+ret.y+ret.z < (0+((mid+bass+treb)/3)*.3)){
warp_8=`       ret.x = ret.x+.6;
warp_9=`       ret.y = ret.y+.6;
warp_10=`       ret.z = ret.z+.6;
warp_11=`       }else{
warp_12=`       ret = (ret - .005)*0.99; //or try: ret -= 0.004;
warp_13=`    }
warp_14=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 d = texsize.zw*4;
comp_4=`float3 dx = ( GetBlur1( uv + float2(1,0)*d) - GetBlur1( uv - float2(1,0)*d) );
comp_5=`float3 dy = ( GetBlur1( uv + float2(0,1)*d) - GetBlur1( uv - float2(0,1)*d) );
comp_6=`
comp_7=`float sin = q11;
comp_8=`float cos = q12;
comp_9=`float scale = 1;
comp_10=`
comp_11=`float2 uv6 = (uv-0.5)*aspect.xy*2.4;
comp_12=`       uv6 = scale*float2( cos*uv6.x - sin*uv6.y, sin*uv6.x + cos*uv6.y); // rotation
comp_13=`       uv6 = 0.5 + uv6*aspect.zw + float2(q13,q14);
comp_14=`
comp_15=`       uv6 = 1.0 - abs( frac( uv6 * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
comp_16=`       uv6 -= float2(dx.z,dy.z)*0.1;
comp_17=`
comp_18=`float2 uv_x = 0.5 + (uv6-0.5)*0.9;
comp_19=`float2 uv_y = uv6 - float2(q13,q14);
comp_20=`
comp_21=`d = texsize.zw*12;
comp_22=`dx = ( GetBlur1( uv_x + float2(1,0)*d) - GetBlur1( uv_x - float2(1,0)*d) );
comp_23=`dy = ( GetBlur1( uv_x + float2(0,1)*d) - GetBlur1( uv_x - float2(0,1)*d) );
comp_24=`
comp_25=`
comp_26=`ret = lerp(lerp(GetPixel(uv_x).x*float3(1,0,0),
comp_27=`                float3(-0.1,-1,-1),
comp_28=`                GetPixel(uv_y).y), 
comp_29=`           float3(1,1,0),
comp_30=`           length(float2(dx.x,dy.x)));
comp_31=`ret = lerp(ret,float3(-0.5,2,3),GetPixel(uv).z*0.4);
comp_32=`
comp_33=`//ret = GetPixel(uv_y).y;
comp_34=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.009
fWaveScale=2.136
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=1.600
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=5.996
fWarpScale=1.331
fZoomExponent=1.01000
fShader=0.000
zoom=0.99853
rot=0.00200
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.500
ib_g=0.500
ib_b=0.500
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=2.02310
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_point1=tt3 = tt3*0.6 + (value1)*1;
wave_0_per_point2=tt2 = tt2*0.7 + tt3*0.2;
wave_0_per_point3=tt1 = tt1*0.8 + tt2*0.1;
wave_0_per_point4=d = d*0.9 + tt1*0.2;
wave_0_per_point5=
wave_0_per_point6=y = 0.5 + d*sample*(1-sample);
wave_0_per_point7=x =  -0.05 + sample*1.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.86644
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.500
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=5
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.98600
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.99979
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = sin(time) * .4 + .5;
shape_2_per_frame2=
shape_2_per_frame3=
shape_2_per_frame4=pow( (bass*.15),2);
shapecode_3_enabled=0
shapecode_3_sides=36
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.81623
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.040
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 1-q1;
shape_3_per_frame2=y = q2;
shape_3_per_frame3=x = 0.5 + (x - 0.5)*0.25;
shape_3_per_frame4=y = 0.5 + (y - 0.5)*0.25;
per_frame_1=ob_r = 0.3 - 0.3*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));
per_frame_2=ob_g = 0.6- 0.4*sin(time*2.924);
per_frame_3=ob_b = 0.35 - 0.3*cos(time*0.816);
per_frame_4=warp =0;
per_frame_5=ib_r = ib_r + 0.5*sin(time*3.034);
per_frame_6=ib_g = ib_g + 0.5*sin(time*2.547);
per_frame_7=ib_b = ib_b - 0.5*sin(time*1.431);
per_frame_8=dx = dx -0.008*sin(time*0.23);
per_frame_9=dy = dy - 0.008*sin(time*0.2);
per_frame_10=
per_frame_11=volume = 0.15*(bass_att+bass+mid+mid_att);
per_frame_12=beatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));
per_frame_13=lastbeat = if(equal(lastbeat,0),time,lastbeat);
per_frame_14=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_15=peakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);
per_frame_16=beat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);
per_frame_17=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_18=peakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);
per_frame_19=lastbeat = if(beat,time,lastbeat);
per_frame_20=beatcounter = if(above(beat,0),beatcounter +1, beatcounter);
per_frame_21=beatcounter = if(above(beatcounter,7), 0, beatcounter);
per_frame_22=beateven = beatcounter%2;
per_frame_23=//dx = dx + beateven*0.01;
per_frame_24=q2 = beateven;
per_pixel_1=qx = (0&(x*10-0.5))*0.1+0.05;
per_pixel_2=qy = (0&(y*10-0.5))*0.1+0.05;
per_pixel_3=box=(1-rad)+0.5*abs(x*3-0.4*sin(q1))%2 + 0.5*abs(y*3+0.4*sin(q1))%2;
per_pixel_4=box = 3*qy+3*qx;
per_pixel_5=q1 = 8.05+(sin(x+0.137*time)-cos(y+0.213*time));
per_pixel_6=zoom = if(above(box,1.5),q1*.1,zoom);
per_pixel_7=rot = if(above(box,1.5),1*sin(0.385*time),rot);
per_pixel_8=cx= q2*(0&(x*4-0.5))*0.25+0.05;
per_pixel_9=cy= q2*(0&(y*4-0.5))*0.25+0.05;
warp_1=` float2 cmul(float2 mul1, float2 mul2) {
warp_2=`   float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);
warp_3=`   return mul;
warp_4=` }
warp_5=` float2 cdiv(float2 div1, float2 div2) {
warp_6=`   float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),
warp_7=`   (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );
warp_8=`   return div;
warp_9=` }
warp_10=` float2 cpow(float2 base, float ex) {
warp_11=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_12=`   float thetaz = atan2(base.y, base.x);
warp_13=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_14=`   return pow;
warp_15=` }
warp_16=` float2 cexp(float2 base, float2 ex) {
warp_17=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_18=`   float thetaz = atan2(base.y, base.x);
warp_19=`   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);
warp_20=`   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));
warp_21=`   return sol;
warp_22=` }
warp_23=`
warp_24=`
warp_25=` float getRad(float2 uv1) { 
warp_26=`   return sqrt( pow(0.5-uv1.x,2) + pow(0.5-uv1.y,2) );
warp_27=` }
warp_28=` float getAng(float2 uv1) {
warp_29=`   float2 uv2 = (uv1-0.5)*aspect.xy;
warp_30=`   return atan2(uv2.y,uv2.x);
warp_31=` }
warp_32=`
warp_33=`sampler sampler_rand02;
warp_34=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_35=`shader_body
warp_36=`{
warp_37=`    // sample previous frame
warp_38=`
warp_39=`
warp_40=`   float2 zoom = 2;//-rad*((q3+q4)%5);
warp_41=`   float2 c;
warp_42=`    c = float2(1+q8,1+q7)+0.9;
warp_43=`//c=float2(0.7,0.6);
warp_44=`   float2 z = (uv-0.5)*zoom;
warp_45=`   float zp = 0.3+(abs(q3-q4+(q1-q2)*2)%9+5)*0.08;
warp_46=`
warp_47=`   float2 uv2 = cpow(z,zp)%c;
warp_48=`
warp_49=`
warp_50=`   uv2 = 0.5 + (1.0 - abs( frac( uv2 * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders
warp_51=`
warp_52=`   float mrad = getRad(uv2);
warp_53=`   //float mang = getAng(uv2);
warp_54=`
warp_55=`
warp_56=`   float3 fractal = tex2D( sampler_main, uv2 ).xyz;
warp_57=`   float3 blured = GetBlur1(uv);
warp_58=`
warp_59=`   
warp_60=`   ret = fractal*1.2;
warp_61=`   ret *= mrad < 0.5;
warp_62=`   ret += (ret==0)*blured;
warp_63=`
warp_64=`   ret *= 0.9; //or try: ret -= 0.004;
warp_65=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2;
comp_4=`
comp_5=`    float4 c = float4(1,0.4,0.15,0.1);
comp_6=`
comp_7=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_8=`    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_9=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_10=`    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_11=`
comp_12=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_13=`    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_14=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_15=`    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_16=`
comp_17=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));
comp_18=`
comp_19=`    ret = 0.5 + 0.5*g;
comp_20=`    ret *= saturate(length(ret.xy-0.5)*5);
comp_21=`    ret = ret.xxy;
comp_22=`    ret += 1;
comp_23=`    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));
comp_24=`    ret *=what;
comp_25=`    ret *= hue_shader;
comp_26=`
comp_27=`    //ret *= 1.5; //old gamma effect    
comp_28=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=10.437
fWaveSmoothing=0.450
fWaveParam=0.080
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.990
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=120
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=0.89152
wavecode_0_smoothing=0.82000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.600
wave_0_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init9=
wave_0_per_frame1=t2 = t2 + bass_att;
wave_0_per_point1=k1 = (sample*100)%8;
wave_0_per_point2=k2 = bnot (k1);
wave_0_per_point3=xi = value1*k2 + xi*(1-k2);
wave_0_per_point4=yi = value2*(1-k2) + yi*k2;
wave_0_per_point5=
wave_0_per_point6=dx = dx*.99 + xi;
wave_0_per_point7=dy = dy*.99 + yi;
wave_0_per_point8=
wave_0_per_point9=x = .5 + xi/2;
wave_0_per_point10=y = .5 + yi/2;
wave_0_per_point11=
wave_0_per_point12=a = q22/8; 
wave_0_per_point13=a = min(a,.4);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wave_1_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init9=
wave_1_per_frame1=tm = time*.1;
wave_1_per_frame2=t1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);
wave_1_per_frame3=t2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);
wave_1_per_frame4=t3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);
wave_1_per_frame5=
wave_1_per_frame6=tic = min(time - tin,1);
wave_1_per_frame7=tin = time;
wave_1_per_frame8=
wave_1_per_frame9=tva = (tic*q1*.5);
wave_1_per_frame10=tvb = (tic*q2*.5);
wave_1_per_frame11=tvc = (tic*q3*.5);
wave_1_per_frame12=
wave_1_per_frame13=q1 = tva;
wave_1_per_frame14=q2 = tvb;
wave_1_per_frame15=q3 = tvc;
wave_1_per_frame16=
wave_1_per_frame17=sz = .5;
wave_1_per_frame18=len = q4;
wave_1_per_frame19=t4 = len;
wave_1_per_point1=xi = int(rand(100))/100;
wave_1_per_point2=yi = int(rand(100))/100;
wave_1_per_point3=
wave_1_per_point4=x = xi; y = yi;
wave_1_per_point5=
wave_1_per_point6=a = q21/15;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init9=
wave_2_per_frame1=tm = time*.1;
wave_2_per_frame2=t1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);
wave_2_per_frame3=t2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);
wave_2_per_frame4=t3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);
wave_2_per_frame5=
wave_2_per_frame6=tic = min(time - tin,1);
wave_2_per_frame7=tin = time;
wave_2_per_frame8=
wave_2_per_frame9=tva = (tic*q1*.5);
wave_2_per_frame10=tvb = (tic*q2*.5);
wave_2_per_frame11=tvc = (tic*q3*.5);
wave_2_per_frame12=
wave_2_per_frame13=q1 = tva;
wave_2_per_frame14=q2 = tvb;
wave_2_per_frame15=q3 = tvc;
wave_2_per_frame16=
wave_2_per_frame17=sz = .5;
wave_2_per_frame18=len = 1;
wave_2_per_frame19=t4 = len;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10853
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=0.500
shapecode_0_g=0.000
shapecode_0_b=0.900
shapecode_0_a=1.000
shapecode_0_r2=0.830
shapecode_0_g2=0.930
shapecode_0_b2=0.800
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=x = .5; y = .5;
shape_0_per_frame3=a = q22/28; 
shape_0_per_frame4=a2 = 0;
shape_0_per_frame5=//a = 1;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.400
shapecode_1_y=0.500
shapecode_1_rad=2.36696
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.45575
shapecode_1_tex_zoom=0.99305
shapecode_1_r=0.500
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=0.200
shapecode_1_r2=0.700
shapecode_1_g2=0.400
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.000
shape_1_per_frame1=a2 =0;a = 0;
shape_1_per_frame2=a = q24/2;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shape_2_per_frame1=x = .5+int(rand(10))/30;
shape_2_per_frame2=y = .5+int(rand(10))/30;
shape_2_per_frame3=
shape_2_per_frame4=r = int(rand(4))/3;
shape_2_per_frame5=g = int(rand(4))/3;
shape_2_per_frame6=b = int(rand(4))/3;
shape_2_per_frame7=
shape_2_per_frame8=
shape_2_per_frame9=is_beat = above(time, t0+.03);
shape_2_per_frame10=t0 = is_beat*time + (1-is_beat)*t0;
shape_2_per_frame11=
shape_2_per_frame12=
shape_2_per_frame13=a = min(q21/2 ,.9) * is_beat;
shape_2_per_frame14=rad = a*a/3 ;
shapecode_3_enabled=0
shapecode_3_sides=63
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=1.000
shapecode_3_rad=0.54822
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=vol = 0; p1 = 0;
per_frame_init_2=vx = .2; vy = -0.1;
per_frame_init_3=kx = 0; ky = 0;
per_frame_init_4=
per_frame_1=dec_med = pow (0.96, 30/fps);
per_frame_2=dec_slow = pow (0.98, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%2;
per_frame_10=index3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=
per_frame_18=vol = bass_att + treb_att;
per_frame_19=v2 = v2 * dec_slow + vol * (1-dec_slow) ;
per_frame_20=q26 = max(atan (vol - v2*.8),.3);
per_frame_21=
per_frame_22=q27 = index + 1;
per_frame_23=
per_frame_24=sw = sw*dec_med + (1-dec_med)*(index2%2);
per_frame_25=q28 = sw;
per_frame_26=
per_frame_27=k1 =  is_beat*bnot(index);
per_frame_28=k2 =  is_beat*bnot(index);
per_frame_29=
per_frame_30=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_31=p2 = dec_slow * p2+ (1-dec_slow)*p1;
per_frame_32=rott = p2 * 3.1416/2;
per_frame_33=monitor = k1;
per_frame_34=q1 = cos(rott);
per_frame_35=q2 = sin(rott);
per_frame_36=q3 = -q2;
per_frame_37=q4 = q1;
per_frame_38=
per_frame_39=
per_frame_40=q5 = cos(time/6);
per_frame_41=q6 = -sin(time/6);
per_frame_42=q7 = -q6;
per_frame_43=q8 = q5;
per_frame_44=
per_frame_45=zoom = 1;
per_frame_46=rot = -0;
per_frame_47=
per_frame_48=movez = movez + .006*(q1+1.1)*30/fps;
per_frame_49=q29 = movez;
per_frame_50=rota = rota + .003*(2-q1)*30/fps;
per_frame_51=q30 = rota;
per_frame_52=q31 = 2 + 16*abs(cos(time/18));
per_frame_53=q32 = cos(time/23)/4;
per_frame_54=
per_frame_55=
per_frame_56=
warp_1=`float2 complex_mul(float2 factorA, float2 factorB){
warp_2=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_3=`}
warp_4=`
warp_5=`float2 complex_pow(float2 base, int exponent){
warp_6=`   float2 exponentiation = float2(1,0);
warp_7=`   for(int i = 0; i<exponent; i++){
warp_8=`      exponentiation = complex_mul(base,exponentiation);
warp_9=`   }
warp_10=`   return exponentiation;
warp_11=`}
warp_12=`
warp_13=`float2 complex_square(float2 domain){
warp_14=`   return complex_mul(domain,domain);
warp_15=`}
warp_16=`
warp_17=`float2 complex_div(float2 numerator, float2 denominator){
warp_18=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_19=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_20=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_21=`}
warp_22=`
warp_23=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
warp_24=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
warp_25=`}
warp_26=`
warp_27=`float2 uv_scale(float2 domain, float2 center, float2 scale){
warp_28=`   return center + (domain-center)*scale;
warp_29=`}
warp_30=`
warp_31=`float2 uv_torus_mirror(float2 domain, float cutoff){
warp_32=`   return 0.5 + (1.0 - abs( frac( domain * 0.5 ) * 2 - 1.0 )-0.5)*cutoff;
warp_33=`}
warp_34=`
warp_35=`float2 uv_polar(float2 domain, float2 center){
warp_36=`   float2 c = domain - center;
warp_37=`   float rad_hq = length(c);
warp_38=`   float ang_hq = atan2(c.x,c.y);
warp_39=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
warp_40=`}
warp_41=`
warp_42=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_43=`   float2 polar = uv_polar(domain, center);
warp_44=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
warp_45=`}
warp_46=`
warp_47=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_48=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_49=`}
warp_50=`
warp_51=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
warp_52=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
warp_53=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
warp_54=`}
warp_55=`
warp_56=`bool mask_rectangle(float2 domain, float2 position, float2 dimensions){
warp_57=`   return (domain.x>position.x-dimensions.x)*(domain.x<position.x+dimensions.x)*
warp_58=`          (domain.y>position.y-dimensions.y)*(domain.y<position.y+dimensions.y);
warp_59=`}
warp_60=`
warp_61=`bool mask_circle(float2 domain, float2 position, float radius){
warp_62=`   return length(domain-position)<radius;
warp_63=`}
warp_64=`
warp_65=`bool mask_spiral_logarithmic(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_66=`   float2 c = domain - center;
warp_67=`   float rad_hq = length(c);
warp_68=`   float ang_hq = atan2(c.x,c.y);
warp_69=`
warp_70=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_71=`}
warp_72=`
warp_73=`float figure_spiral(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_74=`   float2 c = domain - center;
warp_75=`   float rad_hq = length(c);
warp_76=`   float ang_hq = atan2(c.x,c.y);
warp_77=`
warp_78=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_79=`}
warp_80=`
warp_81=`float figure_circle(float2 domain, float2 position, float radius){
warp_82=`   return saturate(1-length(domain-position)/radius);
warp_83=`}
warp_84=`
warp_85=`float figure_border(float2 domain, float thickness){
warp_86=`   float2 help_uv = frac(domain-0.5);
warp_87=`   help_uv = min(help_uv,1-help_uv)*2;
warp_88=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_89=`}
warp_90=`
warp_91=`shader_body
warp_92=`{
warp_93=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz, 0);
warp_94=`float2 northPole = float2(0.25,0.5);
warp_95=`float2 southPole = float2(0.75,0.5);
warp_96=`int fins = 4;
warp_97=`float log_factor = 0.7;
warp_98=`float2 coord = float2(time*0.1,time*0.5);
warp_99=`
warp_100=`float2 bipolar_uv = uv_bipolar_logarithmic(base_uv, northPole, southPole, fins, log_factor, coord );
warp_101=`//bipolar_uv = uv_torus_mirror(bipolar_uv,1);
warp_102=`
warp_103=`ret = figure_border(bipolar_uv,0.2);
warp_104=`ret = lerp(ret,float3(1,0,0),mask_circle(base_uv,northPole,0.01));
warp_105=`ret = lerp(ret,float3(0,0,1),mask_circle(base_uv,southPole,0.01));
warp_106=`}
comp_1=`float3 ret1, neu;
comp_2=`float2 rs,rs2,uv1;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`//uv = mul(uv,float2x2(_qa));
comp_10=`
comp_11=`float2 tmp = uv;
comp_12=`float dist = 1;
comp_13=`float dista = 0;
comp_14=`float inten = 1;
comp_15=`float mask = 0;
comp_16=`ret1 = 0;
comp_17=`int anz = 4;
comp_18=`float n = 0;
comp_19=`while (n <= anz) {
comp_20=`    ang2 = 6.28*n/anz;
comp_21=`    c = cos(ang2);
comp_22=`    s = sin(ang2);
comp_23=`    uv2.x =  uv.x*c - uv.y*s;
comp_24=`    uv2.y =  uv.x*s + uv.y*c;
comp_25=`uv2 *= aspect.yx;
comp_26=`    dist = 1-frac(.25*n+q30); //evtl sqrt !
comp_27=`;
comp_28=`    inten =  sqrt(dist)*(1-dist)*4;
comp_29=`    float2 uv3 =  frac(3*uv2*dist+.3*q27);
comp_30=`    uv3 += q17*float2 (c,s);
comp_31=`    neu = 1*GetPixel(uv3) -GetBlur2(uv3*1.02*q1);
comp_32=`    neu *= (neu >= 0);
comp_33=`    mask = 1-(neu*inten >= .1) * (dist < dista);
comp_34=`    ret1 = max(ret1,neu*inten);
comp_35=`    dista = dist;
comp_36=`n++;
comp_37=`}
comp_38=`
comp_39=`rs2 = .4*cos(uv*13+time) - 1* lum(ret1);;
comp_40=`float dots = (.05/length(rs2))*q26/4 ;
comp_41=`
comp_42=`ret = 1*ret1 + dots*hue_shader ;
comp_43=`
comp_44=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00015
fShader=0.000
zoom=1.00951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_point1=sp = sample*10;
wave_0_per_point2=ti = q1;
wave_0_per_point3=
wave_0_per_point4=ox = .25*sin(ti*.327 + sp*6.2832*3.12) + .5*sin(ti*.878 + sp*6.2832*8.68) + .25*sin(ti*.787 + sp*6.2832*7.85);
wave_0_per_point5=oy = .45*sin(ti*.877 + sp*6.2832*2.37) + .25*sin(ti*.482 + sp*6.2832*2.38) + .3*sin(ti*.129 + sp*6.2832*3.21);
wave_0_per_point6=oz = .35*sin(ti*.453 + sp*6.2832*8.97) + .15*sin(ti*.365 + sp*6.2832*5.13) + .5*sin(ti*.385 + sp*6.2832*5.46);
wave_0_per_point7=
wave_0_per_point8=ox = ox*6*q5;
wave_0_per_point9=oy = oy*6*q5;
wave_0_per_point10=oz = oz*6*q5;
wave_0_per_point11=
wave_0_per_point12=xang = q2;
wave_0_per_point13=yang = q3;
wave_0_per_point14=zang = q4;
wave_0_per_point15=
wave_0_per_point16=fov = .5;
wave_0_per_point17=
wave_0_per_point18=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point19=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point20=ox = mx;
wave_0_per_point21=oz = mz;
wave_0_per_point22=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point23=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point24=ox = mx;
wave_0_per_point25=oy = my;
wave_0_per_point26=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point27=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point28=oy = my;
wave_0_per_point29=oz = mz;
wave_0_per_point30=
wave_0_per_point31=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_0_per_point32=x = ox*fov/oz + 0.5;
wave_0_per_point33=x = (x-.5)*0.75 + 0.5;
wave_0_per_point34=y = oy*fov/oz + 0.5;
wave_0_per_point35=
wave_0_per_point36=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=sp = sample*10;
wave_1_per_point2=ti = q1;
wave_1_per_point3=
wave_1_per_point4=ox = .25*sin(ti*.654 + sp*6.2832*3.12) + .5*sin(ti*.378 + sp*6.2832*8.68) + .25*sin(ti*.537 + sp*6.2832*7.85);
wave_1_per_point5=oy = .45*sin(ti*.465 + sp*6.2832*2.37) + .25*sin(ti*.123 + sp*6.2832*2.38) + .3*sin(ti*.756 + sp*6.2832*3.21);
wave_1_per_point6=oz = .35*sin(ti*.758 + sp*6.2832*8.97) + .15*sin(ti*.187 + sp*6.2832*5.13) + .5*sin(ti*.548 + sp*6.2832*5.46);
wave_1_per_point7=
wave_1_per_point8=ox = ox*6*q5;
wave_1_per_point9=oy = oy*6*q5;
wave_1_per_point10=oz = oz*6*q5;
wave_1_per_point11=
wave_1_per_point12=xang = q2;
wave_1_per_point13=yang = q3;
wave_1_per_point14=zang = q4;
wave_1_per_point15=
wave_1_per_point16=fov = .5;
wave_1_per_point17=
wave_1_per_point18=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point19=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point20=ox = mx;
wave_1_per_point21=oz = mz;
wave_1_per_point22=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point23=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point24=ox = mx;
wave_1_per_point25=oy = my;
wave_1_per_point26=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point27=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point28=oy = my;
wave_1_per_point29=oz = mz;
wave_1_per_point30=
wave_1_per_point31=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_1_per_point32=x = ox*fov/oz + 0.5;
wave_1_per_point33=x = (x-.5)*0.75 + 0.5;
wave_1_per_point34=y = oy*fov/oz + 0.5;
wave_1_per_point35=
wave_1_per_point36=
wave_1_per_point37=
wave_1_per_point38=r=tan(x*6.28+3+q2);
wave_1_per_point39=r=min ( max(r*treb+0.5,0),1);
wave_1_per_point40=g=tan(y*6.28++32.1+q3);
wave_1_per_point41=g=min ( max(g*mid+0.5,0),1);
wave_1_per_point42=b=tan((x+y)*3.14+3+4.2+q4);
wave_1_per_point43=b=min ( max(b*bass+0.5,0),1);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=ra = if(ra,ra,2 + 8*int(rand(1001))*.001);
wave_2_per_frame2=rb = if(rb,rb,2 + 8*int(rand(1001))*.001);
wave_2_per_frame3=rc = if(rc,rc,2 + 8*int(rand(1001))*.001);
wave_2_per_frame4=rd = if(rd,rd,2 + 8*int(rand(1001))*.001);
wave_2_per_frame5=re = if(re,re,2 + 8*int(rand(1001))*.001);
wave_2_per_frame6=rf = if(rf,rf,2 + 8*int(rand(1001))*.001);
wave_2_per_frame7=
wave_2_per_frame8=t1 = ra*6.2832;
wave_2_per_frame9=t2 = rb*6.2832;
wave_2_per_frame10=t3 = rc*6.2832;
wave_2_per_frame11=t4 = rd*6.2832;
wave_2_per_frame12=t5 = re*6.2832;
wave_2_per_frame13=t6 = rf*6.2832;
wave_2_per_frame14=
wave_2_per_frame15=rg = if(rg,rg,.1 + .8*int(rand(1001))*.001);
wave_2_per_frame16=rh = if(rh,rh,.1 + .8*int(rand(1001))*.001);
wave_2_per_frame17=
wave_2_per_frame18=t7 = rg;
wave_2_per_frame19=t8 = rh;
wave_2_per_frame20=
wave_2_per_frame21=
wave_2_per_frame22=tic = min(time-tir,.1);
wave_2_per_frame23=tir = time;
wave_2_per_frame24=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_2_per_frame25=
wave_2_per_point1=ra = if(ra,ra,.1 + .8*int(rand(1001))*.001);
wave_2_per_point2=rb = if(rb,rb,.1 + .8*int(rand(1001))*.001);
wave_2_per_point3=rc = if(rc,rc,.1 + .8*int(rand(1001))*.001);
wave_2_per_point4=rd = if(rd,rd,.1 + .8*int(rand(1001))*.001);
wave_2_per_point5=
wave_2_per_point6=vol = (value1+value2)*.5;
wave_2_per_point7=vol = 0;
wave_2_per_point8=it = it*above(sample,0);
wave_2_per_point9=it = it + 1;
wave_2_per_point10=
wave_2_per_point11=sp = sample*10;
wave_2_per_point12=ti = q1;
wave_2_per_point13=
wave_2_per_point14=ox = .5*sin(ti*t7 + sp*t1) + .5*sin(ti*rb + sp*t4);
wave_2_per_point15=oy = .5*sin(ti*t8 + sp*t2) + .5*sin(ti*rc + sp*t5);
wave_2_per_point16=oz = .5*sin(ti*ra + sp*t3) + .5*sin(ti*rd + sp*t6);
wave_2_per_point17=
wave_2_per_point18=ox = ox*q5;
wave_2_per_point19=oy = oy*q5;
wave_2_per_point20=oz = oz*q5;
wave_2_per_point21=
wave_2_per_point22=
wave_2_per_point23=xang = q2;
wave_2_per_point24=yang = q3;
wave_2_per_point25=zang = q4;
wave_2_per_point26=
wave_2_per_point27=fov = .5;
wave_2_per_point28=
wave_2_per_point29=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point30=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point31=ox = mx;
wave_2_per_point32=oz = mz;
wave_2_per_point33=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point34=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point35=ox = mx;
wave_2_per_point36=oy = my;
wave_2_per_point37=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point38=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point39=oy = my;
wave_2_per_point40=oz = mz;
wave_2_per_point41=
wave_2_per_point42=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_2_per_point43=x = ox*fov/oz + 0.5;
wave_2_per_point44=x = (x-.5)*0.75 + 0.5;
wave_2_per_point45=y = oy*fov/oz + 0.5;
wave_2_per_point46=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=ra = if(ra,ra,2 + 8*int(rand(1001))*.001);
wave_3_per_frame2=rb = if(rb,rb,2 + 8*int(rand(1001))*.001);
wave_3_per_frame3=rc = if(rc,rc,2 + 8*int(rand(1001))*.001);
wave_3_per_frame4=rd = if(rd,rd,2 + 8*int(rand(1001))*.001);
wave_3_per_frame5=re = if(re,re,2 + 8*int(rand(1001))*.001);
wave_3_per_frame6=rf = if(rf,rf,2 + 8*int(rand(1001))*.001);
wave_3_per_frame7=
wave_3_per_frame8=t1 = ra*6.2832;
wave_3_per_frame9=t2 = rb*6.2832;
wave_3_per_frame10=t3 = rc*6.2832;
wave_3_per_frame11=t4 = rd*6.2832;
wave_3_per_frame12=t5 = re*6.2832;
wave_3_per_frame13=t6 = rf*6.2832;
wave_3_per_frame14=
wave_3_per_frame15=rg = if(rg,rg,.1 + .8*int(rand(1001))*.001);
wave_3_per_frame16=rh = if(rh,rh,.1 + .8*int(rand(1001))*.001);
wave_3_per_frame17=
wave_3_per_frame18=t7 = rg;
wave_3_per_frame19=t8 = rh;
wave_3_per_frame20=
wave_3_per_frame21=
wave_3_per_frame22=tic = min(time-tir,.1);
wave_3_per_frame23=tir = time;
wave_3_per_frame24=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_3_per_frame25=
wave_3_per_point1=ra = if(ra,ra,.1 + .8*int(rand(1001))*.001);
wave_3_per_point2=rb = if(rb,rb,.1 + .8*int(rand(1001))*.001);
wave_3_per_point3=rc = if(rc,rc,.1 + .8*int(rand(1001))*.001);
wave_3_per_point4=rd = if(rd,rd,.1 + .8*int(rand(1001))*.001);
wave_3_per_point5=
wave_3_per_point6=vol = (value1+value2)*.5;
wave_3_per_point7=vol = 0;
wave_3_per_point8=it = it*above(sample,0);
wave_3_per_point9=it = it + 1;
wave_3_per_point10=
wave_3_per_point11=sp = sample*10;
wave_3_per_point12=ti = q1;
wave_3_per_point13=
wave_3_per_point14=ox = .5*sin(ti*t7 + sp*t1+q2) + .5*sin(ti*rb + sp*t4);
wave_3_per_point15=oy = .5*sin(ti*t8 + sp*t2+q3) + .5*sin(ti*rc + sp*t5);
wave_3_per_point16=oz = .5*sin(ti*ra + sp*t3+q4) + .5*sin(ti*rd + sp*t6);
wave_3_per_point17=
wave_3_per_point18=ox = ox*q5;
wave_3_per_point19=oy = oy*q5;
wave_3_per_point20=oz = oz*q5;
wave_3_per_point21=
wave_3_per_point22=
wave_3_per_point23=xang = q2;
wave_3_per_point24=yang = q3;
wave_3_per_point25=zang = q4;
wave_3_per_point26=
wave_3_per_point27=fov = .5;
wave_3_per_point28=
wave_3_per_point29=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point30=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point31=ox = mx;
wave_3_per_point32=oz = mz;
wave_3_per_point33=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point34=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point35=ox = mx;
wave_3_per_point36=oy = my;
wave_3_per_point37=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point38=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point39=oy = my;
wave_3_per_point40=oz = mz;
wave_3_per_point41=
wave_3_per_point42=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_3_per_point43=x = ox*fov/oz + 0.5;
wave_3_per_point44=x = (x-.5)*0.75 + 0.5;
wave_3_per_point45=y = oy*fov/oz + 0.5;
wave_3_per_point46=
wave_3_per_point47=
wave_3_per_point48=r=tan(x*6.28+q2);
wave_3_per_point49=r=min ( max(r*treb,0),1);
wave_3_per_point50=g=tan(y*6.28+2.1+q3);
wave_3_per_point51=g=min ( max(g*mid,0),1);
wave_3_per_point52=b=tan((x+y)*3.14+4.2+q4);
wave_3_per_point53=b=min ( max(b*bass,0),1);
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02987
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27705
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=1.000
shape_1_per_frame1=i=2*instance;
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);    y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=z=.0015;
shape_1_per_frame6=x=.5+z*x1/q6;    y=.5+z*y1;
shape_1_per_frame7=
shape_1_per_frame8=x=x-int(x);      y=y-int(y);    //// wrap
shape_1_per_frame9=
shape_1_per_frame10=rad=.1*rad;
shape_1_per_frame11=
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=311
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*tan(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=1-mx;
shape_2_per_frame13=y=1-my;
shape_2_per_frame14=
shape_2_per_frame15=ang=(sin(time*.35)+1)*3;
shape_2_per_frame16=//a=(above(bass+mid+treb,.8));
shape_2_per_frame17=pi23=4*asin(1)*.333333333;
shape_2_per_frame18=t1=bass+mid+treb;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_a = 0;
per_frame_2=
per_frame_3=tic = min(time-tin,.1);
per_frame_4=tin = time;
per_frame_5=
per_frame_6=ra = 10;
per_frame_7=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_8=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_9=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_10=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_11=
per_frame_12=tt = tt + tic*treb_avg;
per_frame_13=mt = mt + tic*mid_avg;
per_frame_14=bt = bt + tic*bass_avg;
per_frame_15=vt = vt + tic*vav;
per_frame_16=
per_frame_17=sp = abs(vav - slide)*.1;
per_frame_18=
per_frame_19=slide = if(above(slide,vav),slide-tic*sp,slide+tic*sp);
per_frame_20=
per_frame_21=q1 = vt*.0 + 300;
per_frame_22=q2 = tt*.25;
per_frame_23=q3 = mt*.25;
per_frame_24=q4 = bt*.25;
per_frame_25=q5 = slide*.6*6;
per_frame_26=decay=0.95;
per_frame_27=
per_frame_28=monitor=q3
per_frame_29=
per_frame_30=
per_frame_31=chng=sin(time*.5);
per_frame_32=cthr=.9999;
per_frame_33=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_34=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_35=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_36=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_37=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_38=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_39=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_40=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_41=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_42=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_43=monitor=chng;
per_frame_44=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_45=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_46=
per_frame_47=monitor=mq1;
per_frame_48=vol=bass+treb+mid;
per_frame_49=atime=atime+vol;
per_frame_50=q11=.4+sin(atime*.006        )*.4;
per_frame_51=q12=.4+cos(atime*.00613828348)*.4;
per_frame_52=q13=.4+sin(atime*.00598593455)*.4;
per_frame_53=monitor=q13;
per_frame_54=q4=sin(atime*.03);
per_frame_55=q5=cos(atime*.030383824);
per_frame_56=q6=tan(atime*.029384834);
per_frame_57=
per_frame_58=
per_frame_59=//green
per_frame_60=q6=aspecty;        t1=t1+1;
per_frame_61=q1=bnot(t1%400);   decay=(t1>1);
per_frame_62=t=t+.001/fps;  
per_frame_63=s1=500*sin(t);     s2=20+10*sin(.5*t);   
per_frame_64=i=0;
per_frame_65=loop(1024,
per_frame_66=p1=.5*p1+s2*sin(s1*i);     p2= p1-p2;
per_frame_67=x1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);
per_frame_68=gmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;
per_frame_69=i=i+1;);
per_frame_70=
per_frame_71=zoom=1-(1-pow(2,(bass+treb+mid)*.0031));
per_frame_72=
warp_1=`// to access a texture on disk: make a sampler.  This example loads "noise_lq.{tga/jpg/etc}".
warp_2=`
warp_3=`     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)
warp_4=`
warp_5=`shader_body 
warp_6=`{
warp_7=`    uv.x += 0.02 * (tex2D( sampler_noise_lq, 
warp_8=`                         uv*0.050*texsize_noise_lq.zw*texsize.xy*2
warp_9=`                         + float2(roam_cos.x,roam_sin.x)*0.1 ).y*2-1)*aspect.x;
warp_10=`    uv.x += 0.04 * (tex2D( sampler_noise_lq, 
warp_11=`                         uv*0.025*texsize_noise_lq.zw*texsize.xy*0.5
warp_12=`                         + float2(roam_sin.y,-roam_cos.y)*0.03  ).z*2-1)*aspect.x;
warp_13=`
warp_14=`    ret = tex2D( sampler_main, uv ).xyz;
warp_15=`
warp_16=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_17=`                      ((uv.xyy*q27
warp_18=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_19=`                      ).xyz*
warp_20=`                      float3(1,1,0)*0.05 + 
warp_21=`                      time*float3(0,0,1)*q29
warp_22=`                     );
warp_23=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_24=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_25=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_26=`    // darken over time
warp_27=`    // cool idea: different falloff rates for the 3 colors-
warp_28=`    ret *= float3(0.99,0.98,0.97);
warp_29=`
warp_30=`    // ERROR DIFFUSION DITHER - looks great
warp_31=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_32=`    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).x-0.5)/256.0*2; 
warp_33=`
warp_34=`
warp_35=`ret.z=1-ret.y;
warp_36=`ret.y=1-ret.x;
warp_37=`ret.x=1-ret.z;
warp_38=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`float dist = 1;
comp_12=`float dista = 0;
comp_13=`float inten = 1;
comp_14=`float mask = 0;
comp_15=`ret1 = 0;
comp_16=`int anz = 4;
comp_17=`float n = 1;
comp_18=`//uv = mul(uv,float2x2(_qa));
comp_19=`while (n <= anz) {
comp_20=`    ang2 = 6.28*n/anz;
comp_21=`    c = cos(ang2);
comp_22=`    s = sin(ang2);
comp_23=`    uv2.x =  uv.x*c - uv.y*s;
comp_24=`    uv2.y =  uv.x*s + uv.y*c;
comp_25=`
comp_26=`    dist = 1-frac(.25*n+time/1); //evtl sqrt !
comp_27=`    inten =  pow(dist,.3)*(1-dist)*2;
comp_28=`//    inten =  (1-dist);
comp_29=`
comp_30=`    neu =  GetPixel (2*uv2*dist + 0.5 );
comp_31=`    blur = GetBlur1 (2*uv2*dist + 0.54 );
comp_32=`    neu += blur;
comp_33=`//    neu *= (neu >= 0);
comp_34=`  //  mask = 1-(neu*inten >= .1) * (dist < dista);
comp_35=`    ret1 = ret1*.9+neu*inten;
comp_36=`    dista = dist;
comp_37=`n++;
comp_38=`}
comp_39=`
comp_40=`float dz = ret1/2;
comp_41=`float2 rs1 = uv*8 + time;
comp_42=`
comp_43=`float scale = 64;
comp_44=`rs1 = rs1 + dz*scale*.4;
comp_45=`
comp_46=`float lava = tex2D (sampler_noise_hq,rs1/scale).x;
comp_47=`lava = saturate(-abs (lava) + 1);
comp_48=`float3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));
comp_49=`
comp_50=`ret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;
comp_51=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_52=`                      ((uv.xyy*q28
comp_53=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_54=`                      ).xyz*
comp_55=`                      float3(1,1,0)*0.05 + 
comp_56=`                      time*float3(0,0,1)*q31
comp_57=`                     );
comp_58=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_59=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_60=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_61=`
comp_62=`}

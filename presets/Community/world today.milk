MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.935
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.100
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=1.311
fWaveSmoothing=0.500
fWaveParam=-1.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.070
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.300
wave_y=0.500
ob_size=0.005
ob_r=0.110
ob_g=0.000
ob_b=0.400
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.165
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.370
shapecode_0_y=0.500
shapecode_0_rad=100.00000
shapecode_0_ang=3.64425
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.030
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = int(rand(100))*0.01;
shape_0_init2=t2 = int(rand(100))*0.01;
shape_0_per_frame1=// Loadus & Geiss custom shape design
shape_0_per_frame2=
shape_0_per_frame3=ang = time*(0.3 + 0.1*t1);
shape_0_per_frame4=rad = rad * (0.9 + 0.2*t2);
shape_0_per_frame5=r = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));
shape_0_per_frame6=g = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));
shape_0_per_frame7=b = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));
shape_0_per_frame8=
shape_0_per_frame9=
shape_0_per_frame10=r2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));
shape_0_per_frame11=g2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));
shape_0_per_frame12=b2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));
shapecode_1_enabled=1
shapecode_1_sides=50
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.370
shapecode_1_y=0.500
shapecode_1_rad=0.70653
shapecode_1_ang=3.64425
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.800
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=t1 = int(rand(100))*0.01;
shape_1_init2=t2 = int(rand(100))*0.01;
shape_1_per_frame1=// Loadus & Geiss custom shape design
shape_1_per_frame2=x = x + 0.05*sin(time*1.05+3);
shape_1_per_frame3=y = y + 0.03*sin(time*1.29+1);
shape_1_per_frame4=ang = time*(0.1 + 0.1*t1);
shape_1_per_frame5=rad = rad * (0.9 + 0.2*t2);
shape_1_per_frame6=//r = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));
shape_1_per_frame7=//g = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));
shape_1_per_frame8=//b = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));
shape_1_per_frame9=//r = q3;
shape_1_per_frame10=//g = q2;
shape_1_per_frame11=//b = q1;
shape_1_per_frame12=//r2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));
shape_1_per_frame13=//g2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));
shape_1_per_frame14=//b2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));
shapecode_2_enabled=1
shapecode_2_sides=50
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.670
shapecode_2_y=0.430
shapecode_2_rad=0.70653
shapecode_2_ang=4.20974
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.600
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=t1 = int(rand(100))*0.01;
shape_2_init2=t2 = int(rand(100))*0.01;
shape_2_per_frame1=// Loadus & Geiss custom shape design
shape_2_per_frame2=x = x + 0.05*sin(time*0.17);
shape_2_per_frame3=y = y + 0.03*sin(time*0.83);
shape_2_per_frame4=ang = time*(0.2 + 0.1*t1);
shape_2_per_frame5=rad = rad * (0.9 + 0.2*t2);
shape_2_per_frame6=//r = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));
shape_2_per_frame7=//g = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));
shape_2_per_frame8=//b = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));
shape_2_per_frame9=r = q2;
shape_2_per_frame10=g = q1;
shape_2_per_frame11=b = q3;
shape_2_per_frame12=
shape_2_per_frame13=r2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));
shape_2_per_frame14=g2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));
shape_2_per_frame15=b2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.59123
shapecode_3_ang=0.00000
shapecode_3_tex_ang=1.25664
shapecode_3_tex_zoom=1.07408
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.500
shapecode_3_g2=0.500
shapecode_3_b2=0.500
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=// Loadus & Geiss custom shape design
shape_3_per_frame2=
shape_3_per_frame3=x = x + 0.2*sin(time*0.25);
shape_3_per_frame4=y = y + 0.1*sin(time*0.5+2);
shape_3_per_frame5=r = q2;
shape_3_per_frame6=g = q3;
shape_3_per_frame7=b = q1;
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0;
per_frame_init_8=pi=3.1415;
per_frame_init_9=pi2=pi*0.5;
per_frame_init_10=
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=decay=1;
per_frame_29=zoom=1.000;
per_frame_30=warp=0;
per_frame_31=
per_frame_32=monitor=q1;
per_frame_33=cy=0.5;
per_frame_34=
per_frame_35=
per_frame_36=musictime=musictime+(mid*mid*mid)*0.02;
per_frame_37=
per_frame_38=xpos=sin(musictime*0.6)*0.9;
per_frame_39=ypos=sin(musictime*0.4)*0.9;
per_frame_40=q4=xpos;
per_frame_41=q5=ypos;
per_frame_42=
per_frame_43=
per_pixel_1=cx=0.5+q4;
per_pixel_2=cy=0.5-q5;
per_pixel_3=rd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );
per_pixel_4=
per_pixel_5=//divisions = ((ang+pi2)*4) - int((ang+pi)*4);
per_pixel_6=
per_pixel_7=sx=1 + abs( sin(rd + ang * 59 + time*0.3) * 0.006 );
per_pixel_8=sy=sx
per_pixel_9=
per_pixel_10=
warp_1=`shader_body
warp_2=`{
warp_3=`    ret = tex2D( sampler_main, uv ).xyz;
warp_4=`
warp_5=`    // ERROR DIFFUSION DITHER - looks great
warp_6=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_8=`                      ((uv.xyy*q27
warp_9=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_10=`                      ).xyz*
warp_11=`                      float3(1,1,0)*0.05 + 
warp_12=`                      time*float3(0,0,1)*q29
warp_13=`                     );
warp_14=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_15=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_16=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_17=`    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*7;
warp_18=`
warp_19=`    // darken over time
warp_20=`    //ret -= 0.004;
warp_21=`    //ret *= 0.99;
warp_22=`    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only
warp_23=`    float dec = saturate(vol/vol_att - 1.1)*0.5 + 0.004;
warp_24=`    ret = frac(ret - dec);
warp_25=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`
comp_7=`ret = GetBlur1(uv-.1*bass);
comp_8=`uv += .025*sin(ret.xy*2.4-.314);
comp_9=`float2 uvo = uv;
comp_10=`uv = (uv-0.5);
comp_11=`factorA = uv+ float2(q1,q2);
comp_12=`factorB = float2(8,0);
comp_13=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_14=`float2 uv1 = product;
comp_15=`factorA = uv+ float2(q3,q4);
comp_16=`factorB = float2(8,0);
comp_17=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_18=`float2 uv2 = product;
comp_19=`factorA = uv+ float2(q5,q6);
comp_20=`factorB = float2(8,0);
comp_21=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_22=`float2 uv3 = product;
comp_23=`factorA = uv+ float2(q7,q8);
comp_24=`factorB = float2(8,0);
comp_25=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_26=`float2 uv4 = product;
comp_27=`factorA = uv1;
comp_28=`factorB = uv2;
comp_29=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_30=`float2 uv12 = product;
comp_31=`factorA = uv3;
comp_32=`factorB = uv4;
comp_33=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_34=`float2 uv34 = product;
comp_35=`factorA = uv12;
comp_36=`factorB = uv34;
comp_37=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_38=`numerator = float2(1,0);
comp_39=`denominator = product;
comp_40=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_41=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_42=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_43=`uv = fraction*(16);
comp_44=`uv = lerp(0.5 + (uvo-0.5)*(2+(bass_att-treb_att)*0.02),uv+0.5,0.5);
comp_45=`
comp_46=`float l = length(uv-0.5);
comp_47=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_48=`
comp_49=`//uv = uvo;
comp_50=`ret = GetPixel(uv)*saturate(1.6-l*l*0.2);
comp_51=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_52=`                      ((uv.xyy*q28
comp_53=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_54=`                      ).xyz*
comp_55=`                      float3(1,1,0)*0.05 + 
comp_56=`                      time*float3(0,0,1)*q31
comp_57=`                     );
comp_58=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_59=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_60=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_61=`ret = ret.yzx;
comp_62=`}

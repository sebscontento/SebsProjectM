MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.950
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=r = .5 + sin(time*2.345);
wave_0_per_frame2=g = .5 + sin(time*2.935);
wave_0_per_frame3=b = .5 + sin(time*2.571);
wave_0_per_point1=sp = sample*6.283185*2;
wave_0_per_point2=sz = .095;
wave_0_per_point3=
wave_0_per_point4=sw = above(sample,.5);
wave_0_per_point5=ox = if(sw,sz + sz*sin(sp),-sz - sz*sin(sp));
wave_0_per_point6=oy = if(sw,sz*cos(sp),sz*cos(sp));
wave_0_per_point7=
wave_0_per_point8=
wave_0_per_point9=r = sw;
wave_0_per_point10=ag = sw;
wave_0_per_point11=ab = sw;
wave_0_per_point12=
wave_0_per_point13=zang = q6*.243;
wave_0_per_point14=
wave_0_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point17=ox = mx;
wave_0_per_point18=oy = my;
wave_0_per_point19=
wave_0_per_point20=x = ox*.75 + .5;
wave_0_per_point21=y = oy + .5;
wave_0_per_point22=
wave_0_per_point23=ti = q6;
wave_0_per_point24=a = max(sin(ti*1.5) - .5,0)*2;
wave_0_per_point25=a = a*max(sin(ti*3.5),0);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_point1=sp = sample*10;
wave_1_per_point2=ti = time;
wave_1_per_point3=
wave_1_per_point4=
wave_1_per_point5=ox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point6=oy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point7=oz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point8=
wave_1_per_point9=dis = pow(ox*ox + oy*oy + oz*oz,.5);
wave_1_per_point10=
wave_1_per_point11=ox = sign(ox)*pow(ox,4)*2;
wave_1_per_point12=oy = sign(oy)*pow(oy,4)*2;
wave_1_per_point13=oz = sign(oz)*pow(oz,4)*2;
wave_1_per_point14=
wave_1_per_point15=a = (1.732 - dis)*.57735;
wave_1_per_point16=
wave_1_per_point17=xang = q2;
wave_1_per_point18=yang = q3;
wave_1_per_point19=zang = q4;
wave_1_per_point20=
wave_1_per_point21=fov = .5;
wave_1_per_point22=
wave_1_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point25=ox = mx;
wave_1_per_point26=oz = mz;
wave_1_per_point27=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point28=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point29=ox = mx;
wave_1_per_point30=oy = my;
wave_1_per_point31=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point32=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point33=oy = my;
wave_1_per_point34=oz = mz;
wave_1_per_point35=
wave_1_per_point36=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_1_per_point37=x = ox*fov/oz + 0.5;
wave_1_per_point38=x = (x-.5)*0.75 + 0.5;
wave_1_per_point39=y = oy*fov/oz + 0.5;
wave_1_per_point40=
wave_1_per_point41=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=tic = min(time-tir,.1);
wave_2_per_frame2=tir = time;
wave_2_per_frame3=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_2_per_frame4=
wave_2_per_frame5=
wave_2_per_frame6=vr = .75 + .25*sin(ti*1.132 + 1);
wave_2_per_frame7=vg = .75 + .25*sin(ti*1.121 + 1);
wave_2_per_frame8=vb = .75 + .25*sin(ti*1.187 + 1);
wave_2_per_frame9=ar=vr;
wave_2_per_frame10=ag=vg;
wave_2_per_frame11=ab=vb;
wave_2_per_point1=sp = sample*10;
wave_2_per_point2=ti = time;
wave_2_per_point3=
wave_2_per_point4=
wave_2_per_point5=ox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point6=oy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point7=oz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point8=
wave_2_per_point9=dis = pow(ox*ox + oy*oy + oz*oz,.5);
wave_2_per_point10=
wave_2_per_point11=ox = sign(ox)*pow(ox,3)*8;
wave_2_per_point12=oy = sign(oy)*pow(oy,3)*8;
wave_2_per_point13=oz = sign(oz)*pow(oz,3)*8;
wave_2_per_point14=
wave_2_per_point15=a = (1.732 - dis)*.57735;
wave_2_per_point16=
wave_2_per_point17=xang = q2;
wave_2_per_point18=yang = q3;
wave_2_per_point19=zang = q4;
wave_2_per_point20=
wave_2_per_point21=fov = .5;
wave_2_per_point22=
wave_2_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point25=ox = mx;
wave_2_per_point26=oz = mz;
wave_2_per_point27=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point28=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point29=ox = mx;
wave_2_per_point30=oy = my;
wave_2_per_point31=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point32=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point33=oy = my;
wave_2_per_point34=oz = mz;
wave_2_per_point35=
wave_2_per_point36=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_2_per_point37=x = ox*fov/oz + 0.5;
wave_2_per_point38=x = (x-.5)*0.75 + 0.5;
wave_2_per_point39=y = oy*fov/oz + 0.5;
wave_2_per_point40=
wave_2_per_point41=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ra = .7;
wave_3_per_point2=rb = .1;
wave_3_per_point3=pib = 6.28318530718;
wave_3_per_point4=
wave_3_per_point5=tic = min(time-tin,.1);
wave_3_per_point6=tin = if(equal(sample,0),time,tin);
wave_3_per_point7=
wave_3_per_point8=mod = pow(pib,21);
wave_3_per_point9=med = 1;
wave_3_per_point10=
wave_3_per_point11=sp = sample*pib*mod + time*1;
wave_3_per_point12=sam = sample*med - q7;
wave_3_per_point13=
wave_3_per_point14=ox = ra*sin(sam*pib);
wave_3_per_point15=oy = ra*cos(sam*pib);
wave_3_per_point16=ox = ox + rb*-cos(sp)*sin(sam*pib);
wave_3_per_point17=oz = rb*-sin(sp);
wave_3_per_point18=oy = oy + rb*-cos(sp)*cos(sam*pib);
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=a = .5 + .5*cos(sample*pib*3 + pib*.5);
wave_3_per_point22=
wave_3_per_point23=xang = q2;
wave_3_per_point24=yang = q3;
wave_3_per_point25=zang = q4;
wave_3_per_point26=fov = .5;
wave_3_per_point27=
wave_3_per_point28=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point29=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point30=ox = mx;
wave_3_per_point31=oy = my;
wave_3_per_point32=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point33=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point34=ox = mx;
wave_3_per_point35=oz = mz;
wave_3_per_point36=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point37=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point38=oy = my;
wave_3_per_point39=oz = mz;
wave_3_per_point40=
wave_3_per_point41=oz = oz - 2;
wave_3_per_point42=x = ox*fov/oz + 0.5;
wave_3_per_point43=x = (x-.5)*0.75 + 0.5;
wave_3_per_point44=y = oy*fov/oz + 0.5;
wave_3_per_point45=
shapecode_0_enabled=1
shapecode_0_sides=74
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.800
shapecode_0_y=0.200
shapecode_0_rad=0.60857
shapecode_0_ang=0.00000
shapecode_0_tex_ang=3.14159
shapecode_0_tex_zoom=0.62024
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang = -q1;
shapecode_1_enabled=1
shapecode_1_sides=74
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.200
shapecode_1_y=0.800
shapecode_1_rad=0.60857
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.92345
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang = -q1;
shapecode_2_enabled=1
shapecode_2_sides=74
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.200
shapecode_2_y=0.200
shapecode_2_rad=0.60857
shapecode_2_ang=0.00000
shapecode_2_tex_ang=3.14159
shapecode_2_tex_zoom=0.68513
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang = q1;
shapecode_3_enabled=1
shapecode_3_sides=74
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.800
shapecode_3_y=0.800
shapecode_3_rad=0.60857
shapecode_3_ang=0.00000
shapecode_3_tex_ang=3.14159
shapecode_3_tex_zoom=0.75681
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ang = q1;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=wave_a = 0;
per_frame_29=
per_frame_30=
per_frame_31=
per_frame_32=//Thanks to Zylot for rainbow generator
per_frame_33=counter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);
per_frame_34=counter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);
per_frame_35=cdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));
per_frame_36=cdelay2 = if(equal(cdelay1,2),1,0);
per_frame_37=colorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));
per_frame_38=ib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));
per_frame_39=ib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));
per_frame_40=ib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));
per_frame_41=
per_frame_42=
per_frame_43=
per_frame_44=ob_r=ib_r-0.5;
per_frame_45=ob_g=ib_g-0.5;
per_frame_46=ob_b=ib_b-0.5;
per_frame_47=q1=ib_r;
per_frame_48=q2=ib_g;
per_frame_49=q3=ib_b;
per_frame_50=
per_frame_51=
per_frame_52=
per_frame_53=decay =1;
per_frame_54=
per_frame_55=
per_frame_56=//echo_orient=((bass_att+mid_att+treb_att)/3)*3;
per_frame_57=//solarize=above(0.5,bass);
per_frame_58=//darken=above(0.4,treb);
per_frame_59=
per_frame_60=musictime=musictime+(mid*mid*mid)*0.02*(75/fps);
per_frame_61=
per_frame_62=xpos=cos(musictime*0.6)*0.6;
per_frame_63=ypos=sin(musictime*0.4)*0.6;
per_frame_64=q4=xpos;
per_frame_65=q5=ypos
per_frame_66=
per_pixel_1=//flip= (-2 * above(sin(time),-0.9) )+1;
per_pixel_2=//var=(bass+mid+treb)/3;
per_pixel_3=//rot=((ang&rad/rad)/(var*20))/10;
per_pixel_4=//sx=.99-(var*0.01);
per_pixel_5=//cx=var*0.1*(ang/12);
per_pixel_6=//sy=sx;
per_pixel_7=
per_pixel_8=//zoom=-1;
per_pixel_9=sx=-1+(bass*0.2);
per_pixel_10=sy=-1-(treb*0.2);
per_pixel_11=
per_pixel_12=cx=0.5+q4;
per_pixel_13=cy=0.5-q5;
per_pixel_14=rd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );
per_pixel_15=//zm=(1.1-(rd/4));
per_pixel_16=zm=1;
per_pixel_17=
per_pixel_18=ag=atan( (y-0.5+q5)/(x-0.5-q4) );
per_pixel_19=star=sin(ag*6+time)*((2-rd)-ag)/5;
per_pixel_20=zm=zm+star/20;
per_pixel_21=sx=zm*rd;
per_pixel_22=sy=zm*rd;
per_pixel_23=//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)
warp_1=`sampler sampler_fc_wrenches;
warp_2=`float2 factorA, factorB, product;
warp_3=`float2 numerator, denominator, fraction;
warp_4=`
warp_5=`shader_body
warp_6=`{
warp_7=`uv = lerp(uv_orig,uv,0); // this is scaling the input motion from the per-vertex-calc
warp_8=`uv = (uv-0.5)*aspect.xy;
warp_9=`
warp_10=`factorA = uv;
warp_11=`factorB = float2(q1,q2);
warp_12=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_13=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_14=`
warp_15=`numerator = product + float2(q3,q4);
warp_16=`
warp_17=`factorA = uv;
warp_18=`factorB = float2(q5,q6);
warp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_20=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_21=`
warp_22=`
warp_23=`denominator = product + float2(q7,q8);
warp_24=`
warp_25=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
warp_26=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
warp_27=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
warp_28=`
warp_29=`uv = fraction*0.2;
warp_30=`
warp_31=`//uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders
warp_32=`uv = frac(uv);
warp_33=`ret = tex2D( sampler_fc_wrenches, uv );
warp_34=`
warp_35=` float2 bg = (uv-0.5)*texsize.xy;
warp_36=` float bg1 = saturate((abs(bg.x)+abs(bg.y)+time*200)%128-64);
warp_37=` float bg2 = saturate((-abs(bg.x)-abs(bg.y)+time*200)%128-64);
warp_38=` float fnord;
warp_39=` if(length(bg)> 0.25*texsize.y){
warp_40=`  fnord = bg2;
warp_41=` }else{
warp_42=`  fnord = bg1;
warp_43=` }
warp_44=`
warp_45=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_46=`                      ((uv.xyy*q27
warp_47=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_48=`                      ).xyz*
warp_49=`                      float3(1,1,0)*0.05 + 
warp_50=`                      time*float3(0,0,1)*q29
warp_51=`                     );
warp_52=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_53=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_54=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_55=`ret = fnord;
warp_56=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = tex2D(sampler_main, uv).xyz;    
comp_4=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_5=`                      ((uv.xyy*q28
comp_6=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_7=`                      ).xyz*
comp_8=`                      float3(1,1,0)*0.05 + 
comp_9=`                      time*float3(0,0,1)*q31
comp_10=`                     );
comp_11=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z += (noise9).x*.5; 
comp_12=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x += (noise9).y*.5; 
comp_13=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y += (noise9).z*.5; 
comp_14=`}

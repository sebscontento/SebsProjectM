MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.770
fDecay=0.970
fVideoEchoZoom=1.474
fVideoEchoAlpha=1.000
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.97237
fShader=0.000
zoom=1.00496
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00016
sx=0.99967
sy=0.99990
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = time;
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=
wave_0_per_point3=xp= int(rand(3)) - 1;
wave_0_per_point4=yp= int(rand(3)) - 1;
wave_0_per_point5=zp= int(rand(3)) - 1;
wave_0_per_point6=
wave_0_per_point7=fix= equal(abs(xp),1) + equal(abs(yp),1) + equal(abs(zp),1);
wave_0_per_point8=fix= if( equal(fix,3) , 0.5 , 1 );
wave_0_per_point9=xp= xp*fix + q1;
wave_0_per_point10=yp= yp*fix + q2;
wave_0_per_point11=zp= zp*fix + q3;
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=ang = t1;
wave_0_per_point15=sang = sin(ang);cang = cos(ang);
wave_0_per_point16=xq = xp*cang - zp*sang;
wave_0_per_point17=yq = yp;
wave_0_per_point18=zq = xp*sang + zp*cang;
wave_0_per_point19=xp=xq;yp=yq;zp=zq;
wave_0_per_point20=
wave_0_per_point21=ang = t1/3;
wave_0_per_point22=sang = sin(ang);cang = cos(ang);
wave_0_per_point23=xq = xp;
wave_0_per_point24=yq = yp*cang - zp*sang;;
wave_0_per_point25=zq = yp*sang + zp*cang;
wave_0_per_point26=xp=xq;yp=yq;zp=zq;
wave_0_per_point27=
wave_0_per_point28=
wave_0_per_point29=zp = zp+6.1;
wave_0_per_point30=xs = xp/zp + 0.5;
wave_0_per_point31=ys = yp/zp * 1.333 + 0.5;
wave_0_per_point32=
wave_0_per_point33=
wave_0_per_point34=x=xs;
wave_0_per_point35=y=ys;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = time;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=
wave_1_per_point3=scale=0.99;
wave_1_per_point4=
wave_1_per_point5=xp= int(rand(3)) - 1;
wave_1_per_point6=yp= int(rand(3)) - 1;
wave_1_per_point7=zp= int(rand(3)) - 1;
wave_1_per_point8=
wave_1_per_point9=fix= equal(abs(xp),1) + equal(abs(yp),1) + equal(abs(zp),1);
wave_1_per_point10=fix= if( equal(fix,3) , 0.5 , 1 );
wave_1_per_point11=xp= xp*fix;
wave_1_per_point12=yp= yp*fix;
wave_1_per_point13=zp= zp*fix;
wave_1_per_point14=
wave_1_per_point15=xp= xp*scale + q1;
wave_1_per_point16=yp= yp*scale + q2;
wave_1_per_point17=zp= zp*scale + q3;
wave_1_per_point18=
wave_1_per_point19=
wave_1_per_point20=ang = t1;
wave_1_per_point21=sang = sin(ang);cang = cos(ang);
wave_1_per_point22=xq = xp*cang - zp*sang;
wave_1_per_point23=yq = yp;
wave_1_per_point24=zq = xp*sang + zp*cang;
wave_1_per_point25=xp=xq;yp=yq;zp=zq;
wave_1_per_point26=
wave_1_per_point27=ang = t1/3;
wave_1_per_point28=sang = sin(ang);cang = cos(ang);
wave_1_per_point29=xq = xp;
wave_1_per_point30=yq = yp*cang - zp*sang;;
wave_1_per_point31=zq = yp*sang + zp*cang;
wave_1_per_point32=xp=xq;yp=yq;zp=zq;
wave_1_per_point33=
wave_1_per_point34=
wave_1_per_point35=zp = zp+6.1;
wave_1_per_point36=xs = xp/zp + 0.5;
wave_1_per_point37=ys = yp/zp * 1.333 + 0.5;
wave_1_per_point38=
wave_1_per_point39=
wave_1_per_point40=x=xs;
wave_1_per_point41=y=ys;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.07978
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.070
shapecode_0_g=0.050
shapecode_0_b=0.060
shapecode_0_a=0.050
shapecode_0_r2=0.070
shapecode_0_g2=0.050
shapecode_0_b2=0.060
shapecode_0_a2=0.040
shapecode_0_border_r=0.040
shapecode_0_border_g=0.040
shapecode_0_border_b=0.040
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=33
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.500
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.500
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_1_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_1_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_1_per_frame4=a = trans;
shape_1_per_frame5=
shape_1_per_frame6=x = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame7=y = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame8=rad = .09 + rand(int(q30))/15+instance-instance;
shape_1_per_frame9=r=rand(q30)*.1+instance-instance;
shape_1_per_frame10=g=rand(q30)*.1+instance-instance;
shape_1_per_frame11=b=rand(q30)*.1+instance-instance;
shape_1_per_frame12=r2=rand(q30)*.1+instance-instance;
shape_1_per_frame13=g2=rand(q30)*.1+instance-instance;
shape_1_per_frame14=b2=rand(q30)*.1+instance-instance;
shape_1_per_frame15=border_r=rand(q30)*.1+instance-instance;
shape_1_per_frame16=border_g=rand(q30)*.1+instance-instance;
shape_1_per_frame17=border_b=rand(q30)*.1+instance-instance;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.500
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );
per_frame_26=wave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );
per_frame_27=wave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );
per_frame_28=q8 = oldq8+min(if(above(bass+bass_att,1.8),q8+0.25*pow((bass+bass_att-1),5),0),1);
per_frame_29=oldq8 = q8;
per_frame_30=q8 = q8 + 0.1*time;
per_frame_31=q1 = 0.62*( 0.60*sin(0.374*q8) + 0.40*sin(0.294*q8) );
per_frame_32=q2 = 0.62*( 0.60*sin(0.393*q8) + 0.40*sin(0.223*q8) );
per_frame_33=q3 = 0.62*( 0.60*sin(0.174*-q8) + 0.40*sin(0.364*q8) );
per_frame_34=q4 = 0.62*( 0.60*sin(0.234*q8) + 0.40*sin(0.271*-q8) );
per_frame_35=mv_x = 1.25;
per_frame_36=mv_y = 1.25;
per_frame_37=mv_a =1;
per_frame_38=q30=(bass+treb+mid)*2;
per_pixel_1=du = x*2-1 - q1;
per_pixel_2=dv = y*2-1 - q2;
per_pixel_3=dist = sqrt(du*du+dv*dv);
per_pixel_4=ang2 = atan2(du,dv);
per_pixel_5=mult = 0.008/(dist+0.4);
per_pixel_6=dx = mult*sin(ang2-1.5);
per_pixel_7=dy = mult*cos(ang2-1.5);
per_pixel_8=du = x*2-1 - q3;
per_pixel_9=dv = y*2-1 - q4;
per_pixel_10=dist = sqrt(du*du+dv*dv);
per_pixel_11=ang2 = atan2(du,dv);
per_pixel_12=mult = 0.008*sin(q8)/(dist+0.4);
per_pixel_13=dx = dx + mult*sin(ang2+1.5);
per_pixel_14=dy = dy + mult*cos(ang2+1.5);
per_pixel_15=rot = -0.01*rad*sin(q8);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy*q27
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*q29
warp_12=`                     );
warp_13=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_14=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_15=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_16=`    // take the difference between the crisp and blurred images,
warp_17=`    // then add it back into the image.  Creates spots and stripes over time.
warp_18=`    ret += (ret - GetBlur2(uv))*0.3;
warp_19=`    ret *= 0.9;
warp_20=`
warp_21=`    // add noise:
warp_22=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_23=`    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 112;
warp_24=`
warp_25=`    // desaturate over time, to keep the globs white
warp_26=`    ret = lerp(ret, lum(ret), 0.2);
warp_27=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = tex2D(sampler_main, uv).xyz;
comp_4=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_5=`                      ((uv.xyy*q28
comp_6=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_7=`                      ).xyz*
comp_8=`                      float3(1,1,0)*0.05 + 
comp_9=`                      time*float3(0,0,1)*q31
comp_10=`                     );
comp_11=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_12=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_13=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_14=`    ret += GetBlur1(uv)*0.4;
comp_15=` 
comp_16=`    // palettize:
comp_17=`    ret = pow(ret, float3(0.5, 0.8, 1.7));
comp_18=`    ret = pow(ret, float3(1.7-(bass*.5), 1.7-(treb*.5), 1.7-(mid*.5)));
comp_19=`   
comp_20=`    //ret.xyz *= 2; // a little bit of overbright
comp_21=`}
comp_22=`
comp_23=`

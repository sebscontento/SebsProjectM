MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.210
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=0.282
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=1.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.22480
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=r = bass;
wave_0_per_frame2=g = treb;
wave_0_per_frame3=b = .5;
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.27430
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=r = bass;
wave_1_per_frame2=g = treb;
wave_1_per_frame3=b = .5;
wave_1_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_1_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0004*cos(ma));
wave_1_per_point5=my=my+(.0004*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.3));
wave_1_per_point16=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.02310
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=t2 = 0;
wave_2_init2=t3 = 0;
wave_2_init3=t4 = 0;
wave_2_init4=cl = 0;
wave_2_per_frame1=vol = bass*8 + mid*5 + treb*3;
wave_2_per_frame2=m = m*0.97 + vol*0.08;
wave_2_per_frame3=monitor = vol;
wave_2_per_frame4=beat = above(vol,res)*above(vol,m)*above(vol,16);
wave_2_per_frame5=diff = (1-beat)*diff + beat*(vol-res);
wave_2_per_frame6=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
wave_2_per_frame7=res = max(0,res);
wave_2_per_frame8=
wave_2_per_frame9=//a = beat;
wave_2_per_point1=tt3 = tt3*0.6 + (value1)*1;
wave_2_per_point2=tt2 = tt2*0.7 + tt3*0.2;
wave_2_per_point3=tt1 = tt1*0.8 + tt2*0.1;
wave_2_per_point4=d = d*0.9 + tt1*0.2;
wave_2_per_point5=
wave_2_per_point6=y = 0.5 + d*sample*(1-sample)*2;
wave_2_per_point7=x =  -0.05 + sample*1.1;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16446
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=a = if(above(bass,2.5),1,0);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=
per_frame_init_2=//******** INITIALIZATION *********
per_frame_init_3=//---------- some global vars, do not change -------------
per_frame_init_4=avg = 0.01;
per_frame_init_5=q7 = .25; //MyZoom
per_frame_init_6=q8 =  rand(2.0)-1.0; //fractal modifier
per_frame_init_7=//q8 = 1; //#
per_frame_init_8=q16 = 1 + rand(2); //Tele ; rather fish eye
per_frame_init_9=//q16 = 1; //#
per_frame_init_10=q18 = rand(0.8)+.1; //brightness balance back/front
per_frame_init_11=q30 = 1; //logarithmic Z-Dist storage; unused
per_frame_init_12=q31 =128;
per_frame_init_13=start = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;
per_frame_init_14=cran0 = rand(1);
per_frame_init_15=n = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); 
per_frame_init_16=n = 0; loop (10000,  megabuf(n)=0; n=n+1; ); 
per_frame_init_17=trelx = 0;  trely = 0; trelz = 0;
per_frame_init_18=reg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;
per_frame_init_19=
per_frame_init_20=//Find random starting point
per_frame_init_21=while (exec2(
per_frame_init_22=  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;
per_frame_init_23=  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; 
per_frame_init_24=
per_frame_init_25=//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#
per_frame_init_26=
per_frame_init_27=  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); 
per_frame_init_28=  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);
per_frame_init_29=
per_frame_init_30=  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;
per_frame_init_31=  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;
per_frame_init_32=  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;
per_frame_init_33=
per_frame_init_34=  //***********BOT*************
per_frame_init_35=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_init_36=  dist = 0.001;
per_frame_init_37=  while (exec2(
per_frame_init_38=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_init_39=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_init_40=    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);
per_frame_init_41=    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);
per_frame_init_42=    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);
per_frame_init_43=    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;
per_frame_init_44=    loop (7+1,
per_frame_init_45=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_init_46=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_init_47=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_init_48=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_init_49=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_init_50=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_init_51=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_init_52=    );
per_frame_init_53=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_init_54=    dist *= 1.05;
per_frame_init_55=  ,(dist < 0.6)*(len > 30)));
per_frame_init_56=,(dist < .06))); //end while
per_frame_init_57=
per_frame_1=wave_a = 0;
per_frame_2=fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); 
per_frame_3=dec_s = 1-.06*30/fps_;
per_frame_4=beat = (time >  t0+3); t0 = if(beat, time, t0);
per_frame_5=
per_frame_6=speed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#
per_frame_7=ds = ds * dec_s + (1-dec_s)*speed*.25/fps_; 
per_frame_8=RotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),
per_frame_9=                   bnot(beat*(rand(100)<30))*RotZ);
per_frame_10=slow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));
per_frame_11=look = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));
per_frame_12=
per_frame_13=//Lamp View
per_frame_14=lx = if (beat,rand(150)/200+.15,lx);
per_frame_15=ly = if (beat,rand(150)/200+.15,ly);
per_frame_16=lampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);
per_frame_17=lampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);
per_frame_18=q1 = lampx; q2 = lampy;
per_frame_19=
per_frame_20=//Position 
per_frame_21=DirX= reg26; DirY= reg27; DirZ = reg28;
per_frame_22=PosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; 
per_frame_23=q4 = PosX; q5 = PosY; q6 = PosZ;
per_frame_24=
per_frame_25=angchg = (.2-dist_)*(dist_ < .2)*2;
per_frame_26=travel = if (angchg > 0,0,travel+ds);
per_frame_27=v1 = v1 * dec_s + (1-dec_s)* RotZ * ds;
per_frame_28=v2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;
per_frame_29=v3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));
per_frame_30=//v2 = .008;
per_frame_31=//push old RotMat
per_frame_32=reg30 =reg20; reg31 =reg21; reg32 =reg22; 
per_frame_33=reg33 =reg23; reg34 =reg24; reg35 =reg25; 
per_frame_34=reg36 =reg26; reg37 =reg27; reg38 =reg28; 
per_frame_35=
per_frame_36=n = 0; avg = 0;
per_frame_37=loop (5,
per_frame_38=  n = n+1;
per_frame_39=  //new Rot. Mat for infinitesimal angles
per_frame_40=  ran1 = rand(100)/100;
per_frame_41=  ran2 = rand(100)/200-.25;
per_frame_42=  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;
per_frame_43=  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); 
per_frame_44=  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);
per_frame_45=  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;
per_frame_46=  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;
per_frame_47=  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;
per_frame_48=
per_frame_49=  //pop old RotMat
per_frame_50=  reg20 =reg30; reg21 =reg31; reg22 =reg32; 
per_frame_51=  reg23 =reg33; reg24 =reg34; reg25 =reg35; 
per_frame_52=  reg26 =reg36; reg27 =reg37; reg28 =reg38; 
per_frame_53=
per_frame_54=  //Multiply new RotMat by old one
per_frame_55=  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;
per_frame_56=  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;
per_frame_57=  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;
per_frame_58=  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;
per_frame_59=  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;
per_frame_60=  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;
per_frame_61=  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;
per_frame_62=  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;
per_frame_63=  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;
per_frame_64=
per_frame_65=  reg20 =q20; reg21 =q21; reg22 =q22;
per_frame_66=  reg23 =q23; reg24 =q24; reg25 =q25;
per_frame_67=  reg26 =q26; reg27 =q27; reg28 =q28;
per_frame_68=
per_frame_69=  //***********BOT*************
per_frame_70=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_71=  dist = 0.002;
per_frame_72=  while (exec2(
per_frame_73=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_74=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_75=    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);
per_frame_76=    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);
per_frame_77=    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);
per_frame_78=    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;
per_frame_79=    loop (7+1,
per_frame_80=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_81=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_82=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_83=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_84=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_85=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_86=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_87=    );
per_frame_88=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_89=    dist *= 1.1;
per_frame_90=  ,(dist < 0.6)*(len > 30)));
per_frame_91=  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points
per_frame_92=  avg = avg+abs(megabuf(n)/5);
per_frame_93=); //end loop 5
per_frame_94=
per_frame_95=n = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));
per_frame_96=
per_frame_97=xslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);
per_frame_98=yslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);
per_frame_99=monitor = avg;
per_frame_100=dist_ = dist_*dec_s + (1-dec_s)*dist;
per_frame_101=
per_frame_102=q10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv
per_frame_103=q14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; 
per_frame_104=q19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd
per_frame_105=start = start * .9;
per_frame_106=q11 = v1; q12 = v2; q13 = v3;
per_frame_107=//forward comp. of Rotation
per_frame_108=monitor = q16;
per_pixel_1= warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;
warp_1=`float sigmoid(float t, float c){
warp_2=`   return 1 / ( 1 + exp(t*c));
warp_3=`}
warp_4=`
warp_5=`float2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){
warp_6=`   domain -= position;
warp_7=`   domain *= domainAspect.xy;
warp_8=`   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );
warp_9=`   domain +=  + motionVector*sigmoidFilter;
warp_10=`   spin *= sigmoidFilter;
warp_11=`   float s = sin(spin);
warp_12=`   float c = cos(spin);
warp_13=`   float2 uv_rot;
warp_14=`   uv_rot.x = c*domain.x - s*domain.y;
warp_15=`   uv_rot.y = s*domain.x + c*domain.y;
warp_16=`   uv_rot *= domainAspect.zw;
warp_17=`   uv_rot += position;
warp_18=`   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));
warp_19=`}
warp_20=`
warp_21=`shader_body
warp_22=`{
warp_23=`
warp_24=`
warp_25=`float2 domain = uv;
warp_26=`float2 position = float2(q4,1-q8);
warp_27=`float2 motionVector = float2(-q15,q16)*q13*aspect.wz*0.5;
warp_28=`float4 domainAspect = aspect;
warp_29=`float radius = 0.06;
warp_30=`float sharpness = 30;
warp_31=`float spin = -2;
warp_32=`float zoom = 5;
warp_33=`
warp_34=`float2 uv_vortex = vortex( domain, position, motionVector, domainAspect, radius, sharpness, spin, zoom);
warp_35=`
warp_36=`uv = uv_vortex + texsize.zw*float2(0,0.15);
warp_37=`uv = lerp( uv_orig,uv,0.2);
warp_38=`    float2 d = texsize.zw * 4;
warp_39=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
warp_40=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
warp_41=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 3 + rand_frame.xy;
warp_42=`    float2 uv_bg = lerp(uv_orig,uv,1) + float2(dx.x,dy.x)*texsize.zw*4;
warp_43=`    ret.x = GetPixel(uv_bg).x  - (GetPixel(uv_bg).x - GetBlur3(uv_bg).x)*0.02 - 0.0014
warp_44=`            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.08;
warp_45=`
warp_46=`// there 2 channels unused, see? - hav fun :P
warp_47=`
warp_48=`
warp_49=`ret.y = lerp(GetPixel(uv).y,GetPixel(uv).y + ret.x*GetPixel(uv).z - GetPixel(uv).x*0.008 - 0.004,1);
warp_50=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_38=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.2, float2(q11,q12));
comp_39=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 )).yx*1.06;
comp_40=`    float2 d = texsize.zw;
comp_41=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_42=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_43=`float2 dz = float2(dx.y,dy.y)*3;
comp_44=`
comp_45=`d = texsize.zw*1.2;
comp_46=`dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );
comp_47=`dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );
comp_48=`
comp_49=`dz +=float2(dx.y,dy.y);
comp_50=`
comp_51=`float3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;
comp_52=`
comp_53=`ret = bg*float3(0.3,0.5,0.7);
comp_54=`ret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);
comp_55=`ret = lerp(ret,1,GetPixel(uv).z);
comp_56=`
comp_57=`//ret = GetPixel(uv);
comp_58=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.036
fWaveSmoothing=0.900
fWaveParam=-0.400
fModWaveAlphaStart=1.710
fModWaveAlphaEnd=1.430
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.95100
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=0.050
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.500
ib_size=0.015
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.500
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.520
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.600
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.01000
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.600
wave_0_per_point1=turns = 2+9*abs(q2*q1);
wave_0_per_point2=size = .15*q2;
wave_0_per_point3=speed = -2; 
wave_0_per_point4=
wave_0_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_0_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_0_per_point7=oz = 0 ;
wave_0_per_point8=
wave_0_per_point9=xang = 2.5;
wave_0_per_point10=yang = 13+sin(q7*q4+q6*q2+q7*q5);
wave_0_per_point11=zang = 0;
wave_0_per_point12=
wave_0_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point15=ox = mx;
wave_0_per_point16=oy = my;
wave_0_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_0_per_point19=ox = mx;
wave_0_per_point20=oz = mz;
wave_0_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point23=oy = my;
wave_0_per_point24=oz = mz-1;
wave_0_per_point25=
wave_0_per_point26=x = .75- ox/oz ;
wave_0_per_point27=y = .65+ oy/oz ;
wave_0_per_point28=
wave_0_per_point29=r=.1+.9*sin(3.14*sample);
wave_0_per_point30=g=.7*sin(3.14*sample);
wave_0_per_point31=b=.7*sin(3.14*sample);
wavecode_1_enabled=1
wavecode_1_samples=132
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.01000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.500
wave_1_per_point1=turns = 5+4*q4;
wave_1_per_point2=size = .13+.03*q3;
wave_1_per_point3=speed = .5; 
wave_1_per_point4=
wave_1_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_1_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_1_per_point7=oz = .04 ;
wave_1_per_point8=
wave_1_per_point9=yang = .3*(q6*q1+q5*q2+q1*q3);
wave_1_per_point10=xang = .6*(q6*q1+q5*q2+q1*q3);
wave_1_per_point11=zang = 0;
wave_1_per_point12=
wave_1_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point15=ox = mx;
wave_1_per_point16=oy = my;
wave_1_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_1_per_point19=ox = mx;
wave_1_per_point20=oz = mz;
wave_1_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point23=oy = my;
wave_1_per_point24=oz = mz-1;
wave_1_per_point25=
wave_1_per_point26=x = .75+ ox/oz ;
wave_1_per_point27=y = .35+ oy/oz ;
wave_1_per_point28=
wave_1_per_point29=r=.1+.9*sin(3.14*sample);
wave_1_per_point30=g=.7*sin(3.14*sample);
wave_1_per_point31=b=.7*sin(3.14*sample);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.01000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.910
wavecode_2_g=0.940
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=turns = 2;
wave_2_per_point2=size = .2+.02*q3;
wave_2_per_point3=speed = -2; 
wave_2_per_point4=acel=10*q1;
wave_2_per_point5= 
wave_2_per_point6=ox = (size-size*sample)*sin(acel*speed*3.14+sample*6.28*turns);
wave_2_per_point7=oy = (size-size*sample)*cos(acel*speed*3.14+sample*6.28*turns);
wave_2_per_point8=oz = 0 ;
wave_2_per_point9=
wave_2_per_point10=xang = 4;
wave_2_per_point11=yang = sin(q5*q1+q5*q2+q5*q3);
wave_2_per_point12=zang = 0;
wave_2_per_point13=
wave_2_per_point14=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point15=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point16=ox = mx;
wave_2_per_point17=oy = my;
wave_2_per_point18=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point19=mz = ox*sin(yang) + oz*cos(yang);
wave_2_per_point20=ox = mx;
wave_2_per_point21=oz = mz;
wave_2_per_point22=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point23=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point24=oy = my;
wave_2_per_point25=oz = mz-1;
wave_2_per_point26=
wave_2_per_point27=x = .3+ ox/oz ;
wave_2_per_point28=y = .35+ oy/oz ;
wave_2_per_point29=
wave_2_per_point30=r=.1+.9*sin(3.14*sample);
wave_2_per_point31=g=.7*sin(3.14*sample);
wave_2_per_point32=b=.7*sin(3.14*sample);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=0.01000
wavecode_3_smoothing=0.00000
wavecode_3_r=0.900
wavecode_3_g=0.930
wavecode_3_b=1.000
wavecode_3_a=0.700
wave_3_per_point1=turns = 8*q4;
wave_3_per_point2=size = .15+.1*q4;
wave_3_per_point3=speed = 2; 
wave_3_per_point4=
wave_3_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_3_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_3_per_point7=oz = .1 ;
wave_3_per_point8=
wave_3_per_point9=xang = 1+.4*(q6*q1+q6*q2);
wave_3_per_point10=yang = .2*q4;
wave_3_per_point11=zang = 0;
wave_3_per_point12=
wave_3_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point15=ox = mx;
wave_3_per_point16=oy = my;
wave_3_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_3_per_point19=ox = mx;
wave_3_per_point20=oz = mz;
wave_3_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point23=oy = my;
wave_3_per_point24=oz = mz-1;
wave_3_per_point25=
wave_3_per_point26=x = .35+ ox/oz ;
wave_3_per_point27=y = .65+ oy/oz ;
wave_3_per_point28=
wave_3_per_point29=r=.1+.9*sin(3.14*sample);
wave_3_per_point30=g=.7*sin(3.14*sample);
wave_3_per_point31=b=.7*sin(3.14*sample);
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=162
shapecode_0_x=0.700
shapecode_0_y=0.700
shapecode_0_rad=0.02473
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=5.26820
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.500
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.300
shape_0_per_frame1=sample=instance/num_inst;
shape_0_per_frame2=
shape_0_per_frame3=turns = 2+9*abs(q2*q1);
shape_0_per_frame4=size = .15*q2;
shape_0_per_frame5=speed = -2; 
shape_0_per_frame6=
shape_0_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_0_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_0_per_frame9=oz = 0 ;
shape_0_per_frame10=
shape_0_per_frame11=xang = 2.5;
shape_0_per_frame12=yang = 13+sin(q7*q4+q6*q2+q7*q5);
shape_0_per_frame13=zang = 0;
shape_0_per_frame14=
shape_0_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame17=ox = mx;
shape_0_per_frame18=oy = my;
shape_0_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_0_per_frame21=ox = mx;
shape_0_per_frame22=oz = mz;
shape_0_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame25=oy = my;
shape_0_per_frame26=oz = mz-1;
shape_0_per_frame27=
shape_0_per_frame28=x = .75- ox/oz ;
shape_0_per_frame29=y = .65+ oy/oz ;
shape_0_per_frame30=
shape_0_per_frame31=b=.1+.9*sin(3.14*sample);
shape_0_per_frame32=g=.7*sin(3.14*sample);
shape_0_per_frame33=r=.7*sin(3.14*sample);
shapecode_1_enabled=1
shapecode_1_sides=20
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=100
shapecode_1_x=0.700
shapecode_1_y=0.700
shapecode_1_rad=0.04914
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=3.64568
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.500
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.300
shape_1_per_frame1=sample=instance/num_inst;
shape_1_per_frame2=
shape_1_per_frame3=turns = 5+4*q4;
shape_1_per_frame4=size = .13+.03*q3;
shape_1_per_frame5=speed = .5; 
shape_1_per_frame6=
shape_1_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_1_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_1_per_frame9=oz = .04 ;
shape_1_per_frame10=
shape_1_per_frame11=yang = .3*(q6*q1+q5*q2+q1*q3);
shape_1_per_frame12=xang = .6*(q6*q1+q5*q2+q1*q3);
shape_1_per_frame13=zang = 0;
shape_1_per_frame14=
shape_1_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_1_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_1_per_frame17=ox = mx;
shape_1_per_frame18=oy = my;
shape_1_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_1_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_1_per_frame21=ox = mx;
shape_1_per_frame22=oz = mz;
shape_1_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_1_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_1_per_frame25=oy = my;
shape_1_per_frame26=oz = mz-1;
shape_1_per_frame27=
shape_1_per_frame28=x = .75+ ox/oz ;
shape_1_per_frame29=y = .35+ oy/oz ;
shape_1_per_frame30=
shape_1_per_frame31=b=.1+.9*sin(3.14*sample);
shape_1_per_frame32=g=.7*sin(3.14*sample);
shape_1_per_frame33=r=.7*sin(3.14*sample);
shapecode_2_enabled=1
shapecode_2_sides=20
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=120
shapecode_2_x=0.300
shapecode_2_y=0.300
shapecode_2_rad=0.04914
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=4.02709
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.500
shape_2_per_frame1=sample=instance/num_inst;
shape_2_per_frame2=
shape_2_per_frame3=turns = 2;
shape_2_per_frame4=size = .2+.02*q3;
shape_2_per_frame5=speed = -2; 
shape_2_per_frame6=acel=10*q1;
shape_2_per_frame7= 
shape_2_per_frame8=ox = (size-size*sample)*sin(acel*speed*3.14+sample*6.28*turns);
shape_2_per_frame9=oy = (size-size*sample)*cos(acel*speed*3.14+sample*6.28*turns);
shape_2_per_frame10=oz = 0 ;
shape_2_per_frame11=
shape_2_per_frame12=xang = 4;
shape_2_per_frame13=yang = sin(q5*q1+q5*q2+q5*q3);
shape_2_per_frame14=zang = 0;
shape_2_per_frame15=
shape_2_per_frame16=mx = ox*cos(zang) - oy*sin(zang);
shape_2_per_frame17=my = ox*sin(zang) + oy*cos(zang);
shape_2_per_frame18=ox = mx;
shape_2_per_frame19=oy = my;
shape_2_per_frame20=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame21=mz = ox*sin(yang) + oz*cos(yang);
shape_2_per_frame22=ox = mx;
shape_2_per_frame23=oz = mz;
shape_2_per_frame24=my = oy*cos(xang) - oz*sin(xang);
shape_2_per_frame25=mz = oy*sin(xang) + oz*cos(xang);
shape_2_per_frame26=oy = my;
shape_2_per_frame27=oz = mz-1;
shape_2_per_frame28=
shape_2_per_frame29=x = .3+ ox/oz ;
shape_2_per_frame30=y = .35+ oy/oz ;
shape_2_per_frame31=
shape_2_per_frame32=r=.1+.9*sin(3.14*sample);
shape_2_per_frame33=g=.7*sin(3.14*sample);
shape_2_per_frame34=b=.7*sin(3.14*sample);
shapecode_3_enabled=1
shapecode_3_sides=20
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=120
shapecode_3_x=0.300
shapecode_3_y=0.300
shapecode_3_rad=0.08927
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.500
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.300
shape_3_per_frame1=sample=instance/num_inst;
shape_3_per_frame2=
shape_3_per_frame3=turns = 8*q4;
shape_3_per_frame4=size = .15+.1*q4;
shape_3_per_frame5=speed = 2; 
shape_3_per_frame6=
shape_3_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_3_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_3_per_frame9=oz = .1 ;
shape_3_per_frame10=
shape_3_per_frame11=xang = 1+.4*(q6*q1+q6*q2);
shape_3_per_frame12=yang = .2*q4;
shape_3_per_frame13=zang = 0;
shape_3_per_frame14=
shape_3_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_3_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_3_per_frame17=ox = mx;
shape_3_per_frame18=oy = my;
shape_3_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_3_per_frame21=ox = mx;
shape_3_per_frame22=oz = mz;
shape_3_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_3_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_3_per_frame25=oy = my;
shape_3_per_frame26=oz = mz-1;
shape_3_per_frame27=
shape_3_per_frame28=x = .35+ ox/oz ;
shape_3_per_frame29=y = .65+ oy/oz ;
shape_3_per_frame30=
shape_3_per_frame31=b=.1+.9*sin(3.14*sample);
shape_3_per_frame32=r=.7*sin(3.14*sample);
shape_3_per_frame33=g=.7*sin(3.14*sample);
per_frame_1=vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;
per_frame_2=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_3=vm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;
per_frame_4=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_5=vt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;
per_frame_6=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_7=vvb = min(1,max(0,vvb));
per_frame_8=vvm = min(1,max(0,vvm));
per_frame_9=vvt = min(1,max(0,vvt));
per_frame_10=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_11=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_12=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_13=v=2;
per_frame_14=bb = bb - vvb*v;
per_frame_15=mm = mm - vvm*v;
per_frame_16=tt = tt - vvt*v;
per_frame_17=q4 = -bb;
per_frame_18=q5 = -mm;
per_frame_19=q6 = -tt;
per_frame_20=q4=(q1+q2+q3)*5;
per_frame_21=q5=(q1+q2+q3)*5;
per_frame_22=q6=(q1+q2+q3)*5;
per_frame_23=q7=(q1+q2+q3)*5;
per_frame_24=q8=(q1+q2+q3)*5;
per_frame_25=q9=(q1+q2+q3)*5;
per_frame_26=q10=(q1+q2+q3)*5;
per_frame_27=q11=(q1+q2+q3)*5;
per_frame_28=q12=(q1+q2+q3)*5;
per_frame_29=q13=(q1+q2+q3)*5;
per_frame_30=q14=(q1+q2+q3)*5;
per_frame_31=q15=(q1+q2+q3)*5;
per_frame_32=q16=(q1+q2+q3)*5;
per_frame_33=q17=(q1+q2+q3)*5;
per_frame_34=q18=(q1+q2+q3)*5;
per_frame_35=q19=(q1+q2+q3)*5;
per_frame_36=q20=(q1+q2+q3)*5;
per_frame_37=q21=(q1+q2+q3)*5;
per_frame_38=q22=(q1+q2+q3)*5;
per_frame_39=q23=(q1+q2+q3)*5;
per_frame_40=q24=(q1+q2+q3)*5;
per_frame_41=q25=(q1+q2+q3)*5;
per_frame_42=q26=(q1+q2+q3)*5;
per_frame_43=q27=(q1+q2+q3)*5;
per_frame_44=q28=(q1+q2+q3)*5;
per_frame_45=q29=(q1+q2+q3)*5;
per_frame_46=q30=(q1+q2+q3)*5;
per_frame_47=q31=(q1+q2+q3)*5;
per_frame_48=q32=(q1+q2+q3)*5;
per_frame_49=old_bass_flop=bass_flop;
per_frame_50=old_treb_flop=treb_flop;
per_frame_51=old_mid_flop=mid_flop;
per_frame_52=chaos=.9+.1*sin(pulse);
per_frame_53=entropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+int(rand(2)),entropy);
per_frame_54=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_55=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_56=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_57=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_58=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_59=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_60=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_61=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_62=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_63=bass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;
per_frame_64=treb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;
per_frame_65=mid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;
per_frame_66=pulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);
per_frame_67=q1=mid_residual;
per_frame_68=q2=bass_residual;
per_frame_69=q3=treb_residual;
per_frame_70=q4=sin(pulse);
per_frame_71=q5=cos(pulse/2+q1);
per_frame_72=
per_frame_73=q6=sin(q3*q1+q7*q2);
per_frame_74=q7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;
per_frame_75=q8=entropy;
per_frame_76=
per_frame_77=
per_frame_78=vol=(bass+mid+treb_att)*.3333;
per_frame_79=
per_frame_80=redsine=.5+.15*bass*sin(time*3);
per_frame_81=greensine=.5+.15*mid*sin(time*2);
per_frame_82=bluesine=.5+.15*treb*sin(time);
per_frame_83=
per_frame_84=redif=if(above(bass,1.2),redsine,if(above(redif,.95),.0,redif*.95));
per_frame_85=greenif=if(above(mid,1.2),greensine,if(above(greenif,.95),.0,greenif*.95));
per_frame_86=blueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),.0,blueif*.95));
per_frame_87=
per_frame_88=r=redif;
per_frame_89=g=greenif;
per_frame_90=b=blueif;
per_frame_91=
per_frame_92=q9=r;
per_frame_93=q10=g;
per_frame_94=q11=b;
per_frame_95=
per_frame_96=wave_r=wave_r*(sin(redif*cos(b+g)));
per_frame_97=wave_g=wave_g*(sin(greenif*cos(r+b)));
per_frame_98=wave_b=wave_b*(sin(blueif*cos(r+g)));
per_frame_99=
per_frame_100=ib_r=r;
per_frame_101=ib_g=g;
per_frame_102=ib_b=b;
per_frame_103=
per_frame_104=ob_r=wave_r*redif;
per_frame_105=ob_g=wave_g*greenif;
per_frame_106=ob_b=wave_b*blueif;
per_pixel_1=//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)
per_pixel_2=xv = sin(time*.333)*x -cos(time*.667)*x;
per_pixel_3=yv = cos(time*.233)*y +sin(time*.567)*y;
per_pixel_4=x = xv; y = yv;
per_pixel_5=//end x/y transform code
per_pixel_6=
per_pixel_7=sx=sx+.25*sin(x*3+q7*x);
per_pixel_8=sy=sy+.25*sin(y*3.1+q7*y);
per_pixel_9=
per_pixel_10=dx=dx+.015*cos(y*20+.1*cos(time*.11)+(q2*q6));
per_pixel_11=dy=dy+.015*sin(x*20+.1*sin(time*.09)+(q3*q6));
warp_1=`shader_body
warp_2=`{
warp_3=`texsize.xy=texsize.zw*3;
warp_4=`float2 muv=uv;
warp_5=`//uv=uv_orig;
warp_6=`float3 lluu = GetPixel(float2(uv.x-texsize.x*2,uv.y-texsize.y*2));
warp_7=`float3 luu  = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y*2));
warp_8=`float3 lu   = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y));
warp_9=`float3 rruu = GetPixel(float2(uv.x+texsize.x*2,uv.y-texsize.y*2));
warp_10=`float3 ruu  = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y*2));
warp_11=`float3 ru   = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y));
warp_12=`float3 lldd = GetPixel(float2(uv.x-texsize.x*2,uv.y+texsize.y*2));
warp_13=`float3 ldd  = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y*2));
warp_14=`float3 ld   = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y));
warp_15=`float3 rrdd = GetPixel(float2(uv.x+texsize.x*2,uv.y+texsize.y*2));
warp_16=`float3 rdd  = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y*2));
warp_17=`float3 rd   = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y));
warp_18=`//ret-=((lu+luu+lu)*(1-lluu))*0.1;
warp_19=`//uncomment upper - kinda new look.
warp_20=`ret+=1.2*(rd+rdd+rrdd+ld+ldd+lldd+ru+ruu+rruu+lu+lluu+luu)/12;
warp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_22=`                      ((uv.xyy*q27
warp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_24=`                      ).xyz*
warp_25=`                      float3(1,1,0)*0.05 + 
warp_26=`                      time*float3(0,0,1)*q29
warp_27=`                     );
warp_28=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_29=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_30=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_31=`ret-=GetBlur1(uv)*0.5;
warp_32=`ret/=1+(rd+ld+lu+ld)*0.01;
warp_33=`ret*=1.1;
warp_34=`//try
warp_35=`//ret+=0.05;
warp_36=`//instead of
warp_37=`ret+=0.1*(0.5-tex2D(sampler_noise_lq,uv_orig*rand_frame.xy*9));
warp_38=`
warp_39=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float dist = 1;
comp_11=`float inten = 1;
comp_12=`ret1 = 0;
comp_13=`int anz = 3;
comp_14=`int n = 1;
comp_15=`while (n <= anz) {
comp_16=`    ang2 = n/anz;
comp_17=`    c = (ang2);
comp_18=`    s = 1-(ang2);
comp_19=`    uv2.x =  uv.x*c - uv.y*s;
comp_20=`    uv2.y =  uv.x*s + uv.y*c;
comp_21=`    uv2 *= aspect.yx;
comp_22=`    dist = 1-frac(.25*n+q29); //evtl sqrt !
comp_23=`    inten =  pow(dist,.5)*(1-dist*dist)*2;
comp_24=`    float2 uv3 = frac(3*uv2*dist + .5 + q31);;
comp_25=`    neu =  GetPixel (uv3) + 2*GetBlur1(uv3);
comp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_27=`                      ((uv3.xyy*q28
comp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_29=`                      ).xyz*
comp_30=`                      float3(1,1,0)*0.05 + 
comp_31=`                      time*float3(0,0,1)*q31
comp_32=`                     );
comp_33=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_34=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_35=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_36=`neu-=slow_roam_sin.wzy*roam_cos*.4;
comp_37=`
comp_38=`    ret1 = max(ret1*.9,neu*inten);
comp_39=`n++;
comp_40=`}
comp_41=`
comp_42=`ret = .5*ret1 + 0.5*float3(0,0,.3)*(.5+uv.y) ;
comp_43=`//ret = GetPixel(uv+.5);
comp_44=`ret=1-ret;
comp_45=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.92178
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.400
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.200
ob_g=0.000
ob_b=0.000
ob_a=0.100
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=44.800
nMotionVectorsY=24.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.2;
wave_0_per_point6=v = sample*100000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_0_per_point14=
wave_0_per_point15=x = x;
wave_0_per_point16=y = y;
wave_0_per_point17=y = y;
wave_0_per_point18=
wave_0_per_point19=//r = 0.5 + 0.5*sin(time*1.22) + 0.1;
wave_0_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_0_per_point21=//b = 0.4 + 0.4*sin(time*1.959);
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 = 0;
wave_1_per_point5=speed = bass_att*0.2;
wave_1_per_point6=v = sample*100000 + value2*bass*0.1;
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_1_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);
wave_1_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);
wave_1_per_point14=
wave_1_per_point15=x = x;
wave_1_per_point16=y = y;
wave_1_per_point17=y = y;
wave_1_per_point18=
wave_1_per_point19=//r = 0.5 + 0.5*sin(time*1.4) + 0.1;
wave_1_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_1_per_point21=//b = 0.4 + 0.4*sin(time*1.259);
wave_1_per_point22=
wave_1_per_point23=
wave_1_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 = 0;
wave_2_per_point5=speed = bass_att*0.2;
wave_2_per_point6=v = sample*100000 + value2*bass*0.1;
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_2_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_2_per_point11=
wave_2_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);
wave_2_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);
wave_2_per_point14=
wave_2_per_point15=x = x;
wave_2_per_point16=y = y;
wave_2_per_point17=y = y;
wave_2_per_point18=
wave_2_per_point19=//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;
wave_2_per_point20=g = 1;//0.4 + 0.4*sin(time*1.807) + x;
wave_2_per_point21=//b = 0.4 + 0.4*sin(time*1.359);
wave_2_per_point22=
wave_2_per_point23=
wave_2_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=speed = bass*0.1;
wave_3_per_point2=v = sample*10000 + value2*bass*0.1;
wave_3_per_point3=
wave_3_per_point4=//state 0 elipse
wave_3_per_point5=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_3_per_point6=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_3_per_point7=
wave_3_per_point8=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_3_per_point9=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_3_per_point10=
wave_3_per_point11=y = y - sample*0.1;
wave_3_per_point12=
wave_3_per_point13=x = x*0.6 + 0.2;
wave_3_per_point14=y = y + bass*0.1;
wave_3_per_point15=y = y*0.8;
wave_3_per_point16=
wave_3_per_point17=r = 0.5 + 0.5*sin(time*6.22) + 0.1;
wave_3_per_point18=g = 0.4 + 0.4*sin(time*5.307);
wave_3_per_point19=b = 0.4 + 0.4*sin(time*4.959)*x;
wave_3_per_point20=
wave_3_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_3_per_point22=ys = if(above(ys,1000),0 ,ys);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66710
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27425
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.400
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.100
shape_0_per_frame1=tex_capture  = q1;
shape_0_per_frame2=
shape_0_per_frame3=saw = saw - 0.001*bass;
shape_0_per_frame4=saw = if(below(saw,0.2),0.6,saw);
shape_0_per_frame5=
shape_0_per_frame6=tex_zoom = saw;
shape_0_per_frame7=
shape_0_per_frame8=
shape_0_per_frame9=
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=2.66710
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27425
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.100
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.400
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.100
shape_1_per_frame1=tex_capture  = q1;
shape_1_per_frame2=
shape_1_per_frame3=saw = saw - 0.001*bass;
shape_1_per_frame4=saw = if(below(saw,0.1),0.6,saw);
shape_1_per_frame5=
shape_1_per_frame6=tex_zoom = saw;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=2.66718
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.36964
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.100
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.400
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=2.66718
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.30294
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.100
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.400
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=decay = 1;
per_frame_2=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_3=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_4=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_5=
per_frame_6=x1 = 0.5 + xx1-xx2;
per_frame_7=y1 = 0.5 + yy1;
per_frame_8=
per_frame_9=//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;
per_frame_10=
per_frame_11=spring = 18;
per_frame_12=grav = 1;
per_frame_13=resist = 0.2;
per_frame_14=bounce = 0.9;
per_frame_15=dt = 0.0003;
per_frame_16=
per_frame_17=vx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);
per_frame_18=vy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);
per_frame_19=vx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);
per_frame_20=vy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);
per_frame_21=vx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);
per_frame_22=vy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);
per_frame_23=
per_frame_24=x2 = x2 + vx2;
per_frame_25=y2 = y2 + vy2;
per_frame_26=x3 = x3 + vx3;
per_frame_27=y3 = y3 + vy3;
per_frame_28=x4 = x4 + vx4;
per_frame_29=y4 = y4 + vy4;
per_frame_30=
per_frame_31=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_32=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_33=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_34=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_35=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_36=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_37=
per_frame_38=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_39=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_40=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_41=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_42=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_43=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_44=
per_frame_45=
per_frame_46=q1 = x1;
per_frame_47=q2 = x2;
per_frame_48=q3 = x3;
per_frame_49=q4 = x4;
per_frame_50=
per_frame_51=q5 = y1;
per_frame_52=q6 = y2;
per_frame_53=q7 = y3;
per_frame_54=q8 = y4;
per_frame_55=
per_frame_56=
per_frame_57=zoom = 1.00;
per_frame_58=
per_frame_59=
per_frame_60=
per_frame_61=bb = bb*0.99 + bass*0.02;
per_frame_62=mm = mm*0.99 + mid*0.02;
per_frame_63=tt = tt*0.99 + treb*0.02;
per_frame_64=
per_frame_65=q6 = atan2(vx4,vy4);
per_frame_66=q5 = sqrt(vx4*vx4 + vy4*vy4);
per_pixel_1=
per_pixel_2=dir = -q6*1 + asin(1)*1;
per_pixel_3=
per_pixel_4=b1 = 0.08; // distance
per_pixel_5=m1 = q5*45;//-0.6 + q5*200; // size
per_pixel_6=t1 = 0.5; // velocity
per_pixel_7=
per_pixel_8=xx = 0.5 + (q4-0.5)/aspectx;
per_pixel_9=yy = 1-(0.5 + (q8-0.5)/aspecty);
per_pixel_10=
per_pixel_11=
per_pixel_12=x1 = xx   +cos(dir+1.5708)*b1;
per_pixel_13=y1 = yy -sin(dir+1.5708)*b1;
per_pixel_14=
per_pixel_15=x2 = xx   -cos(dir+1.5708)*b1;
per_pixel_16=y2 = yy +sin(dir+1.5708)*b1;
per_pixel_17=
per_pixel_18=d1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;
per_pixel_19=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_20=
per_pixel_21=d2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;
per_pixel_22=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_23=
per_pixel_24=si3 = -pow(q5,3)*00;
per_pixel_25=
per_pixel_26=dx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2/aspectx;
per_pixel_27=dy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2/aspecty;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv2=uv;
warp_4=`float3 texm=0;
warp_5=`
warp_6=`    // sample previous frame
warp_7=`    ret = tex2D( sampler_main, uv ).xyz;
warp_8=`
warp_9=`    // mix in code based off of Geiss's original mix code
warp_10=`    float pic = tex2D(sampler_noise_hq, uv_orig*aspect.xy*.25+.1*roam_cos+.1*time).xyz;
warp_11=`    float lum = lum(pic);
warp_12=`    float use_it = abs(lum+.2 - (0.5-roam_cos.xy*0.15));
warp_13=`    float LFNoise = tex2D(sampler_noise_hq, pic-(uv.yx*2 + (time*.15)));
warp_14=`    use_it = (1-use_it - (8*LFNoise));
warp_15=`    float tex = lerp(ret, pic, 1.2*use_it);
warp_16=`
warp_17=`texm=tex;
warp_18=`texm.x*=.8;
warp_19=`texm.y*=.98;
warp_20=`texm.z*=.95;
warp_21=`
warp_22=`ret=texm;
warp_23=`ret*=float3(1.2,1,1.9);
warp_24=`
warp_25=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`uv = (uv*3)-1.5;
comp_5=`uv = float2((uv.x)*q3 - (uv.y) * q2,(uv.x)* q2 + (uv.y) * q3)*1.25;
comp_6=`uv = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
comp_7=`
comp_8=`float2 zoom = 1.6;
comp_9=`float2 c = float2(.4,.5*q1);
comp_10=`
comp_11=` float2 my_uv2 = (uv_orig-0.5)*zoom;
comp_12=` my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c;
comp_13=`uv = my_uv2;
comp_14=`
comp_15=`// 24 bit gray value:
comp_16=`float1 gray = GetPixel(uv).x + 256*GetPixel(uv).y  + 256*256*GetPixel(uv).z;
comp_17=`// in fact, this palette doesn't need such a high-precision gray value, but try putting a fractal palette on it ;)
comp_18=`// no PS3.0 capable computer to check this out :(
comp_19=`ret = 0.5 + 0.5*sin(gray.xxx/256/48 + 0.06*time*float3(42,36,13.37));
comp_20=`ret *= 1-pow(GetPixel(uv).y,2)*1.05;
comp_21=`}

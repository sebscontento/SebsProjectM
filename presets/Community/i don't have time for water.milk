MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.750
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.100
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=// Nr. of fieldlines ("spokes") from a particle
wave_0_per_frame2=lines = 32;
wave_0_per_frame3=
wave_0_per_frame4=// particle radus
wave_0_per_frame5=t5 = 0.01;
wave_0_per_frame6=
wave_0_per_frame7=// fieldline step length
wave_0_per_frame8=t6 = 0.01 + 0.01 * bass_att;
wave_0_per_frame9=
wave_0_per_frame10=t1 = int(512 / lines);
wave_0_per_frame11=t2 = 1 / t1;
wave_0_per_frame12=
wave_0_per_frame13=t3 = lines;
wave_0_per_frame14=t4 = 1 / t3;
wave_0_per_frame15=
wave_0_per_frame16=
wave_0_per_frame17=dest_x = 0;
wave_0_per_frame18=dest_y = 0;
wave_0_per_point1=// particle charges
wave_0_per_point2=c1 = q5;
wave_0_per_point3=c2 = q6;
wave_0_per_point4=// c3 = 1;
wave_0_per_point5=
wave_0_per_point6=pi = 3.1415;
wave_0_per_point7=lineseg = (sample*511) % t1;
wave_0_per_point8=line = int(sample*511*t2);
wave_0_per_point9=//odd = lineseg % 2;
wave_0_per_point10=
wave_0_per_point11=// particle position
wave_0_per_point12=Qx = q1;
wave_0_per_point13=Qy = q2;
wave_0_per_point14=// particle radius
wave_0_per_point15=Qrad = t5;
wave_0_per_point16=
wave_0_per_point17=//don't draw back-to-next-line-line
wave_0_per_point18=a = if(equal(lineseg,0),0,1);
wave_0_per_point19=a = if(equal(lineseg,t1-1),0,a);
wave_0_per_point20=
wave_0_per_point21=scanangle = line * t4 * 2 * pi;
wave_0_per_point22=
wave_0_per_point23=start_x = Qrad * cos(scanangle);
wave_0_per_point24=start_y = Qrad * sin(scanangle) * q8;
wave_0_per_point25=
wave_0_per_point26=seg_x = if(equal(lineseg,0),start_x,seg_x);
wave_0_per_point27=seg_y = if(equal(lineseg,0),start_y,seg_y);
wave_0_per_point28=
wave_0_per_point29=
wave_0_per_point30=// E-fieldstrength stuff here
wave_0_per_point31=
wave_0_per_point32=E = 0;
wave_0_per_point33=Ex = 0;
wave_0_per_point34=Ey = 0;
wave_0_per_point35=
wave_0_per_point36=// from itself
wave_0_per_point37=dist = sqrt(sqr(seg_x)+sqr(seg_y));
wave_0_per_point38=E = c1 / dist;
wave_0_per_point39=Ex = E * seg_x / dist;
wave_0_per_point40=Ey = E * seg_y / dist;
wave_0_per_point41=
wave_0_per_point42=// from particle 2
wave_0_per_point43=dist_x = (Qx+seg_x)-q3;
wave_0_per_point44=dist_y = (Qy+seg_y)-q4;
wave_0_per_point45=dist = sqrt(sqr(dist_x)+sqr(dist_y));
wave_0_per_point46=E = c2 / dist;
wave_0_per_point47=Ex = Ex + E * dist_x / dist;
wave_0_per_point48=Ey = Ey + E * dist_y / dist;
wave_0_per_point49=
wave_0_per_point50=// Figure out E-field and linesegment direction
wave_0_per_point51=angle = atan(Ey/Ex);
wave_0_per_point52=angle = if(below(Ex,0),angle + pi,angle);
wave_0_per_point53=angle = if(above(Ex,0),if(below(Ey,0),angle + 2 * pi,angle),angle);
wave_0_per_point54=angle = if(equal(Ex,0),if(above(Ey,0),pi * 0.5,angle),angle);
wave_0_per_point55=angle = if(equal(Ex,0),if(below(Ey,0),pi * 1.5,angle),angle);
wave_0_per_point56=// Turn 180 degrees if negative self charge
wave_0_per_point57=angle = if(below(c1,0),angle+pi,angle);
wave_0_per_point58=
wave_0_per_point59=
wave_0_per_point60=seg_x = seg_x + t6 * cos(angle);
wave_0_per_point61=seg_y = seg_y + t6 * sin(angle) * q8;
wave_0_per_point62=
wave_0_per_point63=seg_x = if(equal(lineseg,0),start_x,seg_x);
wave_0_per_point64=seg_y = if(equal(lineseg,0),start_y,seg_y);
wave_0_per_point65=
wave_0_per_point66=
wave_0_per_point67=x = Qx + seg_x;
wave_0_per_point68=y = Qy + seg_y;
wave_0_per_point69=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=// Nr. of fieldlines ("spokes") from a particle
wave_1_per_frame2=lines = 32;
wave_1_per_frame3=
wave_1_per_frame4=// particle radus
wave_1_per_frame5=t5 = 0.01;
wave_1_per_frame6=
wave_1_per_frame7=// fieldline step length
wave_1_per_frame8=t6 = 0.01 + 0.01 * treb_att;
wave_1_per_frame9=
wave_1_per_frame10=t1 = int(512 / lines);
wave_1_per_frame11=t2 = 1 / t1;
wave_1_per_frame12=
wave_1_per_frame13=t3 = lines;
wave_1_per_frame14=t4 = 1 / t3;
wave_1_per_frame15=
wave_1_per_frame16=
wave_1_per_frame17=dest_x = 0;
wave_1_per_frame18=dest_y = 0;
wave_1_per_point1=// particle charges
wave_1_per_point2=c1 = q5;
wave_1_per_point3=c2 = q6;
wave_1_per_point4=// c3 = 1;
wave_1_per_point5=
wave_1_per_point6=pi = 3.1415;
wave_1_per_point7=lineseg = (sample*511) % t1;
wave_1_per_point8=line = int(sample*511*t2);
wave_1_per_point9=//odd = lineseg % 2;
wave_1_per_point10=
wave_1_per_point11=// particle position
wave_1_per_point12=Qx = q3;
wave_1_per_point13=Qy = q4;
wave_1_per_point14=// particle radius
wave_1_per_point15=Qrad = t5;
wave_1_per_point16=
wave_1_per_point17=//don't draw back-to-next-line-line
wave_1_per_point18=a = if(equal(lineseg,0),0,1);
wave_1_per_point19=a = if(equal(lineseg,t1-1),0,a);
wave_1_per_point20=
wave_1_per_point21=scanangle = line * t4 * 2 * pi;
wave_1_per_point22=
wave_1_per_point23=start_x = Qrad * cos(scanangle);
wave_1_per_point24=start_y = Qrad * sin(scanangle) * q8;
wave_1_per_point25=
wave_1_per_point26=seg_x = if(equal(lineseg,0),start_x,seg_x);
wave_1_per_point27=seg_y = if(equal(lineseg,0),start_y,seg_y);
wave_1_per_point28=
wave_1_per_point29=
wave_1_per_point30=// E-fieldstrength stuff here
wave_1_per_point31=
wave_1_per_point32=E = 0;
wave_1_per_point33=Ex = 0;
wave_1_per_point34=Ey = 0;
wave_1_per_point35=
wave_1_per_point36=// from itself
wave_1_per_point37=dist = sqrt(sqr(seg_x)+sqr(seg_y));
wave_1_per_point38=E = c2 / dist;
wave_1_per_point39=Ex = E * seg_x / dist;
wave_1_per_point40=Ey = E * seg_y / dist;
wave_1_per_point41=
wave_1_per_point42=// from particle 2
wave_1_per_point43=dist_x = (Qx+seg_x)-q1;
wave_1_per_point44=dist_y = (Qy+seg_y)-q2;
wave_1_per_point45=dist = sqrt(sqr(dist_x)+sqr(dist_y));
wave_1_per_point46=E = c1 / dist;
wave_1_per_point47=Ex = Ex + E * dist_x / dist;
wave_1_per_point48=Ey = Ey + E * dist_y / dist;
wave_1_per_point49=
wave_1_per_point50=// Figure out E-field and linesegment direction
wave_1_per_point51=angle = atan(Ey/Ex);
wave_1_per_point52=angle = if(below(Ex,0),angle + pi,angle);
wave_1_per_point53=angle = if(above(Ex,0),if(below(Ey,0),angle + 2 * pi,angle),angle);
wave_1_per_point54=angle = if(equal(Ex,0),if(above(Ey,0),pi * 0.5,angle),angle);
wave_1_per_point55=angle = if(equal(Ex,0),if(below(Ey,0),pi * 1.5,angle),angle);
wave_1_per_point56=// Turn 180 degrees if negative self charge
wave_1_per_point57=angle = if(below(c2,0),angle+pi,angle);
wave_1_per_point58=
wave_1_per_point59=
wave_1_per_point60=seg_x = seg_x + t6 * cos(angle);
wave_1_per_point61=seg_y = seg_y + t6 * sin(angle) * q8;
wave_1_per_point62=
wave_1_per_point63=seg_x = if(equal(lineseg,0),start_x,seg_x);
wave_1_per_point64=seg_y = if(equal(lineseg,0),start_y,seg_y);
wave_1_per_point65=
wave_1_per_point66=
wave_1_per_point67=x = Qx + seg_x;
wave_1_per_point68=y = Qy + seg_y;
wave_1_per_point69=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.200
shape_0_per_frame1=x = q1;
shape_0_per_frame2=y = q2;
shapecode_1_enabled=1
shapecode_1_sides=16
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.200
shape_1_per_frame1=x = q3;
shape_1_per_frame2=y = q4;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=
per_frame_2=// positions
per_frame_3=q1 = 0.4 + 0.3*cos(time + bass_att*0.5);
per_frame_4=q2 = 0.4 + 0.3*sin(time* 2.5 + bass_att * 0.5);;
per_frame_5=q3 = 0.6 + 0.3*cos(time * 1.5 + treb_att * 0.4);
per_frame_6=q4 = 0.6 + 0.3*sin(time* 3 + treb_att*0.3);;
per_frame_7=
per_frame_8=// charges
per_frame_9=q5 = 1 - bass_att;
per_frame_10=q6 = 1;
per_frame_11=
per_frame_12=
per_frame_13=// x/y adjustments
per_frame_14=q8 = meshx / meshy;
per_frame_15=zoom = 0.9;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.5;        // maximum random pixel offset
warp_6=`float diffusion = 0.006;      // dither strength
warp_7=`float fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));
warp_11=`uv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`
warp_14=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float3 goo = tex2D(sampler_main, uv).xyz;    
comp_4=`ret=goo;
comp_5=`    float3 d = float3(texsize.zw, 0)*2.5;
comp_6=`    float b1 = lum(GetBlur1(uv + d.xz));
comp_7=`    float b2 = lum(GetBlur1(uv - d.xz));
comp_8=`    float b3 = lum(GetBlur1(uv + d.zy));
comp_9=`    float b4 = lum(GetBlur1(uv - d.zy));
comp_10=`
comp_11=`    ret *= 0.5; 
comp_12=`    ret += (b1-b2)*3.4*float3(1,0.7,0.3);
comp_13=`    ret += (b3-b4)*3.4*float3(0.2,0.5,0.7);
comp_14=`    if (lum(ret)>0.6){ret=lerp(ret, tex2d(sampler_noise_lq,uv*10),0.1)*1.1;};
comp_15=`   ret*=ret*0.8+q6*q5*0.35;
comp_16=`}

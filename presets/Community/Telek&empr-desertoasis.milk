[preset00]
fRating=3.000000
fGammaAdj=1.000000
fDecay=0.998999
fVideoEchoZoom=1.006596
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.099998
fWaveScale=1.886994
fWaveSmoothing=0.630000
fWaveParam=-0.674387
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fWarpAnimSpeed=1.000000
fWarpScale=1.331000
fZoomExponent=1.000000
fShader=0.000000
zoom=0.999514
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=1.000000
sy=1.000000
wave_r=0.198830
wave_g=0.926259
wave_b=0.407972
wave_x=0.908328
wave_y=0.758275
ob_size=0.055000
ob_r=0.623159
ob_g=0.867505
ob_b=0.316534
ob_a=0.860742
ib_size=0.003500
ib_r=0.995433
ib_g=0.231823
ib_b=0.467660
ib_a=0.612625
nMotionVectorsX=38.399994
nMotionVectorsY=24.000004
mv_dx=-0.140355
mv_dy=-0.500361
mv_l=5.000000
mv_r=0.680605
mv_g=0.307348
mv_b=0.035456
mv_a=0.963621
per_frame_1=high_bass = above(bass_att,2);
per_frame_2=high_treb = above(treb, 2);
per_frame_3=;
per_frame_4=wave_b = if(high_treb,0,1);
per_frame_5=;
per_frame_6=//mv_rr = if(high_bass,.5 ,mv_rr*.9);
per_frame_7=//mv_r = mv_rr;
per_frame_8=//mv_b = if(high_treb*high_bass,0,1);
per_frame_9=//mv_g = if(high_treb*high_bass,0,.1*sin(time*.302)+.1);
per_frame_10=//mv_a = if(above(bass_att,1.5),.6,mv_a);
per_frame_11=//mv_x = bits *3;
per_frame_12=//mv_y = mv_x *.8;
per_frame_13=;
per_frame_14=ob_r = sin(time*.3)/2+.5;
per_frame_15=ob_g= sin(time*.34)/2+.5;
per_frame_16=ob_b = sin(time*.3714)/2+.5;
per_frame_17=;
per_frame_18=boomnow = if(high_bass,time,boomnow);
per_frame_19=brightness = min(sqr(time-boomnow-.866)+.25,1);
per_frame_20=av_bass=if(high_bass,av_bass*.8+.2*bass,av_bass);
per_frame_21=count=count+above(bass,av_bass*1.2);
per_frame_22=;
per_frame_23=ob_r = ob_r*brightness;
per_frame_24=ob_g = ob_g*brightness;
per_frame_25=ob_b = ob_b*brightness;
per_frame_26=;
per_frame_27=w_dx = (above((w_y*bits)%2,0)*.01-.005)*sin(time);
per_frame_28=w_dy = (above((w_x*bits)%2,0)*.01-.005)*cos(time);
per_frame_29=;
per_frame_30=w_x = w_x+w_dx;
per_frame_31=w_y = w_y +w_dy;
per_frame_32=monitor = bits;
per_frame_33=q1 = bits;
per_frame_34=w_x = if(above(abs(w_x-.5),.5),rand(10)/10,w_x);
per_frame_35=w_y = if(above(abs(w_y-.5),.5),rand(10)/10,w_y);
per_frame_36=;
per_frame_37=wave_x = w_x;
per_frame_38=wave_y = w_y;
per_frame_39=;
per_frame_40=monitor = brightness;
per_frame_41=monitor = av_bass;
per_frame_42=monitor = count;
per_frame_43=;
per_pixel_1=rot=if(above(bnot(1*bass),bnot(1*treb)),rot*sin(rad*sin(time)),-rot*sin(rad*cos(time)));
per_pixel_2=rot = 0 + -1.09813005*pow(time + sx , warp - q1);
per_pixel_3=warp = 1.331 + -1.573852*pow(4.49322581*pow(vx - vy , rad * sx) , sy * sx);
per_pixel_4=rot = 0 + if(equal(rot * vx , time * rad) , bass_att + sx , sx * q3);
per_pixel_5=warp = 1.331 + -0.23183793*pow(warp * rad , vx * warp);
per_pixel_6=sx = 1 + 3.34055722*pow(rad - q2 , vx * vx);
per_pixel_7=q2 = 0.17153621*sin(q1 * q2);
per_pixel_8=warp = 1.331 + warp + bass_att;
per_pixel_9=q3 = if(equal(q1 * sx , time - vy) , rad - q1 , newrad * rot);
per_pixel_10=q3 = if(below(q3 * vy , sx - q1) , sy - q2 , sx * bass_att);
per_pixel_11=dx = 0 + 3.28295171*sin(newrad * time);
per_pixel_12=q3 = q3 * rad;
per_pixel_13=sx = 1 + -0.45459509*pow(sx * time , q2 * vy);
per_pixel_14=sx = 1 + if(below(sx - q2 , bass_att + q3) , if(below(rot * rot , vy + rot) , q3 * sx , q3 + q2) , newrad * sx);
per_pixel_15=cx = 0.5 + if(below(q2 * time , sy * time) , 1.50901914*sin(if(below(q1 * rot , warp - vx) , q3 * sy , time - vy)) , rot * q1);
per_pixel_16=rot=if(below(rot,-1.0), -1.0, rot);
per_pixel_17=rot=if(above(rot,1.0), 1.0, rot);
per_pixel_18=warp=if(below(warp,0.01), 0.01, warp);
per_pixel_19=warp=if(above(warp,100.0), 100.0, warp);
per_pixel_20=cx=if(below(cx,-1.0), -1.0, cx);
per_pixel_21=cx=if(above(cx,2.0), 2.0, cx);
per_pixel_22=dx=if(below(dx,-1), -1, dx);
per_pixel_23=dx=if(above(dx,1.0), 1.0, dx);
per_pixel_24=sx=if(below(sx,0.01), 0.01, sx);
per_pixel_25=sx=if(above(sx,100.0), 100.0, sx);

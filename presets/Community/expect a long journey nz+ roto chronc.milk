MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=13.29089
rot=0.00000
cx=0.500
cy=0.500
dx=-0.28000
dy=-0.32000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.020
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.020
ib_r=0.950
ib_g=0.850
ib_b=0.650
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.450
wavecode_0_g=0.650
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=advance=advance+0.006*q6;
wave_0_per_frame2=advance=if(above(advance,1), advance-1, advance);
wave_0_per_frame3=t1=advance;
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=step=sample*128;
wave_0_per_point3=step2=(int(step)/128)*6.283;
wave_0_per_point4=step3=(step - int(step));
wave_0_per_point5=tm = t1 * 6.283 - 3.1415;
wave_0_per_point6=
wave_0_per_point7=//star lines
wave_0_per_point8=xp=sin(step2) * 0.4;
wave_0_per_point9=yp=cos(step2) * 0.4;
wave_0_per_point10=zp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;
wave_0_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=//kill stray lines from front to back
wave_0_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_0_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_0_per_point17=a=if(below(zp,-3) , 0 , a);
wave_0_per_point18=a=if(above(zp,3) , 0 , a);
wave_0_per_point19=
wave_0_per_point20=//a=a*(zp/6.08);
wave_0_per_point21=a=a*(1-step3);
wave_0_per_point22=a=min( max(a,0) , 1);
wave_0_per_point23=
wave_0_per_point24=
wave_0_per_point25=zp=zp*2 - 3.1415;
wave_0_per_point26=
wave_0_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_0_per_point28=
wave_0_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_0_per_point30=
wave_0_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_0_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_0_per_point33=
wave_0_per_point34=//shift back when pointing away from camera
wave_0_per_point35=zp=zp-q4*2;
wave_0_per_point36=
wave_0_per_point37=//z rotation
wave_0_per_point38=sang=sin(q1);cang=cos(q1);
wave_0_per_point39=xn=xp*sang + yp*cang;
wave_0_per_point40=yn=xp*cang - yp*sang;
wave_0_per_point41=zn=zp;
wave_0_per_point42=xp=xn;yp=yn;zp=zn;
wave_0_per_point43=
wave_0_per_point44=//y rotation;
wave_0_per_point45=sang=sin(q2);cang=cos(q2);
wave_0_per_point46=xn=xp*sang + zp*(cang);
wave_0_per_point47=yn=yp;
wave_0_per_point48=zn=xp*cang - zp*sang;
wave_0_per_point49=xp=xn;yp=yn;zp=zn;
wave_0_per_point50=
wave_0_per_point51=//x rotation;
wave_0_per_point52=sang=sin(q3);cang=cos(q3);
wave_0_per_point53=xn=xp;
wave_0_per_point54=yn=yp*sang + zp*cang;
wave_0_per_point55=zn=yp*cang - zp*sang;
wave_0_per_point56=xp=xn;yp=yn;zp=zn;
wave_0_per_point57=
wave_0_per_point58=
wave_0_per_point59=
wave_0_per_point60=zp=zp*2+1.55;
wave_0_per_point61=
wave_0_per_point62=//near clipping plane
wave_0_per_point63=a=a*above(zp,0.75);
wave_0_per_point64=//a=a*below(zp,8.55);
wave_0_per_point65=
wave_0_per_point66=x=xp/zp+ 0.5;
wave_0_per_point67=y=yp/zp * 1.3 + 0.5;
wave_0_per_point68=
wave_0_per_point69=a=a*0.5
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.450
wavecode_1_g=0.650
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=advance=advance+0.005*q6;
wave_1_per_frame2=advance=advance * below(advance,1);
wave_1_per_frame3=t1=advance;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=step=sample*128;
wave_1_per_point3=step2=(int(step)/128)*6.283;
wave_1_per_point4=step3=(step - int(step));
wave_1_per_point5=tm = t1 * 6.283 - 3.1415;
wave_1_per_point6=
wave_1_per_point7=//star lines
wave_1_per_point8=xp=sin(step2) * 0.4;
wave_1_per_point9=yp=cos(step2) * 0.4;
wave_1_per_point10=zp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;
wave_1_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_1_per_point12=
wave_1_per_point13=
wave_1_per_point14=//kill stray lines from front to back
wave_1_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_1_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_1_per_point17=a=if(below(zp,-3) , 0 , a);
wave_1_per_point18=a=if(above(zp,3) , 0 , a);
wave_1_per_point19=
wave_1_per_point20=//a=a*(zp/6.08);
wave_1_per_point21=a=a*(1-step3);
wave_1_per_point22=a=min( max(a,0) , 1);
wave_1_per_point23=
wave_1_per_point24=
wave_1_per_point25=zp=zp*2 - 3.1415;
wave_1_per_point26=
wave_1_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_1_per_point28=
wave_1_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_1_per_point30=
wave_1_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_1_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_1_per_point33=
wave_1_per_point34=//shift back when pointing away from camera
wave_1_per_point35=zp=zp-q4*2;
wave_1_per_point36=
wave_1_per_point37=//z rotation
wave_1_per_point38=sang=sin(q1);cang=cos(q1);
wave_1_per_point39=xn=xp*sang + yp*cang;
wave_1_per_point40=yn=xp*cang - yp*sang;
wave_1_per_point41=zn=zp;
wave_1_per_point42=xp=xn;yp=yn;zp=zn;
wave_1_per_point43=
wave_1_per_point44=//y rotation;
wave_1_per_point45=sang=sin(q2);cang=cos(q2);
wave_1_per_point46=xn=xp*sang + zp*(cang);
wave_1_per_point47=yn=yp;
wave_1_per_point48=zn=xp*cang - zp*sang;
wave_1_per_point49=xp=xn;yp=yn;zp=zn;
wave_1_per_point50=
wave_1_per_point51=//x rotation;
wave_1_per_point52=sang=sin(q3);cang=cos(q3);
wave_1_per_point53=xn=xp;
wave_1_per_point54=yn=yp*sang + zp*cang;
wave_1_per_point55=zn=yp*cang - zp*sang;
wave_1_per_point56=xp=xn;yp=yn;zp=zn;
wave_1_per_point57=
wave_1_per_point58=
wave_1_per_point59=
wave_1_per_point60=zp=zp*2+1.55;
wave_1_per_point61=
wave_1_per_point62=//near clipping plane
wave_1_per_point63=a=a*above(zp,0.75);
wave_1_per_point64=//a=a*below(zp,8.55);
wave_1_per_point65=
wave_1_per_point66=x=-xp/zp+ 0.5;
wave_1_per_point67=y=yp/zp * 1.3 + 0.5;
wave_1_per_point68=a=a*0.5
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.300
wavecode_2_g=0.600
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=advance=advance+0.005*q6;
wave_2_per_frame2=advance=advance * below(advance,1);
wave_2_per_frame3=t1=advance;
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=step=sample*128;
wave_2_per_point3=step2=(int(step)/128)*6.283;
wave_2_per_point4=step3=(step - int(step));
wave_2_per_point5=tm = t1 * 6.283 - 3.1415;
wave_2_per_point6=
wave_2_per_point7=//star lines
wave_2_per_point8=xp=sin(step2) * 1.1;
wave_2_per_point9=yp=cos(step2) * 1.1;
wave_2_per_point10=zp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;
wave_2_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_2_per_point12=
wave_2_per_point13=
wave_2_per_point14=//kill stray lines from front to back
wave_2_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_2_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_2_per_point17=a=if(below(zp,-3) , 0 , a);
wave_2_per_point18=a=if(above(zp,3) , 0 , a);
wave_2_per_point19=
wave_2_per_point20=//a=a*(zp/6.08);
wave_2_per_point21=a=a*(1-step3);
wave_2_per_point22=a=min( max(a,0) , 1);
wave_2_per_point23=
wave_2_per_point24=
wave_2_per_point25=zp=zp*2 - 3.1415;
wave_2_per_point26=
wave_2_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_2_per_point28=
wave_2_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_2_per_point30=
wave_2_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_2_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_2_per_point33=
wave_2_per_point34=//shift back when pointing away from camera
wave_2_per_point35=zp=zp-q4*2;
wave_2_per_point36=
wave_2_per_point37=
wave_2_per_point38=//z rotation
wave_2_per_point39=sang=sin(q1);cang=cos(q1);
wave_2_per_point40=xn=xp*sang + yp*cang;
wave_2_per_point41=yn=xp*cang - yp*sang;
wave_2_per_point42=zn=zp;
wave_2_per_point43=xp=xn;yp=yn;zp=zn;
wave_2_per_point44=
wave_2_per_point45=//y rotation;
wave_2_per_point46=sang=sin(q2);cang=cos(q2);
wave_2_per_point47=xn=xp*sang + zp*(cang);
wave_2_per_point48=yn=yp;
wave_2_per_point49=zn=xp*cang - zp*sang;
wave_2_per_point50=xp=xn;yp=yn;zp=zn;
wave_2_per_point51=
wave_2_per_point52=//x rotation;
wave_2_per_point53=sang=sin(q3);cang=cos(q3);
wave_2_per_point54=xn=xp;
wave_2_per_point55=yn=yp*sang + zp*cang;
wave_2_per_point56=zn=yp*cang - zp*sang;
wave_2_per_point57=xp=xn;yp=yn;zp=zn;
wave_2_per_point58=
wave_2_per_point59=
wave_2_per_point60=
wave_2_per_point61=zp=zp*2+1.55;
wave_2_per_point62=
wave_2_per_point63=//near clipping plane
wave_2_per_point64=a=a*above(zp,0.75);
wave_2_per_point65=//a=a*below(zp,8.55);
wave_2_per_point66=
wave_2_per_point67=x=xp/zp+ 0.5;
wave_2_per_point68=y=yp/zp * 1.3 + 0.5;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.400
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=advance=advance+0.004*q6;
wave_3_per_frame2=advance=advance * below(advance,1);
wave_3_per_frame3=t1=advance;
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=step=sample*128;
wave_3_per_point3=step2=(int(step)/128)*6.283;
wave_3_per_point4=step3=(step - int(step));
wave_3_per_point5=tm = t1 * 6.283 - 3.1415;
wave_3_per_point6=
wave_3_per_point7=//star lines
wave_3_per_point8=xp=sin(step2) * 1.6;
wave_3_per_point9=yp=cos(step2) * 1.6;
wave_3_per_point10=zp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;
wave_3_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_3_per_point12=
wave_3_per_point13=
wave_3_per_point14=//kill stray lines from front to back
wave_3_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_3_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_3_per_point17=a=if(below(zp,-3) , 0 , a);
wave_3_per_point18=a=if(above(zp,3) , 0 , a);
wave_3_per_point19=
wave_3_per_point20=//a=a*(zp/6.08);
wave_3_per_point21=a=a*(1-step3);
wave_3_per_point22=a=min( max(a,0) , 1);
wave_3_per_point23=
wave_3_per_point24=
wave_3_per_point25=zp=zp*2 - 3.1415;
wave_3_per_point26=
wave_3_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_3_per_point28=
wave_3_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_3_per_point30=
wave_3_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_3_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_3_per_point33=
wave_3_per_point34=//shift back when pointing away from camera
wave_3_per_point35=zp=zp-q4*2;
wave_3_per_point36=
wave_3_per_point37=
wave_3_per_point38=//z rotation
wave_3_per_point39=sang=sin(q1);cang=cos(q1);
wave_3_per_point40=xn=xp*sang + yp*cang;
wave_3_per_point41=yn=xp*cang - yp*sang;
wave_3_per_point42=zn=zp;
wave_3_per_point43=xp=xn;yp=yn;zp=zn;
wave_3_per_point44=
wave_3_per_point45=//y rotation;
wave_3_per_point46=sang=sin(q2);cang=cos(q2);
wave_3_per_point47=xn=xp*sang + zp*(cang);
wave_3_per_point48=yn=yp;
wave_3_per_point49=zn=xp*cang - zp*sang;
wave_3_per_point50=xp=xn;yp=yn;zp=zn;
wave_3_per_point51=
wave_3_per_point52=//x rotation;
wave_3_per_point53=sang=sin(q3);cang=cos(q3);
wave_3_per_point54=xn=xp;
wave_3_per_point55=yn=yp*sang + zp*cang;
wave_3_per_point56=zn=yp*cang - zp*sang;
wave_3_per_point57=xp=xn;yp=yn;zp=zn;
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=
wave_3_per_point61=zp=zp*2+1.55;
wave_3_per_point62=
wave_3_per_point63=//near clipping plane
wave_3_per_point64=a=a*above(zp,0.75);
wave_3_per_point65=//a=a*below(zp,8.55);
wave_3_per_point66=
wave_3_per_point67=x=xp/zp+ 0.5;
wave_3_per_point68=y=yp/zp * 1.3 + 0.5;
shapecode_0_enabled=1
shapecode_0_sides=5
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.38700
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.69447
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.800
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=5
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.610
shapecode_1_y=0.410
shapecode_1_rad=0.48170
shapecode_1_ang=1.00531
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.10462
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.400
shapecode_1_r2=0.400
shapecode_1_g2=0.600
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=flip=1
shape_1_per_frame1=flip=-flip;
shape_1_per_frame2=
shape_1_per_frame3=x=sin(q7)*0.2*flip + 0.5;
shape_1_per_frame4=y=cos(q7)*0.2*1.3 + 0.5;
shape_1_per_frame5=ang=-time*0.5;
shape_1_per_frame6=
shape_1_per_frame7=vol=(bass+mid+treb)*0.25;
shape_1_per_frame8=vol=vol*vol;
shape_1_per_frame9=
shape_1_per_frame10=a=a*min(vol,1);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.28999
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=2.59927
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.500
shapecode_2_b2=0.700
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x=sin(q8*2)*0.2;
shape_2_per_frame2=y=cos(q8*2)*0.2;
shape_2_per_frame3=
shape_2_per_frame4=
shape_2_per_frame5=
shape_2_per_frame6=x=x+0.2;
shape_2_per_frame7=ang=q7*1;
shape_2_per_frame8=sang=sin(ang);cang=cos(ang);
shape_2_per_frame9=xn=x*sang + y*cang;
shape_2_per_frame10=yn=x*cang - y*sang;
shape_2_per_frame11=x=xn + 0.5;
shape_2_per_frame12=y=yn*1.3 + 0.5;
shape_2_per_frame13=
shape_2_per_frame14=
shape_2_per_frame15=ang=-time*2;
shapecode_3_enabled=1
shapecode_3_sides=15
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.17987
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.600
shapecode_3_b=0.500
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.600
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=vol=(bass+mid+treb)*0.25;
shape_3_per_frame2=vol=vol*vol;
shape_3_per_frame3=
shape_3_per_frame4=a=min(vol,1);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=ob_r = 0.5 + 0.4*sin(time*1.324);
per_frame_26=ob_g = 0.5 + 0.4*cos(time*1.371);
per_frame_27=ob_b = 0.5+0.4*sin(2.332*time);
per_frame_28=ib_r = 0.5 + 0.25*sin(time*1.424);
per_frame_29=ib_g = 0.25 + 0.25*cos(time*1.871);
per_frame_30=ib_b = 1-ob_b;
per_frame_31=wave_a = 0;
per_frame_32=q8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);
per_frame_33=oldq8 = q8;
per_frame_34=q7 = 0.002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);
per_frame_35=dx = q7*1.0542;
per_frame_36=dy = q7*1.187;
per_frame_37=monitor =q7;
per_frame_38=dx = 0.5;
per_frame_39=dy=0.5;
per_frame_40=warp=0;
per_frame_41=zoom=  0.1*sin(q8);
per_pixel_1=box=(1.1*sqrt(2)-rad)+0.8*abs(x*3-0.4*sin(q1))%2 + 0.8*abs(y*3+0.4*sin(q1))%2;
per_pixel_2=q1 = 8.3+(sin(x+0.137*q8)-cos(y+0.213*q8));
per_pixel_3=zoom=if(above(box,1), (rd*rd)*3,zoom);
per_pixel_4=rot = if(above(box,1),5*sin(0.0185* time ),rot);
per_pixel_5=dx=if(above(box,1),dx,q4*sin((y-0.5)*q3)+q5*sin((y-0.5)*q2));
per_pixel_6=dy=if(above(box,1),dy,-q6*0.03*cos((x-0.5)*q2)+q7*cos((x-0.5)*q3));
per_pixel_7=rd=(1.2+0.3*sin(time*0.2)+0.4*sin(q8))*sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );
per_pixel_8=cx=0.5+222*sin(time*0.000001);
per_pixel_9=cy=0.5-22*q5;
per_pixel_10=
per_pixel_11=newx = x-q7;
per_pixel_12=newy = y-q8;
per_pixel_13=newrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));
per_pixel_14=newang = atan2(newx,newy);
per_pixel_15=newzoom = pow(0.999 + 0.05*sin((q4)*(newang+q3)), pow(sin(newrad*newrad), newrad));
per_pixel_16=rot=rot+0.16*sin(q6*-3.3+newrad*11)*(1.3-newrad);
per_pixel_17=//zoom=zoom+0.04*sin(q6*1.2+newang*6.28*3);
per_pixel_18=//cen_x = cos(time)*.2+.3;
per_pixel_19=//cen_y = sin(time)*.5+.5;
per_pixel_20=cen_x = q1;
per_pixel_21=cen_y = q2;
per_pixel_22=radxy = sin(time*.1)*.15+.3;
per_pixel_23=
per_pixel_24=dist_x = (x-cen_x)/(radxy*(sin(time*.2*0)*.3+cos((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_25=dist_y = (y-cen_y)/(radxy*(sin(time*.2*0)*.3+sin((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_26=in = below(abs(dist_x),1)*below(abs(dist_y),1);
per_pixel_27=//in = bnot(in);
per_pixel_28=out = bnot(in);
per_pixel_29=inx =(cen_x-q1)+.08*sign(dist_x)*sqr(1-abs(dist_x));
per_pixel_30=iny =(cen_y-q2)+.08*sign(dist_y)*sqr(1-abs(dist_y));
per_pixel_31=
per_pixel_32=//**********outside
per_pixel_33=vang=q3; //time*.1;
per_pixel_34=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_35=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_36=
per_pixel_37=dvx=.01*sin(time+vy*60*radxy);
per_pixel_38=dvy=.01*cos(time+vx*60*radxy);
per_pixel_39=
per_pixel_40=outx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_41=outy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_42=
per_pixel_43=dx=in*inx+out*outx;
per_pixel_44=dy=in*iny+out*outy;
warp_1=`shader_body
warp_2=`{
warp_3=`  // sample previous frame
warp_4=`  ret = tex2D( sampler_pw_main, uv ).xyz;
warp_5=`
warp_6=`  float n;
warp_7=`  float2 d = texsize.zw*1;
warp_8=`  n  = saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 1)).x*999);
warp_9=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 0)).x*999);
warp_10=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1,-1)).x*999);
warp_11=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0, 1)).x*999);
warp_12=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0,-1)).x*999);
warp_13=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 1)).x*999);
warp_14=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 0)).x*999);
warp_15=`  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1,-1)).x*999);
warp_16=`  
warp_17=`  if (n < 1.5)
warp_18=`    ret = 0;
warp_19=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_20=`                      ((uv.xyy*q27
warp_21=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_22=`                      ).xyz*
warp_23=`                      float3(1,1,0)*0.05 + 
warp_24=`                      time*float3(0,0,1)*q29
warp_25=`                     );
warp_26=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_27=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_28=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_29=`  if (n > 3.5)
warp_30=`    ret = 0;
warp_31=`  if (ret.x < 0.1 && abs(n-3) < 0.5)
warp_32=`    ret = 1;
warp_33=`
warp_34=`  // darken (decay) over time
warp_35=` // ret = (ret - 0.016)*0.985;
warp_36=`}
comp_1=`const float4 samples[5] = {
comp_2=`    0.0,    0.0,    0,    11.0/3.0,
comp_3=`    0.0,    1.0,    0,    -2.0/3.0,
comp_4=`    0.0,    -1.0,   0,    -2.0/3.0,
comp_5=`    -1.0,    0.0,   0,    -2.0/3.0,
comp_6=`    1.0,    0.0,   0,    -2.0/3.0
comp_7=`};
comp_8=`
comp_9=`
comp_10=`
comp_11=`sampler sampler_rand01;
comp_12=`
comp_13=`
comp_14=`shader_body
comp_15=`{
comp_16=`    float2 d = texsize.zw*8;
comp_17=`    float1 dx = ( GetBlur1(uv.yx+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;
comp_18=`    float1 dy = ( GetBlur1(uv.yx+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;
comp_19=`    float2 uv_y = uv+float2(dy,dx)*0.55;  
comp_20=`    float2 uv_y2 = (uv_y*1.25)-.125;  
comp_21=`
comp_22=`  
comp_23=`    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv.yx));
comp_24=`    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);
comp_25=`    //ret *= .75;
comp_26=`    ret *= saturate(length(ret-0.5)*5);
comp_27=`    //ret = ret.xy;
comp_28=`    ret = lum(ret);
comp_29=`    ret += 1.25;
comp_30=`    ret *= ret*.45;
comp_31=`    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);
comp_32=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_33=`                      ((uv_y2.xyy*q28
comp_34=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_35=`                      ).xyz*
comp_36=`                      float3(1,1,0)*0.05 + 
comp_37=`                      time*float3(0,0,1)*q31
comp_38=`                     );
comp_39=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_40=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_41=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_42=`    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,ret));
comp_43=`    ret *=1;
comp_44=`
comp_45=`    
comp_46=`    float3 a_varaible = 0; 
comp_47=`    for(int i=0;i<5;i++)
comp_48=`      a_varaible += samples[i].w*tex2D(sampler_rand01,ret*0.1+
comp_49=`       float2(samples[i].x*(1/texsize.x),
comp_50=`              samples[i].y*(1/texsize.y)))*0.2;
comp_51=`
comp_52=`    ret = a_varaible;
comp_53=`    ret = 1  - 2*(1 - ret)*ret - GetBlur3(uv);
comp_54=`
comp_55=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99950
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00900
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = time/6;//q2*2; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = -1;
wave_0_per_frame5=t5 = -1;
wave_0_per_frame6=t6 = 1;
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*6.283;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=//draw circle, loop 32x
wave_0_per_point7=xp = -1;
wave_0_per_point8=xp =   if( equal(t3,1) , 1 , xp );
wave_0_per_point9=  xp = if( equal(t3,2) , 1 , xp );
wave_0_per_point10=yp = t4 * t6;
wave_0_per_point11=zp = t5;
wave_0_per_point12=
wave_0_per_point13=t4h = t4;
wave_0_per_point14=  t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_0_per_point15=  t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_0_per_point16=t3 = t3 + 1;
wave_0_per_point17=t6h = t6;
wave_0_per_point18=  t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_0_per_point19=  t6 = t6h;
wave_0_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_0_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_0_per_point22=  t4 = t4h;
wave_0_per_point23=t3 = t3 * (1-equal(t3,4));
wave_0_per_point24=
wave_0_per_point25=//x axis rotation;
wave_0_per_point26=ang = t1;
wave_0_per_point27=sang = sin(ang);cang = cos(ang);
wave_0_per_point28=xq = xp;
wave_0_per_point29=yq = yp*cang - zp*sang;
wave_0_per_point30=zq = yp*sang + zp*cang;
wave_0_per_point31=xp=xq;yp=yq;zp=zq;
wave_0_per_point32=
wave_0_per_point33=//y axis rotation;
wave_0_per_point34=ang = t1*2;
wave_0_per_point35=sang = sin(ang);cang = cos(ang);
wave_0_per_point36=xq = xp*cang - zp*sang;
wave_0_per_point37=yq = yp;
wave_0_per_point38=zq = xp*sang + zp*cang;
wave_0_per_point39=xp=xq;yp=yq;zp=zq;
wave_0_per_point40=
wave_0_per_point41=//z axis rotation;
wave_0_per_point42=ang = t1*3;
wave_0_per_point43=sang = sin(ang);cang = cos(ang);
wave_0_per_point44=xq = xp*cang - yp*sang;
wave_0_per_point45=yq = xp*sang + yp*cang;
wave_0_per_point46=zq = zp;
wave_0_per_point47=xp=xq;yp=yq;zp=zq;
wave_0_per_point48=
wave_0_per_point49=//push forward into viewspace
wave_0_per_point50=zp = zp + 4;
wave_0_per_point51=
wave_0_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point53=
wave_0_per_point54=//project into camera space, and compensate for aspect ratio
wave_0_per_point55=x = xp/zp * fov + 0.5;
wave_0_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wave_0_per_point57=r=q8;
wave_0_per_point58=g=q9;
wave_0_per_point59=b=q10;
wave_0_per_point60=a=q11;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q2*2; //volume time
wave_1_per_point1=//traveling line
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=phase = sample;
wave_1_per_point5=
wave_1_per_point6=//draw circle, loop 32x
wave_1_per_point7=xp = 0;
wave_1_per_point8=yp = 0;
wave_1_per_point9=zp = -1;
wave_1_per_point10=
wave_1_per_point11=//x axis rotation;
wave_1_per_point12=ang = (t1 + phase) * 7;
wave_1_per_point13=sang = sin(ang);cang = cos(ang);
wave_1_per_point14=xq = xp;
wave_1_per_point15=yq = yp*cang - zp*sang;
wave_1_per_point16=zq = yp*sang + zp*cang;
wave_1_per_point17=xp=xq;yp=yq;zp=zq;
wave_1_per_point18=
wave_1_per_point19=//y axis rotation;
wave_1_per_point20=ang = (t1 + phase) * 2.2;
wave_1_per_point21=sang = sin(ang);cang = cos(ang);
wave_1_per_point22=xq = xp*cang - zp*sang;
wave_1_per_point23=yq = yp;
wave_1_per_point24=zq = xp*sang + zp*cang;
wave_1_per_point25=xp=xq;yp=yq;zp=zq;
wave_1_per_point26=
wave_1_per_point27=//z axis rotation;
wave_1_per_point28=ang = (t1 + phase) * 3.4;
wave_1_per_point29=sang = sin(ang);cang = cos(ang);
wave_1_per_point30=xq = xp*cang - yp*sang;
wave_1_per_point31=yq = xp*sang + yp*cang;
wave_1_per_point32=zq = zp;
wave_1_per_point33=xp=xq;yp=yq;zp=zq;
wave_1_per_point34=
wave_1_per_point35=//push forward into viewspace
wave_1_per_point36=zp = zp + 4;
wave_1_per_point37=
wave_1_per_point38=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point39=
wave_1_per_point40=//project into camera space, and compensate for aspect ratio
wave_1_per_point41=x = xp/zp * fov + 0.5;
wave_1_per_point42=y = yp/zp * 1.3333 * fov + 0.5;
wave_1_per_point43=
wave_1_per_point44=//a = sample;
wave_1_per_point45=r=q10;
wave_1_per_point46=g=q8;
wave_1_per_point47=b=q9;
wave_1_per_point48=a=q11;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=256
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.600
shapecode_0_g2=0.700
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = q2*2; //volume time
shape_0_per_frame1=//traveling line
shape_0_per_frame2=
shape_0_per_frame3=n = (sin(q9+instance)+1)/2*instance*4000;//sample*6.283;
shape_0_per_frame4=phase = (sin(q8+instance)+1)/2*instance*4000;
shape_0_per_frame5=
shape_0_per_frame6=//draw circle, loop 32x
shape_0_per_frame7=xp = 0;
shape_0_per_frame8=yp = 0;
shape_0_per_frame9=zp = -1;
shape_0_per_frame10=
shape_0_per_frame11=//x axis rotation;
shape_0_per_frame12=ang = (t1 + phase) * 7;
shape_0_per_frame13=sang = sin(ang);cang = cos(ang);
shape_0_per_frame14=xq = xp-instance/300-q11*.1;
shape_0_per_frame15=yq = yp*cang - zp*sang;
shape_0_per_frame16=zq = yp*sang + zp*cang;
shape_0_per_frame17=xp=xq;yp=yq;zp=zq;
shape_0_per_frame18=
shape_0_per_frame19=//y axis rotation;
shape_0_per_frame20=ang = (t1 + phase) * 2.2;
shape_0_per_frame21=sang = sin(ang);cang = cos(ang);
shape_0_per_frame22=xq = xp*cang - zp*sang;
shape_0_per_frame23=yq = yp+instance/1000-q11*.1;
shape_0_per_frame24=zq = xp*sang + zp*cang;
shape_0_per_frame25=xp=xq;yp=yq;zp=zq;
shape_0_per_frame26=
shape_0_per_frame27=//z axis rotation;
shape_0_per_frame28=ang = (t1 + phase) * 3.4;
shape_0_per_frame29=sang = sin(ang);cang = cos(ang);
shape_0_per_frame30=xq = xp*cang - yp*sang;
shape_0_per_frame31=yq = xp*sang + yp*cang;
shape_0_per_frame32=zq = zp;
shape_0_per_frame33=xp=xq;yp=yq;zp=zq;
shape_0_per_frame34=
shape_0_per_frame35=//push forward into viewspace
shape_0_per_frame36=zp = zp + 4 + instance/100-q11*.1;
shape_0_per_frame37=rad=zp/150;
shape_0_per_frame38=fov = 1; //larger number equal less extreme perspective (zoom in)
shape_0_per_frame39=
shape_0_per_frame40=//project into camera space, and compensate for aspect ratio
shape_0_per_frame41=x = xp/zp * fov + 0.5;
shape_0_per_frame42=y = yp/zp * 1.3333 * fov + 0.5;
shape_0_per_frame43=r=q8-instance*.1;
shape_0_per_frame44=g=q10-instance*.11;
shape_0_per_frame45=b=q9-instance*.12;
shape_0_per_frame46=a=q11-instance*.13;
shape_0_per_frame47=r2=q9-instance*.14;
shape_0_per_frame48=g2=q10-instance*.15;
shape_0_per_frame49=b2=q8-instance*.16;
shape_0_per_frame50=a2=q11-instance*.17;
shape_0_per_frame51=border_r=q9-instance*.18;
shape_0_per_frame52=border_g=q8-instance*.19;
shape_0_per_frame53=border_b=q10-instance*.2;
shape_0_per_frame54=border_a=-q11-instance*.21;
shapecode_1_enabled=0
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.600
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=x1 = 2;
per_frame_init_2=y1= 2;
per_frame_init_3=z1 = 2;
per_frame_1=// raytraced sphere code
per_frame_2=
per_frame_3=d = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon
per_frame_4=z = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view
per_frame_5=
per_frame_6=zz = 1 + bass_att*0; // linear zoom
per_frame_7=
per_frame_8=pi = asin(1)*2;
per_frame_9=pi2inv = 0.5/pi;
per_frame_10=maskangle = asin( 1/d);
per_frame_11=q32 = maskangle; // hit = (cameras angle < mask_angle)
per_frame_12=q31 = d;
per_frame_13=q30 = z;
per_frame_14=q29 = pi2inv;
per_frame_15=q28 = pi;
per_frame_16=q27 = 1/zz;
per_frame_17=
per_frame_18=v = 0.4;
per_frame_19=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_20=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_21=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_22=
per_frame_23=n = n + j1*0.0152;
per_frame_24=n1 = n1 + j2*0.0152;
per_frame_25=n2 = n2 + j3*0.0152;
per_frame_26=
per_frame_27=vol=(bass+mid+treb)*0.25;
per_frame_28=vol=vol;
per_frame_29=q3=vol;
per_frame_30=mtime = mtime+vol*0.01;
per_frame_31=q1=mtime;
per_frame_32=
per_frame_33=zoom = zoom + 0.015*vol;
per_frame_34=
per_frame_35=w1 = n*0.01;    // solid angles to rotate the sphere in its origin
per_frame_36=w2 = n1*0.01;
per_frame_37=w3 = n2*0.01;
per_frame_38=
per_frame_39=q20 = cos(w1);
per_frame_40=q21 = sin(w1);
per_frame_41=q22 = cos(w2);
per_frame_42=q23 = sin(w2);
per_frame_43=q24 = cos(w3);
per_frame_44=q25 = sin(w3);
per_frame_45=q8=vol;
per_frame_46=q9=vol;
per_frame_47=q10=vol;
per_frame_48=q11=vol;
warp_1=`float2 polar, factorA, factorB, product;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`
warp_6=`float z = q30;
warp_7=`float d = q31;
warp_8=`float pi = q28;
warp_9=`float pi2inv = q29;
warp_10=`float mask_apex = q32;
warp_11=`float zoom = q27;
warp_12=`
warp_13=`float2 c = zoom*(uv-0.5)*aspect.xy;
warp_14=`
warp_15=`float camera_apex = atan2( length(c),z);
warp_16=`
warp_17=`bool mask = mask_apex >= camera_apex;
warp_18=`
warp_19=`float longitude = atan2(c.x,c.y);
warp_20=`float latitude = (pi - camera_apex + asin(d*sin(camera_apex)));
warp_21=`
warp_22=`float2 polar = float2(longitude,latitude);
warp_23=`
warp_24=`float3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));
warp_25=`
warp_26=`factorA = p.zy;
warp_27=`factorB = float2(q20,q21);
warp_28=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
warp_29=`p.zy = product.xy;
warp_30=`
warp_31=`factorA = p.zx;
warp_32=`factorB = float2(q22,q23);
warp_33=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
warp_34=`p.zx = product.xy;
warp_35=`
warp_36=`factorA = p.yx;
warp_37=`factorB = float2(q24,q25);
warp_38=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_39=`p.yx = product.xy;
warp_40=`polar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);
warp_41=`
warp_42=`polar = polar;
warp_43=`
warp_44=`    float3 pos = float3(polar,time*0.15);
warp_45=`    float3 rc = tex3D(sampler_noisevol_hq, pos);
warp_46=`    rc += tex3D(sampler_noisevol_hq, 2*pos)*0.5;
warp_47=`    rc += tex3D(sampler_noisevol_hq, 4*pos)*0.25;
warp_48=`    rc += tex3D(sampler_noisevol_hq, 8*pos)*0.125;
warp_49=`    rc += tex3D(sampler_noisevol_hq, 16*pos)*0.0625;
warp_50=`    //rc = rc*0.556;    
warp_51=`    rc = (rc*rc*rc)*2;
warp_52=`    //rc -= GetBlur1(uv);   
warp_53=`    rc *= q3*0.5;
warp_54=`
warp_55=`    float2 ruv = uv = 0.5 + (uv-0.5)*(1+(rc.x*.0));  
warp_56=`    ret = tex2D(sampler_fc_main, float2(ruv.x, ruv.y)).xyz;
warp_57=`    
warp_58=`    float3 noise2 = tex2D(sampler_noise_lq, uv_orig*texsize.xy*texsize_noise_lq.zw+rand_frame.xy);
warp_59=`    noise2 += lerp(rc*2, 2, rad);
warp_60=`    
warp_61=`    ret = ret+0.5*lum(cross((1-ret),(noise2)))*float3(0.6,0.5,0.4);
warp_62=`    ret -= lerp(0.0,0.1,rad);    
warp_63=`
warp_64=`    ret +=0.1*tex3d(sampler_noisevol_hq, (p+time*0.1)*0.7)*mask;
warp_65=`
warp_66=`
warp_67=`}
comp_1=`shader_body 
comp_2=`{ 
comp_3=`
comp_4=`float3 reta = tex2D(sampler_main, uv);
comp_5=`ret = reta;
comp_6=`//ret = sqrt(ret)*1;
comp_7=`//ret += GetBlur2(uv);
comp_8=`ret -= GetBlur1(uv)*0.5;
comp_9=`
comp_10=`ret *= 2;
comp_11=`
comp_12=`}

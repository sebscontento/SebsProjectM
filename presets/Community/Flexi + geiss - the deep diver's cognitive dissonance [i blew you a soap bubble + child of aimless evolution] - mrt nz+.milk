MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.803
fWarpScale=1.220
fZoomExponent=0.99999
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.31218
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=10
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01525
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
shape_0_per_frame2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0008*cos(ma));
shape_0_per_frame5=my=my+(.0008*sin(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=
shape_0_per_frame15=a=(above(bass+mid+treb,.2));
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=warp = 0;
per_frame_26=zoom = 1;
per_frame_27=wave_a = 0;
per_frame_28=w = w1; // forward vector angle
per_frame_29=ww = -(y1-y2)*(1+(70/fps-1)*2) - y1*0.8; // bending indication
per_frame_30=w = w - ww*5;
per_frame_31=q1 = cos(ww);
per_frame_32=q2 = sin(ww);
per_frame_33=q3 = 1.12;
per_frame_34=q4 = sin(w)*0.042;
per_frame_35=q5 = cos(w)*0.042;
per_frame_36=a = asin(1)*0.5;
per_frame_37=d = 0.08;
per_frame_38=q6 = cos(a+0*ww);
per_frame_39=q7 = sin(a+0*ww);
per_frame_40=q8 = 3.3;
per_frame_41=q9 = cos(-w + asin(1))*d*aspectx;
per_frame_42=q10 = sin(-w+asin(1))*d*aspecty;
per_frame_43=q11 = cos(-a+0*ww);
per_frame_44=q12 = sin(-a+0*ww);
per_frame_45=q13 = q8;
per_frame_46=q14 = cos(-w + asin(1))*d*aspectx;
per_frame_47=q15 = sin(-w+asin(1))*d*aspecty;
per_frame_48=bb = bb*0.97 + bass*0.04;
per_frame_49=mm = mm*0.97 + mid*0.04;
per_frame_50=tt = tt*0.97 + treb*0.04;
per_frame_51=w1 = w1 + ww1*sqrt(vx*vx+vy*vy)*a*2;
per_frame_52=ww1 = ww1*0.94 + y1*0.1;
per_frame_53=q16 = (bb-tt)*0.2;
per_frame_54=y1 = y1 + v1*0.1;
per_frame_55=y2 = y2 + v2*0.2;
per_frame_56=v1 = v1*0.95 - (y1-q16)*0.1;
per_frame_57=v2 = v2*0.99 - (y2-y1)*0.2;
per_frame_58=a = abs(y2-y1)*2.2/fps;
per_frame_59=q17 = sin(w)*a;
per_frame_60=q18 = -cos(w)*a;
per_frame_61=v = 0.25;
per_frame_62=x = x + vx*v; x=min(1,max(-1,x));
per_frame_63=y = y + vy*v; y=min(1,max(-1,y));
per_frame_64=vx = vx*0.97 +sin(w)*a  + (equal(x,-1)- equal(x,1))*0.2;
per_frame_65=vy = vy*0.97 -cos(w)*a  + (equal(y,-1)- equal(y,1))*0.2;
per_frame_66=q19 = x*0.5;
per_frame_67=q20 = y*0.5;
per_frame_68=
per_frame_69=q21 = -w1 - ww*4*0;
per_frame_70=
per_frame_71=mx = max(max(bb,mm),tt);
per_frame_72=mn = min(min(bb,mm),tt);
per_frame_73=//ob_r  = (bb-mn)/(mx-mn);
per_frame_74=//ob_g = (mm-mn)/(mx-mn);
per_frame_75=//ob_b = (tt-mn)/(mx-mn);
per_frame_76=
per_frame_77=
per_frame_78=d = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon
per_frame_79=z = 0.4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view
per_frame_80=
per_frame_81=zz = 10 + bass_att*2; // linear zoom
per_frame_82=
per_frame_83=pi = asin(1)*2;
per_frame_84=pi2inv = 0.5/pi;
per_frame_85=maskangle = asin( 1/d);
per_frame_86=q32 = maskangle; // hit = (cameras angle < mask_angle)
per_frame_87=q31 = d;
per_frame_88=q30 = z;
per_frame_89=q29 = pi2inv;
per_frame_90=q28 = pi;
per_frame_91=q27 = 1/zz;
per_frame_92=q26 = time;
per_frame_93=v = 0.4;
per_frame_94=
per_frame_95=n = n + bb*v;
per_frame_96=n1 = n1 + mm*v;
per_frame_97=n2 = n2 + tt*v;
per_frame_98=
per_frame_99=
per_frame_100=w1 = n*0.01;    // solid angles to rotate the sphere in its origin
per_frame_101=w2 = n1*0.01;
per_frame_102=w3 = n2*0.01;
per_frame_103=
per_frame_104=q10 = cos(w1);
per_frame_105=q11 = sin(w1);
per_frame_106=q22 = cos(w2);
per_frame_107=q23 = sin(w2);
per_frame_108=q24 = cos(w3);
per_frame_109=q25 = sin(w3);
per_pixel_1=xo = x;
per_pixel_2=yo = y;
per_pixel_3=
per_pixel_4=x = 0.5 +(x-0.5)*aspectx;
per_pixel_5=y = 0.5 +(y-0.5)*aspecty;
per_pixel_6=
per_pixel_7=// geiss' tokamak code
per_pixel_8=du = (x*2-1) - q19*2;
per_pixel_9=dv = (y*2-1) + q20*2;
per_pixel_10=dist = sqrt(du*du+dv*dv);
per_pixel_11=ang2 = (atan2(du,dv))*3 + q21*2;// + q22;
per_pixel_12=mult = -pow(dist,2)*0.02;
per_pixel_13=dx2 = mult*sin(ang2)*aspectx;
per_pixel_14=dy2 = mult*cos(ang2)*aspecty;
per_pixel_15=
per_pixel_16=
per_pixel_17=x = xo;
per_pixel_18=y = yo;
per_pixel_19=
per_pixel_20=
per_pixel_21=// have a nice warp effect? - rotate it like a shape!
per_pixel_22=
per_pixel_23=  angle = q21  + 1.579;
per_pixel_24=
per_pixel_25=/////////////////////////////////////////////////////////
per_pixel_26=X1 = (x-0.5)*aspectx; // center
per_pixel_27=Y1 = (y-0.5)*aspecty;
per_pixel_28=x = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane
per_pixel_29=y = sin(-angle)*X1 +cos(-angle)*Y1;
per_pixel_30=/////////////////////////////////////////////////////////
per_pixel_31=
per_pixel_32=  // place your original code here
per_pixel_33=
per_pixel_34=  t = time*2;
per_pixel_35=  v = 0.003;
per_pixel_36=  n = 25;
per_pixel_37=
per_pixel_38=  dx = v*(cos((-x+y)*n+t) + sin((x+y)*n+t));
per_pixel_39=  dy = v*(cos((x-y)*n-t) + sin((-x-y)*n-t));
per_pixel_40=
per_pixel_41=
per_pixel_42=/////////////////////////////////////////////////////////
per_pixel_43=dx1 = cos(angle)*dx - sin(angle)*dy; // rotate the dx/dy value to match the x/y pane
per_pixel_44=dy1 = sin(angle)*dx + cos(angle)*dy;
per_pixel_45=dx = dx1*aspectx;
per_pixel_46=dy = dy1*aspecty;
per_pixel_47=/////////////////////////////////////////////////////////
per_pixel_48=
per_pixel_49=dx = dx + dx2;
per_pixel_50=dy = dy + dy2;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1, uv6;
warp_4=`float dx,dy;
warp_5=`
warp_6=`shader_body {
warp_7=`
warp_8=`uv1 = (uv-.5);
warp_9=`
warp_10=`float2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;
warp_11=`uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));
warp_12=`
warp_13=`mus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));
warp_14=`mus *= float3 (1,.96,.9)/25;
warp_15=`
warp_16=`uv6 = .2*sin(12*uv+rand_frame);
warp_17=`float3 dots = .001/length(uv6)* float3 (0.2,1,1);
warp_18=`
warp_19=`//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));
warp_20=`//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);
warp_21=`
warp_22=`mus -= dots;
warp_23=`
warp_24=`
warp_25=`float3 blur = GetBlur1(frac(uv));
warp_26=`
warp_27=`float2 hor = float2 (texsize.z,0);
warp_28=`float2 ver = float2 (0,texsize.w);
warp_29=`hor = float2 (.004,0);
warp_30=`ver = float2 (0,.004);
warp_31=`
warp_32=`
warp_33=`
warp_34=`float dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));
warp_35=`float dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));
warp_36=`
warp_37=`float2 zz = float2 (dx,dy);
warp_38=`
warp_39=`
warp_40=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_41=`crisp +=.015 - length(zz)*blur/1.5;
warp_42=`
warp_43=`float3 ret1 = crisp - lum(blur)*.012 + mus;
warp_44=`//ret1 = abs(mus)/2;
warp_45=`ret = ret1 * .99 -  .04 ;
warp_46=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_47=`                      ((zz.xyy*q27
warp_48=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_49=`                      ).xyz*
warp_50=`                      float3(1,1,0)*0.05 + 
warp_51=`                      time*float3(0,0,1)*q29
warp_52=`                     );
warp_53=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_54=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_55=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_56=`}
comp_1=`float2 polar, factorA, factorB, product;
comp_2=`
comp_3=`sampler sampler_pano_starsmap;
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`
comp_8=`
comp_9=`float z = q30;
comp_10=`float d = q31;
comp_11=`float pi = q28;
comp_12=`float pi2inv = q29;
comp_13=`float mask_apex = q32;
comp_14=`float zoom = q27;
comp_15=`
comp_16=`float2 c = zoom*(uv-0.5)*aspect.xy;
comp_17=`
comp_18=`float camera_apex = atan2( length(c),z);
comp_19=`
comp_20=`bool mask = mask_apex >= camera_apex;
comp_21=`
comp_22=`float longitude = atan2(c.x,c.y);
comp_23=`float latitude = (pi - camera_apex + asin(d*sin(camera_apex)));
comp_24=`
comp_25=`float2 polar = float2(longitude,latitude);
comp_26=`
comp_27=`float3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));
comp_28=`
comp_29=`factorA = p.zy;
comp_30=`factorB = float2(q10,q11);
comp_31=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_32=`p.zy = product.xy;
comp_33=`
comp_34=`factorA = p.zx;
comp_35=`factorB = float2(q22,q23);
comp_36=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_37=`p.zx = product.xy;
comp_38=`
comp_39=`factorA = p.yx;
comp_40=`factorB = float2(q24,q25);
comp_41=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_42=`p.yx = product.xy;
comp_43=`
comp_44=`polar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);
comp_45=`
comp_46=`//Eo.S's mirror code!
comp_47=`float2 polar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );
comp_48=`
comp_49=`float2 uv1 = float2(polar2.x-q6, polar2.y-q5);
comp_50=`
comp_51=`float2 hor = float2 (texsize.z*1,0);
comp_52=`float2 ver = float2 (0,texsize.w*1);
comp_53=`float dx = GetPixel (polar2-hor) - GetPixel (polar2+hor);
comp_54=`float dy = GetPixel (polar2-ver) - GetPixel (polar2+ver);
comp_55=`float2 dz = float2 (dx,dy);
comp_56=`
comp_57=`uv1 = uv1*0+.3*cos(uv1*2) - dz;
comp_58=`float dots = saturate(.04/length(uv1));
comp_59=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;
comp_60=`float3 dots2 = saturate(.04/length(uv1));
comp_61=`dots -= lum(GetBlur2(polar2));
comp_62=`
comp_63=`ret = dots + GetPixel(polar2)*12*dots2;
comp_64=`
comp_65=`//ret = tex2D(sampler_main,polar2);
comp_66=`
comp_67=`//ret = lerp(ret,1,mask*tex2d(sampler_pano_earth_clouds,polar)*mid_att*0.5);
comp_68=`
comp_69=`
comp_70=`c = -(uv-0.5)*aspect.xy;
comp_71=`polar = float2( atan2(c.x,z), atan2(c.y,z));
comp_72=`p = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));
comp_73=`factorA = p.zy;factorB = float2(q10,q11);
comp_74=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_75=`p.zy = product.xy;factorA = p.zx;factorB = float2(q22,q23);
comp_76=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_77=`p.zx = product.xy;factorA = p.yx;factorB = float2(q24,q25);
comp_78=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_79=`p.yx = product.xy;polar = float2( atan2(p.x,p.z),atan2(p.y,length(p.xz))*2)*pi2inv + float2(0,0.5);
comp_80=`
comp_81=`polar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );
comp_82=`
comp_83=`uv1 = float2(polar2.x-q6, polar2.y-q5);
comp_84=`
comp_85=`hor = float2 (texsize.z,0);
comp_86=`ver = float2 (0,texsize.w*1);
comp_87=`dx = GetPixel (polar2-hor) - GetPixel (polar2+hor);
comp_88=`dy = GetPixel (polar2-ver) - GetPixel (polar2+ver);
comp_89=`dz = float2 (dx,dy);
comp_90=`
comp_91=`uv1 = uv1*0+.3*cos(uv1*2) - dz;
comp_92=`dots = saturate(.04/length(uv1));
comp_93=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;
comp_94=`dots2 = saturate(.04/length(uv1));
comp_95=`dots -= lum(GetBlur2(polar2));
comp_96=`
comp_97=`ret = lerp(ret,pow(dots + GetPixel(polar2)*12*dots2,1.75).yzx,(1-mask));
comp_98=`
comp_99=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_100=`                      ((uv1.xyy*q28
comp_101=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_102=`                      ).xyz*
comp_103=`                      float3(1,1,0)*0.05 + 
comp_104=`                      time*float3(0,0,1)*q31
comp_105=`                     );
comp_106=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_107=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_108=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_109=`}
comp_110=`
comp_111=`

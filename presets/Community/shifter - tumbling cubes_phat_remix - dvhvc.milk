MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=4.946
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=1
bInvert=1
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.99984
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=sp = sample*6.28*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = q1;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=xang = q2;
wave_0_per_point14=axang = 0;
wave_0_per_point15=yang = q3;
wave_0_per_point16=ayang = 0;
wave_0_per_point17=zang = q4;
wave_0_per_point18=azang = 0;
wave_0_per_point19=fov = .3;
wave_0_per_point20=
wave_0_per_point21=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point22=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point23=ox = mx;
wave_0_per_point24=oy = my;
wave_0_per_point25=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point26=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point27=ox = mx;
wave_0_per_point28=oz = mz;
wave_0_per_point29=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point30=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point31=oy = my;
wave_0_per_point32=oz = mz;
wave_0_per_point33=
wave_0_per_point34=a = .05;
wave_0_per_point35=mod = (oz+1)*.5;
wave_0_per_point36=a = a*max(min(mod,1),0);
wave_0_per_point37=oz = oz - 2;
wave_0_per_point38=x = ox*fov/oz + 0.5;
wave_0_per_point39=x = (x-.5)*0.75 + 0.5;
wave_0_per_point40=y = oy*fov/oz + 0.5;
wave_0_per_point41=
wave_0_per_point42=r = 1+sin(sp);
wave_0_per_point43=g = 0.5 + 0.5*sin(sample*1.57);
wave_0_per_point44=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=tic = time - tin;
wave_1_per_frame2=tin = time;
wave_1_per_frame3=mod = .1*(mod*9 + bass_att);
wave_1_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_1_per_frame5=t1 = tt;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = q1;
wave_1_per_point5=pi = 3.141592653;
wave_1_per_point6=ss = sample*6;
wave_1_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_1_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_1_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_1_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_1_per_point13=
wave_1_per_point14=zang = t1;
wave_1_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point17=ox = mx;
wave_1_per_point18=oy = my;
wave_1_per_point19=
wave_1_per_point20=sh = sz*.5;
wave_1_per_point21=br = (zang/pi) + .5;
wave_1_per_point22=br = br - int(br*.25)*4;
wave_1_per_point23=br = int(br);
wave_1_per_point24=ra = pow(sh*sh*2,.5);
wave_1_per_point25=
wave_1_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_1_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_1_per_point28=
wave_1_per_point29=xang = q2;
wave_1_per_point30=axang = 0;
wave_1_per_point31=yang = q3;
wave_1_per_point32=ayang = 0;
wave_1_per_point33=zang = q4;
wave_1_per_point34=azang = 0;
wave_1_per_point35=fov = .3;
wave_1_per_point36=
wave_1_per_point37=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point38=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point39=ox = mx;
wave_1_per_point40=oy = my;
wave_1_per_point41=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point42=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point43=ox = mx;
wave_1_per_point44=oz = mz;
wave_1_per_point45=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point46=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point47=oy = my;
wave_1_per_point48=oz = mz;
wave_1_per_point49=
wave_1_per_point50=a = .05;
wave_1_per_point51=mod = (oz+1)*.5;
wave_1_per_point52=a = a*max(min(mod,1),0);
wave_1_per_point53=oz = oz - 2;
wave_1_per_point54=x = ox*fov/oz + 0.5;
wave_1_per_point55=x = (x-.5)*0.75 + 0.5;
wave_1_per_point56=y = oy*fov/oz + 0.5;
wave_1_per_point57=
wave_1_per_point58=r = -sin(sp);
wave_1_per_point59=g = 0.5 - 0.5*sin(sample*1.57);
wave_1_per_point60=b = 0.5 - 0.5*cos(sample*1.57);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=tic = time - tin;
wave_2_per_frame2=tin = time;
wave_2_per_frame3=mod = .1*(mod*9 + mid_att);
wave_2_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_2_per_frame5=t1 = tt;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = q1;
wave_2_per_point5=pi = 3.141592653;
wave_2_per_point6=ss = sample*6;
wave_2_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_2_per_point13=
wave_2_per_point14=ang = t1;
wave_2_per_point15=mx = ox*cos(ang) + oz*sin(ang);
wave_2_per_point16=mz = - ox*sin(ang) + oz*cos(ang);
wave_2_per_point17=ox = mx;
wave_2_per_point18=oz = mz;
wave_2_per_point19=
wave_2_per_point20=sh = sz*.5;
wave_2_per_point21=br = (ang/pi) + .5;
wave_2_per_point22=br = br - int(br*.25)*4;
wave_2_per_point23=br = 4-int(br);
wave_2_per_point24=br = br - 4*equal(br,4);
wave_2_per_point25=ra = pow(sh*sh*2,.5);
wave_2_per_point26=ang = -ang;
wave_2_per_point27=ox = ox - (sh + ra*sin(-ang + pi*.25))*equal(br,0) - (-sh + ra*sin(ang + pi*.25))*equal(br,1) - (-sh - ra*sin(-ang + pi*.25))*equal(br,2) - (sh - ra*sin(ang + pi*.25))*equal(br,3);
wave_2_per_point28=oz = oz - (sh + ra*cos(-ang + pi*.25))*equal(br,0) - (sh - ra*cos(ang + pi*.25))*equal(br,1) - (-sh - ra*cos(-ang + pi*.25))*equal(br,2) - (-sh + ra*cos(ang + pi*.25))*equal(br,3);
wave_2_per_point29=
wave_2_per_point30=xang = q2;
wave_2_per_point31=axang = 0;
wave_2_per_point32=yang = q3;
wave_2_per_point33=ayang = 0;
wave_2_per_point34=zang = q4;
wave_2_per_point35=azang = 0;
wave_2_per_point36=fov = .3;
wave_2_per_point37=
wave_2_per_point38=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point39=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point40=ox = mx;
wave_2_per_point41=oy = my;
wave_2_per_point42=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point43=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point44=ox = mx;
wave_2_per_point45=oz = mz;
wave_2_per_point46=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point47=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point48=oy = my;
wave_2_per_point49=oz = mz;
wave_2_per_point50=
wave_2_per_point51=a = .05;
wave_2_per_point52=mod = (oz+1)*.5;
wave_2_per_point53=a = a*max(min(mod,1),0);
wave_2_per_point54=oz = oz - 2;
wave_2_per_point55=x = ox*fov/oz + 0.5;
wave_2_per_point56=x = (x-.5)*0.75 + 0.5;
wave_2_per_point57=y = oy*fov/oz + 0.5;
wave_2_per_point58=
wave_2_per_point59=g = -sin(sp);
wave_2_per_point60=b = 0.5 - 0.5*sin(sample*1.57);
wave_2_per_point61=r = 0.5 - 0.5*cos(sample*1.57);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=tic = time - tin;
wave_3_per_frame2=tin = time;
wave_3_per_frame3=mod = .1*(mod*9 + treb_att);
wave_3_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_3_per_frame5=t1 = tt;
wave_3_per_point1=sp = sample*6.28*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = q1;
wave_3_per_point5=pi = 3.141592653;
wave_3_per_point6=ss = sample*6;
wave_3_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_3_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point13=
wave_3_per_point14=zang = t1;
wave_3_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point17=ox = mx;
wave_3_per_point18=oy = my;
wave_3_per_point19=
wave_3_per_point20=sh = sz*.5;
wave_3_per_point21=br = (zang/pi) + .5;
wave_3_per_point22=br = br - int(br*.25)*4;
wave_3_per_point23=br = int(br);
wave_3_per_point24=ra = pow(sh*sh*2,.5);
wave_3_per_point25=
wave_3_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_3_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_3_per_point28=
wave_3_per_point29=yang = pi*.5;
wave_3_per_point30=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point31=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point32=ox = mx;
wave_3_per_point33=oz = mz;
wave_3_per_point34=
wave_3_per_point35=xang = q2;
wave_3_per_point36=axang = 0;
wave_3_per_point37=yang = q3;
wave_3_per_point38=ayang = 0;
wave_3_per_point39=zang = q4;
wave_3_per_point40=azang = 0;
wave_3_per_point41=fov = .3;
wave_3_per_point42=
wave_3_per_point43=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point44=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point45=ox = mx;
wave_3_per_point46=oy = my;
wave_3_per_point47=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point48=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point49=ox = mx;
wave_3_per_point50=oz = mz;
wave_3_per_point51=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point52=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point53=oy = my;
wave_3_per_point54=oz = mz;
wave_3_per_point55=
wave_3_per_point56=a = .05;
wave_3_per_point57=mod = (oz+1)*.5;
wave_3_per_point58=a = a*max(min(mod,1),0);
wave_3_per_point59=oz = oz - 2;
wave_3_per_point60=x = ox*fov/oz + 0.5;
wave_3_per_point61=x = (x-.5)*0.75 + 0.5;
wave_3_per_point62=y = oy*fov/oz + 0.5;
wave_3_per_point63=
wave_3_per_point64=b = -sin(sp);
wave_3_per_point65=r = 0.5 - 0.5*sin(sample*1.57);
wave_3_per_point66=g = 0.5 - 0.5*cos(sample*1.57);
shapecode_0_enabled=1
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.28243
shapecode_0_r=0.980
shapecode_0_g=0.980
shapecode_0_b=0.980
shapecode_0_a=1.000
shapecode_0_r2=0.980
shapecode_0_g2=0.980
shapecode_0_b2=0.980
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=var=(treb*0.2);
shape_0_per_frame2=ang=var+0.2;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_a = 0;
per_frame_2=vol = .1*(vol*9 + (bass_att+mid_att+treb_att)*.333333);
per_frame_3=q1 = .1 + vol*.3;
per_frame_4=
per_frame_5=tic = time-tin;
per_frame_6=tin = time;
per_frame_7=tb = tb + tic*(bass_att*0.7);
per_frame_8=q2 = tb*.9;
per_frame_9=tm = tm + tic*(mid_att*0.7);
per_frame_10=q3 = tm*.9;
per_frame_11=tt = tt + tic*(treb_att*0.7);
per_frame_12=q4 = tt*.9;
per_frame_13=
per_frame_14=q1 = min(q1,1);
per_frame_15=aq1 = .5;
per_frame_16=aq2 = 0;
per_frame_17=aq3 = 9.5;
per_frame_18=aq4 = 0;
per_pixel_1=//rot=1/rad/x;
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 d = texsize.zw * 8;
warp_4=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
warp_5=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
warp_6=`
warp_7=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.24 + rand_frame.xy;
warp_8=`
warp_9=`    float2 my_uv =  lerp(uv_orig,uv,1) ;
warp_10=`    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *4;
warp_11=`    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *4;
warp_12=`    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *4;
warp_13=`    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;
warp_14=`    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;
warp_15=`    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;
warp_16=`
warp_17=`    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.0;
warp_18=`    ret -= ret.yzx*0.1 - 0.04;
warp_19=`
warp_20=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float3 ret2 = tex2D(sampler_main, uv);
comp_4=`float3 noise = .5;
comp_5=`float2 uv2 = 0;
comp_6=`float3 uv3 = 0;
comp_7=`float bl = GetBlur2(uv);
comp_8=`float3 foreground = 0;
comp_9=`
comp_10=`uv2.x=1-tex2D(sampler_noise_hq, uv.x);
comp_11=`uv2.y=1-tex2D(sampler_noise_hq, uv.y);
comp_12=`uv2.x*=q1;
comp_13=`uv2.y*=q2;
comp_14=`
comp_15=`uv3.x=.5-tex2D(sampler_noise_hq, uv.x+q4);
comp_16=`uv3.y=.5-tex2D(sampler_noise_hq, uv.y+q3);
comp_17=`uv3.z=1;
comp_18=`
comp_19=`uv3.x*=.5*q2;
comp_20=`uv3.y*=.5*q1;
comp_21=`
comp_22=`noise *= normalize(tex2D(sampler_noise_hq, uv3.xy-foreground)*tex2D(sampler_main, uv));
comp_23=`
comp_24=`foreground=(tex2D(sampler_noise_hq, noise)+tex2D(sampler_fc_main, uv));
comp_25=`
comp_26=`ret = tex2D(sampler_main, noise)*foreground;
comp_27=`
comp_28=`}

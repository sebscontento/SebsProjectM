MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.985
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.412
fWaveSmoothing=0.900
fWaveParam=-0.180
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=0.271
fZoomExponent=1.00000
fShader=0.000
zoom=0.97012
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1=(frame%6)*3.1415/3;
wave_1_per_frame2=
wave_1_per_frame3=t2=.086*q1;
wave_1_per_frame4=
wave_1_per_frame5=t3=sin(t1);
wave_1_per_frame6=t4=cos(t1);
wave_1_per_frame7=
wave_1_per_frame8=
wave_1_per_point1=coef=pow( 2*(.5-abs(sample-.5)),.333);
wave_1_per_point2=val=coef*(value1+value2)*(.072*q1);
wave_1_per_point3=
wave_1_per_point4=ox=.5+t2+val;
wave_1_per_point5=oy=.5-t2+sample*2*t2;
wave_1_per_point6=oy=.5+.58*t2*(1-2*sample);
wave_1_per_point7=
wave_1_per_point8=x=.5+(ox-.5)*t4-(oy-.5)*t3;
wave_1_per_point9=y=.5+(ox-.5)*t3+(oy-.5)*t4;
wave_1_per_point10=
wave_1_per_point11=y=.5+(y-.5)*1.333;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1=((frame+3)%6)*3.1415/3;
wave_2_per_frame2=
wave_2_per_frame3=t2=.086*q1;
wave_2_per_frame4=
wave_2_per_frame5=t3=sin(t1);
wave_2_per_frame6=t4=cos(t1);
wave_2_per_frame7=
wave_2_per_frame8=
wave_2_per_point1=coef=pow( 2*(.5-abs(sample-.5)),.333);
wave_2_per_point2=val=-coef*(value1+value2)*(.072*q1);
wave_2_per_point3=
wave_2_per_point4=ox=.5+t2+val;
wave_2_per_point5=oy=.5-t2+sample*2*t2;
wave_2_per_point6=oy=.5+.58*t2*(1-2*sample);
wave_2_per_point7=
wave_2_per_point8=x=.5+(ox-.5)*t4-(oy-.5)*t3;
wave_2_per_point9=y=.5+(ox-.5)*t3+(oy-.5)*t4;
wave_2_per_point10=
wave_2_per_point11=y=.5+(y-.5)*1.333;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1=.08
wave_3_per_point1=// ori
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.99595
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.99999
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=sw=frame%2;
shape_0_per_frame2=x=.5+.0865*q1;
shape_0_per_frame3=y=.5+(-1+2*sw)*.2*q1;
shape_0_per_frame4=additive=int(rand(2));
shape_0_per_frame5=
shape_0_per_frame6=hue=q2;
shape_0_per_frame7=h=6*(hue-int(hue));
shape_0_per_frame8=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
shape_0_per_frame9=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
shape_0_per_frame10=r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;
shape_0_per_frame11=g=sw1*h+sw2+sw3+sw4*(4-h);
shape_0_per_frame12=b=sw3*(h-2)+sw4+sw5+sw6*(6-h);
shape_0_per_frame13=
shape_0_per_frame14=r2=1-r;
shape_0_per_frame15=g2=1-g;
shape_0_per_frame16=b2=1-b;
shape_0_per_frame17=
shape_0_per_frame18=
shape_0_per_frame19=sides=3+int(time)%4;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.99595
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.99999
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=sw=frame%2;
shape_1_per_frame2=x=.5-.0865*q1;
shape_1_per_frame3=y=.5+(-1+2*sw)*.2*q1;
shape_1_per_frame4=additive=int(rand(2));
shape_1_per_frame5=
shape_1_per_frame6=hue=q2;
shape_1_per_frame7=h=6*(hue-int(hue));
shape_1_per_frame8=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
shape_1_per_frame9=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
shape_1_per_frame10=r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;
shape_1_per_frame11=g=sw1*h+sw2+sw3+sw4*(4-h);
shape_1_per_frame12=b=sw3*(h-2)+sw4+sw5+sw6*(6-h);
shape_1_per_frame13=
shape_1_per_frame14=r2=1-r;
shape_1_per_frame15=g2=1-g;
shape_1_per_frame16=b2=1-b;
shape_1_per_frame17=
shape_1_per_frame18=sides=6-int(time)%4;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=rad=q1
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=vol=(bass+mid+treb_att)*.3333;
per_frame_2=
per_frame_3=redsine=.5+.25*bass*sin(time*3);
per_frame_4=greensine=.5+.25*mid*sin(time*2);
per_frame_5=bluesine=.5+.25*treb*sin(time);
per_frame_6=
per_frame_7=redif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));
per_frame_8=greenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));
per_frame_9=blueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));
per_frame_10=
per_frame_11=wave_r=redif;
per_frame_12=wave_g=greenif;
per_frame_13=wave_b=blueif;
per_frame_14=
per_frame_15=q1=vol;
per_pixel_1=zoom = zoom + .1*(1*rad)*above(rad,0.4)*below(rad,.5);
per_pixel_2=zoom = zoom +.04*(sin(28*ang))*below(rad,.3)*above(rad,.25);
per_pixel_3=
per_pixel_4=rot=.01*sin(time*-.98);
per_pixel_5=
per_pixel_6=cx=.5+.35*sin(time*.98);
per_pixel_7=cy=.5+.35*sin(time*.62);
per_pixel_8=
per_pixel_9=//rot=rot+above(rad,.4)*.1*rad*sin(time*(14*rad));
per_pixel_10=
per_pixel_11=zoom=zoom+above(rad,.35)*.082*treb_att;
per_pixel_12=
per_pixel_13=//rot=rot+.2*above(rad,.3)*below(rad,.8)*(above(bass_att,1.1)+.1*sin(time));
per_pixel_14=
per_pixel_15=
per_pixel_16=//warp=warp+above(x,.575)*above(rad,.5)*1;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`
comp_89=`float2 uv1 = uv;
comp_90=`float2 d = texsize.zw*3;
comp_91=`float3 dx = GetBlur1(uv1 + float2(1,0)*d) - GetBlur1(uv1 - float2(1,0)*d);
comp_92=`float3 dy = GetBlur1(uv1 + float2(0,1)*d) - GetBlur1(uv1 - float2(0,1)*d);
comp_93=`uv1 = uv+float2(dx.x,dy.x)*texsize.zw*32;
comp_94=`     ret = GetPixel(uv1).x*float3(1,0,0)*0.5;
comp_95=`
comp_96=`ret.x += (+dx.x - dy.x)*0.4;
comp_97=`ret.x = pow(ret.x,0.8)*1.2;
comp_98=`
comp_99=`ret = lerp(ret,float3(1,1,1),GetPixel(uv1).z);
comp_100=`
comp_101=`//ret = lerp(ret,1-GetPixel(uv)*1.5,stars);
comp_102=`ret-=roam_sin*roam_cos.yzx;
comp_103=`}
comp_104=`
comp_105=`

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.99990
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.150
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.200
wavecode_0_b=0.910
wavecode_0_a=1.000
wave_0_per_frame1=t1 = q2/3; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = 1;
wave_0_per_frame5=
wave_0_per_frame6=t6 = sin(q2*2)*0.2 -0.26;
wave_0_per_frame7=
wave_0_per_frame8=tm = time/2;
wave_0_per_frame9=r = sin( tm )*0.5+0.5;
wave_0_per_frame10=r = max( r , 0 );
wave_0_per_frame11=r = min( r , 1 );
wave_0_per_frame12=g = sin( tm + 2.1 )*0.5+0.5;
wave_0_per_frame13=g = max( g , 0 );
wave_0_per_frame14=g = min( g , 1 );
wave_0_per_frame15=b = sin( tm + 4.2 )*0.5+0.5;
wave_0_per_frame16=b = max( b , 0 );
wave_0_per_frame17=b = min( b , 1 );
wave_0_per_frame18=
wave_0_per_frame19=gamma = 0.25;
wave_0_per_frame20=r = pow(r,gamma);
wave_0_per_frame21=g = pow(g,gamma);
wave_0_per_frame22=b = pow(b,gamma);
wave_0_per_frame23=
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*2.283;
wave_0_per_point4=
wave_0_per_point5=t4 = -t4;
wave_0_per_point6=
wave_0_per_point7=//draw circle, loop 32x
wave_0_per_point8=xp = 0;
wave_0_per_point9=yp = t4*0.1;
wave_0_per_point10=zp = 3;
wave_0_per_point11=
wave_0_per_point12=t2 = t2 + 0.125;
wave_0_per_point13=
wave_0_per_point14=t3 = t3 + 1;
wave_0_per_point15=t3 = t3 * below( t3 , 8 );
wave_0_per_point16=sig = sign( t3 - 3.5 );
wave_0_per_point17=
wave_0_per_point18=//a = below( t3 , 5 );
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=//turn circle into sphere, by rotating on y axis once during frame
wave_0_per_point22=ang = n;//int(t2)/60 * 6.283 * 2;
wave_0_per_point23=sang = sin(ang);cang = cos(ang);
wave_0_per_point24=xq = xp*cang - zp*sang;
wave_0_per_point25=yq = yp;
wave_0_per_point26=zq = xp*sang + zp*cang;
wave_0_per_point27=xp=xq;yp=yq;zp=zq;
wave_0_per_point28=
wave_0_per_point29=
wave_0_per_point30=//x axis rotation;
wave_0_per_point31=ang = t1;
wave_0_per_point32=sang = sin(ang);cang = cos(ang);
wave_0_per_point33=xq = xp;
wave_0_per_point34=yq = yp*cang - zp*sang;
wave_0_per_point35=zq = yp*sang + zp*cang;
wave_0_per_point36=xp=xq;yp=yq;zp=zq;
wave_0_per_point37=
wave_0_per_point38=//y axis rotation;
wave_0_per_point39=ang = t1*18;
wave_0_per_point40=sang = sin(ang);cang = cos(ang);
wave_0_per_point41=xq = xp*cang - zp*sang;
wave_0_per_point42=yq = yp;
wave_0_per_point43=zq = xp*sang + zp*cang;
wave_0_per_point44=xp=xq;yp=yq;zp=zq;
wave_0_per_point45=
wave_0_per_point46=//z axis rotation;
wave_0_per_point47=ang = t1*3;
wave_0_per_point48=sang = sin(ang);cang = cos(ang);
wave_0_per_point49=xq = xp*cang - yp*sang;
wave_0_per_point50=yq = xp*sang + yp*cang;
wave_0_per_point51=zq = zp;
wave_0_per_point52=xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=//push forward into viewspace
wave_0_per_point55=zp = zp + 11;
wave_0_per_point56=
wave_0_per_point57=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point58=
wave_0_per_point59=//project into camera space, and compensate for aspect ratio
wave_0_per_point60=x = xp/zp * fov + 0.75;
wave_0_per_point61=y = yp/zp * 1.3333 * fov + 0.75;
wave_0_per_point62=
wave_0_per_point63=x = x + t6;
wave_0_per_point64=x = x - int(x);
wave_0_per_point65=
wave_0_per_point66=x = max( x , 0.5 );
wave_0_per_point67=y = max( y , 0.5 );
wave_0_per_point68=
wave_0_per_point69=
wave_0_per_point70=
wave_0_per_point71=bkill = 1 - equal(x,0.5);
wave_0_per_point72=bkill = bkill * (1-equal(y,0.5));
wave_0_per_point73=a = a * bkill;
wave_0_per_point74=
wave_0_per_point75=
wave_0_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.100
wavecode_1_g=0.500
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q4/2; //volume time
wave_1_per_frame2=t2 = 0;
wave_1_per_frame3=t3 = 0;
wave_1_per_frame4=t4 = 1;
wave_1_per_frame5=t7 = min( q3, 1 );
wave_1_per_frame6=
wave_1_per_frame7=//t6 = sin(q2*2)*0.2 -0.26;
wave_1_per_frame8=
wave_1_per_frame9=
wave_1_per_frame10=tm = time/2 + 0.1;
wave_1_per_frame11=r = sin( tm )*0.5+0.5;
wave_1_per_frame12=r = max( r , 0 );
wave_1_per_frame13=r = min( r , 1 );
wave_1_per_frame14=g = sin( tm + 2.1 )*0.5+0.5;
wave_1_per_frame15=g = max( g , 0 );
wave_1_per_frame16=g = min( g , 1 );
wave_1_per_frame17=b = sin( tm + 4.2 )*0.5+0.5;
wave_1_per_frame18=b = max( b , 0 );
wave_1_per_frame19=b = min( b , 1 );
wave_1_per_frame20=
wave_1_per_frame21=
wave_1_per_frame22=gamma = 0.25;
wave_1_per_frame23=r = pow(r,gamma);
wave_1_per_frame24=g = pow(g,gamma);
wave_1_per_frame25=b = pow(b,gamma);
wave_1_per_frame26=
wave_1_per_point1=//rotating sphere
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=n2 = sample*2.1415;
wave_1_per_point5=
wave_1_per_point6=scale = above( sin(n*256) , 0 )*0.1 + 0.5;
wave_1_per_point7=scale = scale ;
wave_1_per_point8=
wave_1_per_point9=//draw circle, loop 32x
wave_1_per_point10=xp = sin(n2)*scale;
wave_1_per_point11=yp = cos(n2)*scale;
wave_1_per_point12=zp = 0 ;
wave_1_per_point13=
wave_1_per_point14=t2 = t2 + 0.125;
wave_1_per_point15=
wave_1_per_point16=t3 = t3 + 1;
wave_1_per_point17=t3 = t3 * below( t3 , 8 );
wave_1_per_point18=sig = sign( t3 - 3.5 );
wave_1_per_point19=
wave_1_per_point20=//a = below( t3 , 5 );
wave_1_per_point21=
wave_1_per_point22=
wave_1_per_point23=//turn circle into sphere, by rotating on y axis once during frame
wave_1_per_point24=ang = 0;//n;//int(t2)/60 * 6.283 * 2;
wave_1_per_point25=sang = sin(ang);cang = cos(ang);
wave_1_per_point26=xq = xp*cang - zp*sang;
wave_1_per_point27=yq = yp;
wave_1_per_point28=zq = xp*sang + zp*cang;
wave_1_per_point29=xp=xq;yp=yq;zp=zq;
wave_1_per_point30=
wave_1_per_point31=
wave_1_per_point32=//x axis rotation;
wave_1_per_point33=ang = t1;
wave_1_per_point34=sang = sin(ang);cang = cos(ang);
wave_1_per_point35=xq = xp;
wave_1_per_point36=yq = yp*cang - zp*sang;
wave_1_per_point37=zq = yp*sang + zp*cang;
wave_1_per_point38=xp=xq;yp=yq;zp=zq;
wave_1_per_point39=
wave_1_per_point40=//y axis rotation;
wave_1_per_point41=ang = t1*18;
wave_1_per_point42=sang = sin(ang);cang = cos(ang);
wave_1_per_point43=xq = xp*cang - zp*sang;
wave_1_per_point44=yq = yp;
wave_1_per_point45=zq = xp*sang + zp*cang;
wave_1_per_point46=xp=xq;yp=yq;zp=zq;
wave_1_per_point47=
wave_1_per_point48=//z axis rotation;
wave_1_per_point49=ang = t1*3;
wave_1_per_point50=sang = sin(ang);cang = cos(ang);
wave_1_per_point51=xq = xp*cang - yp*sang;
wave_1_per_point52=yq = xp*sang + yp*cang;
wave_1_per_point53=zq = zp;
wave_1_per_point54=xp=xq;yp=yq;zp=zq;
wave_1_per_point55=
wave_1_per_point56=//push forward into viewspace
wave_1_per_point57=zp = zp + 2;
wave_1_per_point58=
wave_1_per_point59=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point60=
wave_1_per_point61=//project into camera space, and compensate for aspect ratio
wave_1_per_point62=x = xp/zp * fov + 0.75;
wave_1_per_point63=y = yp/zp * 1.3333 * fov + 0.75;
wave_1_per_point64=
wave_1_per_point65=//x = x + t6;
wave_1_per_point66=//x = x - int(x);
wave_1_per_point67=
wave_1_per_point68=x = max( x , 0.5 );
wave_1_per_point69=y = max( y , 0.5 );
wave_1_per_point70=
wave_1_per_point71=
wave_1_per_point72=bkill = 1 - equal(x,0.5);
wave_1_per_point73=bkill = bkill * (1-equal(y,0.5));
wave_1_per_point74=a = a * bkill;
wave_1_per_point75=
wave_1_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.200
wavecode_2_b=0.910
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q2/3; //volume time
wave_2_per_frame2=t2 = 0;
wave_2_per_frame3=t3 = 0;
wave_2_per_frame4=t4 = 1;
wave_2_per_frame5=
wave_2_per_frame6=t6 = sin(q2*2)*0.2 -0.26;
wave_2_per_frame7=
wave_2_per_frame8=tm = time/2;
wave_2_per_frame9=r = sin( tm )*0.5+0.5;
wave_2_per_frame10=r = max( r , 0 );
wave_2_per_frame11=r = min( r , 1 );
wave_2_per_frame12=g = sin( tm + 2.1 )*0.5+0.5;
wave_2_per_frame13=g = max( g , 0 );
wave_2_per_frame14=g = min( g , 1 );
wave_2_per_frame15=b = sin( tm + 4.2 )*0.5+0.5;
wave_2_per_frame16=b = max( b , 0 );
wave_2_per_frame17=b = min( b , 1 );
wave_2_per_frame18=
wave_2_per_frame19=gamma = 0.25;
wave_2_per_frame20=r = pow(r,gamma);
wave_2_per_frame21=g = pow(g,gamma);
wave_2_per_frame22=b = pow(b,gamma);
wave_2_per_frame23=
wave_2_per_point1=//rotating sphere
wave_2_per_point2=
wave_2_per_point3=n = sample*2.283;
wave_2_per_point4=
wave_2_per_point5=t4 = -t4;
wave_2_per_point6=
wave_2_per_point7=//draw circle, loop 32x
wave_2_per_point8=xp = 0;
wave_2_per_point9=yp = t4*0.1;
wave_2_per_point10=zp = 3;
wave_2_per_point11=
wave_2_per_point12=t2 = t2 + 0.125;
wave_2_per_point13=
wave_2_per_point14=t3 = t3 + 1;
wave_2_per_point15=t3 = t3 * below( t3 , 8 );
wave_2_per_point16=sig = sign( t3 - 3.5 );
wave_2_per_point17=
wave_2_per_point18=//a = below( t3 , 5 );
wave_2_per_point19=
wave_2_per_point20=
wave_2_per_point21=//turn circle into sphere, by rotating on y axis once during frame
wave_2_per_point22=ang = n;//int(t2)/60 * 6.283 * 2;
wave_2_per_point23=sang = sin(ang);cang = cos(ang);
wave_2_per_point24=xq = xp*cang - zp*sang;
wave_2_per_point25=yq = yp;
wave_2_per_point26=zq = xp*sang + zp*cang;
wave_2_per_point27=xp=xq;yp=yq;zp=zq;
wave_2_per_point28=
wave_2_per_point29=
wave_2_per_point30=//x axis rotation;
wave_2_per_point31=ang = t1;
wave_2_per_point32=sang = sin(ang);cang = cos(ang);
wave_2_per_point33=xq = xp;
wave_2_per_point34=yq = yp*cang - zp*sang;
wave_2_per_point35=zq = yp*sang + zp*cang;
wave_2_per_point36=xp=xq;yp=yq;zp=zq;
wave_2_per_point37=
wave_2_per_point38=//y axis rotation;
wave_2_per_point39=ang = t1*18;
wave_2_per_point40=sang = sin(ang);cang = cos(ang);
wave_2_per_point41=xq = xp*cang - zp*sang;
wave_2_per_point42=yq = yp;
wave_2_per_point43=zq = xp*sang + zp*cang;
wave_2_per_point44=xp=xq;yp=yq;zp=zq;
wave_2_per_point45=
wave_2_per_point46=//z axis rotation;
wave_2_per_point47=ang = t1*3;
wave_2_per_point48=sang = sin(ang);cang = cos(ang);
wave_2_per_point49=xq = xp*cang - yp*sang;
wave_2_per_point50=yq = xp*sang + yp*cang;
wave_2_per_point51=zq = zp;
wave_2_per_point52=xp=xq;yp=yq;zp=zq;
wave_2_per_point53=
wave_2_per_point54=//push forward into viewspace
wave_2_per_point55=zp = zp + 11;
wave_2_per_point56=
wave_2_per_point57=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_2_per_point58=
wave_2_per_point59=//project into camera space, and compensate for aspect ratio
wave_2_per_point60=x = xp/zp * fov + 0.75;
wave_2_per_point61=y = yp/zp * 1.3333 * fov + 0.75;
wave_2_per_point62=
wave_2_per_point63=x = x + t6;
wave_2_per_point64=x = x - int(x);
wave_2_per_point65=
wave_2_per_point66=x = max( x , 0.5 );
wave_2_per_point67=y = max( y , 0.5 );
wave_2_per_point68=
wave_2_per_point69=x = 1-x;
wave_2_per_point70=
wave_2_per_point71=bkill = 1 - equal(x,0.5);
wave_2_per_point72=bkill = bkill * (1-equal(y,0.5));
wave_2_per_point73=a = a * bkill;
wave_2_per_point74=
wave_2_per_point75=
wave_2_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.100
wavecode_3_g=0.500
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = q4/2; //volume time
wave_3_per_frame2=t2 = 0;
wave_3_per_frame3=t3 = 0;
wave_3_per_frame4=t4 = 1;
wave_3_per_frame5=t7 = min( q3, 1 );
wave_3_per_frame6=
wave_3_per_frame7=//t6 = sin(q2*2)*0.2 -0.26;
wave_3_per_frame8=
wave_3_per_frame9=
wave_3_per_frame10=tm = time/2 + 0.1;
wave_3_per_frame11=r = sin( tm )*0.5+0.5;
wave_3_per_frame12=r = max( r , 0 );
wave_3_per_frame13=r = min( r , 1 );
wave_3_per_frame14=g = sin( tm + 2.1 )*0.5+0.5;
wave_3_per_frame15=g = max( g , 0 );
wave_3_per_frame16=g = min( g , 1 );
wave_3_per_frame17=b = sin( tm + 4.2 )*0.5+0.5;
wave_3_per_frame18=b = max( b , 0 );
wave_3_per_frame19=b = min( b , 1 );
wave_3_per_frame20=
wave_3_per_frame21=
wave_3_per_frame22=gamma = 0.25;
wave_3_per_frame23=r = pow(r,gamma);
wave_3_per_frame24=g = pow(g,gamma);
wave_3_per_frame25=b = pow(b,gamma);
wave_3_per_frame26=
wave_3_per_point1=//rotating sphere
wave_3_per_point2=
wave_3_per_point3=n = sample*6.283;
wave_3_per_point4=n2 = sample*2.1415;
wave_3_per_point5=
wave_3_per_point6=scale = above( sin(n*256) , 0 )*0.1 + 0.5;
wave_3_per_point7=scale = scale ;
wave_3_per_point8=
wave_3_per_point9=//draw circle, loop 32x
wave_3_per_point10=xp = sin(n2)*scale;
wave_3_per_point11=yp = cos(n2)*scale;
wave_3_per_point12=zp = 0 ;
wave_3_per_point13=
wave_3_per_point14=t2 = t2 + 0.125;
wave_3_per_point15=
wave_3_per_point16=t3 = t3 + 1;
wave_3_per_point17=t3 = t3 * below( t3 , 8 );
wave_3_per_point18=sig = sign( t3 - 3.5 );
wave_3_per_point19=
wave_3_per_point20=//a = below( t3 , 5 );
wave_3_per_point21=
wave_3_per_point22=
wave_3_per_point23=//turn circle into sphere, by rotating on y axis once during frame
wave_3_per_point24=ang = 0;//n;//int(t2)/60 * 6.283 * 2;
wave_3_per_point25=sang = sin(ang);cang = cos(ang);
wave_3_per_point26=xq = xp*cang - zp*sang;
wave_3_per_point27=yq = yp;
wave_3_per_point28=zq = xp*sang + zp*cang;
wave_3_per_point29=xp=xq;yp=yq;zp=zq;
wave_3_per_point30=
wave_3_per_point31=
wave_3_per_point32=//x axis rotation;
wave_3_per_point33=ang = t1;
wave_3_per_point34=sang = sin(ang);cang = cos(ang);
wave_3_per_point35=xq = xp;
wave_3_per_point36=yq = yp*cang - zp*sang;
wave_3_per_point37=zq = yp*sang + zp*cang;
wave_3_per_point38=xp=xq;yp=yq;zp=zq;
wave_3_per_point39=
wave_3_per_point40=//y axis rotation;
wave_3_per_point41=ang = t1*18;
wave_3_per_point42=sang = sin(ang);cang = cos(ang);
wave_3_per_point43=xq = xp*cang - zp*sang;
wave_3_per_point44=yq = yp;
wave_3_per_point45=zq = xp*sang + zp*cang;
wave_3_per_point46=xp=xq;yp=yq;zp=zq;
wave_3_per_point47=
wave_3_per_point48=//z axis rotation;
wave_3_per_point49=ang = t1*3;
wave_3_per_point50=sang = sin(ang);cang = cos(ang);
wave_3_per_point51=xq = xp*cang - yp*sang;
wave_3_per_point52=yq = xp*sang + yp*cang;
wave_3_per_point53=zq = zp;
wave_3_per_point54=xp=xq;yp=yq;zp=zq;
wave_3_per_point55=
wave_3_per_point56=//push forward into viewspace
wave_3_per_point57=zp = zp + 2;
wave_3_per_point58=
wave_3_per_point59=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_3_per_point60=
wave_3_per_point61=//project into camera space, and compensate for aspect ratio
wave_3_per_point62=x = xp/zp * fov + 0.75;
wave_3_per_point63=y = yp/zp * 1.3333 * fov + 0.75;
wave_3_per_point64=
wave_3_per_point65=//x = x + t6;
wave_3_per_point66=//x = x - int(x);
wave_3_per_point67=
wave_3_per_point68=x = max( x , 0.5 );
wave_3_per_point69=y = max( y , 0.5 );
wave_3_per_point70=
wave_3_per_point71=x=1-x;
wave_3_per_point72=
wave_3_per_point73=bkill = 1 - equal(x,0.5);
wave_3_per_point74=bkill = bkill * (1-equal(y,0.5));
wave_3_per_point75=a = a * bkill;
wave_3_per_point76=
wave_3_per_point77=a = a * (1- abs(sample-0.5)*2 );
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.250
shapecode_0_y=0.830
shapecode_0_rad=0.92894
shapecode_0_ang=1.57080
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.72010
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tex_zoom = tex_zoom + q7*0.3;
shape_0_per_frame2=
shape_0_per_frame3=y = 0.827;
shape_0_per_frame4=
shape_0_per_frame5=tex_ang = q2/4;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.250
shapecode_1_y=0.170
shapecode_1_rad=0.92894
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.72010
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//tex_zoom - -tex_zoom;
shape_1_per_frame2=
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.44044
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=tm = time/2 + 0.1;
shape_3_per_frame2=r = sin( tm )*0.5+0.5;
shape_3_per_frame3=r = max( r , 0 );
shape_3_per_frame4=r = min( r , 1 );
shape_3_per_frame5=g = sin( tm + 2.1 )*0.5+0.5;
shape_3_per_frame6=g = max( g , 0 );
shape_3_per_frame7=g = min( g , 1 );
shape_3_per_frame8=b = sin( tm + 4.2 )*0.5+0.5;
shape_3_per_frame9=b = max( b , 0 );
shape_3_per_frame10=b = min( b , 1 );
shape_3_per_frame11=
shape_3_per_frame12=a = above(q1,0.7);
shape_3_per_frame13=
shape_3_per_frame14=ang = time/3
per_frame_1=warp = 0;
per_frame_2=
per_frame_3=q1 = .5 + .1*sin(time);
per_frame_4=q2 = .5 + .1*sin(time*.548);
per_frame_5=
per_frame_6=tic = min(time - tin,.1);
per_frame_7=tin = time;
per_frame_8=
per_frame_9=ra = 1;
per_frame_10=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_11=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_12=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_13=
per_frame_14=rb = 1;
per_frame_15=vav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);
per_frame_16=
per_frame_17=tt = tt + tic*treb_avg;
per_frame_18=mt = mt + tic*mid_avg;
per_frame_19=bt = bt + tic*bass_avg;
per_frame_20=vt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;
per_frame_21=
per_frame_22=q3 = (treb + bass + mid)*.3333;
per_frame_23=q4 = mt;
per_frame_24=q5 = bt;
per_pixel_1=a = q1;
per_pixel_2=b = q2;
per_pixel_3=mx = x-a;
per_pixel_4=my = y-b;
per_pixel_5=zm = -.45;
per_pixel_6=
per_pixel_7=dis = pow(mx*mx + my*my,.5)*.70710678;
per_pixel_8=
per_pixel_9=dx = zm*mx*dis*cos(my*3.14)*q3;
per_pixel_10=dy = zm*my*dis*cos(mx*3.14)*q3;
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 d = texsize.zw * 8;  // the distance of the 4 surrounding spots (N-E-S-W), where the gradient is calutated by
warp_4=`                                // 4 - 12, has impact on the spreading speed
warp_5=`                                // (wider distances may result in greater differences
warp_6=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); // east-west gradient
warp_7=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); // north-south gradient
warp_8=`
warp_9=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 // makes the graininess of the fur
warp_10=`                                                                    // 0.5 (very raw) - 3 (fine leather)
warp_11=`                       + rand_frame.xy;    // needs to be set to keep an overall randomness
warp_12=`
warp_13=`    float2 uv_bg = lerp(uv_orig,uv,0.4)   // scaling the input motion vector down, useful for a lower layer
warp_14=`                   + float2(dx.x,dy.x)*texsize.zw  *2; // important: this is the spreading factor.
warp_15=`                                                       // 1 to 8 are good values
warp_16=`                                                       // (dependent on the distance the gradient is taken from)
warp_17=`
warp_18=`    ret.x = GetPixel(uv_bg).x // we will process the value from the previous frame
warp_19=`            - (GetPixel(uv_bg).x - GetBlur3(uv_bg).x)  * 0.02  // this part darkens the most contrasty parts only
warp_20=`                                                               // try differnet blur levels too
warp_21=`            - 0.004  // overall fade to black
warp_22=`                     // the play of the upper two factors makes the 3D impact
warp_23=`            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.12;  // intensity of the hairs (0.04 - 0.4)
warp_24=`
warp_25=`}
comp_1=`
comp_2=`
comp_3=`
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`    uv = 0.05 + 0.9*uv;
comp_8=`    ret = tex2D(sampler_main, uv).xyz;
comp_9=`      // SUPER GLOW EDGES - looks awesome w/octopus
comp_10=`      float3 avg_col = GetBlur3(uv);
comp_11=`      ret = abs(avg_col - ret)*6;
comp_12=`    ret *= 1.333; // a little bit of overbright
comp_13=`}

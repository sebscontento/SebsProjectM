MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=3.165
fWaveScale=2.191
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=0.800
fWarpAnimSpeed=2.007
fWarpScale=1.341
fZoomExponent=4.40100
fShader=0.000
zoom=1.01100
rot=0.00300
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.900
wave_g=0.000
wave_b=0.000
wave_x=0.100
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=48.000
mv_dx=-0.941
mv_dy=0.426
mv_l=5.000
mv_r=0.316
mv_g=0.078
mv_b=0.942
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_frame1=q1 = below(rand(100),10 + 20*bass);
wave_0_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_0_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_0_per_point3=
wave_0_per_point4=sw = 1-equal(it,0)*equal(ita,0);
wave_0_per_point5=swi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);
wave_0_per_point6=xv = if(sw - swi,xv,rand(1001)*.001*.8);
wave_0_per_point7=mx = xv + ita*.025;
wave_0_per_point8=my = if(sw - swi,my,rand(1001)*.001*.975);
wave_0_per_point9=
wave_0_per_point10=sz = .01;
wave_0_per_point11=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_0_per_point12=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_0_per_point13=
wave_0_per_point14=sb = equal(ita,0)*19 + equal(ita,1)*5 + equal(ita,2)*5 + equal(ita,3)*11;
wave_0_per_point15=sa = equal(ita,0)*7 + equal(ita,1)*15 + equal(ita,3)*2 + equal(ita,4)*1 + equal(ita,5)*3 + equal(ita,6)*11;
wave_0_per_point16=si = equal(ita,0)*6 + equal(ita,1)*9 + equal(ita,2)*14 + equal(ita,3)*5;
wave_0_per_point17=sc = equal(ita,0)*5 + equal(ita,1)*1 + equal(ita,2)*19 + equal(ita,3)*25;
wave_0_per_point18=sd = equal(ita,0)*9 + equal(ita,1)*14 + equal(ita,3)*20 + equal(ita,4)*9 + equal(ita,5)*13 + equal(ita,6)*5;
wave_0_per_point19=sf = equal(ita,0)*19 + equal(ita,1)*5 + equal(ita,2)*5;
wave_0_per_point20=sg = equal(ita,0)*20 + equal(ita,1)*18 + equal(ita,2)*21 + equal(ita,3)*20 + equal(ita,4)*8;
wave_0_per_point21=sh = equal(ita,0)*20 + equal(ita,1)*15 + equal(ita,3)*6 + equal(ita,4)*5 + equal(ita,5)*5 + equal(ita,6)*12;
wave_0_per_point22=se = equal(ita,0)*10 + equal(ita,1)*21 + equal(ita,2)*19 + equal(ita,3)*20;
wave_0_per_point23=sj = equal(ita,0)*15 + equal(ita,1)*14 + equal(ita,2)*3 + equal(ita,3)*5;
wave_0_per_point24=
wave_0_per_point25=lr = if(sw,lr,rand(10));
wave_0_per_point26=let = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;
wave_0_per_point27=
wave_0_per_point28=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_0_per_point29=vb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_0_per_point30=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point31=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_0_per_point32=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_0_per_point33=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_0_per_point34=vg = equal(let,1);
wave_0_per_point35=vh = equal(let,9) + equal(let,20);
wave_0_per_point36=vi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);
wave_0_per_point37=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_0_per_point38=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_0_per_point39=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_0_per_point40=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point41=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_0_per_point42=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_0_per_point43=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point44=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_0_per_point45=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_0_per_point46=vs = equal(let,22);
wave_0_per_point47=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point48=
wave_0_per_point49=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_0_per_point50=
wave_0_per_point51=a = a*below(ita,8)*q1;
wave_0_per_point52=
wave_0_per_point53=x = mx + vx*sz*.75;
wave_0_per_point54=y = my + vy*sz*1.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.260
shapecode_0_y=0.750
shapecode_0_rad=1.51252
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.23393
shapecode_0_r=0.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=vx = 0;
shape_0_per_frame1=dm = dm*0.98 + mid*0.2; //dampening the bass value
shape_0_per_frame2=mm = mm + dm*0.1; //integration over time
shape_0_per_frame3=dt = dt*0.98 + treb*0.2;
shape_0_per_frame4=tt = tt + dt*0.1;
shape_0_per_frame5=ang = (mm-tt)*0.1;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.570
shapecode_1_y=0.410
shapecode_1_rad=0.09234
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.73458
shapecode_1_r=0.000
shapecode_1_g=1.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=vx = 0
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.780
shapecode_2_y=0.260
shapecode_2_rad=3.31962
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.11542
shapecode_2_r=0.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=vx = 0;
shape_2_per_frame1=db = db*0.99 + bass*0.2; //dampening the bass value
shape_2_per_frame2=bb = bb + db*0.1; //integration over time
shape_2_per_frame3=dm = dm*0.99 + mid*0.2;
shape_2_per_frame4=mm = mm + dm*0.1;
shape_2_per_frame5=ang = (bb-mm)*0.1
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=zoom = 1;
per_frame_2=warp = 0.1;
per_frame_3=rot = 0;
per_frame_4=
per_frame_5=dy = -0.001;
per_frame_6=
per_frame_7=volume = (bass_att+2*mid_att+treb_att)*.2;
per_frame_8=volume = volume*volume;
per_frame_9=volumetime = volumetime + .1*volume;
per_frame_10=
per_frame_11=//let's let that fractal fluctuate with these...
per_frame_12=q1 = sin(0.33*volumetime);
per_frame_13=q2 = cos(0.15*volumetime); 
per_frame_14=
per_frame_15=q3 = .1+.4*volumetime;
per_frame_16=
per_frame_17=//and let's cycle colors...
per_frame_18=q5 = .5 + .25*sin(0.067*volumetime) + .25 * sin(0.0185*volumetime);
per_frame_19=q6 = .5 - .15 * cos(0.036*volumetime) + .35 * cos(0.082*volumetime);
per_frame_20=q7 = .5 + .375 * sin(0.049*volumetime) + .125 *cos(0.0136*volumetime);
warp_1=`sampler sampler_cells;
warp_2=` 
warp_3=`shader_body
warp_4=`{
warp_5=`
warp_6=`    float2 d = texsize.zw*8;
warp_7=`    float3 dx = ( GetBlur3(uv + float2(1,0)*d) - GetBlur3(uv-float2(1,0)*d) );
warp_8=`    float3 dy = ( GetBlur3(uv + float2(0,1)*d) - GetBlur3(uv-float2(0,1)*d) );
warp_9=`    float2 my_uv = uv + float2(dx.x,dy.x)*texsize.zw*24;
warp_10=`
warp_11=`
warp_12=`
warp_13=`    ret.x = tex2D( sampler_fc_main, my_uv).x;
warp_14=`
warp_15=`    
warp_16=`      ret.x += (ret - GetBlur3(uv-floor(uv))).x*0.01 - 0.004;
warp_17=`float2 zoom = 1.83;
warp_18=`float2 c = float2(0.42-.005*q2,0.76+.007*q1);
warp_19=`
warp_20=` float2 my_uv2 = (uv_orig-0.5)*zoom;
warp_21=` my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c
warp_22=`
warp_23=`
warp_24=`    d = texsize.zw*16;
warp_25=`    float2 uv_d = my_uv2;
warp_26=`    dx = ( GetBlur1(uv_d+float2(1,0)*d)-GetBlur1(uv_d-float2(1,0)*d) );
warp_27=`    dy = ( GetBlur1(uv_d+float2(0,1)*d)-GetBlur1(uv_d-float2(0,1)*d) );
warp_28=`    float2 uv_y = uv_d+float2(dx.y,dy.y)*texsize.zw*8;
warp_29=`
warp_30=`ret.y = tex2D( sampler_fc_main, uv_y).y;
warp_31=`
warp_32=`ret.z = max( GetPixel(uv).y, GetPixel(uv + float2(q1,.5+.5*q1)*texsize.zw).z-0.01);
warp_33=`
warp_34=`}
comp_1=`sampler sampler_manyfish;
comp_2=`shader_body
comp_3=`{
comp_4=`    float2 d = texsize.zw*4;
comp_5=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_6=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_7=`    float2 uv_y = uv-float2(dx.y,dy.y)*0.4;
comp_8=`
comp_9=`    float2 uv_dx = uv - float2(dx.x,dy.x)*1;
comp_10=`    float2 uv_dz = uv - float2(dx.z,dy.z)*1;
comp_11=`
comp_12=`ret = 0;
comp_13=`
comp_14=`ret = lerp(ret, float3(0.8,0.4,1.5)*_qb, length(float2(dx.x,dy.x)));
comp_15=`ret = lerp(ret,float3(1,1,0)*_qb.zxy,GetPixel(uv).x*saturate(1-GetBlur3(uv).y*8));
comp_16=`ret = lerp(ret,1,GetBlur1(uv_dx).z*GetBlur1(uv).x*2*(1-GetBlur1(uv).y*4)); 
comp_17=`ret = lerp(ret, float3(0,1,0)*_qb.yzx, length(float2(dx.z,dy.z)));
comp_18=`ret = lerp(ret,float3(1,0,0)*_qb.yzx,GetPixel(uv).z*saturate(1-GetBlur3(uv).y*8));
comp_19=`ret = lerp(ret,1,GetBlur1(uv_dz).x*GetBlur1(uv).z*2*(1-GetBlur1(uv).y*4)); 
comp_20=`
comp_21=`ret = lerp(saturate(ret),_qb,GetPixel(uv).y);
comp_22=`
comp_23=`
comp_24=`}
comp_25=`

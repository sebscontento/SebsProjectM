MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=2.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=3.749
fWaveScale=2.466
fWaveSmoothing=0.000
fWaveParam=0.200
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.442
fWarpScale=0.498
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.050
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=132
wavecode_0_sep=29
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.89152
wavecode_0_smoothing=0.82000
wavecode_0_r=1.000
wavecode_0_g=0.200
wavecode_0_b=0.000
wavecode_0_a=0.600
wave_0_per_frame1=t2 = t2 + bass_att;
wave_0_per_point1=
wave_0_per_point2=
wave_0_per_point3=ska = sqr(sin(sample*3.14));
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=b = 0; g = .1; r = 0.6;
wave_0_per_point7=a = ska * (bass_att);
wave_0_per_point8=x = .5 + sample *(.1+value1);
wave_0_per_point9=y = .5 + sample*(.1+value2);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ra = .8;
wave_3_per_point2=rb = .5;
wave_3_per_point3=pib = 6.28318530718;
wave_3_per_point4=
wave_3_per_point5=
wave_3_per_point6=tic = min(time-tin,.1);
wave_3_per_point7=tin = if(equal(sample,0),time,tin);
wave_3_per_point8=
wave_3_per_point9=mod = 1.5 + .5*sin(time*.15);
wave_3_per_point10=med = 1.5 + .5*sin(time*.134);
wave_3_per_point11=med = 5;
wave_3_per_point12=amod = 3;
wave_3_per_point13=
wave_3_per_point14=vr = int(rand(10001))*.0001;
wave_3_per_point15=rb = rb + int(rand(10001))*.0001*.1;
wave_3_per_point16=
wave_3_per_point17=a = vr;
wave_3_per_point18=
wave_3_per_point19=sa = vr*pib*.5;
wave_3_per_point20=sp = sa*mod + q1*1.3;
wave_3_per_point21=sam = sa*med - q1*.219;
wave_3_per_point22=
wave_3_per_point23=ox = ra*sin(sam*pib);
wave_3_per_point24=oy = ra*cos(sam*pib);
wave_3_per_point25=ox = ox + rb*-cos(sp)*sin(sam*pib);
wave_3_per_point26=oz = rb*-sin(sp);
wave_3_per_point27=oy = oy + rb*-cos(sp)*cos(sam*pib);
wave_3_per_point28=
wave_3_per_point29=
wave_3_per_point30=xang = time*.132;
wave_3_per_point31=xang = q2;
wave_3_per_point32=yang = time*.153;
wave_3_per_point33=yang = q3;
wave_3_per_point34=zang = time*.110;
wave_3_per_point35=zang = q4;
wave_3_per_point36=fov = 0.6 + 0.2*sin(time);
wave_3_per_point37=fov = .5;
wave_3_per_point38=
wave_3_per_point39=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point40=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point41=ox = mx;
wave_3_per_point42=oy = my;
wave_3_per_point43=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point44=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point45=ox = mx;
wave_3_per_point46=oz = mz;
wave_3_per_point47=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point48=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point49=oy = my;
wave_3_per_point50=oz = mz;
wave_3_per_point51=
wave_3_per_point52=oz = oz - 2;
wave_3_per_point53=x = ox*fov/oz + 0.5;
wave_3_per_point54=x = (x-.5)*0.75 + 0.5;
wave_3_per_point55=y = oy*fov/oz + 0.5;
wave_3_per_point56=
shapecode_0_enabled=1
shapecode_0_sides=15
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.72072
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.24291
shapecode_0_r=1.000
shapecode_0_g=0.400
shapecode_0_b=0.890
shapecode_0_a=0.800
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tex_ang = .7 + .3 * sin(time);
shapecode_1_enabled=1
shapecode_1_sides=63
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.810
shapecode_1_y=0.300
shapecode_1_rad=0.39710
shapecode_1_ang=0.00000
shapecode_1_tex_ang=2.51327
shapecode_1_tex_zoom=0.90799
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.600
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.470
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.000
shapecode_2_enabled=1
shapecode_2_sides=63
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.323
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.700
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = int(rand(100))/100;
shape_2_per_frame2=y = int(rand(100))/100;
shape_2_per_frame3=
shape_2_per_frame4=a = 0.8; r = 0; b = 1; g = 1;
shape_2_per_frame5=a2 = 1; r2=0; b2 = 0; g2 = 0;
shape_2_per_frame6=rad = .02;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.600
shapecode_3_y=0.500
shapecode_3_rad=0.08081
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=dirx = 1;
per_frame_1=dec_med = pow (0.6, 30/fps);
per_frame_2=dec_slow = pow (0.9, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_10=index3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;
per_frame_11=
per_frame_12=
per_frame_13=q20 = avg;
per_frame_14=q21 = beat;
per_frame_15=q22 = peak;
per_frame_16=q23 = index;
per_frame_17=q24 = is_beat;
per_frame_18=q26 = bass + mid + treb;
per_frame_19=ava = ava*dec_slow + q26*(1-dec_slow);
per_frame_20=
per_frame_21=
per_frame_22=//k1 =  is_beat*bnot(index)*bnot(index2);
per_frame_23=
per_frame_24=k1 =  is_beat*equal(index%2,0);
per_frame_25=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_26=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_27=rott = p2 * 3.1416/2;
per_frame_28=q1 = cos(rott);
per_frame_29=q2 = sin(rott);
per_frame_30=q3 = -q2;
per_frame_31=q4 = q1;
per_frame_32=
per_frame_33=q27 = 8-index;
per_frame_34=q28 = .5 + sin(time/7)/10;
per_frame_35=
per_frame_36=rm = min(q26-1.5*ava,2);
per_frame_37=mov = is_beat*rm + (1-is_beat)*mov;
per_frame_38=
per_frame_39=movez = movez + .4/fps*mov;
per_frame_40=q30 = movez;
per_frame_41=//**************************
per_frame_42=
per_frame_43=ampl = q26/8;
per_frame_44=
per_frame_45=movex = movex + .2/fps*sin(rott);
per_frame_46=movey = movey + .2/fps*cos(rott);
per_frame_47=
per_frame_48=q18 = movex; q19 = movey;
per_frame_49=trel = trel + 1/fps + q24;
per_frame_50=q17 = 2*sin(trel/4);
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q28*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float clp = 16;
warp_12=`float2 rs = clamp(tan(z)*d,-clp,clp);
warp_13=`uv += rs/20;
warp_14=`
warp_15=`
warp_16=`uv6 = .4*sin(uv1*12);
warp_17=`mus = .1/(length(uv6));
warp_18=`mus *= roam_cos;
warp_19=`
warp_20=`float3 blur = GetBlur1(frac(uv));
warp_21=`
warp_22=`float3 crisp= tex2D(sampler_main,uv);
warp_23=`
warp_24=`float3 ret1 = crisp - blur*.04 + .15*mus;
warp_25=`q25 = q24;
warp_26=`ret = q25*(ret1-.04)*.98 + (1-q25)* GetPixel(uv_orig);
warp_27=`}
comp_1=`float3 ret1, neu;
comp_2=`float2 rs,rs2,uv1;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`//uv = mul(uv,float2x2(_qa));
comp_10=`
comp_11=`float2 tmp = uv;
comp_12=`float dist = 1;
comp_13=`float dista = 0;
comp_14=`float inten = 1;
comp_15=`float mask = 0;
comp_16=`ret1 = 0;
comp_17=`int anz = 4;
comp_18=`float n = 0;
comp_19=`while (n <= anz) {
comp_20=`    ang2 = 6.28*n/anz;
comp_21=`    c = cos(ang2);
comp_22=`    s = sin(ang2);
comp_23=`    uv2.x =  uv.x*c - uv.y*s;
comp_24=`    uv2.y =  uv.x*s + uv.y*c;
comp_25=`uv2 *= aspect.yx;
comp_26=`    dist = 1-frac(.25*n+q30); //evtl sqrt !
comp_27=`;
comp_28=`    inten =  sqrt(dist)*(1-dist)*4;
comp_29=`    float2 uv3 =  frac(3*uv2*dist+.3*q27);
comp_30=`    uv3 += q17*float2 (c,s);
comp_31=`    neu = 1*GetPixel(uv3) -GetBlur2(uv3*1.02*q1);
comp_32=`    neu *= (neu >= 0);
comp_33=`    mask = 1-(neu*inten >= .1) * (dist < dista);
comp_34=`    ret1 = max(ret1,neu*inten);
comp_35=`    dista = dist;
comp_36=`n++;
comp_37=`}
comp_38=`
comp_39=`rs2 = .4*cos(uv*13+time) - 1* lum(ret1);;
comp_40=`float dots = (.05/length(rs2))*q26/4 ;
comp_41=`
comp_42=`ret = 1*ret1 + dots*hue_shader ;
comp_43=`
comp_44=`}

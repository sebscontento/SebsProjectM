MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.573
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.240
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.48886
fShader=0.000
zoom=1.01960
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.24146
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=28.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=2.27969
wavecode_0_smoothing=0.70000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=t8 = time;
wave_0_per_point1=d1 = sample*95.13;
wave_0_per_point2=d2 = sample*111.52*value1;
wave_0_per_point3=d3 = sample*84.45;
wave_0_per_point4=d4 = sample*143.23;
wave_0_per_point5=x = sample;
wave_0_per_point6=y = 0.5 + value1;
wave_0_per_point7=dx = 1.2*cos(sample*27.43 + 1 + 6.28*(d1-int(d1)));
wave_0_per_point8=dy = .4 + 1*cos(sample*73.92 + 4 + 6.28*(d2-int(d2)));
wave_0_per_point9=ddy = .85;     // acceleration downward
wave_0_per_point10=t = time*0.3 + 0.25*sin(sample*64.21+5) + 0.25*sin(sample*123.56+3) + d4-int(d4);
wave_0_per_point11=t = t - int(t);
wave_0_per_point12=t=.3+1*.1;
wave_0_per_point13=tt=t;
wave_0_per_point14=// simple particle physics: x = x0 + dx*t and y = y0 + dy*t + ddy*t*t
wave_0_per_point15=x = 0.5 + dx*t;
wave_0_per_point16=y = .2 + dy*t + ddy*t*t;
wave_0_per_point17=a = 1;//1-t*t;
wave_0_per_point18=// for some easy audio sync:
wave_0_per_point19=//a = min(1,a * bass);
wave_0_per_point20=g = 0 + 0.5*sin(sample*513.32)+.4*sin(time*3);
wave_0_per_point21=b = 0 + 0.5*sin(sample*53.32)+.3*sin(time*5);
wave_0_per_point22=r = 0 + 0.5*sin(sample*23.32)+.2*sin(time*2);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02987
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27705
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=1.000
shape_1_per_frame1=i=2*instance;
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);    y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=z=.0015;
shape_1_per_frame6=x=.5+z*x1/q6;    y=.5+z*y1;
shape_1_per_frame7=
shape_1_per_frame8=x=x-int(x);      y=y-int(y);    //// wrap
shape_1_per_frame9=
shape_1_per_frame10=rad=.1*rad;
shape_1_per_frame11=
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=//begin beat code
per_frame_29=volume = 0.3*(bass+mid);
per_frame_30=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_31=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_32=meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_33=peakbass_att = max(bass_att,peakbass_att);
per_frame_34=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_35=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_36=//Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_37=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_38=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_39=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_40=//end beat code
per_frame_41=
per_frame_42=tim = if(beat,time,tim);
per_frame_43=q5 = below(time - tim,.1);
per_frame_44=
per_frame_45=warp = 0;
per_frame_46=
per_frame_47=tic = min(time-tin,.1);
per_frame_48=tin = time;
per_frame_49=ra = 1/tic*.25;
per_frame_50=
per_frame_51=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_52=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_53=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_54=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_55=
per_frame_56=tt = tt + tic*treb;
per_frame_57=mt = mt + tic*mid;
per_frame_58=bt = bt + tic*bass;
per_frame_59=vt = vt + tic*vav;
per_frame_60=
per_frame_61=q1 = treb_avg;
per_frame_62=q2 = mid_avg;
per_frame_63=q3 = bass_avg;
per_frame_64=
per_frame_65=monitor = q5;
per_frame_66=
per_frame_67=mx = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,mx);
per_frame_68=my = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,my);
per_frame_69=cx = mx;
per_frame_70=cy = my;
per_frame_71=
per_frame_72=mox = mx - .5;
per_frame_73=moy = my - .5;
per_frame_74=an = atan(moy/mox) + if(above(mox,0),above(moy,0)*6.2832,3.1416);
per_frame_75=dis = pow(mox*mox + moy*moy,.5);
per_frame_76=dis = max(.17,dis);
per_frame_77=
per_frame_78=q7 = .5 + dis*cos(an);
per_frame_79=q8 = .5 + dis*sin(an);
per_frame_80=warp=bass*.2;
per_frame_81=warp=warp+(above(bass,1)*bass*.2);
per_frame_82=
per_frame_83=echo_alpha=(above(bass,q1)*.3);
per_frame_84=
per_frame_85=// nao usar mv_a=(above(bass,1)*bass*.5);
per_frame_86=
per_frame_87=q6=q6+(above(bass,1.3)*sin(time)*.02);
per_frame_88=rot=rot+q6;
per_frame_89=
per_frame_90=zoom=zoom+(above(bass,1.3)*bass*.03);
per_frame_91=
per_frame_92=//sy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));
per_frame_93=//sx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));
per_frame_94=
per_frame_95=
per_frame_96=
per_frame_97=
per_frame_98=//green
per_frame_99=q6=aspecty;        t1=t1+1;
per_frame_100=q1=bnot(t1%400);   decay=(t1>1);
per_frame_101=t=t+.001/fps;  
per_frame_102=s1=500*sin(t);     s2=20+10*sin(.5*t);   
per_frame_103=i=0;
per_frame_104=loop(1024,
per_frame_105=p1=.5*p1+s2*sin(s1*i);     p2= p1-p2;
per_frame_106=x1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);
per_frame_107=gmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;
per_frame_108=i=i+1;);
per_frame_109=
per_frame_110=zoom=1-(1-pow(2,(bass+treb+mid)*.0031));
per_frame_111=
per_pixel_1=mx = x - q7;
per_pixel_2=my = y - q8;
per_pixel_3=
per_pixel_4=an = ang;
per_pixel_5=//zoom = 1 + pow(sin(an*5 - time),1)*.02*bass*bass;
per_pixel_6=
per_pixel_7=ra = pow(mx*mx + my*my,.5);
per_pixel_8=rot = .02*sin(ra*6.2832*2 - time*4)*(mid + treb)*(mid + treb)*.5;
per_pixel_9=
per_pixel_10=
per_pixel_11=
per_pixel_12=
per_pixel_13=//vtx
per_pixel_14=warp=sin(x*y)*2;
per_pixel_15=rot=cos(x*y)*.1*(bass-1);
warp_1=`shader_body {
warp_2=`
warp_3=`//uv = uv_orig;
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float2 tmp = uv1;
warp_8=`tmp.x = ang*3; tmp.y = rad;
warp_9=`uv1 = tmp;
warp_10=`
warp_11=`float3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);
warp_12=`
warp_13=`float3 ret1 = GetBlur1 (uv)-.3;
warp_14=`float3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;
warp_15=`float3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;
warp_16=`
warp_17=`ret = -.4*blur + crisp;
warp_18=`ret.z=1-ret.x;
warp_19=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_20=`                      ((uv1.xyy*q27
warp_21=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_22=`                      ).xyz*
warp_23=`                      float3(1,1,0)*0.05 + 
warp_24=`                      time*float3(0,0,1)*q29
warp_25=`                     );
warp_26=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_27=`ret.z=1-ret.y;
warp_28=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_29=`ret.y=1-ret.x;
warp_30=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_31=`ret.x=1-ret.z;
warp_32=`ret.y=1-ret.z;
warp_33=`
warp_34=`    
warp_35=` ret *= 0.98 * pow(1-.01*q28*q28*rad,2); 
warp_36=`ret.x=1-ret.y;
warp_37=`ret.x=1-ret.x;
warp_38=`  ret -= 0.04;
warp_39=`ret.y=1-ret.y;
warp_40=`ret.z=1-ret.z;
warp_41=`}
comp_1=`float2 uv_x, uv_y, uv_z, uv_echo;
comp_2=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
comp_3=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
comp_4=`}
comp_5=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_6=`   return center + (domain-center)*scale;
comp_7=`}
comp_8=`float2 uv_polar(float2 domain, float2 center){
comp_9=`   float2 c = domain - center;
comp_10=`   float rad_hq = length(c);
comp_11=`   float ang_hq = atan2(c.x,c.y);
comp_12=`   return float2(ang_hq, rad_hq);
comp_13=`}
comp_14=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_15=`   float2 polar = uv_polar(domain, position);
comp_16=`   float cone = saturate(1-polar.y/radius);
comp_17=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_18=`   float w = atan2(1-cone,halfsphere);
comp_19=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_20=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_21=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_22=`   bool mask =(length(domain-position)<radius);
comp_23=`   return !mask*domain + 
comp_24=`           mask*refrac_uv;
comp_25=`}
comp_26=`shader_body
comp_27=`{
comp_28=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);
comp_29=`float2 pos1 = 1-float2(q3,q4);
comp_30=`float rad1 = q5;
comp_31=`float2 pos2 = 1-float2(q6,q7);
comp_32=`float rad2 = q8;
comp_33=`float2 pos3 = 1-float2(q9,q10);
comp_34=`float rad3 = q11;
comp_35=`float2 pos4 = 1-float2(q12,q13);
comp_36=`float rad4 = q14;
comp_37=`float3 col1 = float3(2,1,-1);
comp_38=`float3 col2 = float3(2,-1,1);
comp_39=`float3 col3 = float3(-1,1,2);
comp_40=`float3 col4 = float3(1,-1,2);
comp_41=`float refractivity = 1.6;
comp_42=`float2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);
comp_43=`       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);
comp_44=`       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);
comp_45=`       lens_uv = uv_lens_half_sphere(lens_uv, pos4, rad4, refractivity);
comp_46=`uv = lens_uv;
comp_47=`    float2 d = texsize.zw*1.2;
comp_48=`    float3 dx = ( GetPixel(uv + float2(1,0)*d) - GetPixel(uv-float2(1,0)*d) );
comp_49=`    float3 dy = ( GetPixel(uv + float2(0,1)*d) - GetPixel(uv-float2(0,1)*d) );
comp_50=`
comp_51=`    float c = 8;
comp_52=`    float dd = 1;
comp_53=`float3 light1 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos1),.2);
comp_54=`float3 light2 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos2),.2);
comp_55=`float3 light3 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos3),.2);
comp_56=`float3 light4 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos4),.2);
comp_57=`
comp_58=`ret = lerp(GetPixel(uv),max(max(light1*col1,light2*col2),max(light3*col3,light4*col4)),0.5)*1.25;
comp_59=`ret=.81-ret;
comp_60=`}
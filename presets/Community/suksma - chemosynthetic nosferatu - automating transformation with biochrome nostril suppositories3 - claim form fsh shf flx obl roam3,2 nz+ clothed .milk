MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.11550
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.550
shapecode_0_y=0.500
shapecode_0_rad=0.08081
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27705
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.700
shapecode_0_border_b=0.100
shapecode_0_border_a=0.000
shape_0_per_frame1=i=2*instance;     
shape_0_per_frame2=
shape_0_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_0_per_frame4=
shape_0_per_frame5=d=sqrt(x1*x1+y1*y1);
shape_0_per_frame6=rad=.002*rad*d;
shape_0_per_frame7=rad=if(above(rad,.015),.015,rad);
shape_0_per_frame8=
shape_0_per_frame9=zoom=q2;
shape_0_per_frame10=x= .5+zoom*x1/q6;
shape_0_per_frame11=y= .5+zoom*y1;      
shape_0_per_frame12=
shape_0_per_frame13=sample=.5*i/1024;
shape_0_per_frame14=r= .3+.1*sin(3*sample+.7*q2*d+.2*time);
shape_0_per_frame15=g= .3+.1*sin(3*sample+.8*q2*d+.23*time);
shape_0_per_frame16=b= .1+.1*sin(3*sample+.4*q2*d+.15*time);
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02987
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27705
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.300
shapecode_1_a=0.100
shapecode_1_r2=0.200
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.100
shapecode_1_border_a=0.000
shape_1_per_frame1=i=2*instance;
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);    y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=z=.0015;
shape_1_per_frame6=x=.5+z*x1/q6;    y=.5+z*y1;
shape_1_per_frame7=
shape_1_per_frame8=x=x-int(x);      y=y-int(y);    //// wrap
shape_1_per_frame9=
shape_1_per_frame10=rad=.1*rad;
shape_1_per_frame11=r=i/(q6);
shape_1_per_frame12=g=x1/y1-i/(q6);
shape_1_per_frame13=b=x/y-i/(q6);
shape_1_per_frame14=r1=10/x1-i/(q6);
shape_1_per_frame15=g2=10/y1-i/(10/q6);
shape_1_per_frame16=b2=y-i/(q6);
shape_1_per_frame17=
shapecode_2_enabled=1
shapecode_2_sides=12
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=92
shapecode_2_x=0.800
shapecode_2_y=0.500
shapecode_2_rad=0.02705
shapecode_2_ang=1.57080
shapecode_2_tex_ang=1.25664
shapecode_2_tex_zoom=3.07268
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=t1 = time - int (time);
shape_2_per_frame2=sample = instance/num_inst;
shape_2_per_frame3=t_abs = sample*3;
shape_2_per_frame4=t_rel = sample-time/5;
shape_2_per_frame5=
shape_2_per_frame6=ampl = 2*t_abs/2 ;
shape_2_per_frame7=
shape_2_per_frame8=k1=sin(time/13);
shape_2_per_frame9=k2=sin(time/12);
shape_2_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_2_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_2_per_frame12=oz = -1  ;
shape_2_per_frame13=
shape_2_per_frame14=
shape_2_per_frame15=r = sqr(sin(t_rel*3.4));
shape_2_per_frame16=g = sqr(sin(t_rel));
shape_2_per_frame17=b = sqr (cos(t_rel*1.8));
shape_2_per_frame18=
shape_2_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_2_per_frame20=
shape_2_per_frame21=xang = time/9.5;
shape_2_per_frame22=yang = 0*time/7;
shape_2_per_frame23=zang = -time/22;
shape_2_per_frame24=fov = 0.5;
shape_2_per_frame25=
shape_2_per_frame26=
shape_2_per_frame27=// Rotation um x,y,z
shape_2_per_frame28=
shape_2_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_2_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_2_per_frame31=
shape_2_per_frame32=ox = mx;
shape_2_per_frame33=oy = my;
shape_2_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_2_per_frame36=ox = mx;
shape_2_per_frame37=oz = mz;
shape_2_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_2_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_2_per_frame40=oy = my;
shape_2_per_frame41=oz = mz;
shape_2_per_frame42=
shape_2_per_frame43=oz = oz - 6;
shape_2_per_frame44=x = ox*fov/oz +0.5;
shape_2_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_2_per_frame46=y = oy*fov/oz + 0.5;
shape_2_per_frame47=
shape_2_per_frame48=a=1/mz*.5;
shape_2_per_frame49=//a2=1/mz*.5;
shape_2_per_frame50=//border_a=1/mz*.5;
shape_2_per_frame51=rad=1/mz*.005;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_1=//prim
per_frame_2=q6=aspecty;            t=t+.1/fps;    t1=t1+1/fps; 
per_frame_3=s=150+140*sin(t);      q1=pow(abs(s),.25);
per_frame_4=i=0;    x=0;     y=0;   p=0;   p1=0;
per_frame_5=loop(1024*c,
per_frame_6=p=p+ s*(sin(i*s)-cos(i*s))/i;    p1=p1-p;
per_frame_7=x=x+sin(p1);                     y=y+cos(p1);
per_frame_8=gmegabuf(2*i)=x;                 gmegabuf(2*i+1)=y;
per_frame_9=i=i+1;);
per_frame_10=///// clears the screen each n seconds
per_frame_11=n=10;
per_frame_12=decay=above(time-t0,.2)-equal((5*t1)%(5*n),0);
per_frame_13=monitor=s;
per_frame_14=////  if the images become too saturated, raise value of m (integer); 
per_frame_15=////  1 frame is drawn in every m frames ;
per_frame_16=m=1;
per_frame_17=c=bnot(frame%m);    
per_frame_18=q2=.005;   //// zoom
per_frame_19=
per_frame_20=
per_frame_21=
per_frame_22=//green
per_frame_23=q6=aspecty;        t1=t1+1;
per_frame_24=q1=bnot(t1%400);   decay=(t1>1);
per_frame_25=t=t+.001/fps;  
per_frame_26=s1=500*sin(t);     s2=20+10*sin(.5*t);   
per_frame_27=i=0;
per_frame_28=loop(1024,
per_frame_29=p1=.5*p1+s2*sin(s1*i);     p2= p1-p2;
per_frame_30=x1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);
per_frame_31=gmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;
per_frame_32=i=i+1;);
per_frame_33=
per_frame_34=chng=sin(time*.5);
per_frame_35=cthr=.9999;
per_frame_36=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_37=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_38=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_39=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_40=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_41=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_42=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_43=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_44=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_45=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_46=monitor=chng;
per_frame_47=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_48=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_49=
per_frame_50=monitor=mq1;
per_frame_51=vol=bass+treb+mid;
per_frame_52=atime=atime+vol;
per_frame_53=q11=.4+sin(atime*.006        )*.4;
per_frame_54=q12=.4+cos(atime*.00613828348)*.4;
per_frame_55=q13=.4+sin(atime*.00598593455)*.4;
per_frame_56=monitor=q13;
per_frame_57=
per_frame_58=warp = 0;
per_frame_59=
per_frame_60=tic = min(time-tin,.1);
per_frame_61=tin = time;
per_frame_62=
per_frame_63=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_64=
per_frame_65=ra = 1/tic*.25;
per_frame_66=
per_frame_67=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_68=
per_frame_69=ra = 1/tic*.05;
per_frame_70=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_71=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_72=
per_frame_73=ra = 1/tic*.05;
per_frame_74=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_75=
per_frame_76=
per_frame_77=tt = tt + tic*treb;
per_frame_78=mt = mt + tic*mid;
per_frame_79=bt = bt + tic*bass;
per_frame_80=vt = vt + tic*vav;
per_frame_81=
per_frame_82=q1 = time;
per_frame_83=
per_frame_84=q2 = vav*.1;
per_frame_85=
per_frame_86=q3 = .02 + bass_avg*.05; // size & displacement rad
per_frame_87=
per_frame_88=q4 = 3.1416 + 1.57 + (treb_avg + mid_avg)*.25; // tex_ang
per_frame_89=
per_frame_90=//q4 = (treb_avg - mid_avg);
per_frame_91=//q4 = bass_avg - (treb_avg + mid_avg)*.5;
per_frame_92=//q4 = -bass_avg;
per_frame_93=
per_frame_94=
per_frame_95=q5 = vt; // xy movement
per_frame_96=
per_frame_97=monitor = q4;
per_frame_98=
per_frame_99=//rot = .025*max(.7,vav);
per_frame_100=rot = .025*(.7 + vav*.25);
per_frame_101=//rot = .025*vav;
per_frame_102=
per_pixel_1=mod = .1;
per_pixel_2=
per_pixel_3=//sw = above(x,.5);
per_pixel_4=
per_pixel_5=//dy = mod*pow(abs(y - .5)*2,1.5)*sign(y-.5);
per_pixel_6=
per_pixel_7=//dy = .2*sign(y-.5)*sw;
per_pixel_8=
per_pixel_9=//sy = 1 + (1-sw)*.116;
per_pixel_10=
per_pixel_11=
per_pixel_12=//rot = .05;
per_pixel_13=
per_pixel_14=cx = if(above(y,.5),-1,2);
warp_1=`
warp_2=`shader_body
warp_3=`{
warp_4=`
warp_5=`ret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);
warp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy*q27
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*q29
warp_12=`                     );
warp_13=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_14=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_15=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_16=`
warp_17=`ret.z += GetBlur1(uv_orig).z*.45;
warp_18=`ret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;
warp_19=`ret.z -= ret.x;
warp_20=`
warp_21=`float2 pixelsize = texsize.zw;
warp_22=`ret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);
warp_23=`
warp_24=`float1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;
warp_25=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;
warp_26=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;
warp_27=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;
warp_28=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;
warp_29=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;
warp_30=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;
warp_31=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;
warp_32=`
warp_33=`float1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);
warp_34=`
warp_35=`conway -= tex2D( sampler_pw_main, uv_orig).x;
warp_36=`
warp_37=`ret.z=1-ret.y;
warp_38=`ret.y=1-ret.x;
warp_39=`ret.x=1-ret.z;
warp_40=`if (conway > 0) {
warp_41=`if (saturate(ret.y) == 0) {
warp_42=`ret.y = floor(test*1.8)*q1;
warp_43=`}
warp_44=`}
warp_45=`
warp_46=`ret.y -= ret.x;
warp_47=`
warp_48=`ret.xyz -= 1-q2;
warp_49=`ret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.5;
warp_50=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`uv = 0.5 + (uv-0.5)*0.95;
comp_7=`float2 uvo = uv;
comp_8=`uv = (uv-0.5);
comp_9=`factorA = uv+ float2(q1,q2);
comp_10=`factorB = float2(8,0);
comp_11=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_12=`float2 uv1 = product;
comp_13=`factorA = uv+ float2(q3,q4);
comp_14=`factorB = float2(8,0);
comp_15=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_16=`float2 uv2 = product;
comp_17=`factorA = uv+ float2(q5,q6);
comp_18=`factorB = float2(8,0);
comp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_20=`float2 uv3 = product;
comp_21=`factorA = uv+ float2(q7,q8);
comp_22=`factorB = float2(8,0);
comp_23=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_24=`float2 uv4 = product;
comp_25=`factorA = uv1;
comp_26=`factorB = uv2;
comp_27=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_28=`float2 uv12 = product;
comp_29=`factorA = uv3;
comp_30=`factorB = uv4;
comp_31=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_32=`float2 uv34 = product;
comp_33=`factorA = uv12;
comp_34=`factorB = uv34;
comp_35=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_36=`numerator = float2(1,0);
comp_37=`denominator = product;
comp_38=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_39=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_40=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_41=`uv = fraction.yx*float2(-1,1)*32;
comp_42=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_43=`float l = length(uv-0.5);
comp_44=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_45=`ret = lerp(float3(0.8,0.5,0),-0.5,(GetBlur2(uv)*2-GetPixel(uv)).x);
comp_46=`ret = lerp(ret,1,(GetBlur3(uv)*2-GetPixel(uv)).y*1.5);
comp_47=`float c =saturate(1.6-pow(l,6)*0.004);
comp_48=`ret = lerp((GetBlur3(uvo)*2-GetPixel(uvo)).y,ret,c);
comp_49=`ret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.6;
comp_50=`}

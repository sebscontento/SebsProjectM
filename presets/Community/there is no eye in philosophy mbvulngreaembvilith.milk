MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.350
fDecay=0.980
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.90909
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.100
wavecode_0_g=1.000
wavecode_0_b=0.700
wavecode_0_a=1.000
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=tm=q1;
wave_0_per_point3=phs=-sample*0.5;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=0;
wave_0_per_point9=yp=flip*0.1;
wave_0_per_point10=zp=0;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2+phs)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=
wave_0_per_point19=ang=cos(tm*2+phs)*1.5;
wave_0_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point22=zp=zq;
wave_0_per_point23=
wave_0_per_point24=//forearm movement;
wave_0_per_point25=zp=zp-0.3;
wave_0_per_point26=ang=3.14 + sin(tm*2+phs - 0.5)*1.5;
wave_0_per_point27=xq=xp;
wave_0_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point30=
wave_0_per_point31=//upper arm twist
wave_0_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_0_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point35=zp=zq;
wave_0_per_point36=
wave_0_per_point37=//upper arm outward;
wave_0_per_point38=zp=zp-0.35;
wave_0_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_0_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point41=yq=yp;
wave_0_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point43=
wave_0_per_point44=//upper arm up down;
wave_0_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_0_per_point46=xp=xq;
wave_0_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point49=
wave_0_per_point50=//xp=xq;yp=yq;zp=zq;
wave_0_per_point51=
wave_0_per_point52=
wave_0_per_point53=//project into screenspace and draw on screen
wave_0_per_point54=zp=zp+2;
wave_0_per_point55=xs=xp/zp;
wave_0_per_point56=ys=yp/zp;
wave_0_per_point57=
wave_0_per_point58=x=xs+0.5;
wave_0_per_point59=y=ys*1.3+0.5;
wave_0_per_point60=
wave_0_per_point61=
wave_0_per_point62=a=(1-sample)*0.03;
wave_0_per_point63=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=1.000
wavecode_1_b=0.600
wavecode_1_a=1.000
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=tm=q1 ;
wave_1_per_point3=phs=-sample*0.5;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1;
wave_1_per_point10=zp=0;
wave_1_per_point11=
wave_1_per_point12=//wrist movement;
wave_1_per_point13=ang=sin(tm*2+phs)*0.5 +0.5;
wave_1_per_point14=
wave_1_per_point15=xq=xp;
wave_1_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point18=
wave_1_per_point19=ang=cos(tm*2+phs)*1.5;
wave_1_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point22=zp=zq;
wave_1_per_point23=
wave_1_per_point24=//forearm movement;
wave_1_per_point25=zp=zp-0.3;
wave_1_per_point26=ang=3.14 + sin(tm*2+phs+0.5)*1.5;
wave_1_per_point27=xq=xp;
wave_1_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point30=
wave_1_per_point31=//upper arm twist
wave_1_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_1_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point35=zp=zq;
wave_1_per_point36=
wave_1_per_point37=//upper arm outward;
wave_1_per_point38=zp=zp-0.35;
wave_1_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_1_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point41=yq=yp;
wave_1_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point43=
wave_1_per_point44=//upper arm up down;
wave_1_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_1_per_point46=xp=xq;
wave_1_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point49=
wave_1_per_point50=//xp=xq;yp=yq;zp=zq;
wave_1_per_point51=
wave_1_per_point52=
wave_1_per_point53=//project into screenspace and draw on screen
wave_1_per_point54=zp=zp+2;
wave_1_per_point55=xs=xp/zp;
wave_1_per_point56=ys=yp/zp;
wave_1_per_point57=
wave_1_per_point58=x=-xs+0.5;
wave_1_per_point59=y=ys*1.3+0.5;
wave_1_per_point60=
wave_1_per_point61=
wave_1_per_point62=a=(1-sample)*0.03;
wave_1_per_point63=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.600
wavecode_2_b=0.100
wavecode_2_a=1.000
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=tm=q1;
wave_2_per_point3=phs=-sample*0.5;
wave_2_per_point4=
wave_2_per_point5=flip=flip+1;
wave_2_per_point6=flip=flip*below(flip,2);
wave_2_per_point7=
wave_2_per_point8=xp=0;
wave_2_per_point9=yp=flip*0.1;
wave_2_per_point10=zp=0;
wave_2_per_point11=
wave_2_per_point12=//wrist movement;
wave_2_per_point13=ang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;
wave_2_per_point14=
wave_2_per_point15=xq=xp;
wave_2_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_2_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_2_per_point18=
wave_2_per_point19=ang=cos(tm*2+phs - 2)*1.5 ;
wave_2_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_2_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_2_per_point22=zp=zq;
wave_2_per_point23=
wave_2_per_point24=//forearm movement;
wave_2_per_point25=zp=zp-0.3;
wave_2_per_point26=ang=3.14 + sin(tm*2+phs - 0.5)*1.5;
wave_2_per_point27=xq=xp;
wave_2_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_2_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_2_per_point30=
wave_2_per_point31=//upper arm twist
wave_2_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);
wave_2_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_2_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_2_per_point35=zp=zq;
wave_2_per_point36=
wave_2_per_point37=//upper arm outward;
wave_2_per_point38=zp=zp-0.35;
wave_2_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_2_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_2_per_point41=yq=yp;
wave_2_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_2_per_point43=
wave_2_per_point44=//upper arm up down;
wave_2_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_2_per_point46=xp=xq;
wave_2_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_2_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_2_per_point49=
wave_2_per_point50=//xp=xq;yp=yq;zp=zq;
wave_2_per_point51=
wave_2_per_point52=
wave_2_per_point53=//project into screenspace and draw on screen
wave_2_per_point54=zp=zp+2;
wave_2_per_point55=xs=xp/zp;
wave_2_per_point56=ys=yp/zp;
wave_2_per_point57=
wave_2_per_point58=x=xs+0.5;
wave_2_per_point59=y=ys*1.3+0.5;
wave_2_per_point60=
wave_2_per_point61=
wave_2_per_point62=a=(1-sample)*0.05
wave_2_per_point63=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.300
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=tm=q1 ;
wave_3_per_point3=phs=-sample*0.5;
wave_3_per_point4=
wave_3_per_point5=flip=flip+1;
wave_3_per_point6=flip=flip*below(flip,2);
wave_3_per_point7=
wave_3_per_point8=xp=0;
wave_3_per_point9=yp=flip*0.1;
wave_3_per_point10=zp=0;
wave_3_per_point11=
wave_3_per_point12=//wrist movement;
wave_3_per_point13=ang=sin(tm*2+phs-2)*0.5 +0.5 + 2;
wave_3_per_point14=
wave_3_per_point15=xq=xp;
wave_3_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point18=
wave_3_per_point19=ang=cos(tm*2+phs-2)*1.5;
wave_3_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point22=zp=zq;
wave_3_per_point23=
wave_3_per_point24=//forearm movement;
wave_3_per_point25=zp=zp-0.3;
wave_3_per_point26=ang=3.14 + sin(tm*2+phs-0.5)*1.5;
wave_3_per_point27=xq=xp;
wave_3_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point30=
wave_3_per_point31=//upper arm twist
wave_3_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_3_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point35=zp=zq;
wave_3_per_point36=
wave_3_per_point37=//upper arm outward;
wave_3_per_point38=zp=zp-0.35;
wave_3_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_3_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_3_per_point41=yq=yp;
wave_3_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_3_per_point43=
wave_3_per_point44=//upper arm up down;
wave_3_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_3_per_point46=xp=xq;
wave_3_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_3_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_3_per_point49=
wave_3_per_point50=//xp=xq;yp=yq;zp=zq;
wave_3_per_point51=
wave_3_per_point52=
wave_3_per_point53=//project into screenspace and draw on screen
wave_3_per_point54=zp=zp+2;
wave_3_per_point55=xs=xp/zp;
wave_3_per_point56=ys=yp/zp;
wave_3_per_point57=
wave_3_per_point58=x=-xs+0.5;
wave_3_per_point59=y=ys*1.3+0.5;
wave_3_per_point60=
wave_3_per_point61=
wave_3_per_point62=a=(1-sample)*0.05;
wave_3_per_point63=
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=warp=0;
per_frame_2=wave_a = 0;
per_frame_3=
per_frame_4=//begin beat code
per_frame_5=volume = 0.3*(bass+mid);
per_frame_6=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_7=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_8=meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_9=peakbass_att = max(bass_att,peakbass_att);
per_frame_10=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_11=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_12=//Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_13=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_14=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_15=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_16=//end beat code
per_frame_17=
per_frame_18=xamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);
per_frame_19=xamp = xamp + 0.5*(xamptarg-xamp);
per_frame_20=xdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
per_frame_21=xspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);
per_frame_22=xpos = xpos + 0.001*xspeed;
per_frame_23=yamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);
per_frame_24=yamp = yamp + 0.5*(yamptarg-yamp);
per_frame_25=ydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
per_frame_26=yspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);
per_frame_27=ypos = ypos + 0.001*yspeed;
per_frame_28=q1 = beat;
per_frame_29=q2 = xpos;
per_frame_30=q3 = ypos;
per_frame_31=q4 = time*0.5;
per_frame_32=
per_frame_33=q5 = 0.25*(sin(time*0.15)+sin(time*0.85))+0.5;
per_frame_34=
per_frame_35=monitor = q5;
per_pixel_1=it = 0.3*sin(time*0.2);
per_pixel_2=radm = rad*0.5;
per_pixel_3=rot = 0.02*sin((radm+it)*30)/((rad+0.1)*((sin(time)*0.4+0.5)*20));
per_pixel_4=mod = sin(ang*5);
per_pixel_5=mod = mod*mod;
per_pixel_6=zoom = .99 - abs(0.01*mod);
per_pixel_7=mx = (x-.5)*1.33;
per_pixel_8=my = y - .5;
per_pixel_9=
per_pixel_10=sw = above(rad,.4) + below(rad,.04) + above(rad,.3)*below(rad,.4)*(rad-.3)*5;
per_pixel_11=sw = above(rad,.3)*(rad-.3)*5;
per_pixel_12=
per_pixel_13=zoom = 1 - .1*sw;
per_pixel_14=
per_pixel_15=rot = 0 + .2*sw;
per_pixel_16=
per_pixel_17=dx = (1-sw)*sin(ang)*.001*.75;
per_pixel_18=dy = (1-sw)*cos(ang)*.001;
per_pixel_19=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_20=
per_pixel_21=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_22=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_23=zoom = zoom + 0.01;
per_pixel_24=zoom = zoom + (0.05 + 0.04*sin(time))*(0.2*sin(ang*time));
per_pixel_25=rot = rot + 0.01*(0.5*cos(ang*5*bass*time));
per_pixel_26=
per_pixel_27=dx = dx + 0.1*above(rad,0.25)*dx_r;
per_pixel_28=dy = dy + 0.1*above(rad,0.25)*dy_r;
per_pixel_29=rot=0.1*pow(-ang,3)-1.18*sin(ang);
per_pixel_30=zoom=(1.9+sin(time/2)*0.45)*sin(-rad)+1.3+ sin(rad);
per_pixel_31=dx = dx + 0.09*sin(q8*0.785);
per_pixel_32=dy = dy + 0.09*sin(q8*0.675);
per_pixel_33=//zoom = zoom +q7;
per_pixel_34=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_35=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_36=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_37=
per_pixel_38=rot = rot + 0.15*(1-rad)*(5*sin(0.48*time*dy_r)*sin(time));
per_pixel_39=zoom = zoom - 0.1*(0.9-rad);
per_pixel_40=cx = cx + 0.25*sin(time)*(0.75*sin(1.25*time*dy_r));
per_pixel_41=cy = cy + 0.25*cos(time)*(0.75*cos(1.6*time*dx_r));
warp_1=`shader_body
warp_2=`{
warp_3=`    float3 rc = lerp(float3(0,0,0), float3(0,1,0), uv.y);
warp_4=`    uv = float2(uv.x, uv.y+0.005*rc.y);
warp_5=`        
warp_6=`
warp_7=`    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q2,uv.y+texsize.w*q2)) +
warp_8=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y+texsize.w*q2)) +
warp_9=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y-texsize.w*q2)) +
warp_10=`                     GetPixel(float2(uv.x+texsize.z*q2,uv.y-texsize.w*q2)) ) / 4;
warp_11=`    ret = tex2D(sampler_main, uv);
warp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_13=`                      ((uv.xyy*q27
warp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_15=`                      ).xyz*
warp_16=`                      float3(1,1,0)*0.05 + 
warp_17=`                      time*float3(0,0,1)*q29
warp_18=`                     );
warp_19=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_20=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_21=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_22=`    ret = cross(boxave, 1-ret)*1.2;
warp_23=`    
warp_24=`    //ret -= 0.002;
warp_25=`    //ret *= 0.995;
warp_26=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 ac = float2(q11,q12);
comp_5=`float2 mu = float2(q13,q14);
comp_6=`float2 c = float2(q15,q16);
comp_7=`float2 d = float2(q17,q18);
comp_8=`
comp_9=`float2 z = (uv-0.5);
comp_10=`
comp_11=`// (c*z + d)
comp_12=`float2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x) + d;
comp_13=`// mu/(cz+d)
comp_14=`float2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;
comp_15=`
comp_16=`moebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5)*0.99;
comp_17=`
comp_18=`uv=moebius;
comp_19=`    float srad = sqrt(rad)+ 0.05;
comp_20=`    ret = tex2D(sampler_main, uv).xyz;
comp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_22=`                      ((uv.xyy*q28
comp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_24=`                      ).xyz*
comp_25=`                      float3(1,1,0)*0.05 + 
comp_26=`                      time*float3(0,0,1)*q31
comp_27=`                     );
comp_28=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_29=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_30=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_31=`    ret = max(ret, tex2D(sampler_main, uv + 0.06*float2(cos(uv.y*27*0.5),sin(uv.x*39*0.5))).xyz);
comp_32=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.900
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=5.715
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.162
fWarpScale=5.582
fZoomExponent=0.32104
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.11563
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=2.44415
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=v = 0.01;
wave_0_per_frame3=j = j + (bass)*0.01;
wave_0_per_frame4=j2 = j2 + (mid_att)*0.01;
wave_0_per_frame5=j3 = j3 + (treb_att)*0.01;
wave_0_per_frame6=t2 = j;
wave_0_per_frame7=t3 = j2;
wave_0_per_frame8=t4 = j3;
wave_0_per_frame9=//t5 = 0;
wave_0_per_frame10=k = k*0.99 + 10*mid/fps;
wave_0_per_frame11=t5 = -k;
wave_0_per_frame12=
wave_0_per_frame13=cl1 = cl1 - 0.0005 - bass*0.003;
wave_0_per_frame14=cl1 = if(above(cl1,1),0,cl1);
wave_0_per_frame15=cl1 = if(below(cl1,0),1,cl1);
wave_0_per_frame16=t8 = cl1;
wave_0_per_frame17=
wave_0_per_frame18=cl2 = cl2 +0.0001 + mid*0.001 - bass*0.0005 -treb*0.0005;
wave_0_per_frame19=cl2 = if(above(cl2,1),0,cl2);
wave_0_per_frame20=cl2 = if(below(cl2,0),1,cl2);
wave_0_per_frame21=t7 = cl2;
wave_0_per_frame22=
wave_0_per_frame23=cl3 = cl3 +0.0001+ treb*0.001 - bass*0.0005 - mid*0.0005;
wave_0_per_frame24=cl3 = if(above(cl3,1),0,cl3);
wave_0_per_frame25=cl3 = if(below(cl3,0),1,cl3);
wave_0_per_frame26=t6 = cl3;
wave_0_per_point1=xx = ((sample*0983624912364)%10000000+100)/10000000;
wave_0_per_point2=yy = ((xx*1896575575)%10000000+100)/10000000;
wave_0_per_point3=zz = ((yy*58652340875)%10000000+100)/10000000;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=d = sqrt(sqr(xx)+sqr(yy)+sqr(zz));
wave_0_per_point7=
wave_0_per_point8=zz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;
wave_0_per_point9=xx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;
wave_0_per_point10=yy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;
wave_0_per_point11=
wave_0_per_point12=v = 0.001;
wave_0_per_point13=
wave_0_per_point14=w = 1;// (sample*sin(time*0.3)*0.01-1);
wave_0_per_point15=bb = d*d*0.5;
wave_0_per_point16=n= 0.3;
wave_0_per_point17=s1 = sin(sin(t2*w+bb)*n);
wave_0_per_point18=s2 = sin(sin(t3*w+bb)*n);
wave_0_per_point19=s3 = sin(sin(t4*w+bb)*n);
wave_0_per_point20=c1 = cos(sin(t2*w+bb)*n);
wave_0_per_point21=c2 = cos(sin(t3*w+bb)*n);
wave_0_per_point22=c3 = cos(sin(t4*w+bb)*n);
wave_0_per_point23=
wave_0_per_point24=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point25=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point26=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point27=
wave_0_per_point28=zoom = .5*(1/(z+0.5));
wave_0_per_point29=x = 0.5 + zoom*x1 + sin(time*0.1)*0.;;
wave_0_per_point30=y = 0.5 + zoom*y1 + cos(time*0.16801)*0.;
wave_0_per_point31=
wave_0_per_point32=pi3 = 3.1415*2*0.3333;
wave_0_per_point33=t = z*2+t2*1;
wave_0_per_point34=c=3;
wave_0_per_point35=r = sin(t)*c;
wave_0_per_point36=
wave_0_per_point37=g = sin(t+pi3)*c;
wave_0_per_point38=
wave_0_per_point39=b = sin(t-pi3)*c;
wave_0_per_point40=
wave_0_per_point41=
wave_0_per_point42=r = if(above(r,1),1,r);
wave_0_per_point43=r = if(below(r,0),0,r);
wave_0_per_point44=g = if(above(g,1),1,g);
wave_0_per_point45=g = if(below(g,0),0,g);
wave_0_per_point46=b = if(above(b,1),1,b);
wave_0_per_point47=b = if(below(b,0),0,b);
wave_0_per_point48=
wave_0_per_point49=a = -z+0.7;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=2.44415
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.050
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=cl = 0;
wave_1_per_frame1=t8 = 1;
wave_1_per_point1=t8 = -t8;
wave_1_per_point2=y = sample*0.48;
wave_1_per_point3=x = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;
wave_1_per_point4=
wave_1_per_point5=pi3 = 3.1415*2*0.3333;
wave_1_per_point6=t = -(q4-q6)*10+sample*asin(1)*4.01;
wave_1_per_point7=c=9;
wave_1_per_point8=r = sin(t)*c;
wave_1_per_point9=
wave_1_per_point10=g = sin(t+pi3)*c;
wave_1_per_point11=
wave_1_per_point12=b = sin(t-pi3)*c;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=r = if(above(r,1),1,r);
wave_1_per_point16=r = if(below(r,0),0,r);
wave_1_per_point17=g = if(above(g,1),1,g);
wave_1_per_point18=g = if(below(g,0),0,g);
wave_1_per_point19=b = if(above(b,1),1,b);
wave_1_per_point20=b = if(below(b,0),0,b);
wave_1_per_point21=
wavecode_2_enabled=1
wavecode_2_samples=49
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=2.44415
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_init1=t2 = 0;
wave_2_init2=t3 = 0;
wave_2_init3=t4 = 0;
wave_2_init4=cl = 0;
wave_2_per_frame1=t8 = 1;
wave_2_per_point1=t8 = -1;
wave_2_per_point2=y = sample*0.48;
wave_2_per_point3=x = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;
wavecode_3_enabled=1
wavecode_3_samples=49
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=cl = 0;
wave_3_per_frame1=t8 = 1;
wave_3_per_point1=t8 = 1;
wave_3_per_point2=y = sample*0.48;
wave_3_per_point3=x = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.05343
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=12.77228
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=vx = 0;
shape_0_init2=vy = 0;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.750
shapecode_1_rad=0.46753
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=w = -atan2(0.5,q1)*4+asin(1)*4;
shape_1_per_frame2=ang = w;
shape_1_per_frame3=x = 0.5 +sin(w)*0.19;
shape_1_per_frame4=y = 0.5 +cos(w)*0.26;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.750
shapecode_2_rad=0.46753
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=w = -atan2(0.5,q1)*4+asin(1)*4 + asin(1)*2/3;
shape_2_per_frame2=ang = w;
shape_2_per_frame3=x = 0.5 +sin(w)*0.19;
shape_2_per_frame4=y = 0.5 +cos(w)*0.26;
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.750
shapecode_3_rad=0.46753
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=w = -atan2(0.5,q1)*4+asin(1)*4 - asin(1)*2/3;
shape_3_per_frame2=ang = w;
shape_3_per_frame3=x = 0.5 +sin(w)*0.19;
shape_3_per_frame4=y = 0.5 +cos(w)*0.26;
per_frame_init_1=x1 = 0;
per_frame_init_2=y1 = 0;
per_frame_1=zoom = 1.0;
per_frame_2=
per_frame_3=q1 = .1*(bass-treb);
per_frame_4=
per_frame_5=vvb = if(below(vvb,0),0,vvb);
per_frame_6=vvm = if(below(vvm,0),0,vvm);
per_frame_7=vvt = if(below(vvt,0),0,vvt);
per_frame_8=vb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;
per_frame_9=vvb = vvb*0.95 + (1-vvb)*vb*0.2;
per_frame_10=vm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;
per_frame_11=vvm = vvm*0.95 + (1-vvm)*vm*0.2;
per_frame_12=vt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;
per_frame_13=vvt = vvt*0.95 + (1-vvt)*vt*0.2;
per_frame_14=
per_frame_15=q1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;
per_frame_16=q2 = vvm;//0.5 + vm - vvm;
per_frame_17=q3 = vvt;//0.5 + vt - vvt;
per_frame_18=
per_frame_19=v=0.2;
per_frame_20=d = 0;//v*0.2;
per_frame_21=bb = bb + vvb*v - d;
per_frame_22=mm = mm + vvm*v - d;
per_frame_23=tt = tt + vvt*v - d;
per_frame_24=q4 = bb;
per_frame_25=q5 = mm;
per_frame_26=q6 = tt;
per_frame_27=
per_frame_28=
per_frame_29=q4 = if(above(abs(q1),0.02),0.99,1);
per_frame_30=q9 = 0.5 + 0.5*sin(time*0.14);
per_frame_31=
per_frame_32=bb = bb*0.99 + bass*0.02;
per_frame_33=mm = mm*0.99 + mid*0.02;
per_frame_34=tt = tt*0.99 + treb*0.02;
per_frame_35=
per_frame_36=mx = max(max(bb,mm),tt);
per_frame_37=mn = min(min(bb,mm),tt);
per_frame_38=
per_frame_39=t1 = (bb-mn)/(mx-mn);
per_frame_40=t2 = (mm-mn)/(mx-mn);
per_frame_41=t3 = (tt-mn)/(mx-mn);
per_frame_42=
per_frame_43=v = 1/fps;
per_frame_44=bm = bm + (t1-t2)*v;
per_frame_45=mt = mt + (t2-t3)*v;
per_frame_46=
per_frame_47=q26 = -bm;
per_frame_48=q27 = mt;
warp_1=`shader_body
warp_2=`{
warp_3=`    ret = tex2D( sampler_fc_main, uv )*q4;
warp_4=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_x, uv_y, uv_z, uv_echo;
comp_34=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
comp_35=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
comp_36=`}
comp_37=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_38=`   return center + (domain-center)*scale;
comp_39=`}
comp_40=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_41=`   float2 polar = uv_polar(domain, position);
comp_42=`   float cone = saturate(1-polar.y/radius);
comp_43=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_44=`   float w = atan2(1-cone,halfsphere);
comp_45=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_46=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_47=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_48=`   bool mask =(length(domain-position)<radius);
comp_49=`   return !mask*domain + 
comp_50=`           mask*refrac_uv;
comp_51=`}
comp_52=`shader_body
comp_53=`{
comp_54=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);
comp_55=`float2 pos1 = 1-float2(q4,q5);
comp_56=`float rad1 = q3;
comp_57=`float2 pos2 = 1-float2(q6,q7);
comp_58=`float rad2 = q3;
comp_59=`float2 pos3 = 1-float2(q8,q9);
comp_60=`float rad3 = q3;
comp_61=`float refractivity = 0.5;
comp_62=`float2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);
comp_63=`       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);
comp_64=`       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);
comp_65=`
comp_66=`uv = lens_uv;
comp_67=`
comp_68=`/* code block from Martins hardcore mix - Danke ;) */
comp_69=`
comp_70=`   //******************** STARS
comp_71=`   float2 uv1 = (uv - float2(1-0.5,1-0.5) );
comp_72=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_73=`   rss0.y = .003/(length (uv1));
comp_74=`   rss = float2 (rss0.x,rss0.y+time);
comp_75=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_76=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_77=`   tmp = abs(frac(rss*8)-.5);
comp_78=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_79=`   rss = float2 (rss0.x,rss0.y+time/4);
comp_80=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_81=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_82=`   tmp = abs(frac(rss*8)-.5);
comp_83=`   dots += saturate(.02/length(tmp)) * noise;
comp_84=`   dots *= saturate(.2/abs(rss0.y));
comp_85=`   dots *= dots;
comp_86=`   //*************************
comp_87=`
comp_88=`uv = uv_bipolar_logarithmic(uv, float2(0.25,0.5), float2(0.75,0.5), 2, 0.55, float2(q26,0.1*q27));
comp_89=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_90=`
comp_91=`    float2 d = texsize.zw;
comp_92=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_93=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_94=`float2 dz = float2(dx.y,dy.y)*2;
comp_95=`
comp_96=`d = texsize.zw*2;
comp_97=`dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;
comp_98=`dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;
comp_99=`
comp_100=`dz +=float2(dx.y,dy.y);
comp_101=`
comp_102=`float3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;
comp_103=`
comp_104=`ret = bg*float3(0.2,0.3,0.6);
comp_105=`float2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));
comp_106=`ret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);
comp_107=`ret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);
comp_108=`ret = lerp(ret,float3(0,0,0),0.75*GetPixel(uv_swimmer).x);
comp_109=`ret = lerp(ret,0,GetBlur1(uv).z*4);
comp_110=`ret = lerp(ret,2,GetPixel(uv).z);
comp_111=`ret = lerp(dots*2.4,1,1-ret);
comp_112=`}
comp_113=`
comp_114=`

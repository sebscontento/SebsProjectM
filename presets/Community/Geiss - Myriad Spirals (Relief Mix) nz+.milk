MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.433
fWaveScale=1.910
fWaveSmoothing=0.000
fWaveParam=-0.080
fModWaveAlphaStart=1.030
fModWaveAlphaEnd=1.610
fWarpAnimSpeed=1.729
fWarpScale=2.108
fZoomExponent=1.64463
fShader=0.000
zoom=1.01901
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.45599
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=0.500
ob_b=0.250
ob_a=0.160
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=30
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.49138
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.700
shapecode_0_g=0.700
shapecode_0_b=1.000
shapecode_0_a=0.170
shapecode_0_r2=0.000
shapecode_0_g2=0.200
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=rad = rad + 0.02*cos(time*3);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=q10 = 0;
per_frame_init_2=my_rot = 0;
per_frame_init_3=my_zoom = 1;
per_frame_init_4=s = 0.5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=wave_r = 0.85 + 0.25*sin(0.437*time+1);
per_frame_26=wave_g = 0.85 + 0.25*sin(0.544*time+2);
per_frame_27=wave_b = 0.85 + 0.25*sin(0.751*time+3);
per_frame_28=dx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_29=dy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );
per_frame_30=decay = decay - 0.01*equal(frame%6,0);
per_frame_31=dx = dx + dx_residual;
per_frame_32=dy = dy + dy_residual;
per_frame_33=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_34=dx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;
per_frame_35=dy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;
per_frame_36=wave_x = wave_x - dx_residual*7;
per_frame_37=wave_y = wave_y - dy_residual*7;
per_frame_38=wave_mystery = time*37.03;
per_frame_39=
per_frame_40=new_rot = rot + 0.013*( 0.60*sin(17.381*time) + 0.40*sin(11.579*time) );
per_frame_41=new_zoom = zoom + 0.01*( 0.60*sin(20.1934*time+3) + 0.40*sin(16.307*time+9) );
per_frame_42=new_warp = warp + 0.34*( 0.60*sin(13.5442*time) + 0.40*sin(22.543*time) );
per_frame_43=new_cx = cx + 0.310*( 0.60*sin(16.374*time) + 0.40*sin(26.294*time) );
per_frame_44=new_cy = cy + 0.310*( 0.60*sin(18.393*time) + 0.40*sin(37.223*time) );
per_frame_45=new_s = int(rand(100))*0.01;
per_frame_46=
per_frame_47=// this is a great way to respond to beats:
per_frame_48=// once you get one, let it decay at a constant rate!!
per_frame_49=rg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
per_frame_50=q9 = rg;
per_frame_51=
per_frame_52=// custom beat detection code: (fps-independent; quiet songs don't freak out)
per_frame_53=min_att    = 2.5;               // lower # = quieter songs can declare beats
per_frame_54=decay_to   = 0.8;               // lower # = more hasty to declare a beat
per_frame_55=decay_rate = pow(0.9990, fps);  // lower # = more hasty to declare a beat
per_frame_56=beat =           bass/max(min_att,bass_att);
per_frame_57=beat = max(beat, mid /max(min_att,mid_att ));
per_frame_58=beat = max(beat, treb/max(min_att,treb_att));
per_frame_59=beat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );
per_frame_60=beat_level     = (beat - prev_beat - 0.07)*24;
per_frame_61=is_beat = above(beat_level, 0.5);
per_frame_62=prev_beat = beat;
per_frame_63=  // put your beat responses HERE:
per_frame_64=  wave_a = beat_level;
per_frame_65=  rot = (1-is_beat)*my_rot + (is_beat)*new_rot;
per_frame_66=  zoom = (1-is_beat)*my_zoom + (is_beat)*new_zoom;
per_frame_67=  warp = (1-is_beat)*my_warp + (is_beat)*new_warp;
per_frame_68=  cx = (1-is_beat)*my_cx + (is_beat)*new_cx;
per_frame_69=  cy = (1-is_beat)*my_cy + (is_beat)*new_cy;
per_frame_70=  s = (1-is_beat)*my_s + (is_beat)*new_s;
per_frame_71=my_rot = rot;
per_frame_72=my_zoom = zoom;
per_frame_73=my_warp = warp;
per_frame_74=my_cx = cx;
per_frame_75=my_cy = cy;
per_frame_76=my_s = s;
per_frame_77=
per_frame_78=q11 = s;
per_pixel_1=zoom = zoom + cos(ang*7)*0.02;
warp_1=`shader_body
warp_2=`{
warp_3=`    float s = 0.01 + 0.4*pow(q11, 2);     // should be < about 1
warp_4=`    float2 nz = tex3D( sampler_noisevol_hq, float3(uv_orig.xy*4*texsize.xy/850.0*s,time*0.1) );
warp_5=`
warp_6=`    float2 zz = uv_orig.xy * texsize.xy * 6 * 0.1 * s + nz*9;
warp_7=`    uv.xy += float2(cos(zz.y),cos(zz.x))*texsize.zw * 1.7 / s;
warp_8=`
warp_9=`    // sample previous frame
warp_10=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_11=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_12=`                      ((uv.xyy*q27
warp_13=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_14=`                      ).xyz*
warp_15=`                      float3(1,1,0)*0.05 + 
warp_16=`                      time*float3(0,0,1)*q29
warp_17=`                     );
warp_18=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_19=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_20=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_21=`    ret.xyz *= 0.99;
warp_22=`
warp_23=`      // add noise:
warp_24=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;
warp_25=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 
warp_26=`                    //* saturate(treb_att-1);
warp_27=`                    *0.16;
warp_28=`
warp_29=`    // color rotate & desaturate over time, to keep the globs white
warp_30=`    ret.xyz = lerp(ret.xyz, ret.zxy, 0.2);
warp_31=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = tex2D(sampler_main, uv).xyz;    
comp_4=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_5=`                      ((uv.xyy*q28
comp_6=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_7=`                      ).xyz*
comp_8=`                      float3(1,1,0)*0.05 + 
comp_9=`                      time*float3(0,0,1)*q31
comp_10=`                     );
comp_11=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_12=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_13=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_14=`    float3 d = float3(texsize.zw, 0)*1.3;
comp_15=`    float b1 = lum(GetBlur1(uv + d.xz));
comp_16=`    float b2 = lum(GetBlur1(uv - d.xz));
comp_17=`    float b3 = lum(GetBlur1(uv + d.zy));
comp_18=`    float b4 = lum(GetBlur1(uv - d.zy));
comp_19=`
comp_20=`    ret *= 0.5; 
comp_21=`    ret += (b1-b2)*3*float3(1,0.7,0.3);
comp_22=`    ret += (b3-b4)*3*float3(0.2,0.5,0.7);
comp_23=`
comp_24=`    ret *= 1.5;
comp_25=`}

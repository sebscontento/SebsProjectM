MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=2.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.92170
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=1.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=16
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t
wave_0_per_point1=dim =1; //Dancer dimensions
wave_0_per_point2=xpos=0;//Dancer x position variation
wave_0_per_point3=ypos=0;//Dancer y position variation
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=
wave_0_per_point7=//Position Stabilization
wave_0_per_point8=xpos=xpos+(1-dim)/2;
wave_0_per_point9=ypos=ypos+(1-dim)/2;
wave_0_per_point10=
wave_0_per_point11=meanbass = 0.01*(meanbass*99+bass);
wave_0_per_point12=meantreb = 0.01*(meantreb*99+treb);
wave_0_per_point13=meanmid = 0.01*(meanmid*99+mid);
wave_0_per_point14=bassdiff = (bass - meanbass)*15;
wave_0_per_point15=trebdiff = (treb - meantreb)*15;
wave_0_per_point16=middiff = (mid - meanmid)*15;
wave_0_per_point17=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point18=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point19=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point20=
wave_0_per_point21=mi2_prg = mi2_prg+mi;
wave_0_per_point22=gam = abs(gam-above(mi2_prg,5));
wave_0_per_point23=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_0_per_point24=
wave_0_per_point25=s = sample *15;
wave_0_per_point26=//Gambe
wave_0_per_point27=x= if(equal(int(s),1),.4,.4);
wave_0_per_point28=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_0_per_point29=
wave_0_per_point30=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_0_per_point31=y= if(equal(int(s),2),.4,y);
wave_0_per_point32=
wave_0_per_point33=x= if(equal(int(s),3),.6,x);
wave_0_per_point34=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_0_per_point35=
wave_0_per_point36=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_0_per_point37=y= if(equal(int(s),4),.4,y);
wave_0_per_point38=
wave_0_per_point39=//Corpo
wave_0_per_point40=x= if(equal(int(s),5),.5,x);
wave_0_per_point41=y= if(equal(int(s),5),.6,y);
wave_0_per_point42=
wave_0_per_point43=//Braccia
wave_0_per_point44=x= if(equal(int(s),6),.4-mi*.23,x);
wave_0_per_point45=y= if(equal(int(s),6),.5+mi,y);
wave_0_per_point46=
wave_0_per_point47=x= if(equal(int(s),7),.5,x);
wave_0_per_point48=y= if(equal(int(s),7),.6,y);
wave_0_per_point49=
wave_0_per_point50=x= if(equal(int(s),8),.6+tr*.23,x);
wave_0_per_point51=y= if(equal(int(s),8),.5+tr,y);
wave_0_per_point52=
wave_0_per_point53=x= if(equal(int(s),9),.5,x);
wave_0_per_point54=y= if(equal(int(s),9),.6,y);
wave_0_per_point55=
wave_0_per_point56=//Testa
wave_0_per_point57=x= if(equal(int(s),10),.5,x);
wave_0_per_point58=y= if(equal(int(s),10),.62,y);
wave_0_per_point59=
wave_0_per_point60=x= if(equal(int(s),11),.47-ba*.23,x);
wave_0_per_point61=y= if(equal(int(s),11),.62,y);
wave_0_per_point62=x= if(equal(int(s),12),.47-ba*.23,x);
wave_0_per_point63=y= if(equal(int(s),12),.67+ba*.23,y);
wave_0_per_point64=
wave_0_per_point65=x= if(equal(int(s),13),.53+ba*.23,x);
wave_0_per_point66=y= if(equal(int(s),13),.67+ba*.23,y);
wave_0_per_point67=
wave_0_per_point68=x= if(equal(int(s),14),.53+ba*.23,x);
wave_0_per_point69=y= if(equal(int(s),14),.62,y);
wave_0_per_point70=
wave_0_per_point71=x= if(equal(int(s),15),.50,x);
wave_0_per_point72=y= if(equal(int(s),15),.62,y);
wave_0_per_point73=
wave_0_per_point74=x=x*dim+xpos;
wave_0_per_point75=y=y*dim+ypos;
wave_0_per_point76=
wave_0_per_point77=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_0_per_point78=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_0_per_point79=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_0_per_point80=
wave_0_per_point81=hm=sample+mi2_prg;
wave_0_per_point82=ht=sample+tr_prg;
wave_0_per_point83=hb=sample+ba_prg;
wave_0_per_point84=
wave_0_per_point85=r=hm;
wave_0_per_point86=g=ht;
wave_0_per_point87=b=hb;
wave_0_per_point88=a=.8;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.46374
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=//pi
wave_1_init2=t8=3.14159265;
wave_1_init3=t5 = 1;
wave_1_per_frame1=rotx = rotx+bass;
wave_1_per_frame2=roty = roty+mid;
wave_1_per_frame3=rotz = rotz+treb;
wave_1_per_frame4=//rotx = 0;
wave_1_per_frame5=//roty =0;
wave_1_per_frame6=//rotz = 0;
wave_1_per_frame7=
wave_1_per_frame8=//convert rotation values from degrees to radians
wave_1_per_frame9=t1= t8*rotx/180;
wave_1_per_frame10=t2 = t8*roty/180;
wave_1_per_frame11=t3 = t8*rotz/180;
wave_1_per_frame12=
wave_1_per_frame13=t4 = 3*sin(time+0.66*t8);
wave_1_per_frame14=t5 = 10+8*cos(time+0.66*t8);
wave_1_per_frame15=
wave_1_per_frame16=b = 0.5-0.4*cos(time+0.66*t8);
wave_1_per_frame17=g = 0.5-0.4*sin(time+0.66*t8);
wave_1_per_point1=//Define 3D Shape
wave_1_per_point2=
wave_1_per_point3=//Sphere
wave_1_per_point4=x1 = (1+value1)*sin(t8*sample)*sin(16*t8*sample);
wave_1_per_point5=y1 = (1+value1)*cos(t8*sample);
wave_1_per_point6=z1= (1+value1)*sin(t8*sample)*cos(16*t8*sample);
wave_1_per_point7=
wave_1_per_point8=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_1_per_point9=y2 = y1*cos(t1)-z1*sin(t1);
wave_1_per_point10=z2 = y1*sin(t1)+z1*cos(t1);
wave_1_per_point11=x2 = z2*sin(t2)+x1*cos(t2);
wave_1_per_point12=z3 = z2*cos(t2)-x1*sin(t2);
wave_1_per_point13=x3 = x2*cos(t3)-y2*sin(t3);
wave_1_per_point14=y3 = y2*cos(t3)+x2*sin(t3);
wave_1_per_point15=//move resulting shape in 3d space
wave_1_per_point16=x4 = x3+t4;
wave_1_per_point17=y4 = y3;
wave_1_per_point18=z4 = z3+t5;
wave_1_per_point19=//draw 3d shape in 2d
wave_1_per_point20=x=0.5+0.5*(x4/(1+z4*0.5));
wave_1_per_point21=y=0.5+0.5*(y4/(1+z4*0.5));
wave_1_per_point22=
wave_1_per_point23=r = g+value1;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = 3*sin(time+1.33*t8);
wave_2_per_frame14=t5 = 10+8*cos(time+1.33*t8);
wave_2_per_frame15=
wave_2_per_frame16=r = 0.5-0.4*cos(time+1.33*t8);
wave_2_per_frame17=b = 0.5-0.4*sin(time+1.33*t8);
wave_2_per_point1=//There's Krash and Zylot's "arcane star" code here!
wave_2_per_point2=
wave_2_per_point3=//Define 3D Shape
wave_2_per_point4=//Zylot's dumb 3d wave
wave_2_per_point5=fvar = sample*512;
wave_2_per_point6=svar = fvar/16;
wave_2_per_point7=tvar = 0&svar;
wave_2_per_point8=rn=if(above(bass,1.5),int(rand(300))*.001,rn);
wave_2_per_point9=newsample = tvar/(rn);//*value1;
wave_2_per_point10=x1 = sin(newsample*3.1415926*2);
wave_2_per_point11=y1 = cos(newsample*3.1415926*2);
wave_2_per_point12=z1 = 1+sin(time*.1)*3;
wave_2_per_point13=
wave_2_per_point14=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point15=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point16=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point17=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point18=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point19=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point20=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point21=//move resulting shape in 3d space
wave_2_per_point22=x4 = x3;
wave_2_per_point23=y4 = y3;
wave_2_per_point24=z4 = z3+5+5*sin(time*.2)*sin(bass*.0011);
wave_2_per_point25=//draw 3d shape in 2d
wave_2_per_point26=x=0.5+0.5*(x4/(1+z4*0.5));
wave_2_per_point27=y=0.9+0.5*(y4/(1+z4*0.5));
wave_2_per_point28=
wave_2_per_point29=r = -.5 + sin(sample*5+((time*5)+9));
wave_2_per_point30=r = if(below(r,0),0,r);
wave_2_per_point31=g = -.5 + sin(sample*5+time*5);
wave_2_per_point32=g = if(below(g,0),0,g);
wave_2_per_point33=b = -.5 + sin(sample*5+((time*5)+18));
wave_2_per_point34=b = if(below(b,0),0,b);
wave_2_per_point35=r = if(above(bass,2.5),1,r);
wave_2_per_point36=g = if(above(bass,2.5),1,g);
wave_2_per_point37=b = if(above(bass,2.5),1,b);
wavecode_3_enabled=0
wavecode_3_samples=16
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=dim =1; //Dancer dimensions
wave_3_per_point2=xpos=0;//Dancer x position variation
wave_3_per_point3=ypos=0;//Dancer y position variation
wave_3_per_point4=
wave_3_per_point5=
wave_3_per_point6=
wave_3_per_point7=//Position Stabilization
wave_3_per_point8=xpos=xpos+(1-dim)/2;
wave_3_per_point9=ypos=ypos+(1-dim)/2;
wave_3_per_point10=
wave_3_per_point11=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point12=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point13=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point14=bassdiff = (bass - meanbass)*15;
wave_3_per_point15=trebdiff = (treb - meantreb)*15;
wave_3_per_point16=middiff = (mid - meanmid)*15;
wave_3_per_point17=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point18=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point19=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point20=
wave_3_per_point21=mi2_prg = mi2_prg+mi;
wave_3_per_point22=gam = abs(gam-above(mi2_prg,5));
wave_3_per_point23=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_3_per_point24=
wave_3_per_point25=s = sample *15;
wave_3_per_point26=//Gambe
wave_3_per_point27=x= if(equal(int(s),1),.4,.4);
wave_3_per_point28=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_3_per_point29=
wave_3_per_point30=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_3_per_point31=y= if(equal(int(s),2),.4,y);
wave_3_per_point32=
wave_3_per_point33=x= if(equal(int(s),3),.6,x);
wave_3_per_point34=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_3_per_point35=
wave_3_per_point36=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_3_per_point37=y= if(equal(int(s),4),.4,y);
wave_3_per_point38=
wave_3_per_point39=//Corpo
wave_3_per_point40=x= if(equal(int(s),5),.5,x);
wave_3_per_point41=y= if(equal(int(s),5),.6,y);
wave_3_per_point42=
wave_3_per_point43=//Braccia
wave_3_per_point44=x= if(equal(int(s),6),.4-mi*.23,x);
wave_3_per_point45=y= if(equal(int(s),6),.5+mi,y);
wave_3_per_point46=
wave_3_per_point47=x= if(equal(int(s),7),.5,x);
wave_3_per_point48=y= if(equal(int(s),7),.6,y);
wave_3_per_point49=
wave_3_per_point50=x= if(equal(int(s),8),.6+tr*.23,x);
wave_3_per_point51=y= if(equal(int(s),8),.5+tr,y);
wave_3_per_point52=
wave_3_per_point53=x= if(equal(int(s),9),.5,x);
wave_3_per_point54=y= if(equal(int(s),9),.6,y);
wave_3_per_point55=
wave_3_per_point56=//Testa
wave_3_per_point57=x= if(equal(int(s),10),.5,x);
wave_3_per_point58=y= if(equal(int(s),10),.62,y);
wave_3_per_point59=
wave_3_per_point60=x= if(equal(int(s),11),.47-ba*.23,x);
wave_3_per_point61=y= if(equal(int(s),11),.62,y);
wave_3_per_point62=x= if(equal(int(s),12),.47-ba*.23,x);
wave_3_per_point63=y= if(equal(int(s),12),.67+ba*.23,y);
wave_3_per_point64=
wave_3_per_point65=x= if(equal(int(s),13),.53+ba*.23,x);
wave_3_per_point66=y= if(equal(int(s),13),.67+ba*.23,y);
wave_3_per_point67=
wave_3_per_point68=x= if(equal(int(s),14),.53+ba*.23,x);
wave_3_per_point69=y= if(equal(int(s),14),.62,y);
wave_3_per_point70=
wave_3_per_point71=x= if(equal(int(s),15),.50,x);
wave_3_per_point72=y= if(equal(int(s),15),.62,y);
wave_3_per_point73=
wave_3_per_point74=x=x*dim+xpos;
wave_3_per_point75=y=y*dim+ypos;
wave_3_per_point76=
wave_3_per_point77=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_3_per_point78=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_3_per_point79=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_3_per_point80=
wave_3_per_point81=hm=sample+mi2_prg;
wave_3_per_point82=ht=sample+tr_prg;
wave_3_per_point83=hb=sample+ba_prg;
wave_3_per_point84=
wave_3_per_point85=r=hm;
wave_3_per_point86=g=ht;
wave_3_per_point87=b=hb;
wave_3_per_point88=a=.8;
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.55924
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.230
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=meanbass = 0.01*(meanbass*99+bass);
shape_2_per_frame2=meantreb = 0.01*(meantreb*99+treb);
shape_2_per_frame3=meanmid = 0.01*(meanmid*99+mid);
shape_2_per_frame4=bassdiff = (bass - meanbass)*15;
shape_2_per_frame5=trebdiff = (treb - meantreb)*15;
shape_2_per_frame6=middiff = (mid - meanmid)*15;
shape_2_per_frame7=bassdiff = above(bassdiff,0)*bassdiff;
shape_2_per_frame8=trebdiff = above(trebdiff,0)*trebdiff;
shape_2_per_frame9=middiff = above(middiff,0)*middiff;
shape_2_per_frame10=
shape_2_per_frame11=g = min(1,max(0,0.2*trebdiff));
shape_2_per_frame12=r = min(1,max(0,0.2*middiff));
shape_2_per_frame13=b = min(1,max(0,0.2*bassdiff));
shape_2_per_frame14=g2 = min(1,max(0,0.2*trebdiff));
shape_2_per_frame15=r2 = min(1,max(0,0.2*middiff));
shape_2_per_frame16=b2 = min(1,max(0,0.2*bassdiff));
shape_2_per_frame17=border_g = .4+min(.6,max(0,0.1*trebdiff));
shape_2_per_frame18=border_r = .4+min(.6,max(0,0.1*middiff));
shape_2_per_frame19=border_b = .4+min(.6,max(0,0.1*bassdiff));
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=decay = 1;
per_frame_2=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_3=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_4=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_5=
per_frame_6=x1 = 0.5 + (xx1-xx2)*1.5;
per_frame_7=y1 = 0.5 + yy1;
per_frame_8=
per_frame_9=//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;
per_frame_10=
per_frame_11=spring = 18;
per_frame_12=grav = 1;
per_frame_13=resist = 5;
per_frame_14=bounce = 0.9;
per_frame_15=dt = 0.0003;
per_frame_16=
per_frame_17=vx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);
per_frame_18=vy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);
per_frame_19=vx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);
per_frame_20=vy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);
per_frame_21=vx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);
per_frame_22=vy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);
per_frame_23=
per_frame_24=x2 = x2 + vx2;
per_frame_25=y2 = y2 + vy2;
per_frame_26=x3 = x3 + vx3;
per_frame_27=y3 = y3 + vy3;
per_frame_28=x4 = x4 + vx4;
per_frame_29=y4 = y4 + vy4;
per_frame_30=
per_frame_31=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_32=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_33=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_34=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_35=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_36=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_37=
per_frame_38=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_39=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_40=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_41=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_42=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_43=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_44=
per_frame_45=
per_frame_46=q1 = x1;
per_frame_47=q2 = x2;
per_frame_48=q3 = x3;
per_frame_49=q4 = x4;
per_frame_50=
per_frame_51=q5 = y1;
per_frame_52=q6 = y2;
per_frame_53=q7 = y3;
per_frame_54=q8 = y4;
per_frame_55=
per_frame_56=warp = 0;
per_frame_57=zoom = 1.00;
per_frame_58=q6 = atan2(vx4,vy4);
per_frame_59=q5 = sqrt(vx4*vx4 + vy4*vy4);
per_pixel_1=dir = -q6*1 + asin(1)*1;
per_pixel_2=
per_pixel_3=b1 = 0.1; // distance
per_pixel_4=m1 = q5*25;//-0.6 + q5*200; // size
per_pixel_5=t1 = 0.05; // velocity
per_pixel_6=
per_pixel_7=xx = q4;
per_pixel_8=yy = 1-q8;
per_pixel_9=
per_pixel_10=
per_pixel_11=x1 = xx   +cos(dir+1.5708)*b1;
per_pixel_12=y1 = yy -sin(dir+1.5708)*b1;
per_pixel_13=
per_pixel_14=x2 = xx   -cos(dir+1.5708)*b1;
per_pixel_15=y2 = yy +sin(dir+1.5708)*b1;
per_pixel_16=
per_pixel_17=d1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;
per_pixel_18=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_19=
per_pixel_20=d2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;
per_pixel_21=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_22=
per_pixel_23=si3 = -pow(q5,3)*00;
per_pixel_24=
per_pixel_25=dx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;
per_pixel_26=dy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;
warp_1=`shader_body
warp_2=`{
warp_3=`    //Thanks to flexi for his julia set example!   
warp_4=` 
warp_5=`    float2 zoom = 1.7;
warp_6=`    float2 c = float2(0.8, 0.22)-q3*0.5;    
warp_7=`    float2 uxy = (uv-0.5)*zoom;
warp_8=`    
warp_9=`    uxy = (float2(uxy.x*uxy.x - uxy.y*uxy.y, 2*uxy.x*uxy.y));
warp_10=`    c = float2(c.x*c.x - c.y*c.y, 2*c.x*c.y);
warp_11=`    c = float2(c.x*c.x - c.y*c.y, 2*c.x*c.y);
warp_12=`    uxy = uxy+c;    
warp_13=`
warp_14=`    
warp_15=`    ret = 1-tex2D(sampler_fc_main, uxy).xyz - 0.005;    
warp_16=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs;
comp_4=`float pads;
comp_5=`
comp_6=`shader_body {
comp_7=`float2 uv1 = (uv-.5-.0*float2(q1,q2) )*aspect.xy;
comp_8=`//uv = mul(uv-.5,float2x2(_qa))+.5;
comp_9=`
comp_10=`uv1*= aspect.yx;
comp_11=`float h1 = 3;
comp_12=`
comp_13=`float z = h1/abs(uv1.y) ;
comp_14=`
comp_15=`
comp_16=`
comp_17=`rs.x = (uv1.x) *z*2;
comp_18=`float mask = saturate (15/z-.3);
comp_19=`rs.y = z;
comp_20=`rs = mul(rs,float2x2(_qa));
comp_21=`rs.y += q17;
comp_22=`float2 uv6 = sin(rs);
comp_23=`pads = .5-sqrt(length(uv6.x*uv6.y));
comp_24=`pads *= (pads <= -.1) *mask;
comp_25=`
comp_26=`float mask2 = (pads <= -.1);
comp_27=`ret = (1-2*pads)* (GetPixel(uv+pads/4))*(1+q22) 
comp_28=`-pads *q2*GetPixel(rs/180)*4
comp_29=`-pads *q1*GetPixel(1-uv)*4;    
comp_30=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.995
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=13.29089
rot=0.00000
cx=0.500
cy=0.500
dx=-0.86000
dy=0.72000
warp=0.01000
sx=0.95147
sy=0.96098
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.030
ob_r=1.000
ob_g=0.760
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=1
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10260
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*sin(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=rad=(bass+treb)/100;
shape_0_per_frame15=a=(above(bass+mid+treb,.8));
shape_0_per_frame16=r=int(rand(100))/100;
shape_0_per_frame17=g=int(rand(100))/100;
shape_0_per_frame18=b=int(rand(100))/100;
shape_0_per_frame19=r2=int(rand(100))/100;
shape_0_per_frame20=g2=int(rand(100))/100;
shape_0_per_frame21=b2=int(rand(100))/100;
shape_0_per_frame22=r_border=int(rand(100))/100;
shape_0_per_frame23=g_border=int(rand(100))/100;
shape_0_per_frame24=b_border=int(rand(100))/100;
shapecode_1_enabled=1
shapecode_1_sides=23
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10262
shapecode_1_ang=0.43982
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.500
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*cos(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=rad=(bass+treb)/75;
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shape_1_per_frame16=r=int(rand(100))/100;
shape_1_per_frame17=g=int(rand(100))/100;
shape_1_per_frame18=b=int(rand(100))/100;
shape_1_per_frame19=r2=int(rand(100))/100;
shape_1_per_frame20=g2=int(rand(100))/100;
shape_1_per_frame21=b2=int(rand(100))/100;
shape_1_per_frame22=r_border=int(rand(100))/100;
shape_1_per_frame23=g_border=int(rand(100))/100;
shape_1_per_frame24=b_border=int(rand(100))/100;
shapecode_2_enabled=0
shapecode_2_sides=14
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=256
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.20269
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(mid,1)*3.1415*.01*mid);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0004*cos(ma));
shape_2_per_frame5=my=my+(.0004*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=
shape_2_per_frame15=a=(above(bass+mid+treb,.3));
shapecode_3_enabled=0
shapecode_3_sides=14
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=256
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.22389
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
shape_3_per_frame2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0008*cos(ma));
shape_3_per_frame5=my=my+(.0008*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=
shape_3_per_frame15=a=(above(bass+mid+treb,.2));
per_frame_init_1=zoom=1;
per_frame_init_2=xpos=0;
per_frame_init_3=ypos=0;
per_frame_1=//flexi mobius spiral col frame
per_frame_2=t = t + 2.5/fps;
per_frame_3=t = if(above(t,2),t-2,t);
per_frame_4=q22 = -t;
per_frame_5=// Flexis dampened sound response functions
per_frame_6=db = db*0.98 + bass_att*0.2; // dampener
per_frame_7=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_8=dt = dt*0.98 + treb_att*0.2;
per_frame_9=tt = tt + dt*0.1;
per_frame_10=dm = dm*0.98 + mid_att*0.2;
per_frame_11=mm = mm + dm*0.1;
per_frame_12=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_13=// change
per_frame_14=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_15=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_16=w = (bb-tt)*0.1;                   // angle
per_frame_17=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_18=//don't change
per_frame_19=q11 = sin(w);
per_frame_20=q12 = cos(w);
per_frame_21=q17 = sin(-w);
per_frame_22=q18 = cos(-w);
per_frame_23=q15 = 1/q16;
per_frame_24=zoom =1;// 0.999;
per_frame_25=warp = 0;
per_frame_26=// a
per_frame_27=scale = 8;
per_frame_28=angle = -time*0.2;
per_frame_29=q1 = scale*cos(angle); // the real part
per_frame_30=q2 = scale*sin(angle); // the imaginary part
per_frame_31=// b
per_frame_32=q3 = 0; // the real part
per_frame_33=q4 = 0.3; // the imaginary part
per_frame_34=// c
per_frame_35=scale = 0.8;
per_frame_36=angle = time*0.2;
per_frame_37=q5 = scale*cos(angle); // the real part
per_frame_38=q6 = scale*sin(angle); // the imaginary part
per_frame_39=// d
per_frame_40=q7 = -0.25; // the real part
per_frame_41=q8 = 0.2; // the imaginary part
per_frame_42=q11 = 1/asin(1);
per_frame_43=decay=.96;
per_frame_44=
per_frame_45=vol= vol+(db+dm+dt)*0.002;
per_frame_46=mv_r = 0.5 + 0.4*sin(time*1.324);
per_frame_47=mv_g = 0.5 + 0.4*cos(time*1.371);
per_frame_48=ob_r = 0.5 + 0.4*sin(time*1.324);
per_frame_49=ob_g = 0.5 + 0.4*cos(time*1.371);
per_frame_50=zoom=.97+(treb*0.02);
per_frame_51=musictime=vol;
per_frame_52=q1=sin(musictime*0.02)*99.45;
per_frame_53=q2=sin(musictime*0.01)*99.45;
per_frame_54=q3=sin(musictime*0.021)*99.45;
per_frame_55=q4=sin(musictime*0.021)*99.45;
per_frame_56=q5=sin(musictime*0.012)*99.45;
per_frame_57=q6=sin(musictime*0.022)*99.45;
per_frame_58=q7=sin(musictime*0.013)*99.45;
per_frame_59=q8=sin(musictime*0.023)*99.45;
per_frame_60=q13=sin(musictime*0.024)*999.45;
per_frame_61=q14=sin(musictime*0.014)*999.45;
per_frame_62=dx=sin(musictime*0.2)*0.02;
per_frame_63=dy=cos(musictime*0.069)*0.02;
per_frame_64=monitor=rot;
per_frame_65=wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );
per_frame_66=wave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );
per_frame_67=wave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );
per_frame_68=rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_69=cx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_70=cy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_71=dx = dx + 0.010*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_72=dy = dy + 0.010*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );
per_frame_73=decay = decay - 0.01*equal(frame%6,0);
per_frame_74=dx = dx + dx_residual;
per_frame_75=dy = dy + dy_residual;
per_frame_76=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_77=dx_residual = (equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual)*0.9;
per_frame_78=dy_residual = (equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual)*0.9;
per_frame_79=wave_x = wave_x - dx_residual*7;
per_frame_80=wave_y = wave_y - dy_residual*7;
per_frame_81=
per_frame_82=zoom = zoom + 0.04*cos(time*0.513+2);
per_frame_83=q21 = 0.12*cos(time*0.479+1);
per_frame_84=q22 = 0.12*cos(time*0.359+2);
per_frame_85=q23=(sin(time)+1)/2+.3;
per_frame_86=q24=(sin(time*1.1)+1)/2+.3;
per_frame_87=q25=(sin(time*1.2)+1)/2+.3;
per_pixel_1=rot=(rad/11);
warp_1=`sampler sampler_prayerwheel;
warp_2=`shader_body {
warp_3=`
warp_4=`
warp_5=`float3 uv_sphere;
warp_6=`uv_sphere.xy = uv*3-time*roam_sin*.0001;
warp_7=`uv_sphere.xy = frac( uv_sphere.xy  ) * 2.0;
warp_8=`uv_sphere.xy = 1.0 - abs( uv_sphere.xy - 1.0 );
warp_9=`uv_sphere = tex2Dbias( sampler_prayerwheel, float4(uv_sphere.xy,0.0,-0.5) );
warp_10=`
warp_11=`float3 uv_sphere2;
warp_12=`uv_sphere2.yz = uv*3.2-time*roam_sin*.000085;
warp_13=`uv_sphere2.yz = frac( uv_sphere2.yz  ) * 2.0;
warp_14=`uv_sphere2.yz = 1.0 - abs( uv_sphere2.yz - 1.0 );
warp_15=`uv_sphere2 = tex2Dbias( sampler_prayerwheel, float4(uv_sphere2.yz,-.5,0) );
warp_16=`
warp_17=`float3 uv_sphere3;
warp_18=`uv_sphere3.zx = uv*3.5-time*roam_sin*.00007;
warp_19=`uv_sphere3.zx = frac( uv_sphere3.zx  ) * 2.0;
warp_20=`uv_sphere3.zx = 1.0 - abs( uv_sphere3.zx - 1.0 );
warp_21=`uv_sphere3 = tex2Dbias( sampler_prayerwheel, float4(uv_sphere3.zx,.5,-.5) );
warp_22=`
warp_23=`ret.x = uv_sphere*q23;
warp_24=`ret.y = uv_sphere2*q24;
warp_25=`ret.z = uv_sphere3*q25;
warp_26=`}
comp_1=`float2 factorA, factorB, product;
comp_2=`float2 numerator, denominator, fraction;
comp_3=`
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uvo = uv;
comp_7=`//*** Flexis Moebius transformation code
comp_8=`
comp_9=`uv = (uv-0.5)*aspect.xy*2;
comp_10=`factorA = uv;
comp_11=`factorB = float2(q1,q2);
comp_12=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_13=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_14=`
comp_15=`numerator = product + float2(q3,q4);
comp_16=`
comp_17=`factorA = uv;
comp_18=`factorB = float2(q5,q6);
comp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_20=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_21=`
comp_22=`
comp_23=`denominator = product + float2(q7,q8);
comp_24=`
comp_25=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_26=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_27=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_28=`
comp_29=`uv = fraction*0.5;
comp_30=`
comp_31=`// ***
comp_32=`
comp_33=`
comp_34=`// *** Flexis logarithmic spiral code
comp_35=`
comp_36=`float t = -time*0.5; // set velocity here
comp_37=`float2 c = (uv-0.5);
comp_38=`float1 ang_hq = -atan2(c.x,c.y);
comp_39=`// q11 = 1/asin(1); from the init section
comp_40=`float2 spiral = float2(ang_hq*q11*3+t,aspect.w*log(length(c))+ang_hq*q11-t);
comp_41=`spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*0.95; // mirror
comp_42=`uv = spiral;
comp_43=`
comp_44=`// ***
comp_45=`
comp_46=`ret = tex2d(sampler_main,spiral);
comp_47=`//ret = GetPixel(uvo);
comp_48=`}

[preset00]
fRating=3.000000
fGammaAdj=1.000000
fDecay=0.980000
fVideoEchoZoom=1.000000
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.625316
fWaveScale=0.241619
fWaveSmoothing=0.450000
fWaveParam=0.000000
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fWarpAnimSpeed=1.000000
fWarpScale=1.331000
fZoomExponent=0.999700
fShader=0.000000
zoom=0.999392
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.500000
ob_r=0.500000
ob_g=0.500000
ob_b=0.500000
ob_a=0.000000
ib_size=0.500000
ib_r=0.500000
ib_g=0.500000
ib_b=0.500000
ib_a=0.000000
nMotionVectorsX=0.000000
nMotionVectorsY=0.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=0.850000
mv_r=0.499900
mv_g=0.499900
mv_b=0.499900
mv_a=0.000000
per_frame_1=old_bass_flop=bass_flop;
per_frame_2=old_treb_flop=treb_flop;
per_frame_3=old_mid_flop=mid_flop;
per_frame_4=chaos=.9+.1*sin(pulse);
per_frame_5=entropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+int(rand(2)),entropy);
per_frame_6=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_7=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_8=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_9=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_10=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_11=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_12=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_13=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_14=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_15=bass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;
per_frame_16=treb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;
per_frame_17=mid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;
per_frame_18=pulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);
per_frame_19=q1=mid_residual;
per_frame_20=q2=bass_residual;
per_frame_21=q3=treb_residual;
per_frame_22=q4=sin(pulse);
per_frame_23=q5=cos(pulse/2+q1);
per_frame_24=
per_frame_25=q6=sin(q3*q1+q7*q2);
per_frame_26=q7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;
per_frame_27=q8=entropy;
per_pixel_1=warp=0;
per_pixel_2=entropy=2;
per_frame_init_1=entropy=2;

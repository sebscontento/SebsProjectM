MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=0.010
fWaveSmoothing=0.630
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.010
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.800
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=252
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=2.27970
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=x=sample;
wave_0_per_point2=//y=value1-value2+.5;
wave_0_per_point3=qz=time;
wave_0_per_point4=zz=sin(time*.03)*.4+.5;
wave_0_per_point5=y=sin(sample*qz)*zz+.495;
wave_0_per_point6=h=sin(sample+(time*.12))*.5+.5;
wave_0_per_point7=s=if(above(treb,1.5),1,if(above(treb,1),.7,if(above(treb,.5),.5,.3)));
wave_0_per_point8=l=if(above(bass,1.5),1,if(above(bass,1),.7,if(above(bass,.5),.5,.48)));
wave_0_per_point9=///////////////////////////////////////////////////////////////////////////////////////////////
wave_0_per_point10=//
wave_0_per_point11=//                            HSL to RGB by PieturP
wave_0_per_point12=//
wave_0_per_point13=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_0_per_point14=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_0_per_point15=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_0_per_point16=//
wave_0_per_point17=cc=(6*h);
wave_0_per_point18=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_0_per_point19=zf=(6*h)-cc;
wave_0_per_point20=zm=l;
wave_0_per_point21=zp=l*(1-s);
wave_0_per_point22=zq=l*(1-s*zf);
wave_0_per_point23=zt=l*(1-s*(1-zf));
wave_0_per_point24=monitor=zq;
wave_0_per_point25=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_0_per_point26=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_0_per_point27=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_0_per_point28=rr=if(equal(s,0),l,rr);
wave_0_per_point29=gg=if(equal(s,0),l,gg);
wave_0_per_point30=bb=if(equal(s,0),l,bb);
wave_0_per_point31=
wave_0_per_point32=///////////////////////////////////////////////////////////////////////////////////////////////
wave_0_per_point33=r=rr;
wave_0_per_point34=g=gg;
wave_0_per_point35=b=bb;
wavecode_1_enabled=0
wavecode_1_samples=252
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=2.27970
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=x=sample+.005;
wave_1_per_point2=//y=value1-value2+.5;
wave_1_per_point3=qz=time;
wave_1_per_point4=zz=sin(time*.03)*.4+.5;
wave_1_per_point5=y=sin(sample*qz)*zz+.5;
wave_1_per_point6=h=sin(sample+(time*.12))*.5+.5;
wave_1_per_point7=s=if(above(treb,1.5),1,if(above(treb,1),.7,if(above(treb,.5),.5,.3)));
wave_1_per_point8=l=if(above(bass,1.5),1,if(above(bass,1),.7,if(above(bass,.5),.5,.5)));
wave_1_per_point9=///////////////////////////////////////////////////////////////////////////////////////////////
wave_1_per_point10=//
wave_1_per_point11=//                            HSL to RGB by PieturP
wave_1_per_point12=//
wave_1_per_point13=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_1_per_point14=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_1_per_point15=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_1_per_point16=//
wave_1_per_point17=cc=(6*h);
wave_1_per_point18=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_1_per_point19=zf=(6*h)-cc;
wave_1_per_point20=zm=l;
wave_1_per_point21=zp=l*(1-s);
wave_1_per_point22=zq=l*(1-s*zf);
wave_1_per_point23=zt=l*(1-s*(1-zf));
wave_1_per_point24=monitor=zq;
wave_1_per_point25=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_1_per_point26=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_1_per_point27=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_1_per_point28=rr=if(equal(s,0),l,rr);
wave_1_per_point29=gg=if(equal(s,0),l,gg);
wave_1_per_point30=bb=if(equal(s,0),l,bb);
wave_1_per_point31=
wave_1_per_point32=///////////////////////////////////////////////////////////////////////////////////////////////
wave_1_per_point33=r=rr;
wave_1_per_point34=g=gg;
wave_1_per_point35=b=bb;
wavecode_2_enabled=0
wavecode_2_samples=252
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.27970
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=x=sample-.005;
wave_2_per_point2=//y=value1-value2+.5;
wave_2_per_point3=qz=time;
wave_2_per_point4=zz=sin(time*.03)*.4+.5;
wave_2_per_point5=y=sin(sample*qz)*zz+.5;
wave_2_per_point6=h=sin(sample+(time*.12))*.5+.5;
wave_2_per_point7=s=if(above(treb,1.5),1,if(above(treb,1),.7,if(above(treb,.5),.5,.3)));
wave_2_per_point8=l=if(above(bass,1.5),1,if(above(bass,1),.7,if(above(bass,.5),.5,.3)));
wave_2_per_point9=///////////////////////////////////////////////////////////////////////////////////////////////
wave_2_per_point10=//
wave_2_per_point11=//                            HSL to RGB by PieturP
wave_2_per_point12=//
wave_2_per_point13=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_2_per_point14=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_2_per_point15=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_2_per_point16=//
wave_2_per_point17=cc=(6*h);
wave_2_per_point18=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_2_per_point19=zf=(6*h)-cc;
wave_2_per_point20=zm=l;
wave_2_per_point21=zp=l*(1-s);
wave_2_per_point22=zq=l*(1-s*zf);
wave_2_per_point23=zt=l*(1-s*(1-zf));
wave_2_per_point24=monitor=zq;
wave_2_per_point25=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_2_per_point26=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_2_per_point27=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_2_per_point28=rr=if(equal(s,0),l,rr);
wave_2_per_point29=gg=if(equal(s,0),l,gg);
wave_2_per_point30=bb=if(equal(s,0),l,bb);
wave_2_per_point31=
wave_2_per_point32=///////////////////////////////////////////////////////////////////////////////////////////////
wave_2_per_point33=r=rr;
wave_2_per_point34=g=gg;
wave_2_per_point35=b=bb;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=2.27970
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.400
wave_3_per_point1=
wave_3_per_point2=qz=time;
wave_3_per_point3=d=sin(time*.0001)*1024;
wave_3_per_point4=vv=sin(time*.1)*.45+.45;
wave_3_per_point5=vd=cos(time*.0004)*628+628;
wave_3_per_point6=x=cos((sample*3.142)*vd)*vv+.5;
wave_3_per_point7=y=sin((sample*3.142)*vd)*vv+.5;
wave_3_per_point8=zz=sin(time*.03)*.1+.5;
wave_3_per_point9=
wave_3_per_point10=
wave_3_per_point11=h=sin((sample*3.14)+(time*.12))*.5+.5;
wave_3_per_point12=s=if(above(treb,1.5),1,if(above(treb,1),.7,if(above(treb,.5),.5,.3)));
wave_3_per_point13=l=if(above(bass,1.5),1,if(above(bass,1),.7,if(above(bass,.5),.5,.3)));
wave_3_per_point14=//l=1-l;
wave_3_per_point15=//s=1;
wave_3_per_point16=///////////////////////////////////////////////////////////////////////////////////////////////
wave_3_per_point17=//
wave_3_per_point18=//                            HSL to RGB by PieturP
wave_3_per_point19=//
wave_3_per_point20=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_3_per_point21=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_3_per_point22=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_3_per_point23=//
wave_3_per_point24=cc=(6*h);
wave_3_per_point25=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_3_per_point26=zf=(6*h)-cc;
wave_3_per_point27=zm=l;
wave_3_per_point28=zp=l*(1-s);
wave_3_per_point29=zq=l*(1-s*zf);
wave_3_per_point30=zt=l*(1-s*(1-zf));
wave_3_per_point31=monitor=zq;
wave_3_per_point32=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_3_per_point33=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_3_per_point34=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_3_per_point35=rr=if(equal(s,0),l,rr);
wave_3_per_point36=gg=if(equal(s,0),l,gg);
wave_3_per_point37=bb=if(equal(s,0),l,bb);
wave_3_per_point38=
wave_3_per_point39=///////////////////////////////////////////////////////////////////////////////////////////////
wave_3_per_point40=r=rr;
wave_3_per_point41=g=gg;
wave_3_per_point42=b=bb;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.140
shapecode_0_y=0.500
shapecode_0_rad=0.49629
shapecode_0_ang=6.28319
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.24126
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=vol=(bass_att+treb_att+mid_att)*.13;
shape_0_per_frame2=vol2=(bass+mid_att)*.2;
shape_0_per_frame3=vol3=vol3+((bass+treb+mid)*.81);
shape_0_per_frame4=ang=cos(time*.2)*6.28+6.28;
shape_0_per_frame5=x=cos(time*.45)*.2+.5;
shape_0_per_frame6=//h=sin(time)*.45+.45;
shape_0_per_frame7=vol3=below(vol3,628)*vol3;
shape_0_per_frame8=h=cos(vol3*.01)*.45+.45;
shape_0_per_frame9=//l=min(vol,1);
shape_0_per_frame10=s=min(vol2,1);
shape_0_per_frame11=l=.5;
shape_0_per_frame12=//s=1;
shape_0_per_frame13=y=sin(time)*.2+.5;
shape_0_per_frame14=///////////////////////////////////////////////////////////////////////////////////////////////
shape_0_per_frame15=//
shape_0_per_frame16=//                            HSL to RGB by PieturP
shape_0_per_frame17=//
shape_0_per_frame18=// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )
shape_0_per_frame19=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
shape_0_per_frame20=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
shape_0_per_frame21=//
shape_0_per_frame22=cc=(6*h);
shape_0_per_frame23=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
shape_0_per_frame24=zf=(6*h)-cc;
shape_0_per_frame25=zm=l;
shape_0_per_frame26=zp=l*(1-s);
shape_0_per_frame27=zq=l*(1-s*zf);
shape_0_per_frame28=zt=l*(1-s*(1-zf));
shape_0_per_frame29=monitor=zq;
shape_0_per_frame30=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
shape_0_per_frame31=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
shape_0_per_frame32=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
shape_0_per_frame33=rr=if(equal(s,0),l,rr);
shape_0_per_frame34=gg=if(equal(s,0),l,gg);
shape_0_per_frame35=bb=if(equal(s,0),l,bb);
shape_0_per_frame36=
shape_0_per_frame37=///////////////////////////////////////////////////////////////////////////////////////////////
shape_0_per_frame38=r=rr;
shape_0_per_frame39=g=gg;
shape_0_per_frame40=b=bb;
shape_0_per_frame41=r2=rr;
shape_0_per_frame42=g2=gg;
shape_0_per_frame43=b2=bb;
shape_0_per_frame44=border_r=rr;
shape_0_per_frame45=border_g=gg;
shape_0_per_frame46=border_b=bb;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.140
shapecode_1_y=0.500
shapecode_1_rad=0.66230
shapecode_1_ang=6.28319
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=3.24126
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=vol=(bass_att+treb_att+mid_att)*.13;
shape_1_per_frame2=vol2=(bass+mid_att)*.2;
shape_1_per_frame3=vol3=vol3+((bass+treb+mid)*.81);
shape_1_per_frame4=ang=cos(time*.2)*6.28+6.28;
shape_1_per_frame5=x=1-(cos(time*.45)*.2+.5);
shape_1_per_frame6=//h=sin(time)*.45+.45;
shape_1_per_frame7=vol3=below(vol3,628)*vol3;
shape_1_per_frame8=h=cos(vol3*.01)*.45+.45;
shape_1_per_frame9=//l=min(vol,1);
shape_1_per_frame10=s=min(vol2,1);
shape_1_per_frame11=l=.5;
shape_1_per_frame12=//s=1;
shape_1_per_frame13=y=1-(sin(time)*.2+.5);
shape_1_per_frame14=///////////////////////////////////////////////////////////////////////////////////////////////
shape_1_per_frame15=//
shape_1_per_frame16=//                            HSL to RGB by PieturP
shape_1_per_frame17=//
shape_1_per_frame18=// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )
shape_1_per_frame19=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
shape_1_per_frame20=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
shape_1_per_frame21=//
shape_1_per_frame22=cc=(6*h);
shape_1_per_frame23=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
shape_1_per_frame24=zf=(6*h)-cc;
shape_1_per_frame25=zm=l;
shape_1_per_frame26=zp=l*(1-s);
shape_1_per_frame27=zq=l*(1-s*zf);
shape_1_per_frame28=zt=l*(1-s*(1-zf));
shape_1_per_frame29=monitor=zq;
shape_1_per_frame30=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
shape_1_per_frame31=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
shape_1_per_frame32=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
shape_1_per_frame33=rr=if(equal(s,0),l,rr);
shape_1_per_frame34=gg=if(equal(s,0),l,gg);
shape_1_per_frame35=bb=if(equal(s,0),l,bb);
shape_1_per_frame36=
shape_1_per_frame37=///////////////////////////////////////////////////////////////////////////////////////////////
shape_1_per_frame38=r=rr;
shape_1_per_frame39=g=gg;
shape_1_per_frame40=b=bb;
shape_1_per_frame41=r2=rr;//1;//rr;
shape_1_per_frame42=g2=gg;//1;//gg;
shape_1_per_frame43=b2=bb;//1;//bb;
shape_1_per_frame44=border_r=rr;
shape_1_per_frame45=border_g=gg;
shape_1_per_frame46=border_b=bb;
shape_1_per_frame47=tex_ang=1-ang;
shape_1_per_frame48=
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.82438
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.10462
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.570
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=tex_zoom=sin(time+bass)*.5+1;
shape_2_per_frame2=x=sin(time*.1)*.2+cos(time*.43)*.2+.5;
shape_2_per_frame3=y=cos(time*.2)*.2+sin(time*.57)*.2+.5;
shape_2_per_frame4=tex_ang=cos(time*.3)*.5+.5;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.82438
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.10462
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.370
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=tex_zoom=sin(time+bass)*.5+1;
shape_3_per_frame2=y=sin(time*.44)*.2+cos(time*.7)*.2+.5;
shape_3_per_frame3=x=cos(time*.82)*.2+sin(time*.3)*.2+.5;
shape_3_per_frame4=tex_ang=cos(time*.3)*.5+.5;
per_frame_init_1=prox = 1;
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.95, 30/fps);
per_frame_3=//dec_xlow = pow (0.999, 30/fps);
per_frame_4=beat = max (max (bass, mid), treb); 
per_frame_5=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_6=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_9=index = (index + is_beat) %32;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_11=
per_frame_12=q22 = peak;
per_frame_13=q24 = is_beat;
per_frame_14=q26 = bass_att + mid_att + treb_att;
per_frame_15=vol = vol*dec_med + (1-dec_med)*q26;
per_frame_16=q27 = index + 1;
per_frame_17=q28 = index2 +1;
per_frame_18=
per_frame_19=p2 = .3*sin(time) + .3*cos(time/3);
per_frame_20=//*****tunnel tilting
per_frame_21=q1 = cos(p2 * 3.1416/4);
per_frame_22=q2 = sin(p2 * 3.1416/4);
per_frame_23=q3 = -q2;
per_frame_24=q4 = q1;
per_frame_25=
per_frame_26=//****tunnel viewpoint x,y
per_frame_27=vtrig = is_beat * bnot(index%2);
per_frame_28=vx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_29=vy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_30=vx = vx* below(index%15,5); //###
per_frame_31=vy = vy* below(index%15,5);
per_frame_32=q5 = vx*10;
per_frame_33=q6 = vy*12;
per_frame_34=
per_frame_35=//***tunnel width
per_frame_36=q21 = (1+sin(time/12))/8+.01;
per_frame_37=
per_frame_38=//**floor proximity
per_frame_39=prox = prox - above(vy,.3)*prox*2;
per_frame_40=q32 = .5 + .2*prox;
per_frame_41=monitor = prox;
per_frame_42=
per_frame_43=//****tunnel rotation
per_frame_44=rota = rota +.01*below(index%16,8)/fps*30;
per_frame_45=rota1 = rota1*dec_med + (1-dec_med)*rota;
per_frame_46=q7 = rota1;
per_frame_47=
per_frame_48=//****tunnel speed
per_frame_49=movez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;
per_frame_50=q8 = movez * (1+q21/4);
per_frame_51=//dyn. Aenderung von q21 bewirkt auch Richt.wechsel
per_frame_52=
per_frame_53=//***********************
per_frame_54=trig1= q24*bnot(index%12);
per_frame_55=trig2= q24*bnot((index+4)%12);
per_frame_56=trig3= q24*bnot((index+8)%12);
per_frame_57=trel = trel + vol/fps;
per_frame_58=z0 = 1;
per_frame_59=speed = vol/2;
per_frame_60=hx = sin(trel);
per_frame_61=hy = cos(trel);
per_frame_62=
per_frame_63=p1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;
per_frame_64=p1z = max(p1z,.1);
per_frame_65=q9 = hx/(p1z); 
per_frame_66=q10 = hy/(p1z); 
per_frame_67=q11 = p1z;
per_frame_68=q12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);
per_frame_69=
per_frame_70=p2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;
per_frame_71=p2z = max(p2z,.1);
per_frame_72=q13 = 2*hx/(p2z); 
per_frame_73=q14 = -.5*hy/(p2z); 
per_frame_74=q15 = p2z;
per_frame_75=q16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);
per_frame_76=
per_frame_77=
per_frame_78=p3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;
per_frame_79=p3z = max(p3z,.1);
per_frame_80=q17 = -1.4*hx/(p3z); 
per_frame_81=q18 = 2*hy/(p3z); 
per_frame_82=q19 = p3z;
per_frame_83=q20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);
per_frame_84=chng=sin(time*.5);
per_frame_85=cthr=.9999;
per_frame_86=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_87=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_88=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_89=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_90=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_91=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_92=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_93=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_94=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_95=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_96=monitor=chng;
per_frame_97=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_98=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_99=
per_frame_100=monitor=mq1;
per_frame_101=vol=bass+treb+mid;
per_frame_102=atime=atime+vol;
per_frame_103=q11=.4+sin(atime*.006        )*.4;
per_frame_104=q12=.4+cos(atime*.00613828348)*.4;
per_frame_105=q13=.4+sin(atime*.00598593455)*.4;
per_frame_106=monitor=q13;
warp_1=`float figure_borders(float2 domain, float thickness){
warp_2=`   float2 help_uv = frac(domain-0.5);
warp_3=`   help_uv = min(help_uv,1-help_uv)*2;
warp_4=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_5=`}
warp_6=`
warp_7=`bool hex(float2 domain){
warp_8=`   float2 help_uv = frac(domain)*float2(8,12);
warp_9=`   float x,y; x = help_uv.x; y = help_uv.y;
warp_10=`   return (x>1)*(x<7)*(y>4)*(y<8)*(x+y>7)*(x+y<13)*(x-y<1)*(y-x<5);
warp_11=`}
warp_12=`
warp_13=`bool3 hexgrid(float2 domain){
warp_14=`   bool tile1, tile2;
warp_15=`   tile1 = hex(domain) + hex(domain + 0.5);
warp_16=`   tile2 = hex(domain + float2(0.5,1/6.0) )
warp_17=`         + hex(domain + float2(0,4/6.0)   );
warp_18=`   return bool3(tile1, tile2,  1 - tile1 - tile2);
warp_19=`}
warp_20=`
warp_21=`
warp_22=`float2 complex_div(float2 numerator, float2 denominator){
warp_23=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_24=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_25=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_26=`}
warp_27=`
warp_28=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_29=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_30=`}
warp_31=`
warp_32=`float2 uv_polar(float2 domain, float2 center){
warp_33=`   float2 c = domain - center;
warp_34=`   float rad_hq = length(c);
warp_35=`   float ang_hq = atan2(c.x,c.y);
warp_36=`   return float2(ang_hq, rad_hq);
warp_37=`}
warp_38=`
warp_39=`float2 uv_polar_logarithmic_inverse(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_40=`   float2 polar = uv_polar(domain, center)*float2(M_INV_PI_2,1);
warp_41=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
warp_42=`}
warp_43=`
warp_44=`shader_body
warp_45=`{
warp_46=`float2 help_uv = uv_polar_logarithmic_inverse(uv_orig, 0.5, 3, 0.5, 0);
warp_47=`help_uv = help_uv*float2(7,3);
warp_48=`float2 grid_uv = help_uv*float2(8,12);
warp_49=`
warp_50=`
warp_51=`ret = lerp(float3(1,0,0)*hex(help_uv),1,figure_borders(grid_uv,0.1));
warp_52=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_53=`                      ((help_uv.xyy*q27
warp_54=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_55=`                      ).xyz*
warp_56=`                      float3(1,1,0)*0.05 + 
warp_57=`                      time*float3(0,0,1)*q29
warp_58=`                     );
warp_59=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_60=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_61=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_62=`ret = hexgrid(help_uv);
warp_63=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;
comp_4=`float2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;
comp_5=`float2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;
comp_6=`float3 noise, ret1, ret2;
comp_7=`
comp_8=`shader_body {
comp_9=`uvo = uv;
comp_10=`uv = mul(uv*aspect.xy,float2x2(_qa));
comp_11=`
comp_12=`uv = uv + -.0- .1*float2(q5,q6);
comp_13=`float2 uv1 = (uv-.5 );//*aspect.xy;
comp_14=`
comp_15=`//Kugel1
comp_16=`rsk = (uv1 + float2 (q9,q10)) ;
comp_17=`dz1 = normalize(rsk);
comp_18=`rad1 = q11*length (rsk) ;
comp_19=`uv4 =  tan(rad1)*dz1;
comp_20=`mask1 = saturate(8-8*rad1);
comp_21=`Kugel1 = uv4*mask1;
comp_22=`
comp_23=`//Kugel2
comp_24=`rsk = (uv1 + float2 (q13,q14)) ;
comp_25=`dz2 = normalize(rsk);
comp_26=`rad2 = q15*length (rsk) ;
comp_27=`uv4 =  tan(rad2)*dz2;
comp_28=`mask2 = saturate(8-8*rad2);
comp_29=`Kugel2 = uv4*mask2;
comp_30=`
comp_31=`//Kugel3
comp_32=`rsk = (uv1 + float2 (q17,q18)) ;
comp_33=`dz3 = normalize(rsk);
comp_34=`rad3 = q19*length (rsk) ;
comp_35=`uv4 =  tan(rad3)*dz3;
comp_36=`mask3 = saturate(8-8*rad3);
comp_37=`Kugel3 = uv4*mask3;
comp_38=`
comp_39=`float2 dz = (Kugel2 + Kugel1 + Kugel3)*.2;
comp_40=`//******************** STARS
comp_41=`uv1 += dz;
comp_42=`rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_43=`rss0.y = .1*q21/(length (uv1));
comp_44=`
comp_45=`rss = float2 (rss0.x,rss0.y+time);
comp_46=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_47=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_48=`tmp = abs(frac(rss*8)-.5);
comp_49=`float3 dots = saturate(.04/length(tmp)) *noise;
comp_50=`
comp_51=`rss = float2 (rss0.x,rss0.y+time/4);
comp_52=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_53=`noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_54=`tmp = abs(frac(rss*8)-.5);
comp_55=`dots += saturate(.02/length(tmp)) * noise;
comp_56=`
comp_57=`dots *= saturate(.2/abs(rss0.y));
comp_58=`dots *= dots*.6;
comp_59=`//*************************
comp_60=`
comp_61=`float z = q32/(uv1.y-.02);//floor proxy
comp_62=`float mask = saturate(4/z);
comp_63=`rs0.x = (uv1.x)*z;
comp_64=`rs0.y = z/4;
comp_65=`rs.x = rs0.x ;
comp_66=`rs.y = rs0.y + q8*3;
comp_67=`float3 mirror = lum(tex2D(sampler_pw_noise_lq,.02*rs))-.5;
comp_68=`z = .2/(length(uv1)-q21);
comp_69=`uv2.y = z + q8;
comp_70=`uv2.x = rss0.x +q7;
comp_71=`uv3 =frac(uv2 +.0*mask*mirror);
comp_72=`
comp_73=`ret1 =  tex2D (sampler_main,uv3)/z;
comp_74=`ret = max(ret1*(1-0.5*mask),mirror*mask) +dots;
comp_75=`
comp_76=`float mod = q22*2;
comp_77=`float3 blk = abs(rsqrt(rad1)*dz1.x*roam_sin
comp_78=`+rsqrt(rad2)*dz2.y*roam_sin.rbg
comp_79=`+rsqrt(rad3)*dz3.x*roam_sin.bgr)*(.2+mirror*mask)*mod; 
comp_80=`ret += blk;
comp_81=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_82=`                      ((uv3.xyy*q28
comp_83=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_84=`                      ).xyz*
comp_85=`                      float3(1,1,0)*0.05 + 
comp_86=`                      time*float3(0,0,1)*q31
comp_87=`                     );
comp_88=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_89=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_90=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_91=`ret2 = saturate(.02*q22*q21/length (uv1)*
comp_92=` (lum(tex2D (sampler_main,uv1+.5))));
comp_93=`ret2 /= (length(uv1)+.02);
comp_94=`float k1 = lum(ret2);
comp_95=`ret += k1*float3(1,k1,k1/2)  ;
comp_96=`}

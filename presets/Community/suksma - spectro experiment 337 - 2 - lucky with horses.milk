MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.700
fDecay=0.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.200
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.010
fWarpScale=1.002
fZoomExponent=0.01000
fShader=0.000
zoom=1.00020
rot=0.00000
cx=0.530
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99995
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.301
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=256
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=samples=if(above(bass,.4),512,if(above(treb,.4),128,512));
wave_0_per_point1= sw  = (1-sw)*below(sample,1);
wave_0_per_point2= mod = value1*.1;
wave_0_per_point3= mod = mod*sw;
wave_0_per_point4=
wave_0_per_point5= freqLvl    = .49+(value1*((-30-1/((sample)*.9))))*.05;
wave_0_per_point6= myAmp      = if(below(freqLvl,0.5),freqLvl,0.49);  
wave_0_per_point7= myFreq     = log10(log10(sample)+3)*1.05+0.37;
wave_0_per_point8= myAltFreq  = time*0.2+myFreq*04-0.8;
wave_0_per_point9= 
wave_0_per_point10= Pi         = 3.14159265359;
wave_0_per_point11= Pi23       = 2*Pi*0.33333333333;
wave_0_per_point12= fade       = 1-myAmp-.45;
wave_0_per_point13=
wave_0_per_point14= //bassadd=below(sample,.02)*bass;//ex. strengthen band
wave_0_per_point15= //bass2add=above(sample,.02)*below(sample,.04)*bass;
wave_0_per_point16= div=120;
wave_0_per_point17= div2=20;
wave_0_per_point18= myx = (1-pow(mod,myAmp)-.5)-bassadd*.05-bass2add*.03;
wave_0_per_point19= myx2 = myx*div2%div2/div2;
wave_0_per_point20= myy  = myFreq*div%div/div;
wave_0_per_point21= x         = if(above(sample,0),myx2,myx);
wave_0_per_point22= y         = if(below(myy,1),myy,myFreq);
wave_0_per_point23= r         = (sin(myAltFreq       )+1)*0.5*fade;
wave_0_per_point24= g         = (sin(myAltFreq-1*Pi23)+1)*0.5*fade;
wave_0_per_point25= b         = (sin(myAltFreq-2*Pi23)+1)*0.5*fade;
wave_0_per_point26= 
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.30000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1= sw  = (1-sw)*below(sample,1);
wave_1_per_point2= mod = value2*.1;
wave_1_per_point3= mod = mod*sw;
wave_1_per_point4=
wave_1_per_point5= freqLvl    = .49+(value2*((-30-1/((sample)*.9))))*.05;
wave_1_per_point6= myAmp      = if(below(freqLvl,0.5),freqLvl,0.49);  
wave_1_per_point7= myFreq     = log10(log10(sample)+3)*1.05+0.37;
wave_1_per_point8= myAltFreq  = time*0.2+myFreq*04-0.8;
wave_1_per_point9= 
wave_1_per_point10= Pi         = 3.14159265359;
wave_1_per_point11= Pi23       = 2*Pi*0.33333333333;
wave_1_per_point12= fade       = 1-myAmp-.45;
wave_1_per_point13=
wave_1_per_point14= //bassadd=below(sample,.02)*bass;//ex. strengthen band
wave_1_per_point15= //bass2add=above(sample,.02)*below(sample,.04)*bass;
wave_1_per_point16= div=120;
wave_1_per_point17= div2=20;
wave_1_per_point18= myx = (1-pow(mod,myAmp)-.5)-bassadd*.05-bass2add*.03;
wave_1_per_point19= myx2 = myx*div2%div2/div2;
wave_1_per_point20= myy  = myFreq*div%div/div;
wave_1_per_point21= x         = 1-if(above(sample,0),myx2,myx);
wave_1_per_point22= y         = if(below(myy,1),myy,myFreq);
wave_1_per_point23= r         = (sin(myAltFreq       )+1)*0.5*fade;
wave_1_per_point24= g         = (sin(myAltFreq-1*Pi23)+1)*0.5*fade;
wave_1_per_point25= b         = (sin(myAltFreq-2*Pi23)+1)*0.5*fade;
wave_1_per_point26= 
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=256
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.80000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=sw = (1-sw)*below(sample,1);
wave_2_per_point2=
wave_2_per_point3=osa = sample*above(sample,0);
wave_2_per_point4=
wave_2_per_point5=//mod = pow((value1-value2)*2,2)*sign(value1-value2)*.5;
wave_2_per_point6=
wave_2_per_point7=mod = value2-value1;
wave_2_per_point8=mod = mod*sw;
wave_2_per_point9=
wave_2_per_point10=y = if(sw,osa,sample);
wave_2_per_point11=y = (1-sample*1.6)*.4+.42;
wave_2_per_point12=x = 0 + mod*4+.5;
wave_2_per_point13=
wave_2_per_point14=//osa = sample;
wave_2_per_point15=
wave_2_per_point16=mo = 3.7 + mod*6 + q1;
wave_2_per_point17=
wave_2_per_point18=pi23 = 4*asin(-1)*.3333333;
wave_2_per_point19=runbass = bass*.01+runbass;
wave_2_per_point20=runtreb = treb*.01+runtreb;
wave_2_per_point21=runmid  = mid *.01+runmid ;
wave_2_per_point22=vol = (runbass+runtreb+runmid)*.01;
wave_2_per_point23=
wave_2_per_point24=r = (sin(mo*.01 + vol - 0*pi23)+1)*.5;
wave_2_per_point25=g = (sin(mo*.01 + vol - 1*pi23)+1)*.5;
wave_2_per_point26=b = (sin(mo*.01 + vol - 2*pi23)+1)*.5;
wave_2_per_point27=
wave_2_per_point28=a = 1 - abs(mod)*12;
wave_2_per_point29=a = 1-sw;
wave_2_per_point30=a = max(0,min(a,1));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=144
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=100.00000
wavecode_3_smoothing=1.00000
wavecode_3_r=0.200
wavecode_3_g=0.110
wavecode_3_b=1.000
wavecode_3_a=0.510
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=ab = 1;
shapecode_0_enabled=0
shapecode_0_sides=23
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=64
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16610
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.99970
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.200
shapecode_0_g2=0.000
shapecode_0_b2=0.700
shapecode_0_a2=0.200
shapecode_0_border_r=1.000
shapecode_0_border_g=0.500
shapecode_0_border_b=0.150
shapecode_0_border_a=0.500
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03333
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=x = int(rand(100))*.01;
shape_1_per_frame2=y = int(rand(100))*.01;
shape_1_per_frame3=
shape_1_per_frame4=a = if(above(frame%7,0),0,1);
shape_1_per_frame5=a2 = if(above(frame%7,0),0,1);
shape_1_per_frame6=border_a = 0;
shape_1_per_frame7=vol=bass+mid+treb;
shape_1_per_frame8=rad = vol*.1;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03333
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=x = int(rand(100))*.01;
shape_2_per_frame2=y = int(rand(100))*.01;
shape_2_per_frame3=
shape_2_per_frame4=a = if(above(frame%7,0),0,1);
shape_2_per_frame5=a2 = if(above(frame%7,0),0,1);
shape_2_per_frame6=border_a = 0;
shape_2_per_frame7=
shape_2_per_frame8=vol=bass+mid+treb;
shape_2_per_frame9=rad = vol*.1;
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03333
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=1.000
shape_3_per_frame1=x = int(rand(100))*.01;
shape_3_per_frame2=y = int(rand(100))*.01;
shape_3_per_frame3=
shape_3_per_frame4=a = if(above(frame%7,0),0,1);
shape_3_per_frame5=a2 = if(above(frame%7,0),0,1);
shape_3_per_frame6=border_a = 0;
shape_3_per_frame7=
shape_3_per_frame8=vol=bass+mid+treb;
shape_3_per_frame9=rad = vol*.1;
per_frame_1=dec_med = pow (0.9, 30/fps);
per_frame_2=dec_slow = pow (0.9, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .1+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %16;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%5;
per_frame_10=monitor = index2;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=q26 = bass + mid + treb;
per_frame_18=q27 = index;
per_frame_19=q28 = index2;
per_frame_20=
per_frame_21=k1 =  is_beat*equal(index%2,0);
per_frame_22=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_23=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_24=rott_ = p2 * 3.1416/4;
per_frame_25=
per_frame_26=rott =  rott +  .2*30/fps*q2;
per_frame_27=
per_frame_28=
per_frame_29=q1 = cos(rott);
per_frame_30=q2 = sin(rott);
per_frame_31=q3 = -q2;
per_frame_32=q4 = q1;
per_frame_33=
per_frame_34=ran = bnot(q24)*ran + q24 * (int(rand(50))-24);
per_frame_35=tran = tan(ran);
per_frame_36=tran = max(tran,-5);
per_frame_37=tran = min(tran,5);
per_frame_38=
per_frame_39=trel = trel + .02*30/fps*tran+q24;
per_frame_40=q5 = cos(trel);
per_frame_41=q6 = sin(trel);
per_frame_42=q7 = -q6;
per_frame_43=q8 = q5;
per_frame_44=
per_frame_45=movex = movex*dec_slow + .1*sin(rott)*30/fps;
per_frame_46=q9 = movex;
per_frame_47=
per_frame_48=spd = spd*bnot(q24) + q26*q24;
per_frame_49=movez = movez + .005*30/fps*spd;
per_frame_50=q30 = movez;
per_frame_51=//q30 = .3* (sin(time/45) + 1.5);
per_frame_52=
per_frame_53=mv_x = 20;
per_frame_54=mv_y = 15;
per_frame_55=mv_a = .1;
per_frame_56=mv_l = 0;
per_frame_57=
per_frame_58=q18 = sin(time/7);
per_frame_59=q19 = sin(time/11);
per_frame_60=
per_frame_61=q32 = pow(0.98, 30/fps); //fade
per_frame_62=
per_frame_63=
per_frame_64=// a
per_frame_65=scale = 8;
per_frame_66=angle = -time*0.2;
per_frame_67=
per_frame_68=q1 = scale*cos(angle); // the real part
per_frame_69=q2 = scale*sin(angle); // the imaginary part
per_frame_70=
per_frame_71=// b
per_frame_72=
per_frame_73=q3 = 0; // the real part
per_frame_74=q4 = 0.3; // the imaginary part
per_frame_75=
per_frame_76=// c
per_frame_77=scale = 0.8;
per_frame_78=angle = time*0.2;
per_frame_79=
per_frame_80=q5 = scale*cos(angle); // the real part
per_frame_81=q6 = scale*sin(angle); // the imaginary part
per_frame_82=
per_frame_83=// d
per_frame_84=q7 = -0.25; // the real part
per_frame_85=q8 = 0.2; // the imaginary part
per_frame_86=
per_frame_87=q11 = 1/asin(1);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float1 conway = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;
warp_5=`       conway += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;
warp_6=`       conway += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;
warp_7=`
warp_8=`       conway += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;
warp_9=`       conway += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;
warp_10=`
warp_11=`       conway += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;
warp_12=`       conway += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;
warp_13=`       conway += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;
warp_14=`
warp_15=`float1 p = saturate (tex2D( sampler_pw_main, uv).x);
warp_16=`
warp_17=`
warp_18=`ret.x = saturate((1-abs(conway-3)))*(1-p);
warp_19=`ret.x += saturate(max(1-abs(conway-2),1-abs(conway-3)))*p;
warp_20=`
warp_21=`}
comp_1=`float2 factorA, factorB, product;
comp_2=`float2 numerator, denominator, fraction;
comp_3=`float3 ret1, neu;
comp_4=`float2 uv2,uv3;
comp_5=`shader_body
comp_6=`{
comp_7=`  float2 uv2;
comp_8=`  float ang2, c, s;
comp_9=`  uv -= 0.5;
comp_10=`  uv *= aspect.xy;    
comp_11=`  uv = mul(uv, float2x2(_qb));
comp_12=`  float dist = 1;
comp_13=`  float inten = 1;
comp_14=`  ret1 = 0;
comp_15=`  int anz = 4;
comp_16=`  float n = anz;
comp_17=`  while (n >= 0) {
comp_18=`    ang2 = 0*n/anz;
comp_19=`    c = cos(ang2);
comp_20=`    s = sin(ang2);
comp_21=`    uv2.x =  uv.x*c - uv.y*s;
comp_22=`    uv2.y =  uv.x*s + uv.y*c;
comp_23=`    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !
comp_24=`    inten =  sqrt(dist)*(1-dist)*2;
comp_25=`    float2 uv3 = 3*uv2*dist*(1+q5*uv.x) + 0.5 +float2(q18*n,q19) ;
comp_26=`    float3 cmul = float3(dist,1-dist,1-(dist-.5)*(dist-.5)*4);
comp_27=`    neu = tex2D(sampler_main,uv3) +q6*GetBlur1(frac(uv3*1.04)).bgr*1; 
comp_28=`    ret1 = max(ret1,neu*inten);
comp_29=`    float2 uvo = uv;
comp_30=`//*** Flexis Moebius transformation code
comp_31=`    uv3 = (uv3-0.5)*aspect.xy*2;
comp_32=`    factorA = uv3;
comp_33=`    factorB = float2(q1,q2);
comp_34=`    product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_35=`                      factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_36=`    numerator = product + float2(q3,q4);
comp_37=`    factorA = uv;
comp_38=`    factorB = float2(q5,q6);
comp_39=`    product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_40=`                      factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_41=`    denominator = product + float2(q7,q8);
comp_42=`    fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_43=`                       numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_44=`                     (denominator.x*denominator.x + denominator.y*denominator.y);
comp_45=`    uv3 *= fraction*0.5;
comp_46=`    float t = -time*0.5; // set velocity here
comp_47=`    float2 c2 = (uv-0.5);
comp_48=`    float1 ang_hq = -atan2(c2.x,c2.y);
comp_49=`    float2 spiral = float2(ang_hq*q11*3+t,aspect.w*log(length(c2))+ang_hq*q11-t);
comp_50=`    spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*0.95; // mirror
comp_51=`    uv3 = spiral;
comp_52=`    ret1 += tex2d(sampler_main,spiral);
comp_53=`    n--;    
comp_54=`  }
comp_55=`  ret1 = lerp(ret1,ret1.gbr,q26/6);
comp_56=`  ret = ret1*2 + (1-rad)*q26/3*GetPixel(q5/2+uv*(2-rad));
comp_57=`}

[preset00]
fRating=3.000000
fGammaAdj=2.000000
fDecay=0.986000
fVideoEchoZoom=0.996532
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.876469
fWaveScale=0.551761
fWaveSmoothing=0.000000
fWaveParam=0.000000
fModWaveAlphaStart=1.150000
fModWaveAlphaEnd=0.750000
fWarpAnimSpeed=1.530000
fWarpScale=1.731000
fZoomExponent=1.003424
fShader=0.500000
zoom=1.000223
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.140100
sx=1.006000
sy=0.999900
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.010000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=0.000000
ib_size=0.010000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=0.000000
nMotionVectorsX=15.000000
nMotionVectorsY=6.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=0.900000
mv_r=1.000000
mv_g=1.000000
mv_b=1.000000
mv_a=0.000000
per_frame_1=warp=0;
per_frame_2=old_bass_flop=bass_flop;
per_frame_3=old_treb_flop=treb_flop;
per_frame_4=old_mid_flop=mid_flop;
per_frame_5=chaos=.9+.1*sin(pulse);
per_frame_6=entropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+int(rand(2)),entropy);
per_frame_7=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.6)*chaos+1.6);
per_frame_8=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_9=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.6)*chaos+1.6);
per_frame_10=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_11=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.6)*chaos+1.6);
per_frame_12=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_13=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_14=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_15=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_16=bass_residual = bass_changed*sin(pulse*3) + bnot(bass_changed)*bass_residual;
per_frame_17=treb_residual = treb_changed*sin(pulse*3) + bnot(treb_changed)*treb_residual;
per_frame_18=mid_residual = mid_changed*sin(pulse*3) + bnot(mid_changed)*mid_residual;
per_frame_19=pulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.018);
per_frame_20=q1=mid_residual;
per_frame_21=q2=bass_residual;
per_frame_22=q3=treb_residual;
per_frame_23=q4=sin(pulse);
per_frame_24=q5=cos(pulse*(.5+.1*entropy));
per_frame_25=q6=sin(pulse*(.5+pow(.25,entropy)));
per_frame_26=q7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;
per_frame_27=q8=entropy;
per_frame_28=ib_b = cos(time)  + abs(cos(time));
per_frame_29=ib_g = abs(sin(time)) ;
per_frame_30=ib_r = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));
per_frame_31=ib_size=.05+.03*q2;
per_frame_32=ib_a=.9+.1*sin(q2*.3+q4+q1*.5);
per_frame_33=mv_b = cos(time)  + abs(cos(time));
per_frame_34=mv = abs(sin(time)) ;
per_frame_35=mv = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));
per_frame_36=mv_a=.2+.2*sin(time*1.178+q5*1.14);
per_frame_37=rot=0;
per_frame_38=wave_b = cos(time)  + abs(cos(time));
per_frame_39=wave_g = abs(sin(time)) ;
per_frame_40=wave_r = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));
per_frame_41=wave_mystery=wave_mystery+.5*sin(time*2.18+q6);
per_frame_42=wave_x=wave_x+.3*sin(time*.811)+.005*(frame%3);
per_frame_43=wave_y=wave_y+.3*sin(time*.788)+.005*(frame%3);
per_frame_44=wave_a=3+sin(time*1.414)+q3;
per_frame_45=wave_mode=q7;
per_pixel_1=bend = cos(x*10*q2*bnot(q7%2)+(rad*10*q2-10*q3)*bnot(q1%7)+y*10*q6-10*q3*bnot(q7%3));
per_pixel_2=zoom = zoom+bend*.05*equal(q7,1)*if(above(q1,0),1,q5);
per_pixel_3=grid=sin(x*1.6*q1)*10%2 + sin(y*1.6*q2)*10%2;
per_pixel_4=grid_shift=1-bnot(equal(grid,above(q7,2)))*if(above(q8,2),q6,sin(rad*3.14*q6));
per_pixel_5=pre_dx=(x+.5*q6)*above(q3,0);
per_pixel_6=dx=if(above(q4,0),dx-below(q7,4)*grid_shift*sign(q5),sin(pre_dx*3.14));
per_pixel_7=dy=if(equal(q7,3),dx-above(q5,0)*grid_shift*sign(q3),-1);

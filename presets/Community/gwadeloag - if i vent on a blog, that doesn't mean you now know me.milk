MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.780
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.527
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00815
fShader=0.000
zoom=0.99980
rot=0.00000
cx=0.470
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=75
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=7.85800
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.200
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=33
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=81
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.04896
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=trel = time/8;
shape_0_per_frame3=k1 = instance/num_inst;
shape_0_per_frame4=k2 = k1 + trel - int(k1+trel);
shape_0_per_frame5=
shape_0_per_frame6=y0 = k2+.01 ;
shape_0_per_frame7=
shape_0_per_frame8=xwidth = .1*(cos(6*k1)+3); //breite
shape_0_per_frame9=xofs = .1*cos(k2*6+trel)*y0;
shape_0_per_frame10=x = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;
shape_0_per_frame11=//xwidth in der letzten Klammer : Test
shape_0_per_frame12=
shape_0_per_frame13=y = y0;
shape_0_per_frame14=
shape_0_per_frame15=bright = 1-sqr(y0); 
shape_0_per_frame16=a = max(bright,0); a2 = 0;
shape_0_per_frame17=rad = .4*y0+.1 - .0*sin(k1*954);
shape_0_per_frame18=
shape_0_per_frame19=r = .0; g = 0; b = .0;
shape_0_per_frame20=r2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !
shape_0_per_frame21=additive = 1; ///sonst andere farben im warp-s gestoert
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=571
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.200
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=mov1 = q1;
shape_1_per_frame2=RotMode = q3;
shape_1_per_frame3=burst = q10;
shape_1_per_frame4=copies = q14;
shape_1_per_frame5=copy = (instance%copies)/copies;
shape_1_per_frame6=k1 = int(instance/copies)*copies/num_inst;
shape_1_per_frame7=k1 = int(k1*burst)/burst+k1/burst;
shape_1_per_frame8=
shape_1_per_frame9=mov1 = mov1 + k1 -copy*q2;//dt
shape_1_per_frame10=mov1 = mov1 - int(mov1);
shape_1_per_frame11=
shape_1_per_frame12=RotMode = RotMode - copy*q4;
shape_1_per_frame13=rota = mov1 * RotMode*q5*2 ;
shape_1_per_frame14=mov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);
shape_1_per_frame15=
shape_1_per_frame16=mov1 = pow(mov1,.9); //Schneller bei t=0;
shape_1_per_frame17=
shape_1_per_frame18=Tht = sin(k1*k1*123.2)*(.2 + RotMode*.0);
shape_1_per_frame19=Phi = k1*1613.3+rota;
shape_1_per_frame20=v0 = (1.0 + .3*cos(k1*13234.7))*q5;
shape_1_per_frame21=
shape_1_per_frame22=z0 = q18/q5; //proximity
shape_1_per_frame23=
shape_1_per_frame24=t0 = .4;
shape_1_per_frame25=spur = (mov1-t0) * above(mov1-t0,0)*q15 ;
shape_1_per_frame26=py = spur*sin(copy*6.28);
shape_1_per_frame27=px = spur*cos(copy*6.28);
shape_1_per_frame28=
shape_1_per_frame29=fov = z0*2; //kein vol hier, sonst y-skal daneben
shape_1_per_frame30=ox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5
shape_1_per_frame31=oy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;
shape_1_per_frame32=oz = mov1*v0*sin(Tht)*sin(Phi); 
shape_1_per_frame33=
shape_1_per_frame34=ox = ox +  (k1-.5)*q17 +px; 
shape_1_per_frame35=oy = oy -py;
shape_1_per_frame36=oz = oz +py*3;
shape_1_per_frame37=
shape_1_per_frame38=//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl
shape_1_per_frame39=//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl
shape_1_per_frame40=rad = .025*z0/(oz+z0)*(1-mov1*.5);
shape_1_per_frame41=
shape_1_per_frame42=x = .5 + fov*ox/(oz+z0);
shape_1_per_frame43=y = .5 + fov*oy/(oz+z0);
shape_1_per_frame44=vis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);
shape_1_per_frame45=
shape_1_per_frame46=a = vis*.7/sqrt(copies)*(1+above(spur,0));
shape_1_per_frame47=a2 = 0.;
shape_1_per_frame48=g = flim;
shapecode_2_enabled=1
shapecode_2_sides=13
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=212
shapecode_2_x=0.650
shapecode_2_y=0.380
shapecode_2_rad=1.26467
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=0.300
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=//q25 = time/4;
shape_2_per_frame2=//trel = 2* (q25/2-int(q25/2));
shape_2_per_frame3=trel = q25;
shape_2_per_frame4=copies = 1;
shape_2_per_frame5=copy = (instance%copies)/copies;
shape_2_per_frame6=k1 = int(instance/copies)*copies/num_inst;
shape_2_per_frame7=k2 = k1 + .5;
shape_2_per_frame8=trel = trel ;
shape_2_per_frame9=t0 = .5; //do not change
shape_2_per_frame10=
shape_2_per_frame11=phase = above(trel,t0);
shape_2_per_frame12=mov1 = bnot(phase)* (t0-trel + .01*k1);
shape_2_per_frame13=mov2 = phase * (trel-t0); //####
shape_2_per_frame14=//mov2 = pow(mov2,.8);
shape_2_per_frame15=stray = 1.2-phase;
shape_2_per_frame16=
shape_2_per_frame17=Tht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;
shape_2_per_frame18=Phi = 3245.1*k1;
shape_2_per_frame19=
shape_2_per_frame20=size0 = .02;
shape_2_per_frame21=ox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));
shape_2_per_frame22=oy = mov1*8 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;
shape_2_per_frame23=oz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));
shape_2_per_frame24=
shape_2_per_frame25=z0 = 1;
shape_2_per_frame26=rad = .03 / (oz+z0)/(1+trel*int(rand(100))/50);
shape_2_per_frame27=
shape_2_per_frame28=x = .5 + ox/(oz+z0);
shape_2_per_frame29=y = q29+.2+ oy/(oz+z0);
shape_2_per_frame30=
shape_2_per_frame31=a = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; 
shapecode_3_enabled=0
shapecode_3_sides=14
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=31
shapecode_3_x=0.750
shapecode_3_y=0.600
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.33570
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=0.500
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_1=warp=0;
per_frame_2=old_bass_flop=bass_flop;
per_frame_3=old_treb_flop=treb_flop;
per_frame_4=old_mid_flop=mid_flop;
per_frame_5=chaos=bnot(pulse)*(.8+.2*sin(pulse));
per_frame_6=entropy=if(chaos,int(rand(10)),entropy);
per_frame_7=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_8=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_9=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_10=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_11=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_12=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_13=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_14=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_15=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_16=pulse=if(above(abs(pulse),5000),-5000,pulse+mid_att*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed));
per_frame_17=pulse_timer=sin(pulse);
per_frame_18=effect_1=1+1*bass_flop*above(pulse_timer,0);
per_frame_19=effect_2=1+2*treb_flop*above(pulse_timer,0);
per_frame_20=effect_3=1+4*bass_flop*below(pulse_timer,0);
per_frame_21=effect_4=1+6*treb_flop*below(pulse_timer,0);
per_frame_22=effect_5=1+10*bass_flop*mid_flop*above(pulse_timer,.5);
per_frame_23=effect_6=1+12*treb_flop*mid*below(pulse_timer,-.5);
per_frame_24=q1=effect_1*effect_2*effect_3*effect_4*effect_5*effect_6;
per_frame_25=q2=time*q1*.3*entropy;
per_frame_26=q3=pulse_timer;
per_frame_27=q4=sin(q2*.002);
per_frame_28=wave_r=if(mid_flop,bass_flop,.5*q3*q4);
per_frame_29=wave_b=if(treb_flop,mid_flop,.5*q3);
per_frame_30=wave_g=if(bass_flop,treb_flop,+.5*q4);
per_frame_31=zoom_fade=if(above(q3,0),if(above(q4,0),zoom_fade-.005*mid_att,zoom_fade+.005*mid_att),1);
per_frame_32=zoom=zoom_fade;
per_frame_33=ob_r=if(mid_flop,wave_g,wave_b);
per_frame_34=ob_b=if(treb_flop,wave_r,wave_g);
per_frame_35=ob_g=if(bass_flop,wave_b,wave_r);
per_frame_36=ob_a=.09+.05*q3;
per_frame_37=ob_size=.01+.009*q4;
per_frame_38=decay=.982+.01*q3*q4;
per_pixel_1=g1=sin(q2+time*.007);
per_pixel_2=g2=sin(q2+time*.005);
per_pixel_3=g3=sin(q2+time*.003);
per_pixel_4=x_shift=pow(x,4*abs(g2))+x*g1+sqr(g1);
per_pixel_5=y_shift=pow(y,4*abs(g3))+y*g2+sqr(g2);
per_pixel_6=r_shift=pow(rad,4*abs(g1))+rad*g3+sqr(g3);
per_pixel_7=dx=sin(x_shift*y_shift*r_shift)*g1*.1;
per_pixel_8=dy=if(above(q4,0),sin(x_shift*y_shift*r_shift)*g3*.1,sin(x_shift*y_shift*r_shift)*g2*.1);
per_pixel_9=rot=if(above(sin(q2*.003),0),0,rot+min(q3,dx)*g3);
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.3;        // maximum random pixel offset
warp_6=`float diffusion = 0.004;      // dither strength
warp_7=`float fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));
warp_11=`uv = lerp(uv_orig,uv, magic*8 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`
warp_14=`}
comp_1=`float3 ret1, neu;
comp_2=`float2 rs,rs2,uv1;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`//uv = mul(uv,float2x2(_qa));
comp_10=`
comp_11=`float2 tmp = uv;
comp_12=`float dist = 1;
comp_13=`float dista = 0;
comp_14=`float inten = 1;
comp_15=`float mask = 0;
comp_16=`ret1 = 0;
comp_17=`int anz = 4;
comp_18=`float n = 0;
comp_19=`while (n <= anz) {
comp_20=`    ang2 = 6.28*n/anz;
comp_21=`    c = cos(ang2);
comp_22=`    s = sin(ang2);
comp_23=`    uv2.x =  uv.x*c - uv.y*s;
comp_24=`    uv2.y =  uv.x*s + uv.y*c;
comp_25=`uv2 *= aspect.yx;
comp_26=`    dist = 1-frac(.25*n+q30); //evtl sqrt !
comp_27=`;
comp_28=`    inten =  sqrt(dist)*(1-dist)*4;
comp_29=`    float2 uv3 =  frac(3*uv2*dist+.3*q27);
comp_30=`    uv3 += q17*float2 (c,s);
comp_31=`    neu = 1*GetPixel(uv3) -GetBlur2(uv3*1.02*q1);
comp_32=`    neu *= (neu >= 0);
comp_33=`    mask = 1-(neu*inten >= .1) * (dist < dista);
comp_34=`    ret1 = max(ret1,neu*inten);
comp_35=`    dista = dist;
comp_36=`n++;
comp_37=`}
comp_38=`
comp_39=`rs2 = .4*cos(uv*13+time) - 1* lum(ret1);;
comp_40=`float dots = (.05/length(rs2))*q26/4 ;
comp_41=`
comp_42=`ret = 1*ret1 + dots*hue_shader ;
comp_43=`
comp_44=`}

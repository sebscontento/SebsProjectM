MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=0.950
fVideoEchoZoom=0.498
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.096
fWarpScale=1.442
fZoomExponent=0.05354
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.400
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=44.800
nMotionVectorsY=24.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.2;
wave_0_per_point6=v = sample*100000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_0_per_point14=
wave_0_per_point15=x = x;
wave_0_per_point16=y = y;
wave_0_per_point17=y = y;
wave_0_per_point18=
wave_0_per_point19=//r = 0.5 + 0.5*sin(time*1.22) + 0.1;
wave_0_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_0_per_point21=//b = 0.4 + 0.4*sin(time*1.959);
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 = 0;
wave_1_per_point5=speed = bass_att*0.2;
wave_1_per_point6=v = sample*100000 + value2*bass*0.1;
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_1_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);
wave_1_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);
wave_1_per_point14=
wave_1_per_point15=x = x;
wave_1_per_point16=y = y;
wave_1_per_point17=y = y;
wave_1_per_point18=
wave_1_per_point19=//r = 0.5 + 0.5*sin(time*1.4) + 0.1;
wave_1_per_point20=g = 1;//0.4 + 0.4*sin(time*1.307) + x;
wave_1_per_point21=//b = 0.4 + 0.4*sin(time*1.259);
wave_1_per_point22=
wave_1_per_point23=
wave_1_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 = 0;
wave_2_per_point5=speed = bass_att*0.2;
wave_2_per_point6=v = sample*100000 + value2*bass*0.1;
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_2_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_2_per_point11=
wave_2_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);
wave_2_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);
wave_2_per_point14=
wave_2_per_point15=x = x;
wave_2_per_point16=y = y;
wave_2_per_point17=y = y;
wave_2_per_point18=
wave_2_per_point19=//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;
wave_2_per_point20=g = 1;//0.4 + 0.4*sin(time*1.807) + x;
wave_2_per_point21=//b = 0.4 + 0.4*sin(time*1.359);
wave_2_per_point22=
wave_2_per_point23=
wave_2_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=speed = bass*0.1;
wave_3_per_point2=v = sample*10000 + value2*bass*0.1;
wave_3_per_point3=
wave_3_per_point4=//state 0 elipse
wave_3_per_point5=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_3_per_point6=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_3_per_point7=
wave_3_per_point8=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_3_per_point9=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_3_per_point10=
wave_3_per_point11=y = y - sample*0.1;
wave_3_per_point12=
wave_3_per_point13=x = x*0.6 + 0.2;
wave_3_per_point14=y = y + bass*0.1;
wave_3_per_point15=y = y*0.8;
wave_3_per_point16=
wave_3_per_point17=r = 0.5 + 0.5*sin(time*6.22) + 0.1;
wave_3_per_point18=g = 0.4 + 0.4*sin(time*5.307);
wave_3_per_point19=b = 0.4 + 0.4*sin(time*4.959)*x;
wave_3_per_point20=
wave_3_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_3_per_point22=ys = if(above(ys,1000),0 ,ys);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66710
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27425
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.400
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.100
shape_0_per_frame1=tex_capture  = q1;
shape_0_per_frame2=
shape_0_per_frame3=saw = saw - 0.001*bass;
shape_0_per_frame4=saw = if(below(saw,0.2),0.6,saw);
shape_0_per_frame5=
shape_0_per_frame6=tex_zoom = saw;
shape_0_per_frame7=
shape_0_per_frame8=
shape_0_per_frame9=
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=2.66710
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.27425
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.100
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.400
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.100
shape_1_per_frame1=tex_capture  = q1;
shape_1_per_frame2=
shape_1_per_frame3=saw = saw - 0.001*bass;
shape_1_per_frame4=saw = if(below(saw,0.1),0.6,saw);
shape_1_per_frame5=
shape_1_per_frame6=tex_zoom = saw;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=2.66718
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.36964
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.100
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.400
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=2.66718
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.30294
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.100
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.400
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=decay = 0.05;
per_frame_25=xx1 = xx1*0.96 + (bass)*0.005;
per_frame_26=xx2 = xx2*0.96 + (treb)*0.005;
per_frame_27=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_28=
per_frame_29=x1 = 0.5 - (xx1-xx2)*5;
per_frame_30=y1 = 1 - yy1*0.75;
per_frame_31=
per_frame_32=x1 = max(0.2,min(0.8,x1));
per_frame_33=
per_frame_34=spring = 15;
per_frame_35=grav = .65;//-0.25*yy1;
per_frame_36=resist = 0.005;
per_frame_37=dt = 0.0005;
per_frame_38=
per_frame_39=spx2 = (x1+x3-2*x2)*spring;
per_frame_40=spy2 = (y1+y3-2*y2)*spring;
per_frame_41=spx3 = (x2+x4-2*x3)*spring;
per_frame_42=spy3 = (y2+y4-2*y3)*spring;
per_frame_43=spx4 = (x3-x4)*spring;
per_frame_44=spy4 = (y3-y4)*spring;
per_frame_45=
per_frame_46=vx2 = vx2*(1-resist) + dt*(spx2);
per_frame_47=vy2 = vy2*(1-resist) + dt*(spy2-grav);
per_frame_48=vx3 = vx3*(1-resist) + dt*(spx3);
per_frame_49=vy3 = vy3*(1-resist) + dt*(spy3-grav*1.5);
per_frame_50=vx4 = vx4*(1-resist) + dt*(spx4);
per_frame_51=vy4 = vy4*(1-resist) + dt*(spy4-grav*4);
per_frame_52=
per_frame_53=x2 = x2 + vx2;
per_frame_54=y2 = y2 + vy2;
per_frame_55=x3 = x3 + vx3;
per_frame_56=y3 = y3 + vy3;
per_frame_57=x4 = x4 + vx4;
per_frame_58=y4 = y4 + vy4;
per_frame_59=
per_frame_60=vx2 = if(above(x2,0),vx2,abs(vx2)*0.8);
per_frame_61=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.8);
per_frame_62=vx3 = if(above(x3,0),vx3,abs(vx3)*0.8);
per_frame_63=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.8);
per_frame_64=vx4 = if(above(x4,0),vx4,abs(vx4)*0.8);
per_frame_65=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.8);
per_frame_66=
per_frame_67=vy2 = if(above(y2,0),vy2,abs(vy2)*0.8);
per_frame_68=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.8);
per_frame_69=vy3 = if(above(y3,0),vy3,abs(vy3)*0.8);
per_frame_70=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.8);
per_frame_71=vy4 = if(above(y4,0),vy4,abs(vy4)*0.8);
per_frame_72=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.8);
per_frame_73=
per_frame_74=
per_frame_75=q1 = x1;
per_frame_76=q2 = x2;
per_frame_77=q3 = x3;
per_frame_78=q4 = x4;
per_frame_79=
per_frame_80=q5 = y1;
per_frame_81=q6 = y2;
per_frame_82=q7 = y3;
per_frame_83=q8 = y4;
per_frame_84=q2 = sin(+atan2(x4-x3,y4-y3) - asin(1)*2)*0.175;
per_frame_85=
per_frame_86=q13 = 0;
per_frame_87=q11 = (1-x4)*4;
per_frame_88=monitor = xx4*0.01;
per_frame_89=zoom = 0.998;
per_frame_90=rot = 0.00;
per_frame_91=warp = 0.02;
per_frame_92=wave_a = 0;
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 d = texsize.zw*4;
warp_4=`    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );
warp_5=`    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );
warp_6=`float2 dz = float2(dx.x,dy.x)*texsize.zw;
warp_7=`
warp_8=`//ret = GetPixel(uv);
warp_9=`ret = 0;
warp_10=`ret.x = tex2d(sampler_fw_main,uv - dz).x - 0.0 - (GetBlur3(uv).x-GetBlur1(uv+dz).x) ;
warp_11=`
warp_12=`dz = -float2(dx.y,dy.y)*texsize.zw;
warp_13=`ret.y = tex2d(sampler_fw_main,uv - dz).y - 0.06 - (GetBlur2(uv).y-GetBlur1(uv+dz).y)*1.3 ;
warp_14=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_15=`                      ((dz.xyy*q27
warp_16=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_17=`                      ).xyz*
warp_18=`                      float3(1,1,0)*0.05 + 
warp_19=`                      time*float3(0,0,1)*q29
warp_20=`                     );
warp_21=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_22=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_23=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_24=`
warp_25=`float zoom = 1.8-(bass_att-treb_att)*0.015;
warp_26=`float2 cntr = float2(0,0);
warp_27=`float2 c = float2(0.28,0.4);
warp_28=`
warp_29=` float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island
warp_30=` my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c
warp_31=`uv = my_uv2;
warp_32=`d = texsize.zw*4;
warp_33=`dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );
warp_34=`dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );
warp_35=`dz = float2(dx.z,dy.z)*texsize.zw*1;
warp_36=`
warp_37=`ret.z = GetPixel(saturate(my_uv2+dz)).z - 0.014;
warp_38=`
warp_39=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`
comp_39=`float2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));
comp_41=`float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`
comp_43=`float2 d = texsize.zw*3;
comp_44=`float3 dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_45=`float3 dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_46=`
comp_47=`mirror_uv += float2(dx.x,dy.x)*texsize.zw*4;
comp_48=`
comp_49=`float3 aura = pow(hue_shader,4)*1.4;
comp_50=`float3 glow = 3;
comp_51=`float3 blob = float3(1,0.75,0)*0;
comp_52=`
comp_53=`float2 uv_red = mirror_uv;
comp_54=`ret = lerp(ret,1,(GetBlur1(uv_red).x)*(1-GetBlur2(uv_red).x)*aura);
comp_55=`ret = lerp(blob, ret, GetPixel(uv_red).x);
comp_56=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_57=`                      ((mirror_uv.xyy*q28
comp_58=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_59=`                      ).xyz*
comp_60=`                      float3(1,1,0)*0.05 + 
comp_61=`                      time*float3(0,0,1)*q31
comp_62=`                     );
comp_63=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_64=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_65=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_66=`ret += (1-GetPixel(uv_red).x)*GetBlur1(uv_red).x*glow;
comp_67=`
comp_68=`mirror_uv-= float2(dx.x,dy.x)*texsize.zw*24;
comp_69=`dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_70=`dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_71=`float2 dz = +float2(-dx.y,dy.y)*0.25;
comp_72=`float3 bg = lerp(float3(1,0.7,0.2),float3(0.15,0,0.5),mirror_uv.x*0.8 - mirror_uv.y + 0.75+dz.x+dz.y-0.1)*(GetPixel(mirror_uv).y);
comp_73=`ret = lerp(ret,1,bg);
comp_74=`
comp_75=`mirror_uv = uv_rotate(0.5 + (uvo-0.5)*aspect.wz, 0.5, q3, q4, 1).yx;
comp_76=`
comp_77=`d = texsize.zw;
comp_78=`dx = ( 2*GetPixel(mirror_uv+float2(1,0)*d)-2*GetPixel(mirror_uv-float2(1,0)*d) );
comp_79=`dy = ( 2*GetPixel(mirror_uv+float2(0,1)*d)-2*GetPixel(mirror_uv-float2(0,1)*d) );
comp_80=`dz = -float2(dx.z,dy.z);
comp_81=`
comp_82=`ret = 1-lerp(ret,float3(0.9,0.9,1),1-GetPixel(mirror_uv+dz).z) ;
comp_83=`}

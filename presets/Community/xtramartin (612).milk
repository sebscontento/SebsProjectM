MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.074
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=0.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.000
wave_y=0.000
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.010
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=oldmd=md;
wave_0_per_point2=md=(md+int(rand(4)))%4;
wave_0_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_0_per_point4=
wave_0_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_0_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_0_per_point7=my=my+(equal(md,2)*.002*treb);
wave_0_per_point8=my=my-(equal(md,3)*.002*treb);
wave_0_per_point9=
wave_0_per_point10=mx=if(above(mx,.9),.5,mx);
wave_0_per_point11=mx=if(below(mx,.1),.5,mx);
wave_0_per_point12=my=if(above(my,.9),.5,my);
wave_0_per_point13=my=if(below(my,.1),.5,my);
wave_0_per_point14=
wave_0_per_point15=x=mx;
wave_0_per_point16=y=my;
wave_0_per_point17=a=bass*.1;
wave_0_per_point18=
wave_0_per_point19=r=bass*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_point1=oldmd=md;
wave_1_per_point2=md=(md+int(rand(4)))%4;
wave_1_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_1_per_point4=
wave_1_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_1_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_1_per_point7=my=my+(equal(md,2)*.002*treb);
wave_1_per_point8=my=my-(equal(md,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx=if(above(mx,.9),.5,mx);
wave_1_per_point11=mx=if(below(mx,.1),.5,mx);
wave_1_per_point12=my=if(above(my,.9),.5,my);
wave_1_per_point13=my=if(below(my,.1),.5,my);
wave_1_per_point14=
wave_1_per_point15=x=mx;
wave_1_per_point16=y=my;
wave_1_per_point17=a=bass*.1;
wave_1_per_point18=
wave_1_per_point19=g=treb*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_init2=my=.5;
wave_2_init3=md=2;
wave_2_per_point1=oldmd=md;
wave_2_per_point2=md=(md+int(rand(4)))%4;
wave_2_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_2_per_point4=
wave_2_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_2_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_2_per_point7=my=my+(equal(md,2)*.002*treb);
wave_2_per_point8=my=my-(equal(md,3)*.002*treb);
wave_2_per_point9=
wave_2_per_point10=mx=if(above(mx,.9),.5,mx);
wave_2_per_point11=mx=if(below(mx,.1),.5,mx);
wave_2_per_point12=my=if(above(my,.9),.5,my);
wave_2_per_point13=my=if(below(my,.1),.5,my);
wave_2_per_point14=
wave_2_per_point15=x=mx;
wave_2_per_point16=y=my;
wave_2_per_point17=a=bass*.1;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_init2=my=.4;
wave_3_init3=md=3;
wave_3_per_point1=oldmd=md;
wave_3_per_point2=md=(md+int(rand(4)))%4;
wave_3_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_3_per_point4=
wave_3_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_3_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_3_per_point7=my=my+(equal(md,2)*.002*treb);
wave_3_per_point8=my=my-(equal(md,3)*.002*treb);
wave_3_per_point9=
wave_3_per_point10=mx=if(above(mx,.9),.5,mx);
wave_3_per_point11=mx=if(below(mx,.1),.5,mx);
wave_3_per_point12=my=if(above(my,.9),.5,my);
wave_3_per_point13=my=if(below(my,.1),.5,my);
wave_3_per_point14=
wave_3_per_point15=x=mx;
wave_3_per_point16=y=my;
wave_3_per_point17=a=bass*.1;
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=311
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_1_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0002*cos(ma));
shape_1_per_frame5=my=my+(.0002*tan(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=1-mx;
shape_1_per_frame13=y=1-my;
shape_1_per_frame14=
shape_1_per_frame15=ang=(sin(time*.35)+1)*3;
shape_1_per_frame16=//a=(above(bass+mid+treb,.8));
shape_1_per_frame17=pi23=4*asin(1)*.333333333;
shape_1_per_frame18=t1=bass+mid+treb;
shapecode_2_enabled=1
shapecode_2_sides=14
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=512
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10260
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=rad=(bass+treb)/100;
shape_2_per_frame15=a=(above(bass+mid+treb,.8));
shape_2_per_frame16=r=int(rand(100))/100;
shape_2_per_frame17=g=int(rand(100))/100;
shape_2_per_frame18=b=int(rand(100))/100;
shape_2_per_frame19=r2=int(rand(100))/100;
shape_2_per_frame20=g2=int(rand(100))/100;
shape_2_per_frame21=b2=int(rand(100))/100;
shape_2_per_frame22=r_border=int(rand(100))/100;
shape_2_per_frame23=g_border=int(rand(100))/100;
shape_2_per_frame24=b_border=int(rand(100))/100;
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03333
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = int(rand(100))*.01;
shape_3_per_frame2=y = int(rand(100))*.01;
shape_3_per_frame3=
shape_3_per_frame4=a = if(above(frame%1,0),0,1);
shape_3_per_frame5=
shape_3_per_frame6=vol=bass+mid+treb;
shape_3_per_frame7=rad = vol*.1;
per_frame_init_1=design = 0;
per_frame_init_2=//0 : normal mode
per_frame_init_3=//1 : selects last set and stops background variation
per_frame_init_4=//2 : selects last set, black&white with green flash for dist = 0.25
per_frame_init_5=
per_frame_init_6=n = 0; anz= 0;
per_frame_init_7=loop (200,
per_frame_init_8=if (n== 0 , anz += 1; x = .09; y = .9;   z = -.5; ax = -.11; ay = 0; az = 0.5; zo= 1.3; su=0; br = 1; lim=4, 0);
per_frame_init_9=if (n== 1 , anz += 1; x = .08; y = .9;   z = -.45; ax = -.12; ay = 0; az = 0.5; zo= 3; su=0; br = 1.2; lim=4, 0);
per_frame_init_10=if (n== 2 , anz += 1; x = .08; y = .98;  z = -.43; ax = -.12; ay = 0; az = 0.5; zo= 5; su=0; br = 1.2; lim=4, 0);
per_frame_init_11=if (n== 3 , anz += 1; x = .08; y = .982; z = -.43; ax = -.12; ay = 0; az = 0.5; zo= 15; su=0; br = 1; lim=3, 0);
per_frame_init_12=if (n== 4 , anz += 1; x = .12; y = 1.002;z = -.41; ax = -.12; ay = 0; az = 0.5; zo= 10; su=0; br = 1; lim=4, 0);
per_frame_init_13=if (n== 5 , anz += 1; x = .124; y = .993;z = -.4; ax = -.12;  ay = 0; az = 0.5; zo= 25; su=.95; br = .2; lim=28, 0);
per_frame_init_14=if (n== 6 , anz += 1; x = .1; y = .86;   z = -.3; ax = -.0;   ay = .4; az = -0.0; zo= 1; su=0; br = 1; lim=1.5, 0);
per_frame_init_15=if (n== 7 , anz += 1; x = .1; y = .93;   z = -.34; ax = -.0;  ay = .4; az = -0.0; zo= 2; su=0; br = 1; lim=4, 0);
per_frame_init_16=if (n== 8 , anz += 1; x = .11; y = .93;  z = -.28; ax = -.0;  ay = .4; az = -0.0; zo= 2; su=0; br = 1; lim=4, 0);
per_frame_init_17=if (n== 9,  anz += 1; x = .0; y = .87;   z = .26; ax = .40;   ay = .04; az = -.0; zo= 1; su=0; br = 1; lim=20, 0);
per_frame_init_18=if (n== 10, anz += 1; x = .14; y = .87;  z = .35; ax = .40;   ay = .04; az = -.0; zo= 2; su=0; br = 1; lim=4, 0);
per_frame_init_19=if (n== 11, anz += 1; x = -.08; y = .87; z = -.33; ax = .4;   ay = .04; az = -.0; zo= 1; su=0; br = 1; lim=4, 0);
per_frame_init_20=if (n== 12, anz += 1; x = -.0865; y = .884; z = -.44; ax = .4;ay = .04; az = -.0; zo= 28; su=0.3; br = .4; lim=4, 0);
per_frame_init_21=if (n== 13, anz += 1; x = -.0842; y = .882; z = -.44; ax = .4; ay = .04; az = -.0; zo= 48; su=0; br = .8; lim=1.5, 0);
per_frame_init_22=if (n== 14, anz += 1; x = -.17; y = 1; z = -.08; ax = .0;     ay = .04; az = -.0; zo= 3; su=0; br = 1; lim=4, 0);
per_frame_init_23=if (n== 15, anz += 1; x = -.17; y = 1; z = -.06; ax = .0;     ay = .04; az = -.0; zo= 13; su=0; br = 1; lim=1.2, 0);
per_frame_init_24=if (n== 16, anz += 1; x = -.17; y = 1; z = -.06; ax = .0;     ay = .04; az = -.0; zo= 23; su=0; br = 1; lim=2, 0);
per_frame_init_25=if (n== 17, anz += 1; x = -.17; y = 1; z = -.056; ax = .0;    ay = .04; az = -.0; zo= 53; su=0.82; br = 1; lim=4, 0);
per_frame_init_26=if (n== 18, anz += 1; x = -.1694; y = 1; z = -.055; ax = .0;  ay = .04; az = -.0; zo= 240; su=0.86; br = 1; lim=4, 0);
per_frame_init_27=if (n== 19, anz += 1; x = -.12; y = 1.06; z = -.049; ax = .0; ay = .04; az = -.0; zo= 120; su=0.86; br = 1; lim=10, 0);
per_frame_init_28=if (n== 20, anz += 1; x = .108; y = 1.015; z = -.05; ax = .0; ay = .04; az = -.03; zo= 4; su=.20; br = .3; lim=.5, 0);
per_frame_init_29=if (n== 21, anz += 1; x = .15; y = 1; z = -.25; ax = .0;      ay = 0.2; az = 0.2; zo= 1.5; su=.1; br = 1.2; lim=3, 0);
per_frame_init_30=
per_frame_init_31=//if (n== 22, anz += 1;     , 0);
per_frame_init_32=
per_frame_init_33=
per_frame_init_34=
per_frame_init_35=
per_frame_init_36=
per_frame_init_37=
per_frame_init_38=
per_frame_init_39=
per_frame_init_40=
per_frame_init_41=
per_frame_init_42=
per_frame_init_43=gmegabuf(n*20)   = x;  //camera pos x
per_frame_init_44=gmegabuf(n*20+1) = -y;  //camera pos y
per_frame_init_45=gmegabuf(n*20+2) = z;  //camera pos z
per_frame_init_46=gmegabuf(n*20+3) = -ax; //bulb rotation angle x
per_frame_init_47=gmegabuf(n*20+4) = ay; //bulb rotation angle y
per_frame_init_48=gmegabuf(n*20+5) = az; //bulb rotation angle z
per_frame_init_49=gmegabuf(n*20+6) = zo; //zoom factor
per_frame_init_50=gmegabuf(n*20+7) = su; //surface shape
per_frame_init_51=gmegabuf(n*20+8) = br; //brightness
per_frame_init_52=gmegabuf(n*20+9) = lim; //decision threshold in/outside fractal
per_frame_init_53=n += 1;
per_frame_init_54=);  
per_frame_init_55=
per_frame_init_56=start = 1;index2 = int(rand(anz)); ramp = index2-1;
per_frame_init_57=lastset = anz-1;
per_frame_init_58=rseed = rand(100)/100;
per_frame_init_59=t0 = 0; trel = 0;
per_frame_init_60=
per_frame_1=dec_m = pow (0.8, 30/fps);
per_frame_2=dec_s = pow (0.97, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=
per_frame_5=trel = trel + beat*.04/fps;
per_frame_6=trig = ((trel > int(t0)+1) || start) && (design == 0);
per_frame_7=index += trig;
per_frame_8=if (trig, t0=trel,0);
per_frame_9=change = max(0,1-abs(trel-int(trel))); //Vorsicht bei Ruecksprung;
per_frame_10=change = 1-2*min(trel-int(trel), int(trel+1)-trel);
per_frame_11=change = pow(max(0,change*5-4),2);
per_frame_12=q12 = change;
per_frame_13=
per_frame_14=set = index%anz;
per_frame_15=if (design, set = lastset, 0);
per_frame_16=q4 = gmegabuf(set*20); 
per_frame_17=q5 = gmegabuf(set*20+1); 
per_frame_18=q6 = gmegabuf(set*20+2);
per_frame_19=q1 = gmegabuf(set*20+3); 
per_frame_20=q2 = gmegabuf(set*20+4);   
per_frame_21=q3 = gmegabuf(set*20+5);
per_frame_22=q7 = gmegabuf(set*20+6);
per_frame_23=q8 = gmegabuf(set*20+7);
per_frame_24=q9 = gmegabuf(set*20+8);
per_frame_25=q10 =gmegabuf(set*20+9); 
per_frame_26=
per_frame_27=
per_frame_28=bright = if (trig, rand(100)/120, bright);
per_frame_29=bright_ = bright_*dec_s + (1-dec_s)*pow(bright,1);
per_frame_30=q18 = bright_;
per_frame_31=
per_frame_32=grad = if (trig, rand(100)/100, grad);
per_frame_33=grad_ = grad_*dec_s + (1-dec_s)*grad;
per_frame_34=q19 = grad_;
per_frame_35=
per_frame_36=//ang1 = time*.0238+rseed*6;
per_frame_37=ang1 = if(trig,  rand(100), ang1);
per_frame_38=ca = ca * dec_s + (1-dec_s) * cos(ang1);
per_frame_39=sa = sa * dec_s + (1-dec_s) * sin(ang1*1);
per_frame_40=q15 = ca; q16 = sa;
per_frame_41=
per_frame_42=
per_frame_43=//MOON POS, unused
per_frame_44=mx = sin(time*.00714)/2;
per_frame_45=my = sin(time*.00433)/4 -.25; ;
per_frame_46=q25 = mx; q26 = my;
per_frame_47=
per_frame_48=//Colour 
per_frame_49=q27 = .4; q28 = .55; q29 = 1;
per_frame_50=q30 = design;
per_frame_51=q32 = max(0,(sin(time*6)));
per_frame_52=
per_frame_53=start = 0;
per_frame_54=monitor = change;
per_pixel_1=k1 = 1;
per_pixel_2=
per_pixel_3=warp = 0.0; zoom = 1; 
per_pixel_4=dx = 0; dy = 0; rot = 0;
warp_1=`float dist, struc, len; float2 uv0, uv1; float3 uv2; float3 box;
warp_2=`static const float2 center = float2 (q15,q16);
warp_3=`static const float3x3 RotMat = 
warp_4=`float3x3(cos(q1)*cos(q3) - sin(q1)*cos(q2)*sin(q3), -cos(q1)*sin(q3)-sin(q1)*cos(q2)*cos(q3), sin(q1)*sin(q2),
warp_5=`         sin(q1)*cos(q3) + cos(q1)*cos(q2)*sin(q3),  cos(q1)*cos(q2)*cos(q3)-sin(q1)*sin(q3), -cos(q1)*sin(q2),
warp_6=`         sin(q2)*sin(q3), sin(q2)*cos(q3), cos(q2));
warp_7=`static const float3 CamPos = float3(q4,q5,q6);
warp_8=`static const float3 surface = cos (3.1416/2*q8 * float3 (1,3,5));
warp_9=`static const float myzoom = q7,  res = 128, res2 = 64;
warp_10=`static const float sustain = 0.985-q12*.05, tic8 = 1.0/255;
warp_11=`static const float iter = 6 + (myzoom >= 50),  limit = q10;  
warp_12=`
warp_13=`float2 fstep2 (float2 xy) {return 1.0/res*round(res*xy);}
warp_14=`
warp_15=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pc_main, uvi).gb); 
warp_16=`  return 1-(tmp.y + 1.0/res2*(tmp.x-.50));}
warp_17=`
warp_18=`float2 PutDist(float x) {float tmp; tmp = fstep2(1-x);
warp_19=`  return (float2(res2*((1-x)-tmp)+.495,tmp));}
warp_20=`
warp_21=`float MinDist (float2 uvi)    //Eo.S. optimised
warp_22=`{
warp_23=`   float tmp; float4 nb; float4 nb2; float2 pix;
warp_24=`   pix = texsize.zw*1;   
warp_25=`   nb.x = GetDist(uvi+pix*float2(-1,-1));   nb.y = GetDist(uvi+pix*float2(1,-1));
warp_26=`   nb.z = GetDist(uvi+pix*float2(1,1));     nb.w = GetDist(uvi+pix*float2(-1,1));         
warp_27=`   nb2.x = GetDist(uvi+pix*float2(0,-1));   nb2.y = GetDist(uvi+pix*float2(1,0));          
warp_28=`   nb2.z = GetDist(uvi+pix*float2(0,1));    nb2.w = GetDist(uvi+pix*float2(-1,0));
warp_29=`   nb = min( nb, nb2 );  nb.xy = min( nb.xy, nb.zw );
warp_30=`   return min( nb.x, nb.y );
warp_31=`}
warp_32=`
warp_33=`float3 Get1 (float2 uvi) {return lerp (GetPixel(uvi), GetBlur1(uvi),.0);} 
warp_34=`
warp_35=`float3 mbulb_7a (float3 uvi) {float3 zz, zz2,zz4, zz6, tmp; float a, rxy2, rxy4, rxy6;
warp_36=`  zz = mul(uvi,RotMat);
warp_37=`  for (int n=1; n <= iter; n++)  { 
warp_38=`    zz2 = pow(zz,2);  zz4 = pow(zz2,2);  zz6 = pow(zz2,3);  
warp_39=`    rxy2 = zz2.x+zz2.y; rxy4 = pow(rxy2,2); rxy6 = pow(rxy2,3);
warp_40=`    a =   1+(-7*zz6.z+35*zz4.z*rxy2 -21*zz2.z*rxy4)/rxy6; 
warp_41=`    tmp.x =  -7*zz6.y+  zz6.x -21*zz4.x*zz2.y +35*zz2.x*zz4.y;
warp_42=`    tmp.y =    -zz6.y+7*zz6.x -35*zz4.x*zz2.y +21*zz2.x*zz4.y;
warp_43=`    tmp.z =  -21*zz4.z*rxy2+35*zz2.z*rxy4-7*rxy6;
warp_44=`    tmp.xy *= a; tmp *= zz;
warp_45=`    zz = tmp+uvi;  }
warp_46=`  return float3(zz);}
warp_47=`
warp_48=`shader_body {uv0 = uv_orig; uv = uv0;
warp_49=`uv1 = (uv0-.5)*aspect.xy;
warp_50=`float3 noise = frac(8*tex2D (sampler_noise_lq,4*uv+rand_frame.yz)); 
warp_51=`float3 noiseBi= noise - .5;
warp_52=`
warp_53=`float seed = (noise.g < .1); 
warp_54=`if (!seed) { dist = MinDist(uv+0*noiseBi*texsize.zw) +  0.005 * (noiseBi.x) * abs(noiseBi.y);} 
warp_55=`else {dist = noise.r;}
warp_56=`dist = min(dist,GetDist(uv));
warp_57=`
warp_58=`uv2 = float3(uv1*dist,dist-.25)/myzoom+CamPos;
warp_59=`box = mbulb_7a (uv2);
warp_60=`len = length(box * surface)*(1+Get1(uv).r*.05); //##experimental
warp_61=`struc = length(box.xyz-box.z) /limit * q9;
warp_62=`float2 shlen = .1* (uv1-center);
warp_63=`float2 uv3 = uv - shlen + .005*noiseBi;
warp_64=`struc *= 1-(GetDist(uv3) < GetDist(uv)-length(shlen))*.75;
warp_65=`if ((len < limit ) && (len > .00)){
warp_66=` ret.r = lerp (struc, Get1(uv).r, sustain); ret.gb=  PutDist(dist); } 
warp_67=` else {ret = tex2D(sampler_fc_main,uv)*sustain - float3(1,1,1)*tic8;} 
warp_68=` if (seed) {ret.r = GetPixel(uv_orig).r;}
warp_69=`float3 ret7=ret;
warp_70=`if(frame%3==0)ret.z=.71-ret7.x;
warp_71=`if(frame%5==0)ret.x=.71-ret7.y;
warp_72=`if(frame%7==0)ret.y=.71-ret7.z;
warp_73=`}
warp_74=`//------Written by martin-----
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw*1;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c, shlen;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 col_struc =  float3(q27,q28,q29);
comp_6=`static const float3 col_back =  float3(.4,.6,.9) + .4*(rand_preset-.5);;
comp_7=`static const float myzoom = q7,  res = 128, res2 = 64;
comp_8=`static const float2 center = float2(q15,q16); 
comp_9=`static const float2 moonpos = float2(q25,q26);
comp_10=`static const float macro = max(.2,exp(-10/q7))*1.25;
comp_11=`
comp_12=`float2 fstep2 (float2 xy) {return 1.0/res*round(res*xy);}
comp_13=`
comp_14=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_fc_main, uvi).gb); 
comp_15=`  return 1-(tmp.y + 1.0/res2*(tmp.x-.50));}
comp_16=`
comp_17=`float GetDistB(float2 uvi) {float2 tmp; tmp = fstep2(GetBlur1(uvi).gb); 
comp_18=`  return 1-(tmp.y + 1.0/res2*(tmp.x-.50));}
comp_19=`
comp_20=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_21=`
comp_22=`shader_body {
comp_23=`uv1 = (uv-.5)*aspect.xy;
comp_24=`dist = GetDist(uv);
comp_25=`bdist = lerp(GetDistB(uv),dist,.5); //##
comp_26=`
comp_27=`float focus = abs(GetDistB(uv)-.25)*macro;
comp_28=`float struc = lerp(GetPixel(uv).r, GetBlur1(uv).r, focus) * (1-bdist*.75);
comp_29=`
comp_30=`float light0 = (1-.5*length(uv1-center))*(1-q12*.75);
comp_31=`float bdist2 = bdist - tex3D (sampler_noisevol_hq,float3(uv,.2*time))/2 * (q30==0);
comp_32=`float light_r = pow(light0,2*(q30==0)*(1-bdist2))*(1-bdist2)*(1+2*(q30==0));
comp_33=`struc *= light_r;
comp_34=`
comp_35=`//SKY
comp_36=`float grad = lerp(uv.y,1-uv.x,q19);
comp_37=`float3 back = grad*col_back*q18;
comp_38=`float cloud = grad*tex2D (sampler_noise_hq,uv*float2(.1,.5)+float2(time*.01,0)).r;
comp_39=`back += .2*cloud*q18;
comp_40=`
comp_41=`
comp_42=`float3 ret1 = pow(struc,col_struc);
comp_43=`ret = lerp(ret1,1*back,pow(bdist,1.6));
comp_44=`
comp_45=`float3 ret7=ret;
comp_46=`if(frame%02==0)ret.x=.71-ret7.y;
comp_47=`
comp_48=`if (q30==1) {ret = ret1;}
comp_49=`
comp_50=`if(frame%11==0)ret.y=.71-ret7.z;
comp_51=`
comp_52=`if (q30==2) {ret = lerp(struc,.1,bdist); 
comp_53=`             ret *= .6+ pow(2,-18*float3 (dist, abs(dist-.25), 1-dist)) ; 
comp_54=`
comp_55=`if(frame%13==0)ret.z=.71-ret7.x;
comp_56=`
comp_57=`             ret += sat(.002/abs(rad-.1))*.2*q32; }
comp_58=`
comp_59=`if (q30==0) {ret += pow(light0,4)*(.75+treb_att*.0);}
comp_60=`
comp_61=`
comp_62=`}
comp_63=`//------Written by martin-----
comp_64=`

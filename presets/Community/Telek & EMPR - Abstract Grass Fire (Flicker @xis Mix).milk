[preset00]
fRating=0.000000
fGammaAdj=1.000001
fDecay=1.000000
fVideoEchoZoom=1.000000
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.099998
fWaveScale=0.387300
fWaveSmoothing=0.630000
fWaveParam=0.114177
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.000000
fShader=0.000000
zoom=1.000000
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.001000
sx=1.000000
sy=1.000000
wave_r=0.236605
wave_g=0.354923
wave_b=0.496003
wave_x=0.522165
wave_y=0.282974
ob_size=0.005000
ob_r=0.937248
ob_g=0.037540
ob_b=0.469514
ob_a=0.412544
ib_size=0.500000
ib_r=0.155016
ib_g=0.463034
ib_b=0.644143
ib_a=0.472827
nMotionVectorsX=38.399994
nMotionVectorsY=15.647999
mv_dx=0.285699
mv_dy=-0.655476
mv_l=3.366352
mv_r=0.090009
mv_g=0.918004
mv_b=0.686887
mv_a=0.559132
per_frame_1=vnum_increment = 2/fps;
per_frame_2=vtarget = vtarget + if(above(bass*bass_att,4.5), if(below(vtarget,vnum+1),1,0),0);
per_frame_3=vnum = vnum + if(below(vnum,vtarget-vnum_increment*.5), vnum_increment,0);
per_frame_4=monitor = vnum;
per_frame_5=vang = vnum*3.14159265358979323*.25;
per_frame_6=q1=vang;
per_frame_7=q2 = vnum_increment;
per_frame_8=q3 = vnum;
per_frame_9=q4=vtarget;
per_frame_10=bass_x = max(bass_x*.7+max(bass_att-.9,0)*.3,0);
per_frame_11=wave_vx = ((frame%3-1)*bass_x* above(vnum,vtarget-vnum_increment*.5) +1)*wave_x;
per_frame_12=wave_vy=wave_y;
per_frame_13=wave_x = -(wave_vx-.5)*cos(vang) + (wave_vy-.5)*sin(vang)+.5;
per_frame_14=wave_y = -(wave_vx-.5)*sin(vang) - (wave_vy-.5)*cos(vang)+.5;
per_frame_15=wave_r = above(vnum,vtarget-vnum_increment*.5);
per_frame_16=decay = 3000000+57.75;
per_frame_17=ob_a = max(sqr(sqr(sin(time*1)*.25+.25)),if(below(vnum,vtarget-.1),.2,0));
per_frame_18=ob_a = ob_a*(1-bass_x);
per_frame_19=bass_x = max(bass_x*.7+max(bass_att-.9,0)*.3,0);
per_frame_20=wave_vx = ((frame%3-1)*bass_x* above(vnum,vtarget-vnum_increment*.5) +1)*wave_x;
per_frame_21=wave_x = wave_x - vnum_increment;
per_frame_22=wave_y = if(above(wave_y - q1 , bass_att + wave_vy) , 99.37640429*cos(q3 * vnum_increment) , bass - bass_x);
per_frame_23=decay = 67.47596264*sqr(-58.12729895*sin(decay + q2));
per_frame_24=wave_r = -49.27724004*cos(-77.3911193*sqr(wave_r * monitor));
per_frame_25=
per_frame_26=vnum_increment = -58.7095201*sqr(max(vnum_increment - q2 , q1 * wave_y));
per_frame_27=
per_frame_28=wave_y = -38.77750039*cos(max(wave_y * q3 , q1 * bass));
per_frame_29=wave_y = if(above(wave_y * vnum , bass_x * q1) , if(above(q4 * bass , wave_y * q3) , vtarget - wave_vx , wave_vx - vnum) , q3 * vtarget);
per_frame_30=wave_r = wave_r + wave_y;
per_frame_31=
per_pixel_1=rot = below(q3, q4-q2*.5)*q2*.8*(1-0*(rad));
per_pixel_2=vang=q1;
per_pixel_3=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_4=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_5=vy=1-vy;
per_pixel_6=dvy = (vx+.08*sin(int(rand(100))))*2%2*-.01-.005;
per_pixel_7=dvy = -.0025*((1-vy)*10+int(rand(5)));
per_pixel_8=dvx = int(rand(20))*.0001*sin(int(rand(2))-.5);
per_pixel_9=dvx = dvx*sqr(vy);
per_pixel_10=//dvx = dvx*(1-x/2);
per_pixel_11=dvx = dvx*-.2*(int(rand(10))-5);
per_pixel_12=dvx = dvx -(vx-.5)*.04*(.8-sqr(vy));
per_pixel_13=dvx = dvx + cos(sqr(vy-.5)*10-time*1.1)*sqr(1-(vy))*.01;
per_pixel_14=dx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_15=dy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_16=dvy = -.0025*((1-vy)*10+int(rand(5)));
per_pixel_17=dvx = int(rand(20))*.0001*sin(int(rand(2))-.5);
per_pixel_18=dvx = dvx*sqr(vy);
per_pixel_19=//dvx = dvx*(1-x/2);
per_pixel_20=dvx = dvx*-.2*(int(rand(10))-5);
per_pixel_21=dvx = dvx -(vx-.5)*.04*(.8-sqr(vy));
per_pixel_22=dvx = dvx + cos(sqr(vy-.5)*10-time*1.1)*sqr(1-(vy))*.01;
per_pixel_23=dx = if(above(dx * treb , q4 * x) , q1 - treb , q4 * treb);
per_pixel_24=rot = 23.71599674*sin(rot + vy);
per_pixel_25=rot = rot + time;
per_pixel_26=rot = if(below(rot + q2 , rad + y) , -56.68382049*int(rand(int(dvx - time))) , dvy * treb);
per_pixel_27=rot = 28.19048166*rand(int(if(equal(rot * y , rad - q4) , -82.83023834*sqr(q1 * time) , q2 + vang)));
per_pixel_28=dy = dy * vy;
per_pixel_29=dx = dx - y;
per_pixel_30=dy = dy * x;

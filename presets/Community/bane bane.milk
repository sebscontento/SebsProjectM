MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.800
fWaveScale=0.010
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=0.01000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.96881
sy=1.00183
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.800
ob_b=0.700
ob_a=0.000
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.300
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.01000
wavecode_0_smoothing=1.00000
wavecode_0_r=0.620
wavecode_0_g=0.660
wavecode_0_b=0.600
wavecode_0_a=1.000
wave_0_per_point1=//// stars
wave_0_per_point2=
wave_0_per_point3=q10=123*sample;
wave_0_per_point4=
wave_0_per_point5=///random factor
wave_0_per_point6=
wave_0_per_point7=x = -.5+sample;
wave_0_per_point8=y = -.5+abs(sin(q10));
wave_0_per_point9=
wave_0_per_point10=t=.004*time;
wave_0_per_point11=mx = x*cos(t)+y*sin(t);
wave_0_per_point12=my = y*cos(t)-x*sin(t);
wave_0_per_point13=
wave_0_per_point14=p1=.1*sin(630*sample);
wave_0_per_point15=p2=.1*sin(530*sample);
wave_0_per_point16=
wave_0_per_point17=x= .5+p1+mx;
wave_0_per_point18=y= .5+p2+my;
wave_0_per_point19=
wave_0_per_point20=a=.02+.2*p1;
wave_0_per_point21=a=if(equal(1000*sample%128,0),.4,a);
wave_0_per_point22=a=a+.03*int(rand(2));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.20929
wavecode_1_smoothing=0.00000
wavecode_1_r=0.300
wavecode_1_g=0.200
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=/////// POV
wave_1_per_point2=
wave_1_per_point3=r1=50;
wave_1_per_point4=q10=-3+6*q20;
wave_1_per_point5=q11=300*q20;
wave_1_per_point6=
wave_1_per_point7=px = (r1+q10*cos(1*q11))*cos(q11);
wave_1_per_point8=py = (r1+q10*cos(1*q11))*sin(q11);
wave_1_per_point9=pz = q10*sin(1*q11);
wave_1_per_point10=
wave_1_per_point11=/////// surface  (Moebius strip)
wave_1_per_point12=
wave_1_per_point13=r1=50;
wave_1_per_point14=q10=-10+20*sample;
wave_1_per_point15=q11=300*sample+2*q4;
wave_1_per_point16=
wave_1_per_point17=sx = (r1+q10*cos(1*q11))*cos(q11);
wave_1_per_point18=sy = (r1+q10*cos(1*q11))*sin(q11);
wave_1_per_point19=sz = q10*sin(1*q11);
wave_1_per_point20=
wave_1_per_point21=my_x = sx+ px;
wave_1_per_point22=my_y = sy+ py;
wave_1_per_point23=my_z = -sz+ pz;
wave_1_per_point24=
wave_1_per_point25=my_x=my_x+q1;
wave_1_per_point26=my_y=my_y+q2;
wave_1_per_point27=my_z=my_z+q3;
wave_1_per_point28=
wave_1_per_point29=/////// rotations
wave_1_per_point30=
wave_1_per_point31=d = 0; 
wave_1_per_point32=zoom = 1;
wave_1_per_point33=
wave_1_per_point34=w1 = .2+atan2(py,px);
wave_1_per_point35=w2 = 3.14;
wave_1_per_point36=w3 = 1.57;
wave_1_per_point37=
wave_1_per_point38=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_1_per_point39=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_1_per_point40=z1 = my_z;
wave_1_per_point41=
wave_1_per_point42=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_1_per_point43=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_1_per_point44=y2 = y1;
wave_1_per_point45=
wave_1_per_point46=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_1_per_point47=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_1_per_point48=x3 = x2;
wave_1_per_point49=
wave_1_per_point50=l = sqrt(x3*x3 + y3*y3);
wave_1_per_point51=w = atan2(x3,y3);
wave_1_per_point52=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_1_per_point53=p = tan(asin(1) + atan2(d+z3,l));
wave_1_per_point54=
wave_1_per_point55=my_x = zoom*sin(w)*p;
wave_1_per_point56=my_y = zoom*cos(w)*p;
wave_1_per_point57=
wave_1_per_point58=x = 0.3 + my_x/q6;
wave_1_per_point59=y = 0.5 + my_y/q5;
wave_1_per_point60=
wave_1_per_point61=x = 0.5 + (x-.5)/q5;
wave_1_per_point62=y = 0.5 + (y-.5)/q6;
wave_1_per_point63=
wave_1_per_point64=
wave_1_per_point65=////////
wave_1_per_point66=
wave_1_per_point67=r=.7+.2*sin(11*sample+40*q4);
wave_1_per_point68=g=.2+.1*sin(12*sample+40*q4);
wave_1_per_point69=b=.1+.1*sin(22*sample+40*q4);
wave_1_per_point70=
wave_1_per_point71=a=if(above(d,50),.001*a,a);
wave_1_per_point72=a=300*a/d;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.800
wavecode_2_g=0.800
wavecode_2_b=1.000
wavecode_2_a=0.010
wave_2_per_point1=
wave_2_per_point2=/////// POV
wave_2_per_point3=
wave_2_per_point4=r1=50;
wave_2_per_point5=q10=-3+6*q20;
wave_2_per_point6=q11=300*q20;
wave_2_per_point7=
wave_2_per_point8=px = (r1+q10*cos(.5*q11))*cos(q11);
wave_2_per_point9=py = (r1+q10*cos(.5*q11))*sin(q11);
wave_2_per_point10=pz = q10*sin(.5*q11);
wave_2_per_point11=
wave_2_per_point12=
wave_2_per_point13=/////// surface (sphere)
wave_2_per_point14=r1=1;
wave_2_per_point15=q10= -1+2*sample;
wave_2_per_point16=q11=120*sample+.3*q4;
wave_2_per_point17=
wave_2_per_point18=sx = sqrt(r1*r1-q10*q10)*cos(q11);
wave_2_per_point19=sy = sqrt(r1*r1-q10*q10)*sin(q11);
wave_2_per_point20=sz = q10;
wave_2_per_point21=
wave_2_per_point22=my_x = 28*sx+ px;
wave_2_per_point23=my_y = 28*sy+ py;
wave_2_per_point24=my_z = -28*sz+ pz;
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=my_x=my_x+q1;
wave_2_per_point28=my_y=my_y+q2;
wave_2_per_point29=my_z=my_z+q3;
wave_2_per_point30=
wave_2_per_point31=/////// rotations
wave_2_per_point32=
wave_2_per_point33=d = 0; 
wave_2_per_point34=zoom = 1;
wave_2_per_point35=
wave_2_per_point36=w1 = .2+atan2(py,px);
wave_2_per_point37=w2 = 3.14;
wave_2_per_point38=w3 = 1.57;
wave_2_per_point39=
wave_2_per_point40=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_2_per_point41=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_2_per_point42=z1 = my_z;
wave_2_per_point43=
wave_2_per_point44=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_2_per_point45=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_2_per_point46=y2 = y1;
wave_2_per_point47=
wave_2_per_point48=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_2_per_point49=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_2_per_point50=x3 = x2;
wave_2_per_point51=
wave_2_per_point52=l = sqrt(x3*x3 + y3*y3);
wave_2_per_point53=w = atan2(x3,y3);
wave_2_per_point54=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_2_per_point55=p = tan(asin(1) + atan2(d+z3,l));
wave_2_per_point56=
wave_2_per_point57=my_x = zoom*sin(w)*p;
wave_2_per_point58=my_y = zoom*cos(w)*p;
wave_2_per_point59=
wave_2_per_point60=x = 0.3 + my_x/q6;
wave_2_per_point61=y = 0.5 + my_y/q5;
wave_2_per_point62=
wave_2_per_point63=x = 0.5 + (x-.5)/q5;
wave_2_per_point64=y = 0.5 + (y-.5)/q6;
wave_2_per_point65=
wave_2_per_point66=
wave_2_per_point67=////////
wave_2_per_point68=
wave_2_per_point69=r=.8+.2*sin(11*sample+30*q4);
wave_2_per_point70=g=.4+.1*sin(12*sample+30*q4);
wave_2_per_point71=b=.3+.1*sin(22*sample+30*q4);
wave_2_per_point72=
wave_2_per_point73=//a=if(above(15,z3),0,a);
wave_2_per_point74=a=100*a/d;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.40000
wavecode_3_r=1.000
wavecode_3_g=0.110
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_per_point1=
wave_3_per_point2=/////// POV
wave_3_per_point3=
wave_3_per_point4=r1=50;
wave_3_per_point5=q10=-3+6*q20;
wave_3_per_point6=q11=300*q20;
wave_3_per_point7=
wave_3_per_point8=px = (r1+q10*cos(.5*q11))*cos(q11);
wave_3_per_point9=py = (r1+q10*cos(.5*q11))*sin(q11);
wave_3_per_point10=pz = q10*sin(.5*q11);
wave_3_per_point11=
wave_3_per_point12=
wave_3_per_point13=/////// surface (sphere)
wave_3_per_point14=
wave_3_per_point15=turns = 153;
wave_3_per_point16=size = 16;
wave_3_per_point17=speed =.8;
wave_3_per_point18=x = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_3_per_point19=y = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_3_per_point20=z = 0;
wave_3_per_point21=
wave_3_per_point22=sx=x*sin(t)+y*cos(t);
wave_3_per_point23=sy=y*sin(t)-x*cos(t);
wave_3_per_point24=
wave_3_per_point25=t=q4;
wave_3_per_point26=sz=sx-sy;
wave_3_per_point27=
wave_3_per_point28=my_x = sx+ px;
wave_3_per_point29=my_y = sy+ py;
wave_3_per_point30=my_z = -sz+ pz;
wave_3_per_point31=
wave_3_per_point32=
wave_3_per_point33=my_x=my_x+q1;
wave_3_per_point34=my_y=my_y+q2;
wave_3_per_point35=my_z=my_z+q3;
wave_3_per_point36=
wave_3_per_point37=/////// rotations
wave_3_per_point38=
wave_3_per_point39=d = 0; 
wave_3_per_point40=zoom = 1;
wave_3_per_point41=
wave_3_per_point42=w1 = .2+atan2(py,px);
wave_3_per_point43=w2 = 3.14;
wave_3_per_point44=w3 = 1.57;
wave_3_per_point45=
wave_3_per_point46=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_3_per_point47=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_3_per_point48=z1 = my_z;
wave_3_per_point49=
wave_3_per_point50=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_3_per_point51=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_3_per_point52=y2 = y1;
wave_3_per_point53=
wave_3_per_point54=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_3_per_point55=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_3_per_point56=x3 = x2;
wave_3_per_point57=
wave_3_per_point58=l = sqrt(x3*x3 + y3*y3);
wave_3_per_point59=w = atan2(x3,y3);
wave_3_per_point60=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_3_per_point61=p = tan(asin(1) + atan2(d+z3,l));
wave_3_per_point62=
wave_3_per_point63=my_x = zoom*sin(w)*p;
wave_3_per_point64=my_y = zoom*cos(w)*p;
wave_3_per_point65=
wave_3_per_point66=x = 0.3 + my_x/q6;
wave_3_per_point67=y = 0.5 + my_y/q5;
wave_3_per_point68=
wave_3_per_point69=x = 0.5 + (x-.5)/q5;
wave_3_per_point70=y = 0.5 + (y-.5)/q6;
wave_3_per_point71=
wave_3_per_point72=
wave_3_per_point73=////////
wave_3_per_point74=
wave_3_per_point75=a=7*a/d;
shapecode_0_enabled=1
shapecode_0_sides=30
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=330
shapecode_0_x=1.000
shapecode_0_y=0.500
shapecode_0_rad=6.36630
shapecode_0_ang=0.37699
shapecode_0_tex_ang=0.87965
shapecode_0_tex_zoom=0.19950
shapecode_0_r=0.420
shapecode_0_g=0.610
shapecode_0_b=0.720
shapecode_0_a=0.390
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.040
shapecode_0_a2=0.130
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=sample=instance/num_inst;
shape_0_per_frame3=
shape_0_per_frame4=/////// POV
shape_0_per_frame5=
shape_0_per_frame6=r1=50;
shape_0_per_frame7=q10=-3+6*q20;
shape_0_per_frame8=q11=300*q20;
shape_0_per_frame9=
shape_0_per_frame10=px = (r1+q10*cos(.5*q11))*cos(q11);
shape_0_per_frame11=py = (r1+q10*cos(.5*q11))*sin(q11);
shape_0_per_frame12=pz = q10*sin(.5*q11);
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=/////// surface (sphere)
shape_0_per_frame16=r1=1;
shape_0_per_frame17=q10= -1+2*sample;
shape_0_per_frame18=q11=120*sample+.3*q4;
shape_0_per_frame19=
shape_0_per_frame20=sx = sqrt(r1*r1-q10*q10)*cos(q11);
shape_0_per_frame21=sy = sqrt(r1*r1-q10*q10)*sin(q11);
shape_0_per_frame22=sz = q10;
shape_0_per_frame23=
shape_0_per_frame24=my_x = 25*sx+ px;
shape_0_per_frame25=my_y = 25*sy+ py;
shape_0_per_frame26=my_z = -25*sz+ pz;
shape_0_per_frame27=
shape_0_per_frame28=my_x=my_x+q1;
shape_0_per_frame29=my_y=my_y+q2;
shape_0_per_frame30=my_z=my_z+q3;
shape_0_per_frame31=
shape_0_per_frame32=/////// rotations
shape_0_per_frame33=
shape_0_per_frame34=d = 0; 
shape_0_per_frame35=zoom = 1;
shape_0_per_frame36=
shape_0_per_frame37=w1 = .2+atan2(py,px);
shape_0_per_frame38=w2 = 3.14;
shape_0_per_frame39=w3 = 1.57;
shape_0_per_frame40=
shape_0_per_frame41=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame42=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame43=z1 = my_z;
shape_0_per_frame44=
shape_0_per_frame45=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame46=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame47=y2 = y1;
shape_0_per_frame48=
shape_0_per_frame49=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame50=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame51=x3 = x2;
shape_0_per_frame52=
shape_0_per_frame53=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame54=w = atan2(x3,y3);
shape_0_per_frame55=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame56=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame57=
shape_0_per_frame58=my_x = zoom*sin(w)*p;
shape_0_per_frame59=my_y = zoom*cos(w)*p;
shape_0_per_frame60=
shape_0_per_frame61=x = 0.3 + my_x/q6;
shape_0_per_frame62=y = 0.5 + my_y/q5;
shape_0_per_frame63=
shape_0_per_frame64=////////
shape_0_per_frame65=
shape_0_per_frame66=rad=rad/d;
shape_0_per_frame67=rad=if(above(rad,.5), .5,rad);
shape_0_per_frame68=
shape_0_per_frame69=r=.7+.2*sin(11*sample+30*q4);
shape_0_per_frame70=g=.2+.1*sin(12*sample+30*q4);
shape_0_per_frame71=b=.1+.1*sin(22*sample+30*q4);
shape_0_per_frame72=
shape_0_per_frame73=r2=.01*r;
shape_0_per_frame74=g2=.01*g;
shape_0_per_frame75=b2=.01*b;
shape_0_per_frame76=
shape_0_per_frame77=a=15*a/d;
shape_0_per_frame78=a2=.5*a;
shape_0_per_frame79=
shape_0_per_frame80=
shapecode_1_enabled=1
shapecode_1_sides=40
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=993
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.95258
shapecode_1_ang=0.37699
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=
shape_1_per_frame2=sample=1-instance/num_inst;
shape_1_per_frame3=
shape_1_per_frame4=/////// POV
shape_1_per_frame5=
shape_1_per_frame6=r1=50;
shape_1_per_frame7=q10=-3+6*q20;
shape_1_per_frame8=q11=300*q20;
shape_1_per_frame9=
shape_1_per_frame10=px = (r1+q10*cos(1*q11))*cos(q11);
shape_1_per_frame11=py = (r1+q10*cos(1*q11))*sin(q11);
shape_1_per_frame12=pz = q10*sin(1*q11);
shape_1_per_frame13=
shape_1_per_frame14=/////// surface  (Moebius strip)
shape_1_per_frame15=
shape_1_per_frame16=r1=50;
shape_1_per_frame17=q10=-10+20*sample;
shape_1_per_frame18=q11=300*sample;
shape_1_per_frame19=
shape_1_per_frame20=sx = (r1+q10*cos(1*q11))*cos(q11);
shape_1_per_frame21=sy = (r1+q10*cos(1*q11))*sin(q11);
shape_1_per_frame22=sz = q10*sin(1*q11);
shape_1_per_frame23=
shape_1_per_frame24=my_x = sx+ px;
shape_1_per_frame25=my_y = sy+ py;
shape_1_per_frame26=my_z = -sz+ pz;
shape_1_per_frame27=
shape_1_per_frame28=my_x=my_x+q1;
shape_1_per_frame29=my_y=my_y+q2;
shape_1_per_frame30=my_z=my_z+q3;
shape_1_per_frame31=
shape_1_per_frame32=/////// rotations
shape_1_per_frame33=
shape_1_per_frame34=d = 0; 
shape_1_per_frame35=zoom = 1;
shape_1_per_frame36=
shape_1_per_frame37=w1 = .2+atan2(py,px);
shape_1_per_frame38=w2 = 3.14;
shape_1_per_frame39=w3 = 1.57;
shape_1_per_frame40=
shape_1_per_frame41=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_1_per_frame42=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_1_per_frame43=z1 = my_z;
shape_1_per_frame44=
shape_1_per_frame45=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_1_per_frame46=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_1_per_frame47=y2 = y1;
shape_1_per_frame48=
shape_1_per_frame49=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_1_per_frame50=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_1_per_frame51=x3 = x2;
shape_1_per_frame52=
shape_1_per_frame53=l = sqrt(x3*x3 + y3*y3);
shape_1_per_frame54=w = atan2(x3,y3);
shape_1_per_frame55=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_1_per_frame56=p = tan(asin(1) + atan2(d+z3,l));
shape_1_per_frame57=
shape_1_per_frame58=my_x = zoom*sin(w)*p;
shape_1_per_frame59=my_y = zoom*cos(w)*p;
shape_1_per_frame60=
shape_1_per_frame61=x = 0.3 + my_x/q6;
shape_1_per_frame62=y = 0.5 + my_y/q5;
shape_1_per_frame63=
shape_1_per_frame64=////////
shape_1_per_frame65=
shape_1_per_frame66=rad=rad/d;
shape_1_per_frame67=rad=if(above(rad,.1), .1,rad);
shape_1_per_frame68=
shape_1_per_frame69=r=.6+.2*sin(20*sample*30*q4);
shape_1_per_frame70=g=.2+.1*sin(22*sample+30*q4);
shape_1_per_frame71=b=.1+.1*sin(24*sample+30*q4);
shape_1_per_frame72=
shape_1_per_frame73=r2=.5*r;
shape_1_per_frame74=g2=.5*g;
shape_1_per_frame75=b2=.5*b;
shape_1_per_frame76=
shape_1_per_frame77=a=11*a/d;
shape_1_per_frame78=a=if(above(d,50),.1*a,a);
shape_1_per_frame79=a2=.4*a;
shape_1_per_frame80=
shape_1_per_frame81=
shapecode_2_enabled=1
shapecode_2_sides=10
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=182
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02217
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=
shape_2_per_frame2=sample=1-instance/num_inst;
shape_2_per_frame3=
shape_2_per_frame4=
shape_2_per_frame5=/////// POV
shape_2_per_frame6=
shape_2_per_frame7=r1=50;
shape_2_per_frame8=q10=-3+6*q20;
shape_2_per_frame9=q11=300*q20;
shape_2_per_frame10=
shape_2_per_frame11=px = (r1+q10*cos(.5*q11))*cos(q11);
shape_2_per_frame12=py = (r1+q10*cos(.5*q11))*sin(q11);
shape_2_per_frame13=pz = q10*sin(.5*q11);
shape_2_per_frame14=
shape_2_per_frame15=
shape_2_per_frame16=/////// surface (sphere)
shape_2_per_frame17=
shape_2_per_frame18=turns = 50;
shape_2_per_frame19=size = 24;
shape_2_per_frame20=speed =.9;
shape_2_per_frame21=sx = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_2_per_frame22=sy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_2_per_frame23=sz = 0;
shape_2_per_frame24=
shape_2_per_frame25=my_x = sx+ px;
shape_2_per_frame26=my_y = sy+ py;
shape_2_per_frame27=my_z = -sz+ pz;
shape_2_per_frame28=
shape_2_per_frame29=my_x=my_x+q1;
shape_2_per_frame30=my_y=my_y+q2;
shape_2_per_frame31=my_z=my_z+q3;
shape_2_per_frame32=
shape_2_per_frame33=/////// rotations
shape_2_per_frame34=
shape_2_per_frame35=d = 0; 
shape_2_per_frame36=zoom = 1;
shape_2_per_frame37=
shape_2_per_frame38=w1 = .2+atan2(py,px);
shape_2_per_frame39=w2 = 3.14;
shape_2_per_frame40=w3 = 1.57;
shape_2_per_frame41=
shape_2_per_frame42=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_2_per_frame43=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_2_per_frame44=z1 = my_z;
shape_2_per_frame45=
shape_2_per_frame46=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_2_per_frame47=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_2_per_frame48=y2 = y1;
shape_2_per_frame49=
shape_2_per_frame50=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_2_per_frame51=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_2_per_frame52=x3 = x2;
shape_2_per_frame53=
shape_2_per_frame54=l = sqrt(x3*x3 + y3*y3);
shape_2_per_frame55=w = atan2(x3,y3);
shape_2_per_frame56=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_2_per_frame57=p = tan(asin(1) + atan2(d+z3,l));
shape_2_per_frame58=
shape_2_per_frame59=my_x = zoom*sin(w)*p;
shape_2_per_frame60=my_y = zoom*cos(w)*p;
shape_2_per_frame61=
shape_2_per_frame62=x = 0.3 + my_x/q6;
shape_2_per_frame63=y = 0.5 + my_y/q5;
shape_2_per_frame64=
shape_2_per_frame65=////////
shape_2_per_frame66=
shape_2_per_frame67=r=.7+.2*sin(11*sample+30*q4);
shape_2_per_frame68=g=.2+.1*sin(12*sample+30*q4);
shape_2_per_frame69=b=.1+.1*sin(22*sample+30*q4);
shape_2_per_frame70=
shape_2_per_frame71=r2=.01*r;
shape_2_per_frame72=g2=.01*g;
shape_2_per_frame73=b2=.01*b;
shape_2_per_frame74=
shape_2_per_frame75=a=8*a/d;
shape_2_per_frame76=a2=.8*a;
shape_2_per_frame77=
shape_2_per_frame78=
shapecode_3_enabled=1
shapecode_3_sides=50
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=6
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=3.12701
shapecode_3_ang=0.31416
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=3.36668
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=
shape_3_per_frame2=sample=1-instance/num_inst;
shape_3_per_frame3=
shape_3_per_frame4=
shape_3_per_frame5=/////// POV
shape_3_per_frame6=
shape_3_per_frame7=r1=50;
shape_3_per_frame8=q10=-3+6*q20;
shape_3_per_frame9=q11=300*q20;
shape_3_per_frame10=
shape_3_per_frame11=px = (r1+q10*cos(.5*q11))*cos(q11);
shape_3_per_frame12=py = (r1+q10*cos(.5*q11))*sin(q11);
shape_3_per_frame13=pz = q10*sin(.5*q11);
shape_3_per_frame14=
shape_3_per_frame15=
shape_3_per_frame16=/////// surface  (ellipse)
shape_3_per_frame17=
shape_3_per_frame18=
shape_3_per_frame19=q11=6.28*sample+q2;
shape_3_per_frame20=
shape_3_per_frame21=sx = 60*cos(q11);
shape_3_per_frame22=sy = 50*sin(q11);
shape_3_per_frame23=sz = sx;
shape_3_per_frame24=
shape_3_per_frame25=my_x = sx+ px;
shape_3_per_frame26=my_y = sy+ py;
shape_3_per_frame27=my_z = -sz+ pz;
shape_3_per_frame28=
shape_3_per_frame29=my_x=my_x+q1;
shape_3_per_frame30=my_y=my_y+q2;
shape_3_per_frame31=my_z=my_z+q3;
shape_3_per_frame32=
shape_3_per_frame33=/////// rotations
shape_3_per_frame34=
shape_3_per_frame35=d = 0; 
shape_3_per_frame36=zoom = 1;
shape_3_per_frame37=
shape_3_per_frame38=w1 = .2+atan2(py,px);
shape_3_per_frame39=w2 = 3.14;
shape_3_per_frame40=w3 = 1.57;
shape_3_per_frame41=
shape_3_per_frame42=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_3_per_frame43=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_3_per_frame44=z1 = my_z;
shape_3_per_frame45=
shape_3_per_frame46=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_3_per_frame47=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_3_per_frame48=y2 = y1;
shape_3_per_frame49=
shape_3_per_frame50=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_3_per_frame51=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_3_per_frame52=x3 = x2;
shape_3_per_frame53=
shape_3_per_frame54=l = sqrt(x3*x3 + y3*y3);
shape_3_per_frame55=w = atan2(x3,y3);
shape_3_per_frame56=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_3_per_frame57=p = tan(asin(1) + atan2(d+z3,l));
shape_3_per_frame58=
shape_3_per_frame59=my_x = zoom*sin(w)*p;
shape_3_per_frame60=my_y = zoom*cos(w)*p;
shape_3_per_frame61=
shape_3_per_frame62=x = 0.3 + my_x/q6;
shape_3_per_frame63=y = 0.5 + my_y/q5;
shape_3_per_frame64=
shape_3_per_frame65=
shape_3_per_frame66=////////
shape_3_per_frame67=
shape_3_per_frame68=rad=2*rad+rad*sin(44*sample);
shape_3_per_frame69=rad=rad/d;
shape_3_per_frame70=rad=if(above(rad,.4), .4,rad);
shape_3_per_frame71=
shape_3_per_frame72=r=.8+.2*sin(11*sample);
shape_3_per_frame73=g=.3+.1*sin(12*sample);
shape_3_per_frame74=b=.2+.1*sin(22*sample);
shape_3_per_frame75=
shape_3_per_frame76=r2=.1*r;
shape_3_per_frame77=g2=.1*g;
shape_3_per_frame78=b2=.1*b;
shape_3_per_frame79=
shape_3_per_frame80=a=20*a/(d);
shape_3_per_frame81=a2=.2*a;
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=decay=0.98;
per_frame_2=zoom=-.999;
per_frame_3=//rot=sin(time/10)*0.3;
per_frame_4=ib_b=((sin(time/10))+0.5*0.5)+0.3;
per_frame_5=ib_g=((cos(time/7)*0.3)+0.5*0.5)+0.3;
per_frame_6=ib_r=((sin(time/8)*0.3)+0.5*0.5)+0.3;
per_frame_7=ob_b=(sin((time/8)+0.9)+0.5*0.5)+0.5;
per_frame_8=ob_g=sin((time/10)+0.1);
per_frame_9=ob_r=(cos(time/7))+0.3;
per_frame_10=
per_frame_11=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_12=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_13=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_14=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_15=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_16=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_17=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_18=vvb = min(1,max(0,vvb));
per_frame_19=vvm = min(1,max(0,vvm));
per_frame_20=vvt = min(1,max(0,vvt));
per_frame_21=q1   = (vvb+vvm+vvt)*10;
per_frame_22=q2   = (vvb+vvm+vvt)*10;
per_frame_23=q3   = (vvb+vvm+vvt)*10;
per_frame_24=q4   = (vvb+vvm+vvt)*10;
per_frame_25=q5   = (vvb+vvm+vvt)*10;
per_frame_26=q6   = (vvb+vvm+vvt)*10;
per_frame_27=q7   = (vvb+vvm+vvt)*10;
per_frame_28=q8   = (vvb+vvm+vvt)*10;
per_frame_29=q9   = (vvb+vvm+vvt)*10;
per_frame_30=q10  = (vvb+vvm+vvt)*10;
per_frame_31=q11  = (vvb+vvm+vvt)*10;
per_frame_32=q12  = (vvb+vvm+vvt)*10;
per_frame_33=q13  = (vvb+vvm+vvt)*10;
per_frame_34=q14  = (vvb+vvm+vvt)*10;
per_frame_35=q15  = (vvb+vvm+vvt)*10;
per_frame_36=q16  = (vvb+vvm+vvt)*10;
per_frame_37=q17  = (vvb+vvm+vvt)*10;
per_frame_38=q18  = (vvb+vvm+vvt)*10;
per_frame_39=q19  = (vvb+vvm+vvt)*10;
per_frame_40=q20  = (vvb+vvm+vvt)*10;
per_frame_41=q21  = (vvb+vvm+vvt)*10;
per_frame_42=q22  = (vvb+vvm+vvt)*10;
per_frame_43=q23  = (vvb+vvm+vvt)*10;
per_frame_44=q24  = (vvb+vvm+vvt)*10;
per_frame_45=q25  = (vvb+vvm+vvt)*10;
per_frame_46=q26  = (vvb+vvm+vvt)*10;
per_frame_47=q27  = (vvb+vvm+vvt)*10;
per_frame_48=q28  = (vvb+vvm+vvt)*10;
per_frame_49=q29  = (vvb+vvm+vvt)*10;
per_frame_50=q30  = (vvb+vvm+vvt)*10;
per_frame_51=q31  = (vvb+vvm+vvt)*10;
per_frame_52=q32  = (vvb+vvm+vvt)*10;
per_frame_53=
per_pixel_1=xtc=sin(time);
per_pixel_2=
per_pixel_3=speed=40-above(bass,0.9)*15;
per_pixel_4=speed=speed+xtc;
per_pixel_5=
per_pixel_6=
per_pixel_7=acid=x*sin(time/10);
per_pixel_8=morphine=y*cos(time/10);
per_pixel_9=
per_pixel_10=dmt=above((treb*treb*treb/3),2.5)*.01;
per_pixel_11=saliva=above(treb,0.9)*.01;
per_pixel_12=
per_pixel_13=cx=dmt*(rad)*0.1;
per_pixel_14=cy=saliva*(rad)*0.1;
per_pixel_15=
per_pixel_16=dx=sin(y*speed)*0.01;
per_pixel_17=dy=cos(x*speed)*0.01;
per_pixel_18=
per_pixel_19=zoom=cos(x*(sin(time/10)*0.1))+(y*(cos(time/10)*0.1));
per_pixel_20=
per_pixel_21=warp=-2*(((sin(time/2)*0.5+0.5)*2)*x)+(((cos(time/2)*0.5+0.5)*2)*y)
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).x*0.5;
warp_5=`
warp_6=`
warp_7=`float2 d = texsize.zw*4;
warp_8=`float2 uv_z = (uv_orig-0.5)*0.996 + 0.5; // a small dose of zoom-in
warp_9=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_10=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_11=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_12=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_13=`             tex2d(sampler_fc_main,uv_z).z);
warp_14=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_15=`
warp_16=`
warp_17=`float2 uv_y = lerp(uv,uv_orig,0.9996); // pushing the glassy stuff a little bit
warp_18=`ret.y =max(tex2d(sampler_fc_main,uv_y).y ,tex2d(sampler_fc_main,uv_orig).z)-0.008; // feeded by the green channel and fade-out
warp_19=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`
comp_89=`float2 uv1 = uv;
comp_90=`float2 d = texsize.zw*3;
comp_91=`float3 dx = GetBlur1(uv1 + float2(1,0)*d) - GetBlur1(uv1 - float2(1,0)*d);
comp_92=`float3 dy = GetBlur1(uv1 + float2(0,1)*d) - GetBlur1(uv1 - float2(0,1)*d);
comp_93=`uv1 = uv+float2(dx.x,dy.x)*texsize.zw*32;
comp_94=`     ret = GetPixel(uv1).x*float3(1,0,0)*0.5;
comp_95=`
comp_96=`ret.x += (+dx.x - dy.x)*0.4;
comp_97=`ret.x = pow(ret.x,0.8)*1.2;
comp_98=`
comp_99=`ret = lerp(ret,float3(1,1,1),GetPixel(uv1).z);
comp_100=`
comp_101=`//ret = lerp(ret,1-GetPixel(uv)*1.5,stars);
comp_102=`}
comp_103=`
comp_104=`

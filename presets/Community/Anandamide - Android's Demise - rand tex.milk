MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=2.000
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=1.000
b1n=0.400
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_per_frame1=t1 = q1 * 2.0;
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=phs=-sample * 0.2;
wave_0_per_point3=tm=q5 + phs;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=sin(n*9.0)*0.1;
wave_0_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_0_per_point10=zp=cos(n*9.0)*0.1;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=yq=yp;
wave_0_per_point19=zq=zp;
wave_0_per_point20=
wave_0_per_point21=ang=tm*8;
wave_0_per_point22=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point23=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point24=zp=zq;
wave_0_per_point25=
wave_0_per_point26=//forearm movement;
wave_0_per_point27=zp=zp-0.3;
wave_0_per_point28=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_0_per_point29=xq=xp;
wave_0_per_point30=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point31=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point32=
wave_0_per_point33=//upper arm twist
wave_0_per_point34=ang=-1.0 + cos(tm*3 + 0.5);
wave_0_per_point35=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point36=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point37=zp=zq;
wave_0_per_point38=
wave_0_per_point39=//upper arm outward;
wave_0_per_point40=zp=zp-0.35;
wave_0_per_point41=ang=cos(tm*2)*0.75 - 1.05;
wave_0_per_point42=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point43=yq=yp;
wave_0_per_point44=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point45=
wave_0_per_point46=//upper arm up down;
wave_0_per_point47=ang=cos(tm)*0.5 - 0.5;
wave_0_per_point48=xp=xq;
wave_0_per_point49=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point50=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point51=
wave_0_per_point52=//xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=
wave_0_per_point55=//project into screenspace and draw on screen
wave_0_per_point56=zp=zp+2;
wave_0_per_point57=xs=xp/zp;
wave_0_per_point58=ys=yp/zp;
wave_0_per_point59=
wave_0_per_point60=x=xs*1.2+0.6;
wave_0_per_point61=y=ys*1.5+0.55;
wave_0_per_point62=
wave_0_per_point63=
wave_0_per_point64=a=(1-sample)*flip;
wave_0_per_point65=
wave_0_per_point66=p2 = phs*0.5;
wave_0_per_point67=//r = tan( t1 + p2 );
wave_0_per_point68=//g = tan( t1 + p2 + 2.1 );
wave_0_per_point69=//b = tan( t1 + p2 + 4.2 );
wave_0_per_point70=r = sin( t1 + p2 ) * 0.5 + 0.5;
wave_0_per_point71=g = sin( t1 + p2 + 2.1 ) * 0.5 + 0.5;
wave_0_per_point72=b = sin( t1 + p2 + 4.2 ) * 0.5 + 0.5;
wave_0_per_point73=
wave_0_per_point74=//a = a * q4;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.100
wave_1_per_frame1=t1 = q1 * 2.0;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.1;
wave_1_per_point3=tm=q5 + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=sc = sin( (n+time*0.02) * 50.0 );
wave_1_per_point9=
wave_1_per_point10=xp=sin(n*15.0+time)*0.05 * sc;
wave_1_per_point11=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_1_per_point12=zp=cos(n*15.0+time)*0.05 * sc;
wave_1_per_point13=
wave_1_per_point14=//wrist movement;
wave_1_per_point15=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point16=
wave_1_per_point17=xq=xp;
wave_1_per_point18=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point19=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point20=yq=yp;
wave_1_per_point21=zq=zp;
wave_1_per_point22=
wave_1_per_point23=ang=tm*8;
wave_1_per_point24=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point25=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point26=zp=zq;
wave_1_per_point27=
wave_1_per_point28=//forearm movement;
wave_1_per_point29=zp=zp-0.3;
wave_1_per_point30=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point31=xq=xp;
wave_1_per_point32=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point33=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point34=
wave_1_per_point35=//upper arm twist
wave_1_per_point36=ang=-1.0 + cos(tm*3 + 0.5);
wave_1_per_point37=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point38=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point39=zp=zq;
wave_1_per_point40=
wave_1_per_point41=//upper arm outward;
wave_1_per_point42=zp=zp-0.35;
wave_1_per_point43=ang=cos(tm*2)*0.75 - 1.05;
wave_1_per_point44=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point45=yq=yp;
wave_1_per_point46=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point47=
wave_1_per_point48=//upper arm up down;
wave_1_per_point49=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point50=xp=xq;
wave_1_per_point51=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point52=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point53=
wave_1_per_point54=//xp=xq;yp=yq;zp=zq;
wave_1_per_point55=
wave_1_per_point56=
wave_1_per_point57=//project into screenspace and draw on screen
wave_1_per_point58=zp=zp+2;
wave_1_per_point59=xs=xp/zp;
wave_1_per_point60=ys=yp/zp;
wave_1_per_point61=
wave_1_per_point62=x=xs*1.2+0.6;
wave_1_per_point63=y=ys*1.5+0.55;
wave_1_per_point64=
wave_1_per_point65=
wave_1_per_point66=a=(1-sample)*flip;
wave_1_per_point67=
wave_1_per_point68=p2 = phs*0.5;
wave_1_per_point69=//r = tan( t1 + p2 );
wave_1_per_point70=//g = tan( t1 + p2 + 2.1 );
wave_1_per_point71=//b = tan( t1 + p2 + 4.2 );
wave_1_per_point72=r = sin( t1 + p2 ) * 0.5 + 0.5;
wave_1_per_point73=g = sin( t1 + p2 + 2.1 ) * 0.5 + 0.5;
wave_1_per_point74=b = sin( t1 + p2 + 4.2 ) * 0.5 + 0.5;
wave_1_per_point75=
wave_1_per_point76=//a = a * q4;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.800
wavecode_3_b=0.000
wavecode_3_a=0.150
wave_3_init1=t1 = 0;
wave_3_per_frame1=t1 = 3.1415 / 8 - 0.020;
wave_3_per_frame2=
wave_3_per_frame3=t2 = time - int(time);
wave_3_per_frame4=t2 = t2*(bass*5);
wave_3_per_point1=t1 = t1 + 0.25;
wave_3_per_point2=
wave_3_per_point3=n = sample*6.283;
wave_3_per_point4=
wave_3_per_point5=xp = sin(t1*6.283)-(cos(time)*tan(time));
wave_3_per_point6=yp = cos(t1*6.283)+(sin(time)*tan(time));
wave_3_per_point7=zp =6 + sample*400 - t2;
wave_3_per_point8=
wave_3_per_point9=x = xp/zp + 0.68;
wave_3_per_point10=y = yp/zp / 1.333 + 0.29;
shapecode_0_enabled=0
shapecode_0_sides=6
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.600
shapecode_0_y=0.800
shapecode_0_rad=1.21528
shapecode_0_ang=0.94248
shapecode_0_tex_ang=4.08407
shapecode_0_tex_zoom=0.86995
shapecode_0_r=0.600
shapecode_0_g=0.800
shapecode_0_b=0.900
shapecode_0_a=1.000
shapecode_0_r2=0.700
shapecode_0_g2=0.300
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = q11;
shape_0_per_frame2=y = q12;
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.120
shapecode_1_y=0.000
shapecode_1_rad=2.01859
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.76991
shapecode_1_tex_zoom=0.54499
shapecode_1_r=1.000
shapecode_1_g=0.500
shapecode_1_b=0.800
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang = time;
shape_1_per_frame2=x=cos(time)*0.5+0.5;
shape_1_per_frame3=y=sin(time)*0.5+0.5;
shapecode_2_enabled=1
shapecode_2_sides=48
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.33667
shapecode_2_ang=3.14159
shapecode_2_tex_ang=3.14159
shapecode_2_tex_zoom=0.95146
shapecode_2_r=1.000
shapecode_2_g=0.200
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.200
shapecode_2_g2=0.000
shapecode_2_b2=0.300
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=//a=min(cos(time*0.5)*0.5+0.5,0.2);
shape_2_per_frame2=//a2=min(cos(time*0.5)*0.5+0.5,0.2);
shape_2_per_frame3=//rad=cos(time)*0.5+0.5;
shape_2_per_frame4=rad=q2-.7;
shape_2_per_frame5=
shape_2_per_frame6=//r = q10; 
shape_2_per_frame7=//g = q11;
shape_2_per_frame8=//b = q12;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=1.79142
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=5.83011
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=fr = 0;
per_frame_1=zoom = 1;
per_frame_2=warp = 0;
per_frame_3=rot = 0;
per_frame_4=sx = 1;
per_frame_5=sy = 1;
per_frame_6=dx = 0;
per_frame_7=dy = 0;
per_frame_8=
per_frame_9=
per_frame_10=vol = (bass+mid+treb)*0.25;
per_frame_11=vol = vol * vol;
per_frame_12=
per_frame_13=voltime = voltime + vol * 0.1;
per_frame_14=
per_frame_15=q1 = sin(time+2.1)*3.0 + 5.0;
per_frame_16=
per_frame_17=q2 = (tan(time)/(sin(time*0.333333333)*5.0));
per_frame_18=//q2 = min( q2, 3.0 );
per_frame_19=//q2 = max( q2, -3.0 );
per_frame_20=
per_frame_21=monitor = q1;
per_frame_22=
per_frame_23=
per_frame_24=
per_frame_25=
per_frame_26=q3=cos(time)*0.5+0.5;
per_frame_27=q4=sin(time)*-0.5+0.5;
per_frame_28=
per_frame_29=
per_frame_30=//city horiz scrolling
per_frame_31=scroll = scroll + (1.0/q2) * 0.1;
per_frame_32=q5 = scroll * -0.05;
per_frame_33=
per_frame_34=monitor = q2;
per_frame_35=
per_frame_36=q6 = sin( time * 0.37 ) * 0.5;
per_frame_37=
per_frame_38=q7 = sin(time); //multiplies by planet in composite shader
per_frame_39=
per_frame_40=//rotation vars for planet
per_frame_41=planetang = sin( voltime ) * 0.5;
per_frame_42=q9 = sin( planetang );
per_frame_43=q8 = cos( planetang );
per_frame_44=
per_frame_45=
per_frame_46=//primary light colour
per_frame_47=tm = 7.2;
per_frame_48=q10 = sin( tm ) * 0.45 + 0.55;
per_frame_49=q11 = sin( tm + 2.1 ) * 0.45 + 0.55;
per_frame_50=q12 = sin( tm + 4.2 ) * 0.45 + 0.55;
per_pixel_1=dx = sin( y * 12 + q3 ) * 0.0002;
per_pixel_2=dy = sin( x * 16 + q3 ) * 0.0002;
per_pixel_3=
per_pixel_4=
warp_1=`
warp_2=`static const float2 offsets[10] = {
warp_3=`sin(0.0/10.0 * 6.283), cos(0.0/10.0 * 6.283),
warp_4=`sin(1.0/10.0 * 6.283), cos(1.0/10.0 * 6.283),
warp_5=`sin(2.0/10.0 * 6.283), cos(2.0/10.0 * 6.283),
warp_6=`sin(3.0/10.0 * 6.283), cos(3.0/10.0 * 6.283),
warp_7=`sin(4.0/10.0 * 6.283), cos(4.0/10.0 * 6.283),
warp_8=`sin(5.0/10.0 * 6.283), cos(5.0/10.0 * 6.283),
warp_9=`sin(6.0/10.0 * 6.283), cos(6.0/10.0 * 6.283),
warp_10=`sin(7.0/10.0 * 6.283), cos(7.0/10.0 * 6.283),
warp_11=`sin(8.0/10.0 * 6.283), cos(8.0/10.0 * 6.283),
warp_12=`sin(9.0/10.0 * 6.283), cos(9.0/10.0 * 6.283)
warp_13=`};
warp_14=`
warp_15=`sampler sampler_rand00;
warp_16=`
warp_17=`
warp_18=`
warp_19=`shader_body
warp_20=`{
warp_21=`
warp_22=`
warp_23=`float3 main = tex2D( sampler_main, uv_orig );
warp_24=`
warp_25=`
warp_26=`float3 uv_sphere;
warp_27=`uv_sphere.xy = (uv_orig - 0.5)*q1.xx*aspect;
warp_28=`uv_sphere.z = sqrt( 1.0 - dot( uv_sphere.xy, uv_sphere.xy ) );
warp_29=`
warp_30=`float3 normal = uv_sphere;
warp_31=`
warp_32=`uv_sphere.xy = (uv_orig - 0.5)*1.5/aspect;
warp_33=`uv_sphere.xy /= uv_sphere.z;
warp_34=`
warp_35=`
warp_36=`//uv_sphere.x += frac( time * 0.015 );
warp_37=`uv_sphere.y += 0.7;
warp_38=`
warp_39=`uv_sphere.xy = frac( uv_sphere.xy * 0.5 / q2 + q5 ) * 2.0;
warp_40=`uv_sphere.xy = 1.0 - abs( uv_sphere.xy - 1.0 );
warp_41=`uv_sphere.xy = saturate(uv_sphere.xy*0.98+.01); 
warp_42=`
warp_43=`float3 sphere = tex2Dbias( sampler_rand00, float4(uv_sphere.xy,0.0,-0.5) );
warp_44=`
warp_45=`ret = sphere;
warp_46=`
warp_47=`
warp_48=`float3 lightvec;
warp_49=`lightvec.xy = (uv_orig - float2(q3,q4)) * aspect.xy;
warp_50=`lightvec.z = 0.5;
warp_51=`lightvec = normalize( lightvec );
warp_52=`
warp_53=`normal.xy *= -1.0;
warp_54=`float3 diffuse = dot( lightvec, normal );
warp_55=`diffuse = saturate( diffuse );
warp_56=`diffuse = pow( diffuse, float3( 1.0, 3.0, 5.0 ) );
warp_57=`
warp_58=`//ret = diffuse;
warp_59=`
warp_60=`
warp_61=`}
comp_1=`static const float3 lightCol = float3( 1.0, 0.3, 0.1 ) * 2.0;
comp_2=`static const float3 lightCol2 = float3( 1.0, 0.7, 0.5 ) * 1.0;
comp_3=`
comp_4=`sampler sampler_rand00;
comp_5=`
comp_6=`shader_body
comp_7=`{
comp_8=`float4 dbg=0.0;
comp_9=`
comp_10=`//float3 lightCol = { q10, q11, q12 };
comp_11=`
comp_12=`float3 main = tex2D( sampler_main, uv );
comp_13=`main = -log( 1.0 - main* 0.8 );
comp_14=`main = min( main, 3.0 );
comp_15=`
comp_16=`
comp_17=`float2 planetuvs = (uv-0.5)*aspect*1.0; 
comp_18=`planetuvs = float2( planetuvs.x * q8 - planetuvs.y * q9, planetuvs.x * q9 + planetuvs.y * q8 );
comp_19=`planetuvs += 0.5;
comp_20=`float4 planet = tex2D( sampler_rand00, planetuvs );
comp_21=`float4 planetOrig = planet;
comp_22=`planet *= (rad*q7);
comp_23=`
comp_24=`
comp_25=`
comp_26=`float3 uv_sphere;
comp_27=`uv_sphere.xy = (uv - 0.5)*q1.xx*aspect;
comp_28=`uv_sphere.z = sqrt( 1.0 - dot( uv_sphere.xy, uv_sphere.xy ) );
comp_29=`
comp_30=`float3 normal = uv_sphere;
comp_31=`
comp_32=`
comp_33=`
comp_34=`
comp_35=`//lightvectors
comp_36=`float3 lightvec;
comp_37=`lightvec.xy = (uv_orig - float2(q3,q4)) * aspect.xy;
comp_38=`float distanceToLight = length( lightvec.xy );
comp_39=`lightvec.z = 0.15;
comp_40=`lightvec = normalize( lightvec );
comp_41=`
comp_42=`float3 lightvec2 = normalize( float3( q6, 0.3, 0.2 ) );
comp_43=`
comp_44=`
comp_45=`normal.xy *= -1.0;
comp_46=`float normalLength = length( normal.xy );
comp_47=`normal /= normalLength;
comp_48=`
comp_49=`float3 redlight = dot( lightvec, normal );
comp_50=`redlight = saturate( redlight );
comp_51=`redlight *= normalLength > 1.0 ? saturate( (normalLength - 1.0)*0.5 ) : saturate( normal.z * 2.0 );
comp_52=`redlight *= lightCol;
comp_53=`
comp_54=`
comp_55=`//light2----
comp_56=`float3 sunamt = saturate( dot( lightvec2, normal ) );
comp_57=`
comp_58=`//ambientlight--
comp_59=`float3 ambientlight = (normal.y*0.5+0.5) * float3(0.4,0.7,1.0)*0.5;
comp_60=`
comp_61=`//diffuse
comp_62=`float3 diffuse = lerp( ambientlight, lightCol2, sunamt );
comp_63=`diffuse *= 0.6;
comp_64=`diffuse += redlight;
comp_65=`
comp_66=`
comp_67=`
comp_68=`//specular----------
comp_69=`float3 viewVec = float3( (uv-0.5)*q1*aspect, -0.5 );
comp_70=`viewVec = normalize( viewVec );
comp_71=`
comp_72=`float3 R = reflect( viewVec, normal );
comp_73=`R = normalize( R );
comp_74=`
comp_75=`//main ref
comp_76=`float3 specular = saturate( dot( R, lightvec ) );
comp_77=`
comp_78=`
comp_79=`//inside ref
comp_80=`float3 Ri = reflect( viewVec, normalize(normal * float3(1.0,0.5,1.0)) );
comp_81=`float3 speculari = saturate( dot( Ri, lightvec ) );
comp_82=`//specular = max( specular, speculari );
comp_83=`
comp_84=`specular = pow( specular, float3( 1.0, 1.0, 1.0 )*28.0 );
comp_85=`specular = saturate( specular * 2.0 - 1.0 );
comp_86=`specular *= lightCol * 2.0;
comp_87=`
comp_88=`//spec sunlight
comp_89=`float3 specsun = dot( R, lightvec2 ); 
comp_90=`specsun = pow( specsun, 38.0 );
comp_91=`specsun = saturate( specsun * 1.5 );
comp_92=`specsun *= lightCol2 * 2.0;
comp_93=`specular += specsun;
comp_94=`
comp_95=`ret = main * normal.z;
comp_96=`ret += diffuse;
comp_97=`
comp_98=`
comp_99=`ret += specular;
comp_100=`
comp_101=`
comp_102=`ret = lerp( ret, planet, planet.a )-bass_att*0.5;
comp_103=`ret += planetOrig * planetOrig * 0.5;
comp_104=`
comp_105=`float3 lightSource = saturate( 1.0 - distanceToLight*9.0 );
comp_106=`lightSource *= lightSource * lightCol * 4.0;
comp_107=`lightSource *= 3.0 - planetOrig.a * 2.0;
comp_108=`ret += lightSource;
comp_109=`
comp_110=`
comp_111=`
comp_112=`
comp_113=`ret = dbg.a == 1.0 ? dbg.rgb : ret; //debug output
comp_114=`
comp_115=`
comp_116=`//tonemapping
comp_117=`ret = 1.0 - exp( -ret * 1.0 );
comp_118=`
comp_119=`
comp_120=`//ret = planet;
comp_121=`
comp_122=`}

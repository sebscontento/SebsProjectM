MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=0.000
fGammaAdj=1.420
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.002
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.00390
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.19788
sx=0.99967
sy=0.99990
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.500
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.599
mv_dy=0.979
mv_l=0.500
mv_r=0.296
mv_g=0.490
mv_b=0.462
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.99999
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_per_frame1=t1 =1;
wave_0_per_frame2=
wave_0_per_frame3=vol = (bass+mid+treb)*0.25;
wave_0_per_frame4=vol = vol*vol;
wave_0_per_frame5=t2 = vol * 0.03;
wave_0_per_point1=vol = ( abs(value1) + abs(value2) ) * 5;
wave_0_per_point2=vol = vol*vol*vol*q3;
wave_0_per_point3=utime = utime + vol * 0.1;
wave_0_per_point4=
wave_0_per_point5=time = q4;//utime / 4450;
wave_0_per_point6=
wave_0_per_point7=n = sample * 6.283;
wave_0_per_point8=phs = sample/5;
wave_0_per_point9=tm=time +phs;
wave_0_per_point10=
wave_0_per_point11=t1 = -t1;
wave_0_per_point12=
wave_0_per_point13=sang = tm - int(tm);
wave_0_per_point14=sang = abs( sang - 0.5 ) * 4 - 1;
wave_0_per_point15=cang = (tm+0.25) - int(tm+0.25);
wave_0_per_point16=cang = abs( cang - 0.5 ) * 4 - 1;
wave_0_per_point17=xp = sang * (1+t1/24);
wave_0_per_point18=yp = cang * (1+t1/24);
wave_0_per_point19=zp = t1/24;
wave_0_per_point20=xq = xp;yq= yp;zq=zp;
wave_0_per_point21=
wave_0_per_point22=tm= (time+phs)*1.3;
wave_0_per_point23=sang = tm - int(tm);
wave_0_per_point24=sang = abs( sang - 0.5 ) * 4 - 1;
wave_0_per_point25=cang = (tm+0.25) - int(tm+0.25);
wave_0_per_point26=cang = abs( cang - 0.5 ) * 4 - 1;
wave_0_per_point27=xp = xq * cang - zq * sang;
wave_0_per_point28=yp = yq;
wave_0_per_point29=zp = xq * sang + zq * cang;
wave_0_per_point30=
wave_0_per_point31=tm= (time+phs)*2.3;
wave_0_per_point32=sang = tm - int(tm);
wave_0_per_point33=sang = abs( sang - 0.5 ) * 4 - 1;
wave_0_per_point34=cang = (tm+0.25) - int(tm+0.25);
wave_0_per_point35=cang = abs( cang - 0.5 ) * 4 - 1;
wave_0_per_point36=xp = xq;
wave_0_per_point37=yp = yq * cang - zq * sang;
wave_0_per_point38=zp = yq * sang + zq * cang;
wave_0_per_point39=
wave_0_per_point40=sc = 1+ sample/3;
wave_0_per_point41=xp = xp * sc;
wave_0_per_point42=yp = yp* sc;
wave_0_per_point43=zp= zp * sc;
wave_0_per_point44=
wave_0_per_point45=zp= zp + 1.3;
wave_0_per_point46=x = xp/zp * 0.5 + 0.5;
wave_0_per_point47=y = yp/zp * 0.5 + 0.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.99999
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 =1;
wave_1_per_point1=vol = ( abs(value1) + abs(value2) ) * 5;
wave_1_per_point2=vol = vol*vol*vol*q3;
wave_1_per_point3=utime = utime + vol * 0.1;
wave_1_per_point4=
wave_1_per_point5=time = q4;//utime / 4450;
wave_1_per_point6=
wave_1_per_point7=
wave_1_per_point8=n = sample * 6.283;
wave_1_per_point9=phs = sample/5;
wave_1_per_point10=tm=time +phs;
wave_1_per_point11=
wave_1_per_point12=t1 = -t1;
wave_1_per_point13=
wave_1_per_point14=sang = tm - int(tm);
wave_1_per_point15=sang = abs( sang - 0.5 ) * 4 - 1;
wave_1_per_point16=cang = (tm+0.25) - int(tm+0.25);
wave_1_per_point17=cang = abs( cang - 0.5 ) * 4 - 1;
wave_1_per_point18=xp = sang * (1+t1/24);
wave_1_per_point19=yp = cang * (1+t1/24);
wave_1_per_point20=zp = t1/24;
wave_1_per_point21=xq = xp;yq= yp;zq=zp;
wave_1_per_point22=
wave_1_per_point23=tm= (time+phs)*2;
wave_1_per_point24=sang = tm - int(tm);
wave_1_per_point25=sang = abs( sang - 0.5 ) * 4 - 1;
wave_1_per_point26=cang = (tm+0.25) - int(tm+0.25);
wave_1_per_point27=cang = abs( cang - 0.5 ) * 4 - 1;
wave_1_per_point28=xp = xq * cang - zq * sang;
wave_1_per_point29=yp = yq;
wave_1_per_point30=zp = xq * sang + zq * cang;
wave_1_per_point31=
wave_1_per_point32=tm= (time+phs)*2.3;
wave_1_per_point33=sang = tm - int(tm);
wave_1_per_point34=sang = abs( sang - 0.5 ) * 4 - 1;
wave_1_per_point35=cang = (tm+0.25) - int(tm+0.25);
wave_1_per_point36=cang = abs( cang - 0.5 ) * 4 - 1;
wave_1_per_point37=xp = xq;
wave_1_per_point38=yp = yq * cang - zq * sang;
wave_1_per_point39=zp = yq * sang + zq * cang;
wave_1_per_point40=
wave_1_per_point41=sc = 1+ sample/3;
wave_1_per_point42=xp = xp * sc;
wave_1_per_point43=yp = yp* sc;
wave_1_per_point44=zp= zp * sc;
wave_1_per_point45=
wave_1_per_point46=zp= zp + 1.3;
wave_1_per_point47=x = xp/zp * 0.5 +0.5;
wave_1_per_point48=y = yp/zp * 0.5 + 0.3;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.200
wave_2_init1=t1 = 0;
wave_2_per_frame1=t1 = 3.1415 / 8 - 0.020;
wave_2_per_frame2=
wave_2_per_frame3=t2 = time - int(time) + 0.02;
wave_2_per_frame4=t2 = t2*5;
wave_2_per_point1=t1 = t1 + 0.25;
wave_2_per_point2=
wave_2_per_point3=n = sample*6.283;
wave_2_per_point4=
wave_2_per_point5=xp = sin(t1*6.283);
wave_2_per_point6=yp = cos(t1*6.283);
wave_2_per_point7=zp = 8.5 + sample*400 - t2;
wave_2_per_point8=
wave_2_per_point9=x = xp/zp +0.5;
wave_2_per_point10=y = yp/zp * 1.333 + 0.5;
wave_2_per_point11=a=pow(1-sample,75)*0.3;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=0.99999
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 =1;
wave_3_per_point1=vol = ( abs(value1) + abs(value2) ) * 5;
wave_3_per_point2=vol = vol*vol*vol*q3;
wave_3_per_point3=utime = utime + vol * 0.1;
wave_3_per_point4=
wave_3_per_point5=time = q4;//utime / 4450;
wave_3_per_point6=
wave_3_per_point7=n = sample * 6.283;
wave_3_per_point8=phs = sample/10;
wave_3_per_point9=tm=time +phs;
wave_3_per_point10=
wave_3_per_point11=t1 = -t1;
wave_3_per_point12=
wave_3_per_point13=sang = tm - int(tm);
wave_3_per_point14=sang = abs( sang - 0.5 ) * 4 - 1;
wave_3_per_point15=cang = (tm+0.25) - int(tm+0.25);
wave_3_per_point16=cang = abs( cang - 0.5 ) * 4 - 1;
wave_3_per_point17=xp = sang * (1+t1/24);
wave_3_per_point18=yp = cang * (1+t1/24);
wave_3_per_point19=zp = t1/24;
wave_3_per_point20=xq = xp;yq= yp;zq=zp;
wave_3_per_point21=
wave_3_per_point22=tm= (time+phs)*1.3;
wave_3_per_point23=sang = tm - int(tm);
wave_3_per_point24=sang = abs( sang - 0.5 ) * 4 - 1;
wave_3_per_point25=cang = (tm+0.25) - int(tm+0.25);
wave_3_per_point26=cang = abs( cang - 0.5 ) * 4 - 1;
wave_3_per_point27=xp = xq * cang - zq * sang;
wave_3_per_point28=yp = yq;
wave_3_per_point29=zp = xq * sang + zq * cang;
wave_3_per_point30=
wave_3_per_point31=tm= (time+phs)*2.3;
wave_3_per_point32=sang = tm - int(tm);
wave_3_per_point33=sang = abs( sang - 0.5 ) * 4 - 1;
wave_3_per_point34=cang = (tm+0.25) - int(tm+0.25);
wave_3_per_point35=cang = abs( cang - 0.5 ) * 4 - 1;
wave_3_per_point36=xp = xq;
wave_3_per_point37=yp = yq * cang - zq * sang;
wave_3_per_point38=zp = yq * sang + zq * cang;
wave_3_per_point39=
wave_3_per_point40=sc = 1+ sample/3;
wave_3_per_point41=xp = xp * sc;
wave_3_per_point42=yp = yp* sc;
wave_3_per_point43=zp= zp * sc;
wave_3_per_point44=
wave_3_per_point45=zp= zp + 1.3;
wave_3_per_point46=x = xp/zp * 0.5 + 0.5;
wave_3_per_point47=y = yp/zp * 0.5 + 0.5;
shapecode_0_enabled=0
shapecode_0_sides=9
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.600
shapecode_0_y=0.970
shapecode_0_rad=2.25208
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.76879
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.030
shapecode_0_border_r=0.200
shapecode_0_border_g=0.200
shapecode_0_border_b=0.200
shapecode_0_border_a=0.000
shape_0_per_frame1=x=sin(time)*0.5+0.5;
shapecode_1_enabled=0
shapecode_1_sides=6
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.08922
shapecode_1_ang=0.25133
shapecode_1_tex_ang=6.28319
shapecode_1_tex_zoom=0.40839
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.210
shapecode_1_g2=0.210
shapecode_1_b2=0.210
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=1.000
shape_1_per_frame1=sw=frame%2;
shape_1_per_frame2=
shape_1_per_frame3=xx=.5;
shape_1_per_frame4=yy=sw*.325+(1-sw)*.8;
shape_1_per_frame5=rr=sw*1+(1-sw)*.5;
shape_1_per_frame6=
shape_1_per_frame7=var=sw*mid+(1-sw)*treb;
shape_1_per_frame8=
shape_1_per_frame9=//r=0;
shape_1_per_frame10=//g=r;
shape_1_per_frame11=//b=r;
shape_1_per_frame12=//r2=.15+.03*var;
shape_1_per_frame13=//g2=r2;
shape_1_per_frame14=//b2=r2;
shape_1_per_frame15=//r=sw*r+(1-sw)*(r+.1);
shape_1_per_frame16=//g=sw*g+(1-sw)*(g+.1);
shape_1_per_frame17=//b=sw*b+(1-sw)*(b+.1);
shape_1_per_frame18=
shape_1_per_frame19=//r2=sw*r2+(1-sw)*(r2+.1);
shape_1_per_frame20=//g2=sw*g2+(1-sw)*(g2+.1);
shape_1_per_frame21=//b2=sw*b2+(1-sw)*(b2+.1);
shape_1_per_frame22=
shape_1_per_frame23=//rad=.6667*rr*(.8+.04*var);
shape_1_per_frame24=
shape_1_per_frame25=//a=.6;
shape_1_per_frame26=//a2=a;
shape_1_per_frame27=border_a=a;
shape_1_per_frame28=
shape_1_per_frame29=
shape_1_per_frame30=x=xx;
shape_1_per_frame31=//y=yy;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.300
shapecode_2_y=0.500
shapecode_2_rad=1.79138
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.130
shapecode_2_g=0.130
shapecode_2_b=0.130
shapecode_2_a=1.000
shapecode_2_r2=0.050
shapecode_2_g2=0.050
shapecode_2_b2=0.050
shapecode_2_a2=1.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=1.000
shape_2_per_frame1=ssw=below(frame%4,2);
shape_2_per_frame2=sw=frame%2;
shape_2_per_frame3=
shape_2_per_frame4=xx=.5;
shape_2_per_frame5=yy=sw*.325+(1-sw)*.8;
shape_2_per_frame6=rr=sw*1+(1-sw)*.75;
shape_2_per_frame7=
shape_2_per_frame8=var=ssw*bass+(1-ssw)*treb;
shape_2_per_frame9=
shape_2_per_frame10=rad=.6667*rr*(.2+.02*var);
shape_2_per_frame11=rad=sw*rad+(1-sw)*rad*.85;
shape_2_per_frame12=r=.13+.02*var;
shape_2_per_frame13=g=r;
shape_2_per_frame14=b=r;
shape_2_per_frame15=
shape_2_per_frame16=r=(1-sw)*(r+.2)+sw*r;
shape_2_per_frame17=g=(1-sw)*(g+.2)+sw*g;
shape_2_per_frame18=b=(1-sw)*(b+.2)+sw*b;
shape_2_per_frame19=
shape_2_per_frame20=a=.6;
shape_2_per_frame21=a2=a;
shape_2_per_frame22=border_a=a;
shape_2_per_frame23=
shape_2_per_frame24=x=xx;
shape_2_per_frame25=y=yy;
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=3.97104
shapecode_3_ang=0.00000
shapecode_3_tex_ang=1.88496
shapecode_3_tex_zoom=0.04914
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.000
shapecode_3_r2=0.900
shapecode_3_g2=1.000
shapecode_3_b2=0.500
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=//tex_cx=sin(time)*0.5+0.5;
shape_3_per_frame2=//tex_cy=cos(time)*0.5+0.5;
shape_3_per_frame3=tex_ang=time;
per_frame_init_1=initialized = 1;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=ib_a = 1- initialized;
per_frame_29=ob_a = ib_a;
per_frame_30=
per_frame_31=initialized = 1;
per_frame_32=wave_a = 0;
per_frame_33=warp = 0;
per_frame_34=zoom = 1.0;
per_frame_35=
per_pixel_1=// have a nice warp effect? - rotate it like a shape!
per_pixel_2=
per_pixel_3=  angle = asin(1)*(0.5+sin(time*0.05));
per_pixel_4=
per_pixel_5=/////////////////////////////////////////////////////////
per_pixel_6=X1 = (x-0.5)*aspectx; // center
per_pixel_7=Y1 = (y-0.5)*aspecty;
per_pixel_8=x = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the original x/y coordinates
per_pixel_9=y = sin(-angle)*X1 +cos(-angle)*Y1;
per_pixel_10=/////////////////////////////////////////////////////////
per_pixel_11=// x = x + 0.5;
per_pixel_12=// y = y + 0.5;
per_pixel_13=// place your original code below (so far center is at 0,0)
per_pixel_14=
per_pixel_15=
per_pixel_16=  t = time*0.25;
per_pixel_17=  v = 0.0005;
per_pixel_18=  n = 11;
per_pixel_19=
per_pixel_20=  dx = v*sin(y*n+t); // these are the 2 lines for my mushroom motion
per_pixel_21=  dy = v*sin(x*n+t); // insert your per-vertex-code-to-rotate here (and shift back center to 0.5/0.5 if needed)
per_pixel_22=
per_pixel_23=
per_pixel_24=
per_pixel_25=/////////////////////////////////////////////////////////
per_pixel_26=dx1 = cos(angle)*dx - sin(angle)*dy; // and finally rotate the resulting vector for the rotated domain
per_pixel_27=dy1 = sin(angle)*dx + cos(angle)*dy;
per_pixel_28=dx = dx1*aspectx;
per_pixel_29=dy = dy1*aspecty;
per_pixel_30=/////////////////////////////////////////////////////////
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.3;        // maximum random pixel offset
warp_6=`float diffusion = 0.004;      // dither strength
warp_7=`float fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));
warp_11=`uv = lerp(uv_orig,uv, magic*8 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_14=`                      ((uv.xyy*q27
warp_15=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_16=`                      ).xyz*
warp_17=`                      float3(1,1,0)*0.05 + 
warp_18=`                      time*float3(0,0,1)*q29
warp_19=`                     );
warp_20=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_21=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_22=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_23=`
warp_24=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float4 mb=0;
comp_4=`mb+=.1*time;
comp_5=`
comp_6=`    float2 uv_echo = (uv - .5)*1*float2(-1,-1) + .5;
comp_7=`    ret = lerp( tex2D(sampler_fw_main, uv).xyz*5, 
comp_8=`                tex2D(sampler_fw_main, uv_echo).xyz*5, 
comp_9=`                .5 
comp_10=`              ); //video echo
comp_11=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_12=`                      ((uv_echo.xyy*q28
comp_13=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_14=`                      ).xyz*
comp_15=`                      float3(1,1,0)*0.05 + 
comp_16=`                      time*float3(0,0,1)*q31
comp_17=`                     );
comp_18=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_19=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_20=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_21=`    ret *= 1.0; //gamma
comp_22=`    ret = ret.x*(1-ret)+1; //solarize
comp_23=`ret.x*=ret.x/ret.y;
comp_24=`
comp_25=`
comp_26=`mb.x=tex2D(sampler_noise_hq, uv);
comp_27=`mb.y=GetBlur1(uv);
comp_28=`mb.z=GetBlur2(uv);
comp_29=`mb.w=GetBlur3(uv);
comp_30=`
comp_31=`float aret=(1-ret)*tex2D(sampler_noise_lq, mb);
comp_32=`ret=ret-aret*mb.w;
comp_33=`
comp_34=`
comp_35=`}

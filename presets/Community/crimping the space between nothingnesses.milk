MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.140
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.412
fWaveSmoothing=0.900
fWaveParam=-0.180
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.880
fWarpScale=9.181
fZoomExponent=0.65309
fShader=0.000
zoom=0.87866
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.04914
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.400
wavecode_0_g=0.400
wavecode_0_b=0.650
wavecode_0_a=1.000
wave_0_per_point1=sample=sqrt(sample);
wave_0_per_point2=coef=1.5*sin(.62831*sample-q6*.2+.5*cos(.62831*sample+q6*.1));
wave_0_per_point3=x=.5+.708*sample*cos(coef*6.2831*sample-cos(6.2831*coef)-q6*.1);
wave_0_per_point4=y=.5+.708*sample*sin(coef*6.2831*sample-cos(6.2831*coef)-q6*.1);
wave_0_per_point5=a=sqr(sample);
wave_0_per_point6=
wave_0_per_point7=y=(y-.5)*1.2+.5;
wave_0_per_point8=
wave_0_per_point9=r=abs( cos( .87*(6.2831*sample-time)+.653+sin(2.65*(6.2831*sample-time)+.1) ) );
wave_0_per_point10=g=abs( cos( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wave_0_per_point11=b=abs( sin( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=0.400
wavecode_1_g=0.400
wavecode_1_b=0.650
wavecode_1_a=1.000
wave_1_per_point1=sample=sqrt(sample);
wave_1_per_point2=
wave_1_per_point3=v1=.2*(3.1415*sample-q6)+.5*cos(.62831*sample+q6*.1);
wave_1_per_point4=dv1=.62831-.5*sin(.62831*sample+.1*q6)*.62831;
wave_1_per_point5=coef=1.5*sin(v1);
wave_1_per_point6=dcoef=1.5*cos(v1)*dv1;
wave_1_per_point7=
wave_1_per_point8=v2=coef*6.2831*sample-cos(6.2831*coef)-.1*q6;
wave_1_per_point9=dv2=dcoef*6.2831*sample+6.2831*coef+sin(6.2831*coef)*6.2831*dcoef;
wave_1_per_point10=
wave_1_per_point11=ddx=.708*sample*(cos(v2)-sin(v2)*dv2);
wave_1_per_point12=ddy=.708*sample*(sin(v2)+cos(v2)*dv2);
wave_1_per_point13=
wave_1_per_point14=tanx=-ddy;
wave_1_per_point15=tany=ddx;
wave_1_per_point16=
wave_1_per_point17=v3=sqr(sample);
wave_1_per_point18=v4=pow(1-sample,.75);
wave_1_per_point19=offsetX=.1*v3*tanx*v4;
wave_1_per_point20=offsetY=.1*v3*tany*v4;
wave_1_per_point21=
wave_1_per_point22=x=.5+.708*sample*cos(v2)+offsetX;
wave_1_per_point23=y=.5+.708*sample*sin(v2)+offsetY;
wave_1_per_point24=a=sqr(sample);
wave_1_per_point25=
wave_1_per_point26=y=(y-.5)*1.2+.5;
wave_1_per_point27=
wave_1_per_point28=r=abs( cos( .87*(6.2831*sample-time)+.653+sin(2.65*(6.2831*sample-time)+.1) ) );
wave_1_per_point29=g=abs( cos( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wave_1_per_point30=b=abs( sin( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.400
wavecode_2_g=0.400
wavecode_2_b=0.650
wavecode_2_a=1.000
wave_2_per_point1=sample=sqrt(sample);
wave_2_per_point2=
wave_2_per_point3=v1=.2*(3.1415*sample-q6)+.5*cos(.62831*sample+q6*.1);
wave_2_per_point4=dv1=.62831-.5*sin(.62831*sample+.1*q6)*.62831;
wave_2_per_point5=coef=1.5*sin(v1);
wave_2_per_point6=dcoef=1.5*cos(v1)*dv1;
wave_2_per_point7=
wave_2_per_point8=v2=coef*6.2831*sample-cos(6.2831*coef)-.1*q6;
wave_2_per_point9=dv2=dcoef*6.2831*sample+6.2831*coef+sin(6.2831*coef)*6.2831*dcoef;
wave_2_per_point10=
wave_2_per_point11=ddx=.708*sample*(cos(v2)-sin(v2)*dv2);
wave_2_per_point12=ddy=.708*sample*(sin(v2)+cos(v2)*dv2);
wave_2_per_point13=
wave_2_per_point14=tanx=-ddy;
wave_2_per_point15=tany=ddx;
wave_2_per_point16=
wave_2_per_point17=v3=sqr(sample);
wave_2_per_point18=v4=pow(1-sample,.75);
wave_2_per_point19=random=int(rand(1000))*.001;
wave_2_per_point20=offsetX=.1*v3*tanx*v4*random;
wave_2_per_point21=offsetY=.1*v3*tany*v4*random;
wave_2_per_point22=
wave_2_per_point23=x=.5+.708*sample*cos(v2)+offsetX;
wave_2_per_point24=y=.5+.708*sample*sin(v2)+offsetY;
wave_2_per_point25=a=sqr(sample);
wave_2_per_point26=
wave_2_per_point27=y=(y-.5)*1.2+.5;
wave_2_per_point28=
wave_2_per_point29=r=abs( cos( .87*(6.2831*sample-time)+.653+sin(2.65*(6.2831*sample-time)+.1) ) );
wave_2_per_point30=g=abs( cos( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wave_2_per_point31=b=abs( sin( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=0.400
wavecode_3_g=0.400
wavecode_3_b=0.650
wavecode_3_a=1.000
wave_3_per_point1=sample=sqrt(sample);
wave_3_per_point2=
wave_3_per_point3=v1=.2*(3.1415*sample-q6)+.5*cos(.62831*sample+q6*.1);
wave_3_per_point4=dv1=.62831-.5*sin(.62831*sample+.1*q6)*.62831;
wave_3_per_point5=coef=1.5*sin(v1);
wave_3_per_point6=dcoef=1.5*cos(v1)*dv1;
wave_3_per_point7=
wave_3_per_point8=v2=coef*6.2831*sample-cos(6.2831*coef)-.1*q6;
wave_3_per_point9=dv2=dcoef*6.2831*sample+6.2831*coef+sin(6.2831*coef)*6.2831*dcoef;
wave_3_per_point10=
wave_3_per_point11=ddx=.708*sample*(cos(v2)-sin(v2)*dv2);
wave_3_per_point12=ddy=.708*sample*(sin(v2)+cos(v2)*dv2);
wave_3_per_point13=
wave_3_per_point14=tanx=-ddy;
wave_3_per_point15=tany=ddx;
wave_3_per_point16=
wave_3_per_point17=v3=sqr(sample);
wave_3_per_point18=v4=pow(1-sample,.75);
wave_3_per_point19=random=int(rand(1000))*.001;
wave_3_per_point20=offsetX=.1*v3*tanx*v4*random;
wave_3_per_point21=offsetY=.1*v3*tany*v4*random;
wave_3_per_point22=
wave_3_per_point23=x=.5+.708*sample*cos(v2)+offsetX;
wave_3_per_point24=y=.5+.708*sample*sin(v2)+offsetY;
wave_3_per_point25=a=sqr(sample);
wave_3_per_point26=
wave_3_per_point27=y=(y-.5)*1.2+.5;
wave_3_per_point28=
wave_3_per_point29=r=abs( cos( .87*(6.2831*sample-time)+.653+sin(2.65*(6.2831*sample-time)+.1) ) );
wave_3_per_point30=g=abs( cos( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
wave_3_per_point31=b=abs( sin( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
shapecode_0_enabled=1
shapecode_0_sides=30
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.86414
shapecode_0_ang=3.14159
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=0.800
shapecode_0_g=0.100
shapecode_0_b=0.800
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=r=1-abs( cos( .87*(6.2831*sample-time)+.653+sin(2.65*(6.2831*sample-time)+.1) ) );
shape_0_per_frame2=g=1-abs( cos( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
shape_0_per_frame3=b=1-abs( sin( .87*(6.2831*sample-time)+.653+cos(2.65*(6.2831*sample-time)+.1) ) );
shape_0_per_frame4=
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=numBeats=numBeats+q8;
shape_0_per_frame8=a=.1;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.23435
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.300
shapecode_1_b=0.100
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=numBeats=numBeats+q8;
shape_1_per_frame2=ang=(-time+numBeats%10)*.6283;
shape_1_per_frame3=
shape_1_per_frame4=coef=1.5*sin(-q6*.2+.5*cos(q6*.1));
shape_1_per_frame5=ang=cos(6.2831*coef)+q6*.1+coef*q8;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=1.97884
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.34420
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=x1 = 0.1;
per_frame_init_2=y1 = 0.2;
per_frame_init_3=
per_frame_init_4=x2 = 0.3;
per_frame_init_5=y2 = 0.2;
per_frame_init_6=
per_frame_init_7=x3 = 0.5;
per_frame_init_8=y3 = 0.2;
per_frame_init_9=
per_frame_init_10=x4 = 0.7;
per_frame_init_11=y4 = 0.2;
per_frame_init_12=
per_frame_init_13=
per_frame_init_14=ax1 = 0;
per_frame_init_15=ay1 = 0;
per_frame_init_16=ax2 = 0;
per_frame_init_17=ay2 = 0;
per_frame_init_18=ax3 = 0;
per_frame_init_19=ay3 = 0;
per_frame_init_20=
per_frame_init_21=vx1 = 0.01;
per_frame_init_22=vx2 = 0.01;
per_frame_init_23=vx3 = 0.01;
per_frame_init_24=vx4 = 0.01;
per_frame_init_25=q11 = 0.5/asin(1);
per_frame_1=//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo
per_frame_2=r = 0.04+ max(bass_att,treb_att)*0.006;
per_frame_3=bounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0001*60/fps);
per_frame_4=bounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);
per_frame_5=bounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);
per_frame_6=bounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0001*60/fps);
per_frame_7=bounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);
per_frame_8=bounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);
per_frame_9=bounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0001*60/fps);
per_frame_10=bounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);
per_frame_11=bounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);
per_frame_12=bounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0001*60/fps);
per_frame_13=bounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);
per_frame_14=bounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);
per_frame_15=bounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);
per_frame_16=ref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent
per_frame_17=v1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);
per_frame_18=vx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);
per_frame_19=vy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);
per_frame_20=vx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);
per_frame_21=vy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);
per_frame_22=bounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);
per_frame_23=ref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent
per_frame_24=v1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);
per_frame_25=vx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);
per_frame_26=vy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);
per_frame_27=vx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);
per_frame_28=vy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);
per_frame_29=bounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);
per_frame_30=ref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent
per_frame_31=v1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);
per_frame_32=vx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);
per_frame_33=vy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);
per_frame_34=vx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);
per_frame_35=vy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);
per_frame_36=bounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);
per_frame_37=ref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent
per_frame_38=v1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);
per_frame_39=vx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);
per_frame_40=vy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);
per_frame_41=vx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);
per_frame_42=vy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);
per_frame_43=bounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);
per_frame_44=ref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent
per_frame_45=v1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);
per_frame_46=vx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);
per_frame_47=vy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);
per_frame_48=vx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);
per_frame_49=vy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);
per_frame_50=bounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);
per_frame_51=ref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent
per_frame_52=v1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);
per_frame_53=vx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);
per_frame_54=vy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);
per_frame_55=vx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);
per_frame_56=vy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);
per_frame_57=//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo
per_frame_58=q1 =  0.5 - x1;
per_frame_59=q2 = -0.5 + y1;
per_frame_60=q3 =  0.5 - x2;
per_frame_61=q4 = -0.5 + y2;
per_frame_62=q5 =  0.5 - x3;
per_frame_63=q6 = -0.5 + y3;
per_frame_64=q7 =  0.5 - x4;
per_frame_65=q8 = -0.5 + y4;
per_frame_66=zoom = 1;
per_frame_67=t = t + 0.5/fps;
per_frame_68=t = if(above(t,2),t-2,t);
per_frame_69=q12 = t;
per_frame_70=q13 = aspectx;
per_frame_71=q14 = aspecty;
warp_1=`#define MyGet GetPixel //GetBlur1
warp_2=`shader_body
warp_3=`{
warp_4=`    // GROW EFFECT - bright pixels spread radially outward.
warp_5=`    // BE CAREFUL - this can really thrash the texture cache! (SLOW)
warp_6=`    float grad_rad = 4;  //TWEAK
warp_7=`    float str = 2.8;      //TWEAK
warp_8=`    float3 d = float3(texsize.zw, 0) * grad_rad;
warp_9=`    float4 lums = 0;
warp_10=`    lums.x = lum( MyGet(uv + texsize.zw*d.xz) );
warp_11=`    lums.y = lum( MyGet(uv - texsize.zw*d.xz) );
warp_12=`    lums.z = lum( MyGet(uv + texsize.zw*d.zy) );
warp_13=`    lums.w = lum( MyGet(uv - texsize.zw*d.zy) );
warp_14=`    float2 grad = float2(lums.x-lums.y, lums.z-lums.w)*str*1000/grad_rad;
warp_15=`    grad = (saturate(grad*0.5+0.5)*2-1)*1.4;
warp_16=`    // sample previous frame
warp_17=`    ret = tex2D( sampler_fc_main, uv + grad*texsize.zw ).xyz;
warp_18=`
warp_19=`    // darken (decay) over time
warp_20=`    ret *= 0.983; //or try: ret -= 0.004;
warp_21=`
warp_22=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uvo = uv;
comp_7=`uv = (uv-0.5);
comp_8=`factorA = uv+ float2(q1,q2);
comp_9=`factorB = float2(8,0);
comp_10=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_11=`float2 uv1 = product;
comp_12=`factorA = uv+ float2(q3,q4);
comp_13=`factorB = float2(8,0);
comp_14=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_15=`float2 uv2 = product;
comp_16=`factorA = uv+ float2(q5,q6);
comp_17=`factorB = float2(8,0);
comp_18=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_19=`float2 uv3 = product;
comp_20=`factorA = uv+ float2(q7,q8);
comp_21=`factorB = float2(8,0);
comp_22=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_23=`float2 uv4 = product;
comp_24=`factorA = uv1;
comp_25=`factorB = uv2;
comp_26=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_27=`float2 uv12 = product;
comp_28=`factorA = uv3;
comp_29=`factorB = uv4;
comp_30=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_31=`float2 uv34 = product;
comp_32=`factorA = uv12;
comp_33=`factorB = uv34;
comp_34=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_35=`numerator = float2(1,0);
comp_36=`denominator = product;
comp_37=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_38=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_39=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_40=`uv = fraction.yx*float2(-1,1)*16;
comp_41=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_42=`
comp_43=`float l = length(uv-0.5);
comp_44=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_45=`
comp_46=`ret = GetPixel(uv).y*float3(1,0.6,0);
comp_47=`ret = lerp(saturate(ret),0,GetBlur2(uv).z*0.5);
comp_48=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_49=`                      ((uv.xyy
comp_50=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_51=`                      ).xyz*
comp_52=`                      float3(1,1,0)*0.05 + 
comp_53=`                      time*float3(0,0,1)*0.4 
comp_54=`                     );
comp_55=`if(ret.x+ret.y+ret.z<.01)ret += (noise2)*.2; 
comp_56=`ret = lerp(saturate(ret),float3(0.3,0.4,0.5),GetBlur2(uv).x*4);
comp_57=`ret = lerp(saturate(ret),1,GetPixel(uvo).z);
comp_58=`ret = lerp(saturate(ret),0,GetPixel(uv).x);
comp_59=`ret*=saturate(1.6-pow(l,6)*0.004);
comp_60=`if(ret.x+ret.y+ret.z>2.5)ret -= (1-noise2)*.4; 
comp_61=`}

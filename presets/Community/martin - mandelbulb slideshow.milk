MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=282
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=3.91581
wavecode_0_smoothing=0.10000
wavecode_0_r=0.200
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.600
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.940
shapecode_0_y=0.900
shapecode_0_rad=0.22437
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.010
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=44
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=design = 0;
per_frame_init_2=//0 : normal mode
per_frame_init_3=//1 : selects last set and stops background variation
per_frame_init_4=//2 : selects last set, color assist; green = optimum distance, red = too close, may render slowly
per_frame_init_5=
per_frame_init_6=n = 0; anz= 0;
per_frame_init_7=loop (200,
per_frame_init_8=if (n== 0 , anz += 1; x = .09; y = .9;   z = -.5; ax = -.11; ay = 0; az = 0.5; zo= 1.3; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_9=if (n== 1 , anz += 1; x = .08; y = .9;   z = -.45; ax = -.12; ay = 0; az = 0.5; zo= 3; su=0; br = 1.2; lim=4; mod = 0, 0);
per_frame_init_10=if (n== 2 , anz += 1; x = .08; y = .98;  z = -.43; ax = -.12; ay = 0; az = 0.5; zo= 5; su=0; br = 1.2; lim=4; mod = 0, 0);
per_frame_init_11=if (n== 3 , anz += 1; x = .08; y = .982; z = -.43; ax = -.12; ay = 0; az = 0.5; zo= 15; su=0; br = 1; lim=3; mod = 0, 0);
per_frame_init_12=if (n== 4 , anz += 1; x = .12; y = 1.002;z = -.41; ax = -.12; ay = 0; az = 0.5; zo= 10; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_13=if (n== 5 , anz += 1; x = .124; y = .993;z = -.4; ax = -.12;  ay = 0; az = 0.5; zo= 25; su=.95; br = .2; lim=28; mod = 0, 0);
per_frame_init_14=if (n== 6 , anz += 1; x = .1; y = .86;   z = -.3; ax = -.0;   ay = .4; az = -0.0; zo= 1; su=0; br = 1; lim=1.5; mod = 0, 0);
per_frame_init_15=if (n== 7 , anz += 1; x = .1; y = .93;   z = -.34; ax = -.0;  ay = .4; az = -0.0; zo= 2; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_16=if (n== 8 , anz += 1; x = .11; y = .93;  z = -.28; ax = -.0;  ay = .4; az = -0.0; zo= 2; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_17=if (n== 9,  anz += 1; x = .0; y = .87;   z = .26; ax = .40;   ay = .04; az = -.0; zo= 1; su=0; br = 1; lim=20; mod = 0, 0);
per_frame_init_18=if (n== 10, anz += 1; x = .186; y = .996;  z = -.01; ax = .0;   ay = .0; az = -.0; zo= 18; su=0; br = 1; lim=6; mod = 0.13, 0);
per_frame_init_19=if (n== 11, anz += 1; x = -.08; y = .87; z = -.33; ax = .4;   ay = .04; az = -.0; zo= 1; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_20=if (n== 12, anz += 1; x = -.0865; y = .884; z = -.44; ax = .4;ay = .04; az = -.0; zo= 28; su=0.3; br = .4; lim=4; mod = 0, 0);
per_frame_init_21=if (n== 13, anz += 1; x = -.0842; y = .882; z = -.44; ax = .4; ay = .04; az = -.0; zo= 48; su=0; br = .8; lim=1.5; mod = 0, 0);
per_frame_init_22=if (n== 14, anz += 1; x = -.17; y = 1; z = -.08; ax = .0;     ay = .04; az = -.0; zo= 3; su=0; br = 1; lim=4; mod = 0, 0);
per_frame_init_23=if (n== 15, anz += 1; x = -.17; y = 1; z = -.06; ax = .0;     ay = .04; az = -.0; zo= 13; su=0; br = 1; lim=1.2; mod = 0, 0);
per_frame_init_24=if (n== 16, anz += 1; x = -.17; y = 1; z = -.06; ax = .0;     ay = .04; az = -.0; zo= 23; su=0; br = 1; lim=2; mod = 0, 0);
per_frame_init_25=if (n== 17, anz += 1; x = -.17; y = 1; z = -.056; ax = .0;    ay = .04; az = -.0; zo= 53; su=0.82; br = 1; lim=4; mod = 0, 0);
per_frame_init_26=if (n== 18, anz += 1; x = -.1694; y = 1; z = -.054; ax = .0;  ay = .04; az = -.0; zo= 140; su=0.86; br = .6; lim=4; mod = 0, 0);
per_frame_init_27=if (n== 19, anz += 1; x = -.12; y = 1.06; z = -.049; ax = .0; ay = .04; az = -.0; zo= 120; su=0.86; br = 1; lim=10; mod = 0, 0);
per_frame_init_28=if (n== 20, anz += 1; x = .108; y = 1.015; z = -.05; ax = .0; ay = .04; az = -.03; zo= 4; su=.20; br = .3; lim=.5; mod = 0, 0);
per_frame_init_29=if (n== 21, anz += 1; x = .15; y = 1; z = -.25; ax = .0;      ay = 0.2; az = 0.2; zo= 1.5; su=.1; br = 1.2; lim=3; mod = 0, 0);
per_frame_init_30=
per_frame_init_31=
per_frame_init_32=// add new lines here. Do not forget to increment n. Only the parameters changed need to be specified 
per_frame_init_33=// but remember if you do that, the view depends on all lines above it so you need to keep them
per_frame_init_34=// example: 
per_frame_init_35=// if (n== 22, anz += 1; y = 1.04; zo=15; mod = -.1;   , 0);
per_frame_init_36=
per_frame_init_37=
per_frame_init_38=
per_frame_init_39=
per_frame_init_40=
per_frame_init_41=
per_frame_init_42=
per_frame_init_43=
per_frame_init_44=
per_frame_init_45=
per_frame_init_46=
per_frame_init_47=
per_frame_init_48=
per_frame_init_49=
per_frame_init_50=gmegabuf(n*20)   = x;   //camera pos x
per_frame_init_51=gmegabuf(n*20+1) = -y;  //camera pos y
per_frame_init_52=gmegabuf(n*20+2) = z;   //camera pos z
per_frame_init_53=gmegabuf(n*20+3) = -ax; //bulb rotation angle x
per_frame_init_54=gmegabuf(n*20+4) = ay;  //bulb rotation angle y
per_frame_init_55=gmegabuf(n*20+5) = az;  //bulb rotation angle z
per_frame_init_56=gmegabuf(n*20+6) = zo;  //zoom factor, ca. 1 - 300, do not exaggerate
per_frame_init_57=gmegabuf(n*20+7) = su;  //surface shape, 0 - 1
per_frame_init_58=gmegabuf(n*20+8) = br;  //brightness, normally 1
per_frame_init_59=gmegabuf(n*20+9) = lim; //decision threshold in/outside fractal, ca. 1 - 100
per_frame_init_60=gmegabuf(n*20+10) = mod; //fractal equation modifier, small values only, use with care
per_frame_init_61=n += 1;);
per_frame_init_62=
per_frame_init_63=start = 1;index = int(rand(anz-1));
per_frame_init_64=lastset = anz-1;
per_frame_init_65=rseed = rand(100)/100;
per_frame_init_66=t0 = 0; trel = 0;
per_frame_init_67=
per_frame_1=dec_m = pow (0.8, 30/fps);
per_frame_2=dec_s = pow (0.97, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=
per_frame_5=trel = trel + beat*.04/fps;
per_frame_6=trig = ((trel > int(t0)+1) || start) && (design == 0);
per_frame_7=index += trig;
per_frame_8=if (trig, t0=trel,0);
per_frame_9=change = max(0,1-abs(trel-int(trel))); //Vorsicht bei Ruecksprung;
per_frame_10=change = 1-2*min(trel-int(trel), int(trel+1)-trel);
per_frame_11=change = pow(max(0,change*5-4),2);
per_frame_12=q12 = change;
per_frame_13=
per_frame_14=set = index%anz; 
per_frame_15=if (design, set = lastset, 0);
per_frame_16=q4 = gmegabuf(set*20); 
per_frame_17=q5 = gmegabuf(set*20+1); 
per_frame_18=q6 = gmegabuf(set*20+2);
per_frame_19=q1 = gmegabuf(set*20+3); 
per_frame_20=q2 = gmegabuf(set*20+4);   
per_frame_21=q3 = gmegabuf(set*20+5);
per_frame_22=q7 = gmegabuf(set*20+6);
per_frame_23=q8 = gmegabuf(set*20+7);
per_frame_24=q9 = gmegabuf(set*20+8);
per_frame_25=q10 =gmegabuf(set*20+9); 
per_frame_26=q11 =gmegabuf(set*20+10); 
per_frame_27=
per_frame_28=
per_frame_29=bright = if (trig, rand(100)/120, bright);
per_frame_30=bright_ = bright_*dec_s + (1-dec_s)*pow(bright,1);
per_frame_31=q18 = bright_;
per_frame_32=
per_frame_33=grad = if (trig, rand(100)/100, grad);
per_frame_34=grad_ = grad_*dec_s + (1-dec_s)*grad;
per_frame_35=q19 = grad_;
per_frame_36=
per_frame_37=//ang1 = time*.0238+rseed*6;
per_frame_38=ang1 = if(trig,  rand(100), ang1);
per_frame_39=ca = ca * dec_s + (1-dec_s) * cos(ang1);
per_frame_40=sa = sa * dec_s + (1-dec_s) * sin(ang1*1);
per_frame_41=q15 = ca; q16 = sa;
per_frame_42=
per_frame_43=
per_frame_44=//MOON POS, unused
per_frame_45=mx = sin(time*.00714)/2;
per_frame_46=my = sin(time*.00433)/4 -.25; ;
per_frame_47=q25 = mx; q26 = my;
per_frame_48=
per_frame_49=//Colour 
per_frame_50=q27 = .4; q28 = .55; q29 = 1;
per_frame_51=q30 = design;
per_frame_52=q32 = max(0,(sin(time*6)));
per_frame_53=
per_frame_54=start = 0;
per_frame_55=monitor = set;;
per_pixel_1=k1 = 1;
per_pixel_2=
per_pixel_3=warp = 0.0; zoom = 1; 
per_pixel_4=dx = 0; dy = 0; rot = 0;
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`float dist, struc, len; float2 uv0, uv1; float3 uv2; float3 box;
warp_3=`static const float2 center = float2 (q15,q16);
warp_4=`static const float3x3 RotMat = 
warp_5=`float3x3(cos(q1)*cos(q3) - sin(q1)*cos(q2)*sin(q3), -cos(q1)*sin(q3)-sin(q1)*cos(q2)*cos(q3), sin(q1)*sin(q2),
warp_6=`         sin(q1)*cos(q3) + cos(q1)*cos(q2)*sin(q3),  cos(q1)*cos(q2)*cos(q3)-sin(q1)*sin(q3), -cos(q1)*sin(q2),
warp_7=`         sin(q2)*sin(q3), sin(q2)*cos(q3), cos(q2));
warp_8=`static const float3 CamPos = float3(q4,q5,q6);
warp_9=`static const float3 surface = cos (3.1416/2*q8 * float3 (1,3,5));
warp_10=`static const float myzoom = q7;
warp_11=`static const float sustain = 0.985-q12*.07, tic8 = 1.0/255 + q12*.02;
warp_12=`static const float iter = 6 + (myzoom >= 50),  limit = q10;  
warp_13=`
warp_14=`float2 fstep2 (float2 xy) {return .0078125*round(128.0*xy);}
warp_15=`
warp_16=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pc_main, uvi).gb); 
warp_17=`  return 1.0039453125-tmp.y - .0078125*tmp.x;} // =1.+.505/128
warp_18=`
warp_19=`float2 PutDist(float x) {float tmp; tmp = fstep2(1-x);
warp_20=`  return (float2(128.0*((1-x)-tmp)+.495,tmp));}
warp_21=`
warp_22=`float MinDist (float2 uvi)    //Eo.S. optimised
warp_23=`{  float tmp; float2 nb; float2 nb2; float2 pix;
warp_24=`   pix = texsize.zw * (2.0*(tex2D (sampler_pw_noise_lq,uvi+rand_frame.xy)>=.5)-1);   
warp_25=`   nb.x = GetDist(uvi+pix*float2(1,1));   nb.y = GetDist(uvi+pix*float2(1,-1));
warp_26=`   nb2.x = GetDist(uvi+pix*float2(0,1));   nb2.y = GetDist(uvi+pix*float2(1,0));          
warp_27=`   nb = min( nb, nb2 );  
warp_28=`   return min( nb.x, nb.y );}
warp_29=`
warp_30=`float3 Get1 (float2 uvi) {return lerp (GetPixel(uvi), GetBlur1(uvi),0);} 
warp_31=`
warp_32=`float3 mbulb_7a (float3 uvi) {float3 zz, zz2,zz4, zz6, tmp; float a, rxy2, rxy4, rxy6;
warp_33=`  zz = mul(uvi,RotMat);
warp_34=`  for (int n=1; n <= iter; n++)  { 
warp_35=`    zz2 = pow(zz,2);  zz4 = pow(zz2,2);  zz6 = pow(zz2,3);  
warp_36=`    rxy2 = zz2.x+zz2.y; rxy4 = pow(rxy2,2); rxy6 = pow(rxy2,3);
warp_37=`    a =   1+(-7*zz6.z+35*zz4.z*rxy2 -21*zz2.z*rxy4)/rxy6; 
warp_38=`    tmp.x =  -7*zz6.y+  zz6.x -21*zz4.x*zz2.y +35*zz2.x*zz4.y;
warp_39=`    tmp.y =    -zz6.y+7*zz6.x -35*zz4.x*zz2.y +21*zz2.x*zz4.y-q11;
warp_40=`    tmp.z =  -21*zz4.z*rxy2+35*zz2.z*rxy4-7*rxy6;
warp_41=`    tmp.xy *= a; tmp *= zz;
warp_42=`    zz = clamp(tmp+uvi,-1000,1000);  }
warp_43=`  return float3(zz);}
warp_44=`
warp_45=`shader_body {uv = uv_orig; uv1 = (uv-.5)*aspect.xy;
warp_46=`float3 noise = frac(8.743*tex2D (sampler_noise_lq,4*uv+rand_frame.yz)); 
warp_47=`float3 noiseBi= noise - .5;
warp_48=`
warp_49=`float seed = (noise.g < .2); 
warp_50=`if (!seed) { dist = MinDist(uv+0*noiseBi*texsize.zw) +  0.003 * (noiseBi.x) * abs(noiseBi.y);} 
warp_51=`else {dist = noise.r;}
warp_52=`dist = min(dist,GetDist(uv));
warp_53=`
warp_54=`uv2 = float3(uv1*dist,dist-.25)/myzoom+CamPos;
warp_55=`box = mbulb_7a (uv2);
warp_56=`len = length(box * surface);
warp_57=`struc = length(box.xy-box.z) /limit * q9;
warp_58=`float2 shlen = .1* (uv1-center);
warp_59=`float2 uv3 = uv - shlen + .005*noiseBi;
warp_60=`struc *= 1-(GetDist(uv3) < GetDist(uv)-length(shlen))*.75;
warp_61=`if (len <= limit ) 
warp_62=`{
warp_63=` ret.r = lerp (struc, Get1(uv).r, sustain); ret.gb=  PutDist(dist); } 
warp_64=` else {ret = tex2D(sampler_fc_main,uv)*sustain - float3(1,1,1)*tic8;} 
warp_65=` if (seed) {ret.r = GetPixel(uv_orig).r;}
warp_66=`}
warp_67=`//------Written by martin-----
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw*1;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c, shlen;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 col_struc =  float3(q27,q28,q29);
comp_6=`static const float3 col_back =  float3(.4,.6,.9) + .6*(rand_preset-.5);;
comp_7=`static const float myzoom = q7;
comp_8=`static const float2 center = float2(q15,q16); 
comp_9=`static const float2 moonpos = float2(q25,q26);
comp_10=`static const float macro = max(.2,exp(-5/myzoom))*1.5;
comp_11=`
comp_12=`float2 fstep2 (float2 xy) {return .0078125*round(128.0*xy);}
comp_13=`
comp_14=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pc_main, uvi).gb); 
comp_15=`  return 1.0039453125-tmp.y - .0078125*tmp.x;}
comp_16=`
comp_17=`float GetDistB(float2 uvi) {float2 tmp; tmp = fstep2(GetBlur1(uvi).gb); 
comp_18=`  return 1.0039453125-tmp.y - .0078125*tmp.x;}
comp_19=`
comp_20=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_21=`
comp_22=`shader_body {
comp_23=`uv1 = (uv-.5)*aspect.xy;
comp_24=`dist = GetDist(uv);
comp_25=`bdist = lerp(GetDistB(uv),dist,.5); //##
comp_26=`
comp_27=`float focus = abs(GetDistB(uv)-.25)*macro;
comp_28=`float struc = lerp(GetPixel(uv).r, GetBlur1(uv).r, focus) * (1-bdist*.75);
comp_29=`
comp_30=`float light0 = (1-.5*length(uv1-center))*(1-q12*.75);
comp_31=`float bdist2 = bdist - tex3D (sampler_noisevol_hq,float3(uv,.2*time))/2 * (q30==0);
comp_32=`float light_r = pow(light0,2*(q30==0)*(1-bdist2))*(1-bdist2)*(1+1*(q30==0));
comp_33=`struc *= light_r;
comp_34=`
comp_35=`//SKY
comp_36=`float grad = lerp(uv.y,1-uv.x,q19);
comp_37=`float3 back = grad*col_back*q18;
comp_38=`float cloud = grad*tex2D (sampler_noise_hq,uv*float2(.1,.5)+float2(time*.01,0)).r;
comp_39=`back += .2*cloud*q18;
comp_40=`
comp_41=`
comp_42=`float3 ret1 = pow(struc,col_struc);
comp_43=`ret = lerp(ret1,1*back,pow(bdist,1.6));
comp_44=`
comp_45=`if (q30==1) {ret = ret1;}
comp_46=`if (q30==2) {ret = lerp(struc,.1,bdist); 
comp_47=`             ret *= .6+ pow(2,-20*float3 (dist, abs(dist-.25), 1-dist)) ; 
comp_48=`             ret += sat(.002/abs(rad-.1))*.2*q32; }
comp_49=`
comp_50=`if (q30==0) {ret += pow(light0,4)*(.5+treb_att*.0);}
comp_51=`
comp_52=`}
comp_53=`//------Written by martin-----
comp_54=`

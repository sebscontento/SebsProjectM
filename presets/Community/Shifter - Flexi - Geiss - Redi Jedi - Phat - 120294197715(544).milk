MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.08323
fDecay=0.9932625
fVideoEchoZoom=0.9997600329
fVideoEchoAlpha=0.1802
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.0037478872
fWaveScale=0.813529405
fWaveSmoothing=0.05229
fWaveParam=-0.0976792512
fModWaveAlphaStart=0.985616
fModWaveAlphaEnd=1.046110329
fWarpAnimSpeed=0.397585
fWarpScale=52.270195332
fZoomExponent=4.1131561151
fShader=0
zoom=0.9972250404
rot=0.000693
cx=0.5
cy=0.5
dx=0
dy=0
warp=0.01
sx=1
sy=1
wave_r=0.7452
wave_g=0.89794
wave_b=0.99335
wave_x=0.510935
wave_y=0.439904
ob_size=0.005000
ob_r=0.3302
ob_g=0.2345
ob_b=0.8098
ob_a=1.000000
ib_size=0.000000
ib_r=0.1701
ib_g=0.029275
ib_b=0.1695
ib_a=1.000000
nMotionVectorsX=64.000000
nMotionVectorsY=48.000000
mv_dx=0
mv_dy=0
mv_l=0.74065
mv_r=1
mv_g=0.720235
mv_b=0.063125
mv_a=0
b1n=0
b2n=0
b3n=0
b1x=1
b2x=1
b3x=1
b1ed=0.155
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=20
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.08374236
wavecode_0_smoothing=0.0948
wavecode_0_r=1
wavecode_0_g=0.472
wavecode_0_b=0.8908
wavecode_0_a=0.2193
wavecode_0_x=0
wavecode_0_y=0
=1
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=j = j + (bass)*0.01;
wave_0_per_frame3=j2 = j2 + (mid_att)*0.01;
wave_0_per_frame4=j3 = j3 + (treb_att)*0.01;
wave_0_per_frame5=t2 = j;
wave_0_per_frame6=t3 = j2;
wave_0_per_frame7=t4 = j3;
wave_0_per_frame8=k = k*0.99 + 10*mid/fps;
wave_0_per_frame9=t5 = -k;
wave_0_per_frame10=cl1 = if(below(if(above(cl1 + 0.002,1),0,cl1),0),1,cl1);
wave_0_per_frame11=t8 = cl1;
wave_0_per_frame12=cl2 = if(below(if(above(cl2 -1*q1,1),0,cl2),0),1,cl2);
wave_0_per_frame13=t7 = cl2;
wave_0_per_frame14=cl3 = if(below(if(above(cl3 +0.001,1),0,cl3),0),1,cl3);
wave_0_per_frame15=t6 = cl3;
wave_0_per_point1=xx = ((sample*0983624912364)%10000000+100)/10000000 + t7 - if(above(xx+t7,1),1,0) - 0.5;
wave_0_per_point2=yy = ((xx*1896575575)%10000000+100)/10000000 + t6 - if(above(yy+t6,1),1,0) - 0.5;
wave_0_per_point3=zz = ((yy*58652340875)%10000000+100)/10000000 + t8 - if(above(zz+t8,1),1,0) - 0.5;
wave_0_per_point4=d = sqrt(sqr(xx)+sqr(yy)+sqr(zz));
wave_0_per_point5=w = 1;
wave_0_per_point6=bb = d*d*0.5;
wave_0_per_point7=n = 0.3;
wave_0_per_point8=s2 = sin(sin(t3*w+bb)*n);
wave_0_per_point9=s3 = sin(sin(t4*w+bb)*n);
wave_0_per_point10=c1 = cos(sin(t2*w+bb)*n);
wave_0_per_point11=c3 = cos(sin(t4*w+bb)*n);
wave_0_per_point12=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point13=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point14=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point15=zoom = .5*(1/(z+0.5));
wave_0_per_point16=x = 0.5 + zoom*x1 + sin(time*0.1)*0.;
wave_0_per_point17=y = 0.5 + zoom*y1 + cos(time*0.16801)*0.;
wave_0_per_point18=r = if(below(if(above(r,1),1,r),0),0,r);
wave_0_per_point19=g = if(below(if(above(g,1),1,g),0),0,g);
wave_0_per_point20=b = if(below(if(above(b,1),1,b),0),0,b);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=20
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=5.0994392728
wavecode_1_smoothing=0.1617
wavecode_1_r=0.949
wavecode_1_g=0.58816
wavecode_1_b=1
wavecode_1_a=1
wavecode_1_x=0
wavecode_1_y=0
=1
wave_1_per_frame1=t8 = 1;
wave_1_per_frame2=t1 = 0.5;
wave_1_per_frame3=t2 = 0.9;
wave_1_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_1_per_point2=y = sample*0.05;
wave_1_per_point3=g = 0;
wave_1_per_point4=mx = xv + ita*.025;
wave_1_per_point5=c = 2;
wave_1_per_point6=r = if(below(if(above(sin(t)*c,1),1,r),0),0,r);
wave_1_per_point7=sz = .01;
wave_1_per_point8=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_1_per_point9=b = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);
wave_1_per_point10=x = mx + vx*sz*.75;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=20
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=24.56970801
wavecode_2_smoothing=0.04176
wavecode_2_r=0.8768
wavecode_2_g=0.86944
wavecode_2_b=0.18492
wavecode_2_a=0.84244
wavecode_2_x=0
wavecode_2_y=0
=1
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_2_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_2_per_point3=y = .5 - q6*sp;
wave_2_per_point4=b = int(rand(1001))*.001*.6;
wave_2_per_point5=mx = xv + ita*.025;
wave_2_per_point6=sz = .01;
wave_2_per_point7=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_2_per_point8=cvb = if(equal(it,0),cva,cvb);
wave_2_per_point9=cva = if(equal(it,0),cv,cva);
wave_2_per_point10=cv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(int(rand(1001))*.001,.69),above(int(rand(1001))*.001,.14))),cv);
wave_2_per_point11=lr = if(equal(it,0),if(cv,int(rand(10001))*.0001*316.02,int(rand(10001))*.0001*193.66),lr);
wave_2_per_point12=let = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));
wave_2_per_point13=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_2_per_point14=vb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_2_per_point15=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_2_per_point16=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_2_per_point17=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_2_per_point18=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_2_per_point19=vg = equal(let,1);
wave_2_per_point20=vh = equal(let,9) + equal(let,20);
wave_2_per_point21=vi = below(let,5) - equal(let,3) + equal(let,18);
wave_2_per_point22=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_2_per_point23=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_2_per_point24=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_2_per_point25=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_2_per_point26=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_2_per_point27=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_2_per_point28=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_2_per_point29=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_2_per_point30=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_2_per_point31=vs = equal(let,22);
wave_2_per_point32=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_2_per_point33=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))))*below(ita,8);
wave_2_per_point34=x = mx + vx*sz*.75;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=20
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.992043069
wavecode_3_smoothing=0.0374
wavecode_3_r=0.30714
wavecode_3_g=0.621495
wavecode_3_b=0.66175
wavecode_3_a=0.999352
wavecode_3_x=0
wavecode_3_y=0
=1
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q5*0.75;
wave_3_per_frame3=t3 = q6*0.75;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_frame7=t7 = q7;
wave_3_per_frame8=t8 = q8;
wave_3_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_3_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_3_per_point3=sw = 1-equal(it,0)*equal(ita,0);
wave_3_per_point4=b = int(rand(1001))*.001*.6;
wave_3_per_point5=xv = if(sw - swi,xv,int(rand(1001))*.001*.8);
wave_3_per_point6=mx = xv + ita*.025;
wave_3_per_point7=my = if(sw - swi,my,int(rand(1001))*.001*.975);
wave_3_per_point8=sz = .01;
wave_3_per_point9=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_3_per_point10=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_3_per_point11=sa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;
wave_3_per_point12=sb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;
wave_3_per_point13=sc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;
wave_3_per_point14=sd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;
wave_3_per_point15=se = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;
wave_3_per_point16=sf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;
wave_3_per_point17=sg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;
wave_3_per_point18=sh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;
wave_3_per_point19=si = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;
wave_3_per_point20=sj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;
wave_3_per_point21=lr = if(sw,lr,int(rand(10)));
wave_3_per_point22=let = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;
wave_3_per_point23=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_3_per_point24=vb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_3_per_point25=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_3_per_point26=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_3_per_point27=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_3_per_point28=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_3_per_point29=vg = equal(let,1);
wave_3_per_point30=vh = equal(let,9) + equal(let,20);
wave_3_per_point31=vi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);
wave_3_per_point32=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_3_per_point33=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_3_per_point34=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_3_per_point35=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_3_per_point36=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_3_per_point37=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_3_per_point38=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_3_per_point39=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_3_per_point40=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_3_per_point41=vs = equal(let,22);
wave_3_per_point42=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_3_per_point43=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))))*below(ita,8);
wave_3_per_point44=x = mx + vx*sz*.75;
wave_3_per_point45=y = my + vy*sz*1.5;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0.285
shapecode_0_x=0.525272
shapecode_0_y=0.57192
shapecode_0_rad=2.446596646
shapecode_0_ang=0.892110528
shapecode_0_tex_ang=0.109776576
shapecode_0_tex_zoom=1.17900531
shapecode_0_r=0.29898
shapecode_0_g=0.187036
shapecode_0_b=0.534744
shapecode_0_a=0.465516
shapecode_0_r2=0.96864
shapecode_0_g2=0.90079
shapecode_0_b2=0.4
shapecode_0_a2=0.7766
shapecode_0_border_r=0.9208
shapecode_0_border_g=1
shapecode_0_border_b=0.3104
shapecode_0_border_a=0.4065
shape_0_per_frame1=tm = time*.05;
shape_0_per_frame2=r = .95 + .05*sin(tm*1.654);
shape_0_per_frame3=g = .95 + .05*sin(tm*1.564);
shape_0_per_frame4=b = .95 + .05*sin(tm*1.465);
shape_0_per_frame5=r2 = 1.9 - r;
shape_0_per_frame6=g2 = 1.9 - g;
shape_0_per_frame7=b2 = 1.9 - b;
shape_0_per_frame8=x = .4996;
shape_0_per_frame9=y = .5003;
shape_0_per_frame10=ang = (int(rand(1001))*.001 - int(rand(1001))*.001)*q1*.5;
shape_0_per_frame11=rad = rad - (int(rand(1001))*.001 + int(rand(1001))*.001)*1.5*q1;
shape_0_per_frame12=a = above(treb,.8);
shape_0_per_frame13=a2 = above(treb,.8);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0.7008
shapecode_1_thickOutline=1
shapecode_1_textured=0.2613
shapecode_1_x=0.5969
shapecode_1_y=0.57526
shapecode_1_rad=0.1106333696
shapecode_1_ang=0.045823228
shapecode_1_tex_ang=0
shapecode_1_tex_zoom=0.7795967
shapecode_1_r=0.419
shapecode_1_g=0.06983
shapecode_1_b=0.0183
shapecode_1_a=1
shapecode_1_r2=0.2436
shapecode_1_g2=0.27522
shapecode_1_b2=0.26364
shapecode_1_a2=0.82
shapecode_1_border_r=1
shapecode_1_border_g=1
shapecode_1_border_b=1
shapecode_1_border_a=0.01457
shape_1_per_frame1=x = q3;
shape_1_per_frame2=a = sw;
shape_1_per_frame3=yy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);
shape_1_per_frame4=aang = if(below(d,0.12),int(rand(1000))/1000,aang);
shape_1_per_frame5=ang = aang*4*asin(1);
shape_1_per_frame6=y = yy;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0.5434
shapecode_2_thickOutline=1
shapecode_2_textured=0.1554
shapecode_2_x=0.524376
shapecode_2_y=0.6946
shapecode_2_rad=0.4414405848
shapecode_2_ang=0.193993475
shapecode_2_tex_ang=0
shapecode_2_tex_zoom=0.7297548128
shapecode_2_r=0.406
shapecode_2_g=0.0752
shapecode_2_b=0.03
shapecode_2_a=1
shapecode_2_r2=0.2542
shapecode_2_g2=0.1748
shapecode_2_b2=0.246
shapecode_2_a2=0.18
shapecode_2_border_r=1
shapecode_2_border_g=1
shapecode_2_border_b=1
shapecode_2_border_a=0.03136
shape_2_per_frame1=d = sqrt( sqr(xx-q4)+sqr(yy-q8));
shape_2_per_frame2=y = q3- 0.4;
shape_2_per_frame3=xx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);
shape_2_per_frame4=yy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);
shape_2_per_frame5=aang = if(below(d,0.12),int(rand(1000))/1000,aang);
shape_2_per_frame6=ang = aang*4*asin(1);
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0.3628
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_x=0.5
shapecode_3_y=0.735325
shapecode_3_rad=0.0994118
shapecode_3_ang=0
shapecode_3_tex_ang=0
shapecode_3_tex_zoom=0.75369024
shapecode_3_r=1
shapecode_3_g=0.2272
shapecode_3_b=0.2465
shapecode_3_a=1
shapecode_3_r2=0
shapecode_3_g2=0.5329
shapecode_3_b2=0
shapecode_3_a2=0
shapecode_3_border_r=1
shapecode_3_border_g=1
shapecode_3_border_b=1
shapecode_3_border_a=0.06223
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
per_frame_init_1=y1 = 0.5;
per_frame_init_2=x3 = 0.5;
per_frame_init_3=x4 = 0.5;
per_frame_1=decay = 1;
per_frame_2=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_3=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_4=lastbeat = nbeat*time + (1-nbeat)*lastbeat + equal(lastbeat,0)*time;
per_frame_5=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_6=peakbass_att = max(nbeat*bass_att + (1-nbeat)*max(bass_att,peakbass_att)*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996),1.1*meanbass_att);
per_frame_7=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_8=y1 = 0.5 + yy1;
per_frame_9=spring = 28;
per_frame_10=grav = 2;
per_frame_11=resist = 0.2;
per_frame_12=vy2 = if(below(y2,1),if(above(y2,0),vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav),abs(vy2)*bounce),-abs(vy2)*bounce);
per_frame_13=dt = 0.0001;
per_frame_14=vy3 = if(below(y3,1),if(above(y3,0),vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav),abs(vy3)*bounce),-abs(vy3)*bounce);
per_frame_15=vx4 = if(below(x4,1),if(above(x4,0),vx4*(1-resist*dt) + dt*((x3-x4)*spring),abs(vx4)*bounce),-abs(vx4)*bounce);
per_frame_16=vy4 = if(below(y4,1),if(above(y4,0),vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav),abs(vy4)*bounce),-abs(vy4)*bounce);
per_frame_17=x3 = x3 + vx3;
per_frame_18=y3 = y3 + vy3;
per_frame_19=y2 = y2 + vy2;
per_frame_20=y4 = y4 + vy4;
per_frame_21=x4 = x4 + vx4;
per_frame_22=q7 = y4;
per_frame_23=q4 = cos(an2);
per_frame_24=q8 = y4;
per_frame_25=zoom = 1;
per_frame_26=q11 = x3;
per_frame_27=q12 = y3;
per_frame_28=bb = bb*0.99 + bass*0.02;
per_frame_29=mm = mm*0.99 + mid*0.02;
per_frame_30=tt = tt*0.99 + treb*0.02;
per_frame_31=mx = max(max(bb,mm),tt);
per_frame_32=mn = min(min(bb,mm),tt);
per_frame_33=ob_r = (bb-mn)/(mx-mn);
per_frame_34=ob_b = (mm-mn)/(mx-mn);
per_frame_35=ob_g = (tt-mn)/(mx-mn);
per_frame_36=q2 = atan2(vx4,vy4);
per_frame_37=q3 = s*0.1;
per_frame_38=q1 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_39=q14 = sqrt(vx3*vx3 + vy3*vy3);
per_frame_40=q5 = sqrt(vx2*vx2 + vy2*vy2);
per_frame_41=monitor = q7;
per_pixel_1=w1 = q9;
per_pixel_2=w2 = q10;
per_pixel_3=b1 = 0.075;
per_pixel_4=nd = sqrt((nx-xx)*(nx-xx)+(ny-yy)*(ny-yy));
per_pixel_5=r = 0.1;
per_pixel_6=nv = 20;
per_pixel_7=y1 = nyy -sin(ndir+1.5708)*b1;
per_pixel_8=x2 = nxx   -cos(ndir+1.5708)*b1;
per_pixel_9=y2 = nyy +sin(ndir+1.5708)*b1;
per_pixel_10=d1 = sqrt((x1-nx)*(x1-nx)+(y1-ny)*(y1-ny))-b1*2;
per_pixel_11=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_12=d2 = sqrt((x2-nx)*(x2-nx)+(y2-ny)*(y2-ny))-b1*2;
per_pixel_13=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_14=si3 = -pow(q5,3)*10;
per_pixel_15=dx = (si1*sin(y1-ny)*m1*d1  - si2*sin(y2-ny)*m1*d2 + si3*cos(ndir)*t1)*2 + nv*sin(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280)) + nv*(nx-nxx)*(nr-nd)*(1-sigmoid(nd-nr,70)) + (nv*(sin(ny-yy)*(nd-r)-(nx-xx)*(nd-r/2)) + cos(dir)*v2)*(1.00-sigmoid(nd-r,180));
per_pixel_16=dy = (-si1*sin(x1-nx)*m1*d1 + si2*sin(x2-nx)*m1*d2 - si3*sin(ndir)*t1)*2 + nv*cos(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280)) + nv*(ny-nyy)*(nr-nd)*(1-sigmoid(nd-nr,70)) + (-nv*(sin(nx-xx)*(nd-r)+(ny-yy)*(nd-r/2)) -sin(dir)*v2)*(1.00-sigmoid(nd-r,180));
per_pixel_17=ndir = -q2*1 + asin(1)*0;
per_pixel_18=nxx = w1;
per_pixel_19=nyy = 1-w2;
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with
warp_4=`    float1 d = 0.005;
warp_5=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_6=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_7=`    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_8=`    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_9=`    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;
warp_10=`
warp_11=`
warp_12=`
warp_13=`    float2 v = 0.01;
warp_14=`    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;
warp_15=`
warp_16=`    
warp_17=`    ret.x += (ret.x - GetBlur3(uv).x)*.1;
warp_18=`    ret.x += 0.004;
warp_19=`
warp_20=`
warp_21=`//--------------------------------
warp_22=`
warp_23=`    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);
warp_24=`
warp_25=`
warp_26=`
warp_27=`    v = 0.01;
warp_28=`    ret.z = tex2D( sampler_fw_main, my_uv).z;
warp_29=`    
warp_30=`    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);
warp_31=`    ret.z *= 0.8;
warp_32=`    ret.z += 0.004;
warp_33=`
warp_34=`
warp_35=`
warp_36=`//--------------------------------
warp_37=`
warp_38=`    d = 0.01;
warp_39=`    my_uv = float2(-dy,dx)*0.045;
warp_40=`
warp_41=`    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;
warp_42=`    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;
warp_43=`    my_uv += uv - float2(dx,dy)*0.03;
warp_44=`
warp_45=`
warp_46=`
warp_47=`    v = 0.01;
warp_48=`    ret.y =tex2D( sampler_fw_main, my_uv).y;
warp_49=`
warp_50=`    
warp_51=`    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;
warp_52=`//ret = 0;
warp_53=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float rad_lq = rad * length(texsize.xy)*0.5;
comp_4=`    float ang_lq = ang;
comp_5=`    float2 uv_temp1 = (uv - 0.5) * texsize.xy;
comp_6=`    float rad_hq = length(uv_temp1);
comp_7=`    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);
comp_8=`
comp_9=`    float2 uv2 = (uv - 0.5);
comp_10=`    float rad2 = rad_lq*0.8;
comp_11=`    float ang2 = ang_lq * M_INV_PI_2 + rad_lq*0.000 + time*0.00;
comp_12=`
comp_13=`
comp_14=`        // FIN TYPE
comp_15=`        float fins = 6;
comp_16=`        ang2 = frac(ang2*fins)/fins;
comp_17=`              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)
comp_18=`              ang2 = abs(ang2 - 0.5/fins);
comp_19=`
comp_20=`
comp_21=`    ang2 *= M_PI_2;
comp_22=`    uv = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;
comp_23=`uv = uv + 0.02*float2(cos(uv.y*100),sin(uv.x*120));
comp_24=`
comp_25=`    ret = 1.4*pow(saturate(GetBlur1(uv))*((tex2D(sampler_pc_main,uv)-GetBlur3(uv))),0.5); //invert
comp_26=`}

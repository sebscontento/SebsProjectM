MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.210
fDecay=0.500
fVideoEchoZoom=1.002
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=17.914
fWarpScale=12.032
fZoomExponent=100.00000
fShader=1.000
zoom=6.61093
rot=0.80000
cx=2.000
cy=0.500
dx=1.00000
dy=0.00000
warp=14.80118
sx=0.98030
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=1.000
ob_b=0.000
ob_a=0.100
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.100
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.04575
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_1_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_1_per_frame3=vg = vol_avg*.1;
wave_1_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_1_per_point1=tm = q1;
wave_1_per_point2=sp = sample*6.28*8*6;
wave_1_per_point3=
wave_1_per_point4=vol = (value1+value2)*.5;
wave_1_per_point5=it = it*above(sample,0);
wave_1_per_point6=it = it + 1;
wave_1_per_point7=rad = .5 + vol + .02;
wave_1_per_point8=ra = rad*sin(sample*3.14);
wave_1_per_point9=ox = ra*sin(sp);
wave_1_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_1_per_point11=oz = ra*cos(sp);
wave_1_per_point12=
wave_1_per_point13=xang = tm*.132;
wave_1_per_point14=sxang = 0;
wave_1_per_point15=yang = tm*.153;
wave_1_per_point16=ayang = 0;
wave_1_per_point17=zang = tm*.110;
wave_1_per_point18=azang = 0;
wave_1_per_point19=fov = 0.6 + 0.2*sin(tm);
wave_1_per_point20=fov = .5;
wave_1_per_point21=
wave_1_per_point22=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point23=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point24=ox = mx;
wave_1_per_point25=oy = my;
wave_1_per_point26=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point27=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point28=ox = mx;
wave_1_per_point29=oz = mz;
wave_1_per_point30=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point31=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point32=oy = my;
wave_1_per_point33=oz = mz;
wave_1_per_point34=
wave_1_per_point35=oz = oz - 2;
wave_1_per_point36=x = ox*fov/oz + 0.5;
wave_1_per_point37=x = (x-.5)*0.75 + 0.5;
wave_1_per_point38=y = oy*fov/oz + 0.5;
wave_1_per_point39=
wave_1_per_point40=r = 1;
wave_1_per_point41=g = .25+.25*sin(sp);
wave_1_per_point42=b = 0;
wave_1_per_point43=a = .5 + (oz+2)*.5;
wave_1_per_point44=a = a*below(z,2);
wave_1_per_point45=minrgb = min(r,min(g,b));
wave_1_per_point46=maxrgb = max(r,max(g,b));
wave_1_per_point47=l = (maxrgb-minrgb)*.5;
wave_1_per_point48=diff = maxrgb-minrgb;
wave_1_per_point49=sum = maxrgb+minrgb;
wave_1_per_point50=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_1_per_point51=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_1_per_point52=h = h*0.1666666;
wave_1_per_point53=h = if(below(h,0),0,if(above(h,1),1,h));
wave_1_per_point54=
wave_1_per_point55=h = h + time*0.05*1.324 + .1;
wave_1_per_point56=h = h - int(h);
wave_1_per_point57=
wave_1_per_point58=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_1_per_point59=tmpa = 2*l - tmpb;
wave_1_per_point60=hvr = h + .333333;
wave_1_per_point61=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_1_per_point62=hvg = h;
wave_1_per_point63=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_1_per_point64=hvb = h - .333333;
wave_1_per_point65=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_1_per_point66=
wave_1_per_point67=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_1_per_point68=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_1_per_point69=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_2_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_2_per_frame3=vg = vol_avg*.1;
wave_2_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_2_per_point1=tm = q1;
wave_2_per_point2=sp = sample*6.28*8*6;
wave_2_per_point3=
wave_2_per_point4=vol = (value1+value2)*.5;
wave_2_per_point5=it = it*above(sample,0);
wave_2_per_point6=it = it + 1;
wave_2_per_point7=rad = .5 + vol + .01;
wave_2_per_point8=ra = rad*sin(sample*3.14);
wave_2_per_point9=ox = ra*sin(sp);
wave_2_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_2_per_point11=oz = ra*cos(sp);
wave_2_per_point12=
wave_2_per_point13=xang = tm*.132;
wave_2_per_point14=sxang = 0;
wave_2_per_point15=yang = tm*.153;
wave_2_per_point16=ayang = 0;
wave_2_per_point17=zang = tm*.110;
wave_2_per_point18=azang = 0;
wave_2_per_point19=fov = 0.6 + 0.2*sin(tm);
wave_2_per_point20=fov = .5;
wave_2_per_point21=
wave_2_per_point22=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point23=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point24=ox = mx;
wave_2_per_point25=oy = my;
wave_2_per_point26=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point27=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point28=ox = mx;
wave_2_per_point29=oz = mz;
wave_2_per_point30=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point31=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point32=oy = my;
wave_2_per_point33=oz = mz;
wave_2_per_point34=
wave_2_per_point35=oz = oz - 2;
wave_2_per_point36=x = ox*fov/oz + 0.5;
wave_2_per_point37=x = (x-.5)*0.75 + 0.5;
wave_2_per_point38=y = oy*fov/oz + 0.5;
wave_2_per_point39=
wave_2_per_point40=r = 1;
wave_2_per_point41=g = .25+.25*sin(sp);
wave_2_per_point42=b = 0;
wave_2_per_point43=a = .5 + (oz+2)*.5;
wave_2_per_point44=a = a*below(z,2);
wave_2_per_point45=minrgb = min(r,min(g,b));
wave_2_per_point46=maxrgb = max(r,max(g,b));
wave_2_per_point47=l = (maxrgb-minrgb)*.5;
wave_2_per_point48=diff = maxrgb-minrgb;
wave_2_per_point49=sum = maxrgb+minrgb;
wave_2_per_point50=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_2_per_point51=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_2_per_point52=h = h*0.1666666;
wave_2_per_point53=h = if(below(h,0),0,if(above(h,1),1,h));
wave_2_per_point54=
wave_2_per_point55=h = h + time*0.05*1.324 + .05;
wave_2_per_point56=h = h - int(h);
wave_2_per_point57=
wave_2_per_point58=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_2_per_point59=tmpa = 2*l - tmpb;
wave_2_per_point60=hvr = h + .333333;
wave_2_per_point61=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_2_per_point62=hvg = h;
wave_2_per_point63=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_2_per_point64=hvb = h - .333333;
wave_2_per_point65=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_2_per_point66=
wave_2_per_point67=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_2_per_point68=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_2_per_point69=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_3_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_3_per_frame3=vg = vol_avg*.1;
wave_3_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_3_per_point1=tm = q1;
wave_3_per_point2=sp = sample*6.28*8*6;
wave_3_per_point3=
wave_3_per_point4=vol = (value1+value2)*.5;
wave_3_per_point5=it = it*above(sample,0);
wave_3_per_point6=it = it + 1;
wave_3_per_point7=rad = .5 + vol;
wave_3_per_point8=ra = rad*sin(sample*3.14);
wave_3_per_point9=ox = ra*sin(sp);
wave_3_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_3_per_point11=oz = ra*cos(sp);
wave_3_per_point12=
wave_3_per_point13=xang = tm*.132;
wave_3_per_point14=sxang = 0;
wave_3_per_point15=yang = tm*.153;
wave_3_per_point16=ayang = 0;
wave_3_per_point17=zang = tm*.110;
wave_3_per_point18=azang = 0;
wave_3_per_point19=fov = 0.6 + 0.2*sin(tm);
wave_3_per_point20=fov = .5;
wave_3_per_point21=
wave_3_per_point22=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point23=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point24=ox = mx;
wave_3_per_point25=oy = my;
wave_3_per_point26=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point27=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point28=ox = mx;
wave_3_per_point29=oz = mz;
wave_3_per_point30=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point31=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point32=oy = my;
wave_3_per_point33=oz = mz;
wave_3_per_point34=
wave_3_per_point35=oz = oz - 2;
wave_3_per_point36=x = ox*fov/oz + 0.5;
wave_3_per_point37=x = (x-.5)*0.75 + 0.5;
wave_3_per_point38=y = oy*fov/oz + 0.5;
wave_3_per_point39=
wave_3_per_point40=r = 1;
wave_3_per_point41=g = .25+.25*sin(sp);
wave_3_per_point42=b = 0;
wave_3_per_point43=a = .5 + (oz+2)*.5;
wave_3_per_point44=a = a*below(z,2);
wave_3_per_point45=minrgb = min(r,min(g,b));
wave_3_per_point46=maxrgb = max(r,max(g,b));
wave_3_per_point47=l = (maxrgb-minrgb)*.5;
wave_3_per_point48=diff = maxrgb-minrgb;
wave_3_per_point49=sum = maxrgb+minrgb;
wave_3_per_point50=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_3_per_point51=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_3_per_point52=h = h*0.1666666;
wave_3_per_point53=h = if(below(h,0),0,if(above(h,1),1,h));
wave_3_per_point54=
wave_3_per_point55=h = h + time*0.05*1.324;
wave_3_per_point56=h = h - int(h);
wave_3_per_point57=
wave_3_per_point58=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_3_per_point59=tmpa = 2*l - tmpb;
wave_3_per_point60=hvr = h + .333333;
wave_3_per_point61=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_3_per_point62=hvg = h;
wave_3_per_point63=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_3_per_point64=hvb = h - .333333;
wave_3_per_point65=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_3_per_point66=
wave_3_per_point67=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_3_per_point68=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_3_per_point69=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.44484
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.99999
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=bd=above(bass+treb+mid,6)+bd*.975;
shape_0_per_frame2=sides=cos(time*.02+(bd*.1))*20+20;
shape_0_per_frame3=border_r=sin(time*.331+.3)*.5+.5;
shape_0_per_frame4=border_g=sin(time*.559+.3)*.5+.5;
shape_0_per_frame5=border_b=sin(time*.772+.4)*.5+.5;
shape_0_per_frame6=
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.44484
shapecode_1_ang=2.89026
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.22019
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=bd=above(bass+treb+mid,6)+bd*.975;
shape_1_per_frame2=sides=cos(time*.02+(bd*.1))*20+20;
shape_1_per_frame3=r=sin(time*.331)*.5+.5;
shape_1_per_frame4=g=sin(time*.559)*.5+.5;
shape_1_per_frame5=b=sin(time*.772)*.5+.5;
shape_1_per_frame6=border_r=r;
shape_1_per_frame7=border_g=g;
shape_1_per_frame8=border_b=b;
shape_1_per_frame9=rad=sin(time*.4)*.2+.5;
shape_1_per_frame10=
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.880
shapecode_2_rad=1.97884
shapecode_2_ang=0.62832
shapecode_2_tex_ang=6.28319
shapecode_2_tex_zoom=0.51341
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=tex_ang=sin(time*.0001)*628+628;
shape_2_per_frame2=y=cos(time*.003)*.5+.5;
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.89269
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.070
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=warp = 0;
per_frame_45=wave_mystery = 2;
per_frame_46=wave_a = 0;
per_frame_47=q8 =oldq8+ 0.005*(pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps) + 0.035;
per_frame_48=oldq8 = q8;
per_frame_49=zoom = 1.9 +0.0155*cos(q8*0.423);
per_frame_50=rot = 0.0128*sin(1.343*q8);
per_frame_51=dx = 0.0035*sin(q8*0.646);
per_frame_52=dy = 0.0035*sin(q8*0.314);
per_frame_53=cx = 0.5 + 0.005*sin(0.497*q8);
per_frame_54=cy = 0.5 +0.005*sin(0.413*q8);
per_frame_55=//ob_size = 0.5 + 0.1*sin(q8*0.5251);
per_frame_56=//ib_r = 0.5 + 0.499*sin(q8*0.2543);
per_frame_57=//ib_b = 0.5 + 0.499*sin(q8*0.4643);
per_frame_58=//ib_g = 0.5 + 0.499*sin(q8*0.3153);
per_frame_59=//ob_r = 0.5 + 0.499*sin(q8*0.493);
per_frame_60=//ob_b = 0.5 + 0.499*sin(q8*0.6013);
per_frame_61=//ob_g = 0.5 + 0.499*sin(q8*0.223);
per_frame_62=q11=sin(time)/4-.25;
per_frame_63=q12=sin(time)/4-.25;
per_pixel_1=zoomexp = 1+rad;
per_pixel_2=dx = dx +0.01*rad;
per_pixel_3=dy = dy +0.01*rad;
per_pixel_4=rot = rot*0.5*(pow(rad,4*rad));
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw*8;
comp_4=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
comp_6=`    float2 light_pos = float2(q11,q12);
comp_7=`    float3 col = float3(24,24,24);
comp_8=`    float c = 4;
comp_9=`    float dd = 16;
comp_10=`    float3 plastic;
comp_11=`    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));
comp_12=`    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));
comp_13=`    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));
comp_14=`
comp_15=`    ret = plastic*GetPixel(uv);
comp_16=`
comp_17=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.700
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.060
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.000
wave_y=0.000
ob_size=0.050
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=200
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.01000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=t1 = sample+time*.2;
wave_0_per_point2=
wave_0_per_point3=x = .35* sin (6*t1) ;
wave_0_per_point4=my = .35* cos (3*t1)* sin (-10+20*sample) ;
wave_0_per_point5=mz = .35* cos (7*t1) * cos (-5+10*sample) ;
wave_0_per_point6= 
wave_0_per_point7=
wave_0_per_point8=/////// rotations... by flexi
wave_0_per_point9=
wave_0_per_point10=d = 1; 
wave_0_per_point11=zoom = 1;
wave_0_per_point12=
wave_0_per_point13=w1 = .3*time;
wave_0_per_point14=w2 = .1*time;
wave_0_per_point15=w3 = .2*time;
wave_0_per_point16=
wave_0_per_point17=x1 = cos(w1)*mx + sin(w1)*my;
wave_0_per_point18=y1 = -sin(w1)*mx + cos(w1)*my;
wave_0_per_point19=z1 = mz;
wave_0_per_point20=
wave_0_per_point21=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_0_per_point22=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_0_per_point23=y2 = y1;
wave_0_per_point24=
wave_0_per_point25=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_0_per_point26=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_0_per_point27=x3 = x2;
wave_0_per_point28=
wave_0_per_point29=
wave_0_per_point30=// perspective calculation
wave_0_per_point31=
wave_0_per_point32=l = sqrt(x3*x3 + y3*y3);
wave_0_per_point33=w = atan2(x3,y3);
wave_0_per_point34=p = tan(asin(1) + atan2(d+z3,l));
wave_0_per_point35=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_0_per_point36=
wave_0_per_point37=my_x = zoom*sin(w)*p;
wave_0_per_point38=my_y = zoom*cos(w)*p;
wave_0_per_point39=
wave_0_per_point40=x = 0.5 + my_x;
wave_0_per_point41=y = 0.5 + my_y;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=200
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.24699
shapecode_0_r=1.000
shapecode_0_g=0.400
shapecode_0_b=0.300
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.510
shape_0_per_frame1=sample=instance/num_inst;
shape_0_per_frame2=rad=.22*sample;
shape_0_per_frame3=r=sample;
shape_0_per_frame4=ang=(1-sample)*time*15;
shape_0_per_frame5=sides=(1-sample)* 14;
shape_0_per_frame6=
shape_0_per_frame7=
shape_0_per_frame8=t1 = sample+time*.2;
shape_0_per_frame9=mx = .4* (.6*sin (7*t1)+.4*sin (4.3*t1)) ;
shape_0_per_frame10=my = .4*  (.6*cos (3.3*t1)+.4*cos (6.9*t1))* sin (-10+20*sample) ;
shape_0_per_frame11=mz = .4* (.6*cos (4.1*t1)+.4*cos (6.9*t1)) * cos (-5+10*sample) ;
shape_0_per_frame12= 
shape_0_per_frame13=
shape_0_per_frame14=/////// rotations... by flexi
shape_0_per_frame15=
shape_0_per_frame16=d = 1; 
shape_0_per_frame17=zoom = 1;
shape_0_per_frame18=
shape_0_per_frame19=w1 = .3*time;
shape_0_per_frame20=w2 = .1*time;
shape_0_per_frame21=w3 = .2*time;
shape_0_per_frame22=
shape_0_per_frame23=x1 = cos(w1)*mx + sin(w1)*my;
shape_0_per_frame24=y1 = -sin(w1)*mx + cos(w1)*my;
shape_0_per_frame25=z1 = mz;
shape_0_per_frame26=
shape_0_per_frame27=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame28=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame29=y2 = y1;
shape_0_per_frame30=
shape_0_per_frame31=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame32=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame33=x3 = x2;
shape_0_per_frame34=
shape_0_per_frame35=
shape_0_per_frame36=// perspective calculation
shape_0_per_frame37=
shape_0_per_frame38=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame39=w = atan2(x3,y3);
shape_0_per_frame40=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame41=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame42=
shape_0_per_frame43=my_x = zoom*sin(w)*p;
shape_0_per_frame44=my_y = zoom*cos(w)*p;
shape_0_per_frame45=
shape_0_per_frame46=x = 0.5 + my_x;
shape_0_per_frame47=y = 0.5 + my_y;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=
per_frame_init_2=avgdbass=0.01;
per_frame_init_3=avgdtreb=0.01;
per_frame_init_4=
per_frame_init_5=last_raw_bass = .1;
per_frame_init_6=last_raw_treb = .1;
per_frame_init_7=
per_frame_init_8=
per_frame_init_9=avgbr=0.7;
per_frame_init_10=avgbr2=0.7;
per_frame_init_11=beatb=0;
per_frame_init_12=beatb2=0;
per_frame_init_13=lbt2=time;
per_frame_init_14=lbt=time;
per_frame_init_15=ph=0;
per_frame_init_16=phase=0;
per_frame_init_17=bool=0;
per_frame_init_18=const=.01;
per_frame_init_19=ph2=0;
per_frame_init_20=phase2=0;
per_frame_init_21=bool2=0;
per_frame_init_22=const2=.01;
per_frame_init_23=
per_frame_init_24=mtime=100+bass_att*1000;
per_frame_init_25=mtime2=100+treb_att*1000;
per_frame_init_26=
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.99;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=num_samples=gmegabuf(0);
per_frame_19=num_slices = 4;
per_frame_20=slice_size = num_samples/num_slices;
per_frame_21=raw_bass = 0;
per_frame_22=raw_treb = 0;
per_frame_23=i=0;
per_frame_24=loop(slice_size,
per_frame_25= exec3(
per_frame_26=  raw_bass = raw_bass + gmegabuf(i+1+slice_size*.3),
per_frame_27=  raw_treb = raw_treb + gmegabuf(i+1+slice_size*(num_slices*.7)),
per_frame_28=  i=i+1
per_frame_29= )
per_frame_30=);
per_frame_31=raw_bass = raw_bass * 30/fps;
per_frame_32=raw_treb = raw_treb * 30/fps;
per_frame_33=
per_frame_34=raw_bass = raw_bass/num_samples;
per_frame_35=raw_treb = raw_treb/num_samples;
per_frame_36=
per_frame_37=dbass = raw_bass - last_raw_bass;
per_frame_38=dtreb = raw_treb - last_raw_treb;
per_frame_39=
per_frame_40=
per_frame_41=avgdbass=avgdbass*.99+abs(dbass)*.01;
per_frame_42=avgdtreb=avgdtreb*.99+abs(dtreb)*.01;
per_frame_43=
per_frame_44=last_raw_bass = raw_bass;
per_frame_45=last_raw_treb = raw_treb;
per_frame_46=
per_frame_47=is_beat = above(abs(dbass), avgdbass*2);
per_frame_48=is_beat = is_beat * above(time-lbt,avgbr*.5);
per_frame_49=beatb = is_beat;
per_frame_50=
per_frame_51=
per_frame_52=is_beat = above(abs(dtreb), avgdtreb*2);
per_frame_53=is_beat = is_beat * above(time-lbt2,avgbr2*.5);
per_frame_54=monitor = raw_treb;
per_frame_55=beatb2 = is_beat;
per_frame_56=
per_frame_57=
per_frame_58=//beatrate calc
per_frame_59=avgbr=beatb*(avgbr*.9+(time-lbt)*.1)+(1-beatb)*max(avgbr+(1/avgbr)*.0001,0); // avg beat rate
per_frame_60=avgbr2=beatb2*(avgbr2*.9+(time-lbt2)*.1)+(1-beatb2)*max(avgbr2+(1/avgbr2)*.00001,0);
per_frame_61=
per_frame_62=lbt=time*beatb+(1-beatb)*lbt; //last beat time
per_frame_63=lbt2=time*beatb2+(1-beatb2)*lbt2;
per_frame_64=
per_frame_65=
per_frame_66=ph=(time-lbt)*(60/avgbr)*const;
per_frame_67=phase=max(min( ph, 1 ),0);
per_frame_68=const=const*(1-beatb)+beatb*( const+ (.002*bool) );
per_frame_69=bool=below(phase,.98)*(.98-ph)-above(phase,.98)*(ph*.5);
per_frame_70=
per_frame_71=ph2=(time-lbt2)*(60/avgbr2)*const2;
per_frame_72=phase2=max(min( ph2, 1 ),0);
per_frame_73=const2=const2*(1-beatb2)+beatb2*( const2+ (.002*bool2) );
per_frame_74=bool2=below(phase2,.98)*(.98-ph2)-above(phase2,.98)*(ph2*.5);
per_frame_75=
per_frame_76=
per_frame_77=
per_frame_78=bc=bc+beatb;
per_frame_79=bc2=bc2+beatb2;
per_frame_80=
per_frame_81=mtime=mtime+( (avgdbass*(60/avgbr))*(1+beatb) )*(1/fps);
per_frame_82=mtime2=mtime2+( (avgdtreb*(60/avgbr2))*(1+beatb2) )*(1/fps);
per_frame_83=q1=1-phase;
per_frame_84=q2=1-phase2;
per_frame_85=q3=bc;
per_frame_86=q4=bc2;
per_frame_87=
per_frame_88=
per_frame_89=
per_frame_90=q5=mtime;
per_frame_91=q6=mtime2;
per_frame_92=q7=sin(mtime)*.5+.5;
per_frame_93=q8=sin(mtime2)*.5+.5;
per_frame_94=q9=sin(mtime*.1)*.5+.5;
per_frame_95=q10=sin(mtime2*.1)*.5+.5;
per_frame_96=q11=avgdbass;
per_frame_97=q12=avgdtreb;
per_frame_98=
per_frame_99=q14=60/avgbr;
per_frame_100=q15=60/avgbr2;
per_frame_101=monitor = q14+floor(q15) *100000;
per_frame_102=monitor = avgbr + floor(q14) * 100;
per_frame_103=q20=beatb;
per_frame_104=q21=beatb2;
per_frame_105=q22=bc%4;
per_frame_106=q23=bc2%4;
per_frame_107=//monitor=bc;
per_frame_108=
per_frame_109=warp=0;
per_frame_110=wrap=1;
per_frame_111=zoom=1;
per_frame_112=
per_frame_113=s=0.8+q20+q21;
per_frame_114=ob_r=sin((mtime*1.2-mtime2*1.3)*s)*.5+.5;
per_frame_115=ob_g=sin((mtime*0.9+mtime2*1.4)*s)*.5+.5;
per_frame_116=ob_b=sin((mtime2*1.5-mtime*0.8)*s)*.5+.5;
per_frame_117=ob_a = min(1+(beatb+beatb2)+0.001,1);
per_frame_118=//ob_r=ob_g=ob_b=1;
per_frame_119=
per_frame_120=bb = bb*0.99 + bass*0.02;
per_frame_121=mm = mm*0.99 + mid*0.02;
per_frame_122=tt = tt*0.99 + treb*0.02;
per_frame_123=
per_frame_124=mx = max(max(bb,mm),tt);
per_frame_125=mn = min(min(bb,mm),tt);
per_frame_126=
per_frame_127=h1 = (bb-mn)/(mx-mn);
per_frame_128=h2 = (mm-mn)/(mx-mn);
per_frame_129=h3 = (tt-mn)/(mx-mn);
per_frame_130=
per_frame_131=v = 0.1333/fps;
per_frame_132=bm = bm + (h1-h2)*v;
per_frame_133=mt = mt + (h2-h3)*v;
per_frame_134=bt = bt + (h1-h3)*v;
per_frame_135=
per_frame_136=w = bm*2;
per_frame_137=q3 = sin(w);
per_frame_138=q4 = cos(w);
per_frame_139=
per_frame_140=
per_frame_141=q10 = bm;
per_frame_142=q11 = mt;
per_frame_143=q12 = bt;
per_pixel_1=//rot=(q2-q1);
warp_1=` float2 cmul(float2 mul1, float2 mul2) {
warp_2=`   float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);
warp_3=`   return mul;
warp_4=` }
warp_5=` float2 cdiv(float2 div1, float2 div2) {
warp_6=`   float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),
warp_7=`   (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );
warp_8=`   return div;
warp_9=` }
warp_10=` float2 cpow(float2 base, float ex) {
warp_11=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_12=`   float thetaz = atan2(base.y, base.x);
warp_13=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_14=`   return pow;
warp_15=` }
warp_16=` float2 cexp(float2 base, float2 ex) {
warp_17=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_18=`   float thetaz = atan2(base.y, base.x);
warp_19=`   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);
warp_20=`   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));
warp_21=`   return sol;
warp_22=` }
warp_23=`
warp_24=`
warp_25=` float getRad(float2 uv1) { 
warp_26=`   return sqrt( pow(0.5-uv1.x,2) + pow(0.5-uv1.y,2) );
warp_27=` }
warp_28=` float getAng(float2 uv1) {
warp_29=`   float2 uv2 = (uv1-0.5)*aspect.xy;
warp_30=`   return atan2(uv2.y,uv2.x);
warp_31=` }
warp_32=`
warp_33=`sampler sampler_rand02;
warp_34=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_35=`shader_body
warp_36=`{
warp_37=`    // sample previous frame
warp_38=`
warp_39=`
warp_40=`   float2 zoom = 2;//-rad*((q3+q4)%5);
warp_41=`   float2 c;
warp_42=`    c = float2(1+q8,1+q7)+0.9;
warp_43=`//c=float2(0.7,0.6);
warp_44=`   float2 z = (uv-0.5)*zoom;
warp_45=`   float zp = 0.3+(abs(q3-q4+(q1-q2)*2)%9+5)*0.08;
warp_46=`
warp_47=`   float2 uv2;
warp_48=`for (int i = 0; i < 3; i++)
warp_49=`{
warp_50=`  z = cpow(z,zp)%c;
warp_51=`}
warp_52=`
warp_53=`uv2 = z;
warp_54=`
warp_55=`uv2 = 0.5 + (1.0 - abs( frac( uv2 * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders
warp_56=`
warp_57=`    float mrad = getRad(uv2);
warp_58=`    float mang = getAng(uv2);
warp_59=`
warp_60=`
warp_61=`    float3 fractal = tex2D( sampler_main, uv2 ).xyz;
warp_62=`    float3 blured = GetBlur1(uv2);
warp_63=`
warp_64=`//float flag = mang*0.3 < mrad-0.7;
warp_65=`ret = fractal*0.5;
warp_66=`ret *= mang*0.3 < mrad-0.7;
warp_67=`ret += (ret==0)*blured*2;
warp_68=`
warp_69=`    ret *= 0.9; //or try: ret -= 0.004;
warp_70=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_71=`                      ((uv.xyy*q27
warp_72=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_73=`                      ).xyz*
warp_74=`                      float3(1,1,0)*0.05 + 
warp_75=`                      time*float3(0,0,1)*q29
warp_76=`                     );
warp_77=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; 
warp_78=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; 
warp_79=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; 
warp_80=`
warp_81=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`
comp_39=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));
comp_41=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`
comp_43=`float2 uv1 = uv-.5;
comp_44=`
comp_45=`float3 ret1 = tex2D(sampler_main, uv) * (1-rad);
comp_46=`
comp_47=`
comp_48=`float2 hor = float2 (texsize.z,0);
comp_49=`float2 ver = float2 (0,texsize.w);
comp_50=`float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_51=`float dy = GetPixel (uv-ver) - GetPixel (uv+ver);
comp_52=`float2 dz = float2 (dx,dy);
comp_53=`
comp_54=`uv1 = uv1*0+.3*cos(uv1*2) - dz;;
comp_55=`float dots = saturate(.04/length(uv1));
comp_56=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;
comp_57=`float3 dots2 = saturate(.04/length(uv1));
comp_58=`
comp_59=`
comp_60=`ret = dots + GetPixel(uv)*12*dots2;
comp_61=`//ret = GetPixel(uv);
comp_62=`ret*=.3;
comp_63=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_64=`                      ((uv.xyy*q28
comp_65=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_66=`                      ).xyz*
comp_67=`                      float3(1,1,0)*0.05 + 
comp_68=`                      time*float3(0,0,1)*q30 
comp_69=`                     );
comp_70=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; 
comp_71=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; 
comp_72=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; 
comp_73=`}

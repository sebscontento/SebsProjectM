MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=1.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.030
zoom=0.99951
rot=0.00000
cx=-1.000
cy=0.500
dx=0.00000
dy=0.00000
warp=0.72142
sx=1.00000
sy=0.98030
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.500
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=274
wavecode_0_sep=256
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.050
wave_0_init1=time1=100;
wave_0_init2=time2=1000;
wave_0_per_frame1=time1=time1+sin(q6*q4*.001+bass)*.005+q1*bass*.04;
wave_0_per_frame2=time2=time2+sin(q6*q4*.001+treb)*.005+q1*treb*.045;
wave_0_per_frame3=
wave_0_per_frame4=t1=time1;
wave_0_per_frame5=t2=time2;
wave_0_per_frame6=
wave_0_per_frame7=
wave_0_per_point1=i=sample*6.28;
wave_0_per_point2=
wave_0_per_point3=x1=sin(i+t2)*sin(i*t1);
wave_0_per_point4=y1=cos(i+t1)*sin(i*t2);
wave_0_per_point5=
wave_0_per_point6=x2=x1*.5+.5;
wave_0_per_point7=y2=y1*.5+.5;
wave_0_per_point8=
wave_0_per_point9=
wave_0_per_point10=x=x2;
wave_0_per_point11=y=y2;
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=
wave_0_per_point17=// This is the version you should use...
wave_0_per_point18=// ----------- start copying -----------
wave_0_per_point19=hue=(.1*q2+treb)*sample; // change this
wave_0_per_point20=h=6*(hue-int(hue));
wave_0_per_point21=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
wave_0_per_point22=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
wave_0_per_point23=t3=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
wave_0_per_point24=t4=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
wave_0_per_point25=t5=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
wave_0_per_point26=// ----------- end ----------------
wave_0_per_point27=
wave_0_per_point28=
wave_0_per_point29=r=t3;
wave_0_per_point30=g=t4;
wave_0_per_point31=b=t5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=time1=100;
wave_1_init2=time2=1000;
wave_1_per_frame1=time1=time1+sin(q6*q4*.001+bass*q2*rad)*.005+q1*bass*.04;
wave_1_per_frame2=time2=time2+sin(q6*q4*.001+treb*q2*rad)*.005+q1*treb*.045;
wave_1_per_frame3=
wave_1_per_frame4=t1=time1;
wave_1_per_frame5=t2=time2;
wave_1_per_frame6=
wave_1_per_frame7=
wave_1_per_point1=i=sample*6.28;
wave_1_per_point2=
wave_1_per_point3=x1=sin(i+t2)*sin(i*t1);
wave_1_per_point4=y1=cos(i+t1)*sin(i*t2);
wave_1_per_point5=
wave_1_per_point6=x2=x1*.5+.5;
wave_1_per_point7=y2=y1*.5+.5;
wave_1_per_point8=
wave_1_per_point9=
wave_1_per_point10=x=x2;
wave_1_per_point11=y=y2;
wave_1_per_point12=
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=
wave_1_per_point16=
wave_1_per_point17=// This is the version you should use...
wave_1_per_point18=// ----------- start copying -----------
wave_1_per_point19=hue=(.1*q2+treb)*sample; // change this
wave_1_per_point20=h=6*(hue-int(hue));
wave_1_per_point21=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
wave_1_per_point22=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
wave_1_per_point23=t3=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
wave_1_per_point24=t4=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
wave_1_per_point25=t5=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
wave_1_per_point26=// ----------- end ----------------
wave_1_per_point27=
wave_1_per_point28=
wave_1_per_point29=r=t3;
wave_1_per_point30=g=t4;
wave_1_per_point31=b=t5;
wavecode_2_enabled=1
wavecode_2_samples=262
wavecode_2_sep=256
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.200
wave_2_init1=time1=100;
wave_2_init2=time2=1000;
wave_2_per_frame1=time1=time1+sin(q2*q4*.001+bass*q2)*.005+q1*bass*.04;
wave_2_per_frame2=time2=time2+cos(q2*q4*.002+treb*(1-q2))*.005+q1*treb*.045;
wave_2_per_frame3=
wave_2_per_frame4=t1=time1;
wave_2_per_frame5=t2=time2;
wave_2_per_frame6=
wave_2_per_frame7=
wave_2_per_point1=i=sample*6.28;
wave_2_per_point2=
wave_2_per_point3=x1=sin(i+t2)*sin(i*t1);
wave_2_per_point4=y1=cos(i+t1)*sin(i*t2);
wave_2_per_point5=
wave_2_per_point6=x2=x1*.5+.5;
wave_2_per_point7=y2=y1*.5+.5;
wave_2_per_point8=
wave_2_per_point9=
wave_2_per_point10=x=x2;
wave_2_per_point11=y=y2;
wave_2_per_point12=
wave_2_per_point13=
wave_2_per_point14=
wave_2_per_point15=
wave_2_per_point16=
wave_2_per_point17=
wave_2_per_point18=r=0;
wave_2_per_point19=g=0;
wave_2_per_point20=b=0;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.15157
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.400
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x=sin(q6*.2+(1-q2)*q4*3.14)*.5+.5;
shape_0_per_frame2=y=cos(q6*.1+q2*3.14)*.5+.5;
shape_0_per_frame3=
shape_0_per_frame4=ang=-q2*3.14;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.95320
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.400
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x=cos(q6*.2+(1-q2)*q4*3.14)*.5+.5;
shape_1_per_frame2=y=tan(q6*.1+q2*3.14)*.1+.5;
shape_1_per_frame3=
shape_1_per_frame4=ang=-q6*.1+q2;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.05293
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00182
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.400
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x=cos(q6*.2+q2*q4*3.14)*.1+sin(q6*q4*.001+q2)*.1+.5;
shape_2_per_frame2=y=cos(q6*.1+(1-q2*x)*3.14)*.5+.5;
shape_2_per_frame3=
shape_2_per_frame4=ang=q2*3.14*q4;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=bl = 3.8;
per_frame_26=ul = 7.9;
per_frame_27=rate = 11.9;
per_frame_28=cha = .01;
per_frame_29=
per_frame_30=gv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);
per_frame_31=
per_frame_32=
per_frame_33=
per_frame_34=monitor = gv;
per_frame_35=
per_frame_36=wave_a = 0;
per_frame_37=
per_frame_38=tic = min(time - tin,1);
per_frame_39=tin = time;
per_frame_40=
per_frame_41=ra = 10;
per_frame_42=
per_frame_43=
per_frame_44=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_45=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_46=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_47=
per_frame_48=rb = 1;
per_frame_49=vav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);
per_frame_50=q1 = treb_avg;
per_frame_51=q2 = mid_avg;
per_frame_52=q3 = bass_avg;
per_frame_53=
per_frame_54=db = bass - bass_avg;
per_frame_55=
per_frame_56=it = (it + tic)*below(it,1);
per_frame_57=
per_frame_58=rb = .5*(1/tic);
per_frame_59=bvb = tic*(bass*rb + (1/tic-rb)*bvb);
per_frame_60=bd = bass - bvb;
per_frame_61=
per_frame_62=vm = vm - tic + swi;
per_frame_63=swi = above(bd - vm,0);
per_frame_64=
per_frame_65=q4 = 1-swi;
per_frame_66=
per_frame_67=cm = if(above(iter,30) + equal(time,0),int(rand(3)) + 1,cm);
per_frame_68=iter = (iter + tic)*(1-above(iter,30));
per_frame_69=q5 = if(equal(cm,0),3,cm);
per_frame_70=
per_frame_71=cma = if(above(itar,5) + equal(time,0),int(vav*5),cma);
per_frame_72=itar = (itar + tic)*(1-above(itar,5));
per_frame_73=
per_frame_74=q6 = int(vav*5);
per_frame_75=
per_frame_76=
per_frame_77=decay=0.97;
per_frame_78=zoom=1.01;
per_frame_79=sx=1;sy=1;
per_pixel_1=warp = bass;
warp_1=`sampler sampler_fire_base;
warp_2=`sampler sampler_fire_dis4;
warp_3=`sampler sampler_fire_alpha5;
warp_4=`float3 ret1;
warp_5=`
warp_6=`shader_body
warp_7=`{
warp_8=`
warp_9=`    //ret = tex2D(sampler_main, uv).xyz;
warp_10=`    ret1 = tex2D(sampler_fire_base, float2(uv.x, uv.y)).xyz;
warp_11=`    
warp_12=`    float3 fire = tex2D(sampler_fire_dis4, float2(uv.x+q4, uv.y+q2)).xyz;
warp_13=`    fire += tex2D(sampler_fire_dis4, float2(uv.x+q5, uv.y+q3)).xyz; 
warp_14=`    fire += tex2D(sampler_fire_dis4, float2(uv.x+q6, uv.y+q1)).xyz;
warp_15=`    
warp_16=`    ret1 *= fire;
warp_17=`    
warp_18=`    ret1 *= (uv_orig.y + q11/2);
warp_19=`
warp_20=`    float dy = .02*lum(GetBlur1(uv_orig))/uv_orig;
warp_21=`
warp_22=`    ret = ret1*.3 + GetPixel(uv_orig+float2(0,dy))*.7;
warp_23=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_24=`                      ((uv.xyy*q27
warp_25=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_26=`                      ).xyz*
warp_27=`                      float3(1,1,0)*0.05 + 
warp_28=`                      time*float3(0,0,1)*q29
warp_29=`                     );
warp_30=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_31=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_32=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_33=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float dist = 1;
comp_11=`float inten = 1;
comp_12=`ret1 = 0;
comp_13=`int anz = 3;
comp_14=`int n = 1;
comp_15=`while (n <= anz) {
comp_16=`    ang2 = n/anz;
comp_17=`    c = (ang2);
comp_18=`    s = 1-(ang2);
comp_19=`    uv2.x =  uv.x*c - uv.y*s;
comp_20=`    uv2.y =  uv.x*s + uv.y*c;
comp_21=`    uv2 *= aspect.yx;
comp_22=`    dist = 1-frac(.25*n+q29); //evtl sqrt !
comp_23=`    inten =  pow(dist,.5)*(1-dist*dist)*2;
comp_24=`    float2 uv3 = frac(3*uv2*dist + .5 + q31);;
comp_25=`    neu =  GetPixel (uv3) + 2*GetBlur1(uv3);
comp_26=`
comp_27=`    ret1 = max(ret1*.9,neu*inten);
comp_28=`n++;
comp_29=`}
comp_30=`
comp_31=`ret = .5*ret1 + 0.5*float3(0,0,.3)*(.5+uv.y) ;
comp_32=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_33=`                      ((uv.xyy*q28
comp_34=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_35=`                      ).xyz*
comp_36=`                      float3(1,1,0)*0.05 + 
comp_37=`                      time*float3(0,0,1)*q31
comp_38=`                     );
comp_39=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_40=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_41=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_42=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.200
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.250
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10260
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*sin(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=rad=(bass+treb)/100;
shape_0_per_frame15=a=(above(bass+mid+treb,.8));
shape_0_per_frame16=r=int(rand(100))/100;
shape_0_per_frame17=g=int(rand(100))/100;
shape_0_per_frame18=b=int(rand(100))/100;
shape_0_per_frame19=r2=int(rand(100))/100;
shape_0_per_frame20=g2=int(rand(100))/100;
shape_0_per_frame21=b2=int(rand(100))/100;
shape_0_per_frame22=r_border=int(rand(100))/100;
shape_0_per_frame23=g_border=int(rand(100))/100;
shape_0_per_frame24=b_border=int(rand(100))/100;
shapecode_1_enabled=0
shapecode_1_sides=23
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10262
shapecode_1_ang=0.43982
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.500
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*cos(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=rad=(bass+treb)/75;
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shape_1_per_frame16=r=int(rand(100))/100;
shape_1_per_frame17=g=int(rand(100))/100;
shape_1_per_frame18=b=int(rand(100))/100;
shape_1_per_frame19=r2=int(rand(100))/100;
shape_1_per_frame20=g2=int(rand(100))/100;
shape_1_per_frame21=b2=int(rand(100))/100;
shape_1_per_frame22=r_border=int(rand(100))/100;
shape_1_per_frame23=g_border=int(rand(100))/100;
shape_1_per_frame24=b_border=int(rand(100))/100;
shapecode_2_enabled=0
shapecode_2_sides=14
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=256
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.20269
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(mid,1)*3.1415*.01*mid);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0004*cos(ma));
shape_2_per_frame5=my=my+(.0004*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=
shape_2_per_frame15=a=(above(bass+mid+treb,.3));
shapecode_3_enabled=0
shapecode_3_sides=14
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=256
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.22389
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
shape_3_per_frame2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0008*cos(ma));
shape_3_per_frame5=my=my+(.0008*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=
shape_3_per_frame15=a=(above(bass+mid+treb,.2));
per_frame_init_1=p1 = 2000; p2 = 200; p3=50;
per_frame_1=wave_a=0;
per_frame_2=q1 = sin(4*time);
per_frame_3=q2 = sin(5*time);
per_frame_4=q3 = sin(2*time);
per_frame_5=q4 = sin(.2*time);
per_frame_6=q5 = sin(.3*time);
per_frame_7=q6 = cos(time);
per_frame_8=q7 = cos(3*time);
per_frame_9=q8 = cos(.1*time);
per_frame_10=rot=rot-.01*above(bass,2);
per_frame_11=
per_frame_12=
per_frame_13=g=sin(q4)*0.1 + 0.1;
per_frame_14=r=sin(q5+q4)*0.1 + 0.3;
per_frame_15=b=sin(q6+q7)*0.5 + 0.5;
per_frame_16=wave_r=r;
per_frame_17=wave_g=g;
per_frame_18=wave_b=b;
per_frame_19=
per_frame_20=//bipolar fractal code
per_frame_21=
per_frame_22=bb = bb*0.99 + bass*0.02;
per_frame_23=mm = mm*0.99 + mid*0.02;
per_frame_24=tt = tt*0.99 + treb*0.02;
per_frame_25=mx = max(max(bb,mm),tt);
per_frame_26=mn = min(min(bb,mm),tt);
per_frame_27=t1 = (bb-mn)/(mx-mn);
per_frame_28=t2 = (mm-mn)/(mx-mn);
per_frame_29=t3 = (tt-mn)/(mx-mn);
per_frame_30=v = 0.05/fps; // change
per_frame_31=bm = bm + (t1-t2)*v;
per_frame_32=mt = mt + (t2-t3)*v;
per_frame_33=q22 = 0;
per_frame_34=q21 = 0.666;
per_frame_35=q25 = 0;
per_frame_36=q23 = -0.666;
per_frame_37=q26 = -bm;
per_frame_38=q27 = mt;
per_frame_39=dec_med = pow (0.9, 30/fps);
per_frame_40=dec_slow = pow (0.9, 30/fps);
per_frame_41=beat = max (max (bass, mid), treb); 
per_frame_42=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_43=is_beat = above(beat, .1+avg+peak) * above (time, t0+.2);
per_frame_44=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_45=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_46=index = (index + is_beat) %16;
per_frame_47=index2 = (index2 + is_beat*bnot(index))%5;
per_frame_48=monitor = index2;
per_frame_49=q20 = avg;
per_frame_50=q21 = beat;
per_frame_51=q22 = peak;
per_frame_52=q23 = index;
per_frame_53=q24 = is_beat;
per_frame_54=q26 = bass + mid + treb;
per_frame_55=q27 = index;
per_frame_56=q28 = index2;
per_frame_57=k1 =  is_beat*equal(index%2,0);
per_frame_58=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_59=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_60=rott_ = p2 * 3.1416/4;
per_frame_61=rott =  rott +  .2*30/fps*q2;
per_frame_62=q1 = cos(rott);
per_frame_63=q2 = sin(rott);
per_frame_64=q3 = -q2;
per_frame_65=q4 = q1;
per_frame_66=ran = bnot(q24)*ran + q24 * (int(rand(50))-24);
per_frame_67=tran = tan(ran);
per_frame_68=tran = max(tran,-5);
per_frame_69=tran = min(tran,5);
per_frame_70=trel = trel + .02*30/fps*tran+q24;
per_frame_71=q5 = cos(trel);
per_frame_72=q6 = sin(trel);
per_frame_73=q7 = -q6;
per_frame_74=q8 = q5;
per_frame_75=movex = movex*dec_slow + .1*sin(rott)*30/fps;
per_frame_76=q9 = movex;
per_frame_77=spd = spd*bnot(q24) + q26*q24;
per_frame_78=movez = movez + .005*30/fps*spd;
per_frame_79=q30 = movez;
per_frame_80=//q30 = .3* (sin(time/45) + 1.5);
per_frame_81=mv_x = 20;
per_frame_82=mv_y = 15;
per_frame_83=mv_a = .1;
per_frame_84=mv_l = 0;
per_frame_85=q18 = sin(time/7);
per_frame_86=q19 = sin(time/11);
per_frame_87=q32 = pow(0.98, 30/fps); //fade
per_frame_88=
per_frame_89=// coordinates spiral 1
per_frame_90=q10 = 0; // X
per_frame_91=q11 = -0.5; // Y
per_frame_92=
per_frame_93=// coordinates spiral 2
per_frame_94=q12 = 0;
per_frame_95=q13 = 0.5;
per_frame_96=
per_frame_97=q14 = 0.5/asin(1); // pi/4
per_frame_98=
per_frame_99=q15 = time*0.1; // rotation
per_frame_100=q16 = -time*0.1; // growth
per_pixel_1=zoom = 1;
per_pixel_2=warp = .1;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`float2 numerator, denominator, fraction;
comp_2=`float2 c1,bipolar;
comp_3=`int depth, n1;
comp_4=`float cutoff,  s1;
comp_5=`
comp_6=`shader_body
comp_7=`{
comp_8=`uv = 0.5 + (uv-0.5)*4; // try apply some overall zoom in or out, works good in play with number of iterations
comp_9=`cutoff = 1.0;
comp_10=`n1 = 1; // number of radial mirrors
comp_11=`s1 = 0.33; // logarithmic zoom factor
comp_12=`depth = 3; //number of fractal iterations
comp_13=`
comp_14=`for(int i = 0; i<depth;i++){
comp_15=` c1 = (uv-0.5)*2*aspect.wz;
comp_16=`   numerator = (c1 + float2(q21,q22))*64;
comp_17=`   denominator = c1 + float2(q23,q24);
comp_18=`   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_19=`                      numerator.y*denominator.x - numerator.x*denominator.y)/
comp_20=`                      (denominator.x*denominator.x + denominator.y*denominator.y);
comp_21=`   c1 = fraction-0.5; // kind of a Moebius transformation
comp_22=`   bipolar = float2(n1*atan2(c1.x,c1.y)*M_INV_PI_2*2+q26,s1*aspect.w*log(length(c1))+q27);
comp_23=`   uv = 0.5 + (0.5 - abs( frac( bipolar * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror
comp_24=`}
comp_25=`
comp_26=`uv = 0.5 + (uv-0.5); // try apply some overall zoom in or out, works good in play with number of iterations
comp_27=`cutoff = 1;
comp_28=`n1 = 4; // number of radial mirrors
comp_29=`s1 = 1.5; // logarithmic zoom factor
comp_30=`depth = 1; //number of fractal iterations
comp_31=`
comp_32=`for(int i = 0; i<depth;i++){
comp_33=` c1 = (uv-0.5)*2*aspect.wz;
comp_34=`   numerator = (c1 + float2(q21,q22))*64;
comp_35=`   denominator = c1 + float2(q23,q24);
comp_36=`   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_37=`                      numerator.y*denominator.x - numerator.x*denominator.y)/
comp_38=`                      (denominator.x*denominator.x + denominator.y*denominator.y);
comp_39=`   c1 = fraction-0.5; // kind of a Moebius transformation
comp_40=`   bipolar = float2(n1*atan2(c1.x,c1.y)*M_INV_PI_2*2+q26,s1*aspect.w*log(length(c1))+q27);
comp_41=`   uv = 0.5 + (0.5 - abs( frac( bipolar * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror
comp_42=`}
comp_43=`    ret = GetPixel(uv)*0.4 + GetBlur2(uv)*1.75;
comp_44=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_45=`                      ((uv.xyy
comp_46=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_47=`                      ).xyz*
comp_48=`                      float3(1,1,0)*0.05 + 
comp_49=`                      time*float3(0,0,1)*0.4 
comp_50=`                     );
comp_51=`if(ret.x+ret.y+ret.z>.5)ret *= (noise2)*1.5; 
comp_52=`}
comp_53=`
comp_54=`
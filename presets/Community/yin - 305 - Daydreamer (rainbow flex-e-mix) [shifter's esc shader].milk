MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=0
[preset00]
fRating=3.000
fGammaAdj=1.490
fDecay=0.990
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=0.348
fZoomExponent=0.01645
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.050
mv_r=0.000
mv_g=0.700
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=c1=q8*(.5+.3*sin(-3.1415-.4*time));
wave_0_per_frame2=c2=q8*(.3+.5*cos(-3.1415+.432-.3*time));
wave_0_per_frame3=t8=-.2*(.4*c1*cos(-time+.6*3.1415*c2*sin(-time+1.384)+.8*cos(-.5*time+2.03)));
wave_0_per_frame4=
wave_0_per_frame5=t1=.00;
wave_0_per_frame6=t2=.5;
wave_0_per_point1=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
wave_0_per_point2=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
wave_0_per_point3=
wave_0_per_point4=x=t1+.5*.0015*1.2*q8;
wave_0_per_point5=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
wave_0_per_point6=
wave_0_per_point7=
wave_0_per_point8=c1=sqrt(sample);
wave_0_per_point9=y=c1*y+(1-c1)*(.55);
wave_0_per_point10=
wave_0_per_point11=
wave_0_per_point12=t1=x;
wave_0_per_point13=
wave_0_per_point14=
wave_0_per_point15=hue=sample+.2*time; // change this
wave_0_per_point16=h=6*(hue-int(hue));
wave_0_per_point17=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
wave_0_per_point18=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
wave_0_per_point19=r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
wave_0_per_point20=g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
wave_0_per_point21=b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
wave_0_per_point22=
wave_0_per_point23=a=below(sample,.995);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=c1=q8*(.5+.3*sin(-3.1415-.4*time));
wave_1_per_frame2=c2=q8*(.3+.5*cos(-3.1415+.432-.3*time));
wave_1_per_frame3=t8=-.2*(.4*c1*cos(-time+.6*3.1415*c2*sin(-time+1.384)+.8*cos(-.5*time+2.03)));
wave_1_per_frame4=
wave_1_per_frame5=t1=.0;
wave_1_per_frame6=t2=.5;
wave_1_per_frame7=
wave_1_per_frame8=
wave_1_per_point1=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
wave_1_per_point2=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
wave_1_per_point3=
wave_1_per_point4=x=t1+.5*.0015*1.2*q8;
wave_1_per_point5=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
wave_1_per_point6=
wave_1_per_point7=
wave_1_per_point8=c1=sqrt(sample);
wave_1_per_point9=y=c1*y+(1-c1)*(.45);
wave_1_per_point10=
wave_1_per_point11=
wave_1_per_point12=t1=x;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=hue=sample+.2*time; // change this
wave_1_per_point16=h=6*(hue-int(hue));
wave_1_per_point17=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
wave_1_per_point18=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
wave_1_per_point19=r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
wave_1_per_point20=g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
wave_1_per_point21=b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
wave_1_per_point22=
wave_1_per_point23=a=below(sample,.995);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=c1=q8*(.5+.3*sin(-3.1415-.4*time));
wave_2_per_frame2=c2=q8*(.3+.5*cos(-3.1415+.432-.3*time));
wave_2_per_frame3=t8=-.2*(.4*c1*cos(-time+.6*3.1415*c2*sin(-time+1.384)+.8*cos(-.5*time+2.03)));
wave_2_per_frame4=
wave_2_per_frame5=t1=.0;
wave_2_per_frame6=t2=.5;
wave_2_per_frame7=
wave_2_per_frame8=
wave_2_per_point1=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
wave_2_per_point2=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
wave_2_per_point3=c3=-1+rand(20000)*.0001;
wave_2_per_point4=
wave_2_per_point5=x=t1+.5*.0015*1.2*q8;
wave_2_per_point6=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
wave_2_per_point7=
wave_2_per_point8=
wave_2_per_point9=c1=sqrt(sample);
wave_2_per_point10=y=c1*y+(1-c1)*(.5+.05*c3);
wave_2_per_point11=
wave_2_per_point12=
wave_2_per_point13=t1=x;
wave_2_per_point14=
wave_2_per_point15=hue=sample+.2*time; // change this
wave_2_per_point16=h=6*(hue-int(hue));
wave_2_per_point17=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
wave_2_per_point18=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
wave_2_per_point19=r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
wave_2_per_point20=g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
wave_2_per_point21=b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
wave_2_per_point22=
wave_2_per_point23=a=below(sample,.995);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=4.91381
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=c1=q8*(.5+.3*sin(-3.1415-.4*time));
wave_3_per_frame2=c2=q8*(.3+.5*cos(-3.1415+.432-.3*time));
wave_3_per_frame3=t8=-.2*(.4*c1*cos(-time+.6*3.1415*c2*sin(-time+1.384)+.8*cos(-.5*time+2.03)));
wave_3_per_frame4=
wave_3_per_frame5=t1=.0;
wave_3_per_frame6=t2=.5;
wave_3_per_frame7=
wave_3_per_frame8=t3=-1+2*(frame%2);
wave_3_per_frame9=
wave_3_per_frame10=
wave_3_per_frame11=t4=.4;
wave_3_per_frame12=r=1;
wave_3_per_frame13=g=1;
wave_3_per_frame14=b=0;
wave_3_per_point1=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
wave_3_per_point2=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
wave_3_per_point3=c3=-1+rand(20000)*.0001;
wave_3_per_point4=
wave_3_per_point5=x=t1+.5*.0015*1.2*q8;
wave_3_per_point6=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
wave_3_per_point7=
wave_3_per_point8=
wave_3_per_point9=c1=sqrt(sample);
wave_3_per_point10=y=c1*y+(1-c1)*(.5+t3*.05+t3*4*(abs(value1)+abs(value2)));
wave_3_per_point11=
wave_3_per_point12=
wave_3_per_point13=t1=x;
wave_3_per_point14=
wave_3_per_point15=a=2*below(sample,.995);
wave_3_per_point16=d=above(q3-sample,0)*below(q3-sample,t4)*(sample-q3)/t4;
wave_3_per_point17=d=sqrt(d)*(1-sqrt((sample-q3)/t4));
wave_3_per_point18=a=a*d*sqrt(q8);
wave_3_per_point19=
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=sample=q3;
shape_0_per_frame2=t1=0;
shape_0_per_frame3=t2=.5;
shape_0_per_frame4=
shape_0_per_frame5=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
shape_0_per_frame6=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
shape_0_per_frame7=
shape_0_per_frame8=x=t1+.35*sample*1.2*q8;
shape_0_per_frame9=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
shape_0_per_frame10=
shape_0_per_frame11=
shape_0_per_frame12=c1=sqrt(sample);
shape_0_per_frame13=y=c1*y+(1-c1)*(.65);
shape_0_per_frame14=
shape_0_per_frame15=
shape_0_per_frame16=t1=x;
shape_0_per_frame17=
shape_0_per_frame18=r=sample;
shape_0_per_frame19=g=1-sample;
shape_0_per_frame20=b=1;
shape_0_per_frame21=a=below(sample,.995);
shape_0_per_frame22=
shape_0_per_frame23=rad=(t5*.15+(1-t5)*.3)*(1.1-sample);
shape_0_per_frame24=sides=t5*100+(1-t5)*4;
shape_0_per_frame25=ang=4*6.2831*sqrt(sample);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=sample=q3;
shape_1_per_frame2=t1=0;
shape_1_per_frame3=t2=.5;
shape_1_per_frame4=
shape_1_per_frame5=c1=q8*(.5+.3*sin(-3.1415+6.2831*sample-.4*time));
shape_1_per_frame6=c2=q8*(.3+.5*cos(-3.1415+6.2831*sample+.432-.3*time));
shape_1_per_frame7=
shape_1_per_frame8=x=t1+.35*sample*1.2*q8;
shape_1_per_frame9=y=t2-.2*(.4*c1*cos(2.2831*sample-time+.6*3.1415*c2*sin(6.2831*sample-time+1.384)+.8*cos(6.2831*sample-.5*time+2.03)));
shape_1_per_frame10=
shape_1_per_frame11=
shape_1_per_frame12=c1=sqrt(sample);
shape_1_per_frame13=y=c1*y+(1-c1)*(.35);
shape_1_per_frame14=
shape_1_per_frame15=
shape_1_per_frame16=t1=x;
shape_1_per_frame17=
shape_1_per_frame18=r=sample;
shape_1_per_frame19=g=1-sample;
shape_1_per_frame20=b=1;
shape_1_per_frame21=a=below(sample,.995);
shape_1_per_frame22=
shape_1_per_frame23=rad=(t5*.15+(1-t5)*.3)*(1.1-sample);
shape_1_per_frame24=sides=t5*100+(1-t5)*4;
shape_1_per_frame25=ang=4*6.2831*sqrt(sample);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.52770
shapecode_2_ang=3.14159
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.65190
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang=3.1415;
shape_2_per_frame2=additive=equal(frame%20,0);
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=1.09998
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.34480
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.500
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=myang=myang+q7;
shape_3_per_frame2=ang = myang;
shape_3_per_frame3=
shape_3_per_frame4=r=abs(cos(2.43*time+4.343+sin(1.754*time+.753)));
shape_3_per_frame5=g=abs(cos(1.95*time+.932+cos(2.254*time+3.534)));
shape_3_per_frame6=b=abs(sin(1.95*time+.932+cos(2.254*time+3.534)));
shape_3_per_frame7=
shape_3_per_frame8=r2=1-r;
shape_3_per_frame9=g2=1-g;
shape_3_per_frame10=b2=1-b;
shape_3_per_frame11=
shape_3_per_frame12=additive=frame%2;
per_frame_init_1=contbass=.75;
per_frame_init_2=totalbeats=1;
per_frame_init_3=dir=1;
per_frame_1=// -------------------------------- beat detection code ----------------------------------
per_frame_2=sure=if(equal(sure,0),.75,sure);
per_frame_3=interval=if(equal(interval,0),.7*FPS,interval);
per_frame_4=avginterval=if(equal(avginterval,0),.7*FPS,avginterval);
per_frame_5=lockinterval=if(equal(lockinterval,0),.7*FPS,lockinterval );
per_frame_6=lastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);
per_frame_7=dbass=(bass-pbass)*FPS;
per_frame_8=beat=below(dbass,0)*above(pdbass,0)*above(bass,.95*avgbass)*above(frame-lastbeat,FPS/3);
per_frame_9=sure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),
per_frame_10=min(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);
per_frame_11=sure=max(.5,sure);
per_frame_12=avgbass=.995*avgbass+.005*bass;
per_frame_13=maxdbass=max(maxdbass*.999,dbass);
per_frame_14=maxdbass=min(200,maxdbass);
per_frame_15=maxdbass=max(.02,maxdbass);
per_frame_16=interval=if(beat*below(frame-lastbeat,1.8*interval), ((frame-lastbeat)*.25+.75*interval),interval);
per_frame_17=lastbeat=if((1-force)*beat+equal(lastbeat+interval,frame),frame,lastbeat);
per_frame_18=avginterval=if(beat,.9*avginterval+.1*interval, avginterval);
per_frame_19=lockinterval=if(beat,.9*lockinterval+.1*avginterval,lockinterval);
per_frame_20=pbass=bass;
per_frame_21=pdbass=dbass;
per_frame_22=bpm=60*FPS*.3333*( ((2*(1-sure))/interval)+((2*sure)/avginterval)+(1/lockinterval) );
per_frame_23=phase=min( (frame-lastbeat)/(.333*(2*sure*avginterval+2*(1-sure)*interval+lockinterval)), 1 );
per_frame_24=beat=if(equal(phase,0),1,beat);
per_frame_25=interval=min(interval,.7*FPS);
per_frame_26=avginterval=min(avginterval,.7*FPS);
per_frame_27=lockinterval=min(lockinterval,.7*FPS);
per_frame_28=// ----------------------------------------------------------------------------------------------
per_frame_29=
per_frame_30=zoom=1;
per_frame_31=warp=0;
per_frame_32=ib_size=0;
per_frame_33=ib_a=0;
per_frame_34=ob_size=1;
per_frame_35=ob_a=.01+.02*(FPS/100);
per_frame_36=vol=min(.99*vol+.01*(bass+mid+treb),3);
per_frame_37=c1=.333*(vol+1)*time+3.34;
per_frame_38=c2=.87*time+2.97;
per_frame_39=ob_r=abs(cos(c1+sin(c2)));
per_frame_40=ob_g=abs(sin(c1+cos(c2)));
per_frame_41=ob_b=abs(sin(c1+sin(c2)));
per_frame_42=
per_frame_43=q1=.18*cos(.354*time+.54+cos(.521*time+1.432));  // spiral bend
per_frame_44=q3=sqrt(.995*(.5*time-int(.5*time)));            // glow phase
per_frame_45=c1=.1/FPS;
per_frame_46=contbass=(1-c1)*contbass+c1*bass;
per_frame_47=q8=min(contbass,1.15);
per_frame_48=
per_frame_49=totalbeats=totalbeats+beat;
per_frame_50=changerot=equal(totalbeats%5,0);
per_frame_51=dir=changerot*(-dir)+(1-changerot)*dir;
per_frame_52=myangstep=changerot*(.01*dir*rand(1000)*.001)+(1-changerot)*myangstep;
per_frame_53=q7=myangstep;
per_frame_54=totalbeats=changerot*1+(1-changerot)*totalbeats;
per_frame_55=monitor=q8;
per_pixel_1=zoom=zoom+below(rad,.45)*sqr(1-rad/.45)*5;
per_pixel_2=warp=above(abs(y-.5)+abs(x-.5),.707)*2*q8;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float2 uvm = uv_orig;
warp_5=`
warp_6=`float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noiseVal = tex2D(sampler_noise_hq, frac(noise_uv*8));
warp_8=`
warp_9=`ret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,.97) - float3(.0,.0,.001));
warp_10=`
warp_11=`
warp_12=`float3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*6*pixelsize).xyz;
warp_13=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_14=`ret.xy = rsamp.xy;ret.z = rsamp.z;}
warp_15=`
warp_16=`//rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*2*pixelsize).xyz;
warp_17=`//if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_18=`//ret.xy = rsamp.xy;ret.z = rsamp.z;}
warp_19=`
warp_20=`
warp_21=`ret.xy *= pow(ret.z,.01);
warp_22=`
warp_23=`
warp_24=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fGammaAdj=1.980
fDecay=1.000
fVideoEchoZoom=1.006
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=1
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.827
fWaveScale=3.878
fWaveSmoothing=0.090
fWaveParam=0.980
fModWaveAlphaStart=1.030
fModWaveAlphaEnd=1.270
fWarpAnimSpeed=1.000
fWarpScale=0.107
fZoomExponent=4.10046
fShader=0.320
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.720
ob_size=0.005
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=1.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=256
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=sw = (1-sw)*above(sample,0);
wave_0_per_point2=
wave_0_per_point3=osa = sample*above(sample,0);
wave_0_per_point4=
wave_0_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_0_per_point6=
wave_0_per_point7=mod = value1;
wave_0_per_point8=mod = mod*sw;
wave_0_per_point9=
wave_0_per_point10=y = if(sw,osa,sample);
wave_0_per_point11=y = sample;
wave_0_per_point12=x = .5 - mod*.5;
wave_0_per_point13=
wave_0_per_point14=osa = sample;
wave_0_per_point15=
wave_0_per_point16=mo = 3.7 + mod*6 + q10;
wave_0_per_point17=
wave_0_per_point18=r = .5 + sin(mo)*.5;
wave_0_per_point19=g = .5 + sin(mo + 1.0472)*.5;
wave_0_per_point20=b = .5 + sin(mo + 2.0944)*.5;
wave_0_per_point21=
wave_0_per_point22=a = 1 - abs(mod)*12;
wave_0_per_point23=a = 1-sw;
wave_0_per_point24=a = max(0,min(a,1));
wave_0_per_point25=
wave_0_per_point26=x = (x-0.5)*(q31/q32) + 0.5;
wave_0_per_point27=y = (y-0.5)*(q32/q31) + 0.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=sw = (1-sw)*below(sample,1);
wave_1_per_point2=
wave_1_per_point3=osa = sample*above(sample,0);
wave_1_per_point4=
wave_1_per_point5=mod = pow(value2*2,2)*sign(value2)*.5;
wave_1_per_point6=
wave_1_per_point7=mod = value2;
wave_1_per_point8=mod = mod*sw;
wave_1_per_point9=
wave_1_per_point10=y = if(sw,osa,sample);
wave_1_per_point11=y = sample;
wave_1_per_point12=x = .5 + mod*.5;
wave_1_per_point13=
wave_1_per_point14=osa = sample;
wave_1_per_point15=
wave_1_per_point16=mo = 3.7 + mod*6 + q10;
wave_1_per_point17=
wave_1_per_point18=r = .5 + sin(mo)*.5;
wave_1_per_point19=g = .5 + sin(mo + 1.0472)*.5;
wave_1_per_point20=b = .5 + sin(mo + 2.0944)*.5;
wave_1_per_point21=
wave_1_per_point22=a = 1 - abs(mod)*12;
wave_1_per_point23=a = 1-sw;
wave_1_per_point24=a = max(0,min(a,1));
wave_1_per_point25=
wave_1_per_point26=x = (x-0.5)*(q31/q32) + 0.5;
wave_1_per_point27=y = (y-0.5)*(q32/q31) + 0.5;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.03469
shapecode_0_ang=1.57070
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07260
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=vol=bass+mid+treb;
shape_0_per_frame6=ampl = 2*t_abs/2*vol*.5;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=11
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03333
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=x = rand(100)*.01+instance-instance;
shape_1_per_frame2=y = rand(100)*.01+instance-instance;
shape_1_per_frame3=
shape_1_per_frame4=a = 1;
shape_1_per_frame5=a2 = 1;
shape_1_per_frame6=border_a = 0;
shape_1_per_frame7=vol=bass+mid+treb;
shape_1_per_frame8=rad = rand(int(vol*.8))/7+instance-instance;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03333
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=x = rand(100)*.01;
shape_2_per_frame2=y = rand(100)*.01;
shape_2_per_frame3=
shape_2_per_frame4=a = if(above(frame%7,0),0,1);
shape_2_per_frame5=a2 = if(above(frame%7,0),0,1);
shape_2_per_frame6=border_a = 0;
shape_2_per_frame7=vol=bass+mid+treb;
shape_2_per_frame8=rad = vol*.1;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1= //begin beat code
per_frame_2= volume = 0.3*(bass+mid);
per_frame_3= beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_4= lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_5= meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_6= peakbass_att = max(bass_att,peakbass_att);
per_frame_7= beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_8= beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_9= //Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_10=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_11=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_12=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_13=//end beat code
per_frame_14=
per_frame_15=zoom = 1;
per_frame_16=decay = 1;
per_frame_17=warp = 0;
per_frame_18=wave_a = 0;
per_frame_19=
per_frame_20=tic = min(time-tin,.1);
per_frame_21=tin = time;
per_frame_22=
per_frame_23=q2 = 1;
per_frame_24=
per_frame_25=q1=1;
per_frame_26=vol = vol + ((alt + bass + mid)/3-vol)*tic*1;
per_frame_27=q5 = vol*vol*vol*2;
per_frame_28=
per_frame_29=
per_frame_30=q8 = sin(time)*.5;
per_frame_31=q9 = sin(time*.75)*.5;
per_frame_32=
per_frame_33=sw = abs(sw - beat);
per_frame_34=an = an + tic*.5*(1-2*sw);
per_frame_35=
per_frame_36=
per_frame_37=q7 = 1+(pow(q8,2) + pow(q9,2))*1;
per_frame_38=q10 = sin(an);
per_frame_39=q11 = cos(an);
per_frame_40=
per_frame_41=sp = sp + tic*vol*vol*.5;
per_frame_42=
per_frame_43=q12 = sp;
per_frame_44=
per_frame_45=monitor = q12;
per_frame_46=q31=pixelsx;
per_frame_47=q32=pixelsy;
per_pixel_1=//zoom = pow(rad,2)+.01;
warp_1=`sampler sampler_rand02;
warp_2=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_3=`shader_body
warp_4=`{
warp_5=`    // sample previous frame
warp_6=`    float3 main = tex2D( sampler_main, uv ).xyz;
warp_7=`    float3 mblur = GetBlur1( uv );
warp_8=`    main = ( min(mblur,main) )*5;
warp_9=`    float zoom = 1;
warp_10=`    float rot = 0;
warp_11=`    float2 zcr = float2(.5,.5);
warp_12=`    float2 cr = float2(.5,.5);
warp_13=`    float2 newuv = uv;
warp_14=`
warp_15=`    ///////////////////rotation////////////////
warp_16=`    newuv = uv - cr;
warp_17=`    float s = sin(rot);
warp_18=`    float c = cos(rot);
warp_19=`    newuv = float2( (uv.x-cr.x)*c-(uv.y-cr.y)*s , (uv.x-cr.x)*s+(uv.y-cr.y)*c  );
warp_20=`    newuv = newuv + cr;
warp_21=`    ///////////////////rotation////////////////
warp_22=`
warp_23=`    ///////////////////zoom////////////////
warp_24=`    newuv = newuv-zcr;
warp_25=`    newuv = newuv * zoom;
warp_26=`    newuv= newuv+zcr;
warp_27=`    ///////////////////zoom////////////////
warp_28=`
warp_29=`
warp_30=`    float3 colorwarp = tex2D( sampler_main, newuv ).xyz *1.02;
warp_31=`
warp_32=`    float3 color = tex2D(sampler_rand02, newuv ).xyz;
warp_33=`    ret = ( (  ((colorwarp*4-normalize(main))*1.1+(color)*2)*.23 ) );
warp_34=`//    ret= main;
warp_35=`    // darken (decay) over time
warp_36=`    ret *= 0.96; //or try: ret -= 0.004;
warp_37=`}
comp_1=`sampler sampler_rand03;
comp_2=`float4  texsize_rand03;    // ...it's smart enough to get it from just this.
comp_3=`shader_body
comp_4=`{
comp_5=`    // sample previous frame
comp_6=`    float3 main = tex2D( sampler_main, uv ).xyz;
comp_7=`    float zoom = 1+( (uv.x-uv.y)*5 );
comp_8=`    float rot = sin(q5+rad)*3;
comp_9=`    float2 zcr = float2(.5,.5);
comp_10=`    float n = q15;//40;
comp_11=`    float2 cr = .5;
comp_12=`
comp_13=`//    float3 moz = tex2D( sampler_main, cr ).xyz;
comp_14=`    float2 newuv = uv;
comp_15=`
comp_16=`    ///////////////////rotation////////////////
comp_17=`    newuv = uv - cr;
comp_18=`    float s = sin(rot);
comp_19=`    float c = cos(rot);
comp_20=`    newuv = float2( (uv.x-cr.x)*c-(uv.y-cr.y)*s , (uv.x-cr.x)*s+(uv.y-cr.y)*c  );
comp_21=`    newuv = newuv + cr;
comp_22=`    ///////////////////rotation////////////////
comp_23=`
comp_24=`    ///////////////////zoom////////////////
comp_25=`    newuv = newuv-zcr;
comp_26=`    newuv = newuv * zoom;
comp_27=`    newuv= newuv+zcr;
comp_28=`    ///////////////////zoom////////////////
comp_29=`
comp_30=`
comp_31=`//    float3 colorwarp = tex2D( sampler_main, newuv ).xyz *1.02;
comp_32=`
comp_33=`    float3 color = tex2D( sampler_rand03, newuv ).xyz;
comp_34=`    float mask = main.x*main.y*main.z == 1;
comp_35=`    float2 cm = ((uv*n-frac(uv*n))%n)/n + .5/n;//float2(((uv.x*10)%10)/10,((uv.y*10)%10)/10);
comp_36=`    float3 moz = GetBlur1( cm )*(1-mask);
comp_37=`
comp_38=`//ret = moz;    
comp_39=`ret = ( color*mask + (1-mask)*lerp(  moz , main , q7 ) );
comp_40=`    // darken (decay) over time
comp_41=`    ret *= 0.98; //or try: ret -= 0.004;
comp_42=`}

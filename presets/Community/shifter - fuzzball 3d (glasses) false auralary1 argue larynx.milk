MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=2.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=1
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.07213
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.000
ob_g=0.800
ob_b=0.700
ob_a=0.000
ib_size=0.010
ib_r=0.600
ib_g=0.000
ib_b=0.400
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=0.100
wavecode_0_b=0.100
wavecode_0_a=1.000
wave_0_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_0_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_0_per_frame3=vg = vol_avg*.1;
wave_0_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_0_per_point1=tm = q1;
wave_0_per_point2=sp = sample*6.28*8*6;
wave_0_per_point3=
wave_0_per_point4=vol = (value1+value2)*.5;
wave_0_per_point5=it = it*above(sample,0);
wave_0_per_point6=it = it + 1;
wave_0_per_point7=rad = .5 + vol;
wave_0_per_point8=ra = rad*sin(sample*3.14);
wave_0_per_point9=ox = ra*sin(sp);
wave_0_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_0_per_point11=oz = ra*cos(sp);
wave_0_per_point12=
wave_0_per_point13=xang = q4;
wave_0_per_point14=yang = q5;
wave_0_per_point15=zang = q6;
wave_0_per_point16=fov = .5;
wave_0_per_point17=
wave_0_per_point18=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point19=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point20=ox = mx;
wave_0_per_point21=oy = my;
wave_0_per_point22=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point23=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point24=ox = mx;
wave_0_per_point25=oz = mz;
wave_0_per_point26=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point27=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point28=oy = my;
wave_0_per_point29=oz = mz;
wave_0_per_point30=
wave_0_per_point31=yang = q8;
wave_0_per_point32=oz = oz + 5;
wave_0_per_point33=
wave_0_per_point34=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point35=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point36=ox = mx;
wave_0_per_point37=oz = mz;
wave_0_per_point38=
wave_0_per_point39=oz = oz - 5;
wave_0_per_point40=
wave_0_per_point41=oz = oz - 2;
wave_0_per_point42=x = ox*fov/oz + 0.5;
wave_0_per_point43=x = (x-.5)*0.75 + 0.5;
wave_0_per_point44=y = oy*fov/oz + 0.5;
wave_0_per_point45=
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=0.500
wavecode_1_b=0.500
wavecode_1_a=1.000
wave_1_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_1_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_1_per_frame3=vg = vol_avg*.1;
wave_1_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_1_per_point1=tm = q1;
wave_1_per_point2=sp = sample*6.28*8*6;
wave_1_per_point3=
wave_1_per_point4=vol = (value1+value2)*.5;
wave_1_per_point5=it = it*above(sample,0);
wave_1_per_point6=it = it + 1;
wave_1_per_point7=rad = .5 + vol;
wave_1_per_point8=ra = rad*sin(sample*3.14);
wave_1_per_point9=ox = ra*sin(sp);
wave_1_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_1_per_point11=oz = ra*cos(sp);
wave_1_per_point12=
wave_1_per_point13=xang = q4;
wave_1_per_point14=yang = q5;
wave_1_per_point15=zang = q6;
wave_1_per_point16=fov = .5;
wave_1_per_point17=
wave_1_per_point18=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point19=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point20=ox = mx;
wave_1_per_point21=oy = my;
wave_1_per_point22=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point23=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point24=ox = mx;
wave_1_per_point25=oz = mz;
wave_1_per_point26=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point27=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point28=oy = my;
wave_1_per_point29=oz = mz;
wave_1_per_point30=
wave_1_per_point31=yang = -q8;
wave_1_per_point32=oz = oz + 5;
wave_1_per_point33=
wave_1_per_point34=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point35=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point36=ox = mx;
wave_1_per_point37=oz = mz;
wave_1_per_point38=
wave_1_per_point39=oz = oz - 5;
wave_1_per_point40=
wave_1_per_point41=oz = oz - 2;
wave_1_per_point42=x = ox*fov/oz + 0.5;
wave_1_per_point43=x = (x-.5)*0.75 + 0.5;
wave_1_per_point44=y = oy*fov/oz + 0.5;
wave_1_per_point45=
wavecode_2_enabled=1
wavecode_2_samples=102
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=0.100
wavecode_2_b=0.100
wavecode_2_a=1.000
wave_2_per_frame1=samples = 256 + 50*sin(time*.939493949);
wave_2_per_frame2=vol = (bass_att + mid_att + treb_att)*.333333;
wave_2_per_frame3=vol_avg = .1*(vol_avg*9 + vol);
wave_2_per_frame4=vg = vol_avg*.1;
wave_2_per_frame5=t1 = if(above(vg,1.8),1.8,vg);
wave_2_per_point1=tm = q1;
wave_2_per_point2=sp = sample*6.28*8*6*sin(time)*100;
wave_2_per_point3=
wave_2_per_point4=vol = (value1+value2)*.5;
wave_2_per_point5=it = it*above(sample,0);
wave_2_per_point6=it = it + 1;
wave_2_per_point7=//rad = .5 + vol + .01;
wave_2_per_point8=rad=.5;
wave_2_per_point9=ra = rad*sin(sample*3.14);
wave_2_per_point10=ox = ra*sin(sp);
wave_2_per_point11=oy = sin(sample*3.14-1.57)*rad;
wave_2_per_point12=oz = ra*cos(sp);
wave_2_per_point13=
wave_2_per_point14=xang = q4;
wave_2_per_point15=yang = q5;
wave_2_per_point16=zang = q6;
wave_2_per_point17=fov = .5;
wave_2_per_point18=
wave_2_per_point19=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point20=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point21=ox = mx;
wave_2_per_point22=oy = my;
wave_2_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point25=ox = mx;
wave_2_per_point26=oz = mz;
wave_2_per_point27=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point28=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point29=oy = my;
wave_2_per_point30=oz = mz;
wave_2_per_point31=
wave_2_per_point32=yang = q8;
wave_2_per_point33=oz = oz + 5;
wave_2_per_point34=
wave_2_per_point35=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point36=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point37=ox = mx;
wave_2_per_point38=oz = mz;
wave_2_per_point39=
wave_2_per_point40=oz = oz - 5;
wave_2_per_point41=
wave_2_per_point42=oz = oz - 2;
wave_2_per_point43=x = ox*fov/oz + 0.5;
wave_2_per_point44=x = (x-.5)*0.75 + 0.5;
wave_2_per_point45=y = oy*fov/oz + 0.5;
wave_2_per_point46=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=0.000
wavecode_3_g=0.500
wavecode_3_b=0.500
wavecode_3_a=1.000
wave_3_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_3_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_3_per_frame3=vg = vol_avg*.1;
wave_3_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_3_per_point1=tm = q1;
wave_3_per_point2=sp = sample*6.28*8*6;
wave_3_per_point3=
wave_3_per_point4=vol = (value1+value2)*.5;
wave_3_per_point5=it = it*above(sample,0);
wave_3_per_point6=it = it + 1;
wave_3_per_point7=rad = .5 + vol + .01;
wave_3_per_point8=ra = rad*sin(sample*3.14);
wave_3_per_point9=ox = ra*sin(sp);
wave_3_per_point10=oy = sin(sample*3.14-1.57)*rad;
wave_3_per_point11=oz = ra*cos(sp);
wave_3_per_point12=
wave_3_per_point13=xang = q4;
wave_3_per_point14=yang = q5;
wave_3_per_point15=zang = q6;
wave_3_per_point16=fov = .5;
wave_3_per_point17=
wave_3_per_point18=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point19=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point20=ox = mx;
wave_3_per_point21=oy = my;
wave_3_per_point22=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point23=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point24=ox = mx;
wave_3_per_point25=oz = mz;
wave_3_per_point26=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point27=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point28=oy = my;
wave_3_per_point29=oz = mz;
wave_3_per_point30=
wave_3_per_point31=yang = -q8;
wave_3_per_point32=oz = oz + 5;
wave_3_per_point33=
wave_3_per_point34=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point35=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point36=ox = mx;
wave_3_per_point37=oz = mz;
wave_3_per_point38=
wave_3_per_point39=oz = oz - 5;
wave_3_per_point40=
wave_3_per_point41=oz = oz - 2;
wave_3_per_point42=x = ox*fov/oz + 0.5;
wave_3_per_point43=x = (x-.5)*0.75 + 0.5;
wave_3_per_point44=y = oy*fov/oz + 0.5;
wave_3_per_point45=
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.02147
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.26465
shapecode_0_r=0.200
shapecode_0_g=0.000
shapecode_0_b=0.700
shapecode_0_a=0.020
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.500
shapecode_0_border_g=0.500
shapecode_0_border_b=0.500
shapecode_0_border_a=0.000
shape_0_per_frame1=sample = instance/1024;
shape_0_per_frame2=tm = q1;
shape_0_per_frame3=sp = sample*6.28*8*6*sin(time)*100;
shape_0_per_frame4=
shape_0_per_frame5=vol = (value1+value2)*.5;
shape_0_per_frame6=it = it*above(sample,0);
shape_0_per_frame7=it = it + 1;
shape_0_per_frame8=//rad = .5 + vol + .01;
shape_0_per_frame9=rad2=2;
shape_0_per_frame10=ra = rad*sin(sample*3.14);
shape_0_per_frame11=ox = ra*sin(sp);
shape_0_per_frame12=oy = sin(sample*3.14-1.57)*rad2;
shape_0_per_frame13=oz = ra*cos(sp);
shape_0_per_frame14=
shape_0_per_frame15=xang = q4;
shape_0_per_frame16=yang = q5;
shape_0_per_frame17=zang = q6;
shape_0_per_frame18=fov = .5;
shape_0_per_frame19=
shape_0_per_frame20=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame21=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame22=ox = mx;
shape_0_per_frame23=oy = my;
shape_0_per_frame24=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame25=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame26=ox = mx;
shape_0_per_frame27=oz = mz;
shape_0_per_frame28=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame29=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame30=oy = my;
shape_0_per_frame31=oz = mz;
shape_0_per_frame32=
shape_0_per_frame33=yang = q8;
shape_0_per_frame34=oz = oz + 5;
shape_0_per_frame35=rad=rad*instance*.01;
shape_0_per_frame36=
shape_0_per_frame37=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame38=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame39=ox = mx;
shape_0_per_frame40=oz = mz;
shape_0_per_frame41=
shape_0_per_frame42=oz = oz - 5;
shape_0_per_frame43=
shape_0_per_frame44=oz = oz - 2;
shape_0_per_frame45=x = ox*fov/oz + 0.5;
shape_0_per_frame46=x = (x-.5)*0.75 + 0.5;
shape_0_per_frame47=y = oy*fov/oz + 0.5;
shape_0_per_frame48=
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=//spiral collide frame
per_frame_19=t = t + 2.5/fps;
per_frame_20=t = if(above(t,2),t-2,t);
per_frame_21=q22 = -t;
per_frame_22=// Flexis dampened sound response functions
per_frame_23=db = db*0.98 + bass_att*0.2; // dampener
per_frame_24=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_25=dt = dt*0.98 + treb_att*0.2;
per_frame_26=tt = tt + dt*0.1;
per_frame_27=dm = dm*0.98 + mid_att*0.2;
per_frame_28=mm = mm + dm*0.1;
per_frame_29=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_30=// change
per_frame_31=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_32=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_33=w = (bb-tt)*0.1;                   // angle
per_frame_34=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_35=//don't change
per_frame_36=q11 = sin(w);
per_frame_37=q12 = cos(w);
per_frame_38=q17 = sin(-w);
per_frame_39=q18 = cos(-w);
per_frame_40=q15 = 1/q16;
per_frame_41=zoom =1;// 0.999;
per_frame_42=warp = 0;
per_frame_43=
per_frame_44=
per_frame_45=// a
per_frame_46=scale = 8;
per_frame_47=angle = -time*0.2;
per_frame_48=
per_frame_49=q1 = scale*cos(angle); // the real part
per_frame_50=q2 = scale*sin(angle); // the imaginary part
per_frame_51=
per_frame_52=// b
per_frame_53=
per_frame_54=q3 = 0; // the real part
per_frame_55=q4 = 0.3; // the imaginary part
per_frame_56=
per_frame_57=// c
per_frame_58=scale = 0.8;
per_frame_59=angle = time*0.2;
per_frame_60=
per_frame_61=q5 = scale*cos(angle); // the real part
per_frame_62=q6 = scale*sin(angle); // the imaginary part
per_frame_63=
per_frame_64=// d
per_frame_65=q7 = -0.25; // the real part
per_frame_66=q8 = 0.2; // the imaginary part
per_frame_67=
per_frame_68=q11 = 1/asin(1);
per_frame_69=decay=0.965;
per_frame_70=zoom=1;
per_frame_71=rot=0.008
per_pixel_1=var=30+above(bass,0.9)*15;
per_pixel_2=
per_pixel_3=chemx=above(treb,1)*0.2;
per_pixel_4=chemy=above(treb,1)*0.2;
per_pixel_5=
per_pixel_6=radm=rad+2;
per_pixel_7=cx=chemx*(radm/radm/radm);
per_pixel_8=cy=chemy*(radm/radm/radm);
per_pixel_9=
per_pixel_10=dx=sin(y*var)*0.01;
per_pixel_11=dy=cos(x*var)*0.01*rad;
per_pixel_12=
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1,uv6;
warp_4=`float dx,dy;
warp_5=`shader_body {
warp_6=`uv1 = (uv-.5) * aspect.xy;
warp_7=`float rota = lum(tex2D (sampler_noise_hq,q30*uv+.001*time))*3.14;
warp_8=`uv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));
warp_9=`mus = .2/(sqrt(uv6.y)+.2);
warp_10=`mus = abs(mus);
warp_11=`mus *= float3 (1,.96,.9);
warp_12=`float3 no = tex2D (sampler_noise_lq,uv)-.5;
warp_13=`mus *= float3 (1,.96,.9) + 0.1*no;
warp_14=`color =  1;
warp_15=`float3 blur = GetBlur1(frac(uv));
warp_16=`float2 hor = float2 (0.004,0);
warp_17=`float2 ver = float2 (0,.004);
warp_18=`dx = lum(tex2D(sampler_main,uv+hor) 
warp_19=`         - tex2D(sampler_main,uv-hor));
warp_20=`dy = lum(tex2D(sampler_main,uv+ver) 
warp_21=`         - tex2D(sampler_main,uv-ver));
warp_22=`float2 zz = float2 (dx,dy);
warp_23=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_24=`float3 crisp2 = .5*tex2D(sampler_main,uv);
warp_25=`crisp += crisp2;
warp_26=`crisp *= .667;
warp_27=`crisp +=.018*color - length(zz)*blur;
warp_28=`float3 ret1 = crisp - blur*.03 + .04*mus;
warp_29=`ret = ret1 * .99 -  .04 ;
warp_30=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_31=`                      ((zz.xyy*q27
warp_32=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_33=`                      ).xyz*
warp_34=`                      float3(1,1,0)*0.05 + 
warp_35=`                      time*float3(0,0,1)*q29
warp_36=`                     );
warp_37=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_38=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_39=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_40=`}
comp_1=`
comp_2=`sampler sampler_pw_noise_lq;
comp_3=`shader_body
comp_4=`{
comp_5=`
comp_6=`float corr = texsize.xy*texsize_noise_hq.zw;
comp_7=`float2 p0 = .5 + float2(q1,q2);
comp_8=`
comp_9=`float2 uv1 = (uv-p0)*aspect.xy;
comp_10=`float ang1 = atan2(uv1.y, uv1.x);
comp_11=`
comp_12=`float rad2 = length(uv1);
comp_13=`float rad1 = -1*rad2 + 0.05/(rad2-0.08);
comp_14=`
comp_15=`float2 uv2 = float2 (ang1/6.28, clamp(rad1,-8, 8));
comp_16=`uv2.y = uv2.y/2 + time/2;
comp_17=`
comp_18=`float3 tube = lum(tex2D(sampler_noise_hq, corr*uv2));
comp_19=`//tube  = sqrt(abs (tube-.8));
comp_20=`
comp_21=`
comp_22=`float2 uv3 = uv + tube/64;
comp_23=`double3 blur = lum(GetBlur1 (uv3));
comp_24=`double3 crisp =(GetPixel(uv3));
comp_25=`
comp_26=`double3 ret2 = crisp + blur;
comp_27=`
comp_28=`double3 lblue = float3 (0.3, 0.5, 1)/3 *(1-rad);
comp_29=`ret2 = ret2 + lblue;
comp_30=`
comp_31=`ret = -1*tube*rad + (1+q24/4)*ret2 * (1-tube/2); 
comp_32=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.300
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 =0;
wave_0_per_point5=speed = 1*cos(q2) + bass*0.1;
wave_0_per_point6=v = sample*1000 + bass*value1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + time)*speed;
wave_0_per_point10=ys = ys + cos(v*1.2 + q2)*speed;
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*cos(xs*0.04 +0.2*time)*sin(time*2 + xs);
wave_0_per_point13=y = 0.5 + 0.5*cos(ys*0.04 + 0.4*time)*cos(q2 + xs);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=r = r + 0.5*sin(time*4.22);
wave_0_per_point17=g = g + 0.5*sin(time*4.307  + (-0.5-x)*(0.5-y));
wave_0_per_point18=b = g + 0.5*sin(time*4.959);
wave_0_per_point19=
wave_0_per_point20=x = x*0.75 + 0.125;
wave_0_per_point21=y = y*0.75 + 0.125;
wave_0_per_point22=
wave_0_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point24=ys = if(above(ys,800),0 ,ys);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 =0;
wave_1_per_point5=speed = 0.01*bass_att;
wave_1_per_point6=v = sample*100 + (value1*bass);
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;
wave_1_per_point10=ys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);
wave_1_per_point13=y = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);
wave_1_per_point14=
wave_1_per_point15=
wave_1_per_point16=r = r + 0.5*sin(time*5.52);
wave_1_per_point17=g = g + 0.5*sin(time*5.107);
wave_1_per_point18=b = g + 0.5*sin(time*5.359 + (-0.5-x)*(0.5-y));
wave_1_per_point19=
wave_1_per_point20=x = x*0.7 + 0.15;
wave_1_per_point21=y = y*0.7 + 0.15;
wave_1_per_point22=
wave_1_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point24=ys = if(above(ys,800),0 ,ys);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 =0;
wave_2_per_point5=speed = 0.01*bass_att;
wave_2_per_point6=v = sample*100 + (value1*bass);
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;
wave_2_per_point10=ys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;
wave_2_per_point11=
wave_2_per_point12=x = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);
wave_2_per_point13=y = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);
wave_2_per_point14=
wave_2_per_point15=
wave_2_per_point16=r = r + 0.5*sin(time*5.62 + (-0.5-x)*(0.5-y));
wave_2_per_point17=g = g + 0.5*sin(time*5.907);
wave_2_per_point18=b = g + 0.5*sin(time*5.359);
wave_2_per_point19=
wave_2_per_point20=x = x*0.4 + 0.3;
wave_2_per_point21=y = y*0.4 + 0.3;
wave_2_per_point22=
wave_2_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point24=ys = if(above(ys,800),0 ,ys);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=beatb=above(bass,bass_att);
per_frame_2=beatbhard=if(beatb,bass-bass_att*.9,beatbhard);
per_frame_3=
per_frame_4=beatm=above(mid,mid_att);
per_frame_5=beatmhard=if(beatm,mid-mid_att*.9,beatmhard);
per_frame_6=
per_frame_7=beatt=above(treb,treb_att);
per_frame_8=beatthard=if(beatt,treb-treb_att*.9,beatthard);
per_frame_9=
per_frame_10=vol=bass+mid+treb;
per_frame_11=vol_att=bass_att+mid_att+treb_att;
per_frame_12=
per_frame_13=
per_frame_14=q1=beatb;
per_frame_15=q2=beatbhard;
per_frame_16=q3=beatm;
per_frame_17=q4=beatmhard;
per_frame_18=q5=beatt;
per_frame_19=q6=beatthard;
per_frame_20=
per_frame_21=decay=.99;
per_frame_22=wrap=1;
per_frame_23=
per_pixel_1=xs=10;
per_pixel_2=ys=10;
per_pixel_3=cx=(x*10*q2)%6;
per_pixel_4=cy=(y*10*q6)%6;
per_pixel_5=
per_pixel_6=rot=-sin(bass*q1+treb*q5+mid*q3+q2*q4*q6)*.01*bass_att;
per_pixel_7=
per_pixel_8=num = 8;
per_pixel_9=pi = 3.141592654;
per_pixel_10=radi = (y-.5)*.75;
per_pixel_11=radi = (y-.5);
per_pixel_12=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_13=
per_pixel_14=an = ang + pi + time;
per_pixel_15=an = an - pi*2*int(an/(pi*2));
per_pixel_16=
per_pixel_17=mod = .1;
per_pixel_18=
per_pixel_19=seg = ang + pi;
per_pixel_20=seg = seg/(pi*2)*num;
per_pixel_21=seg = int(seg);
per_pixel_22=seg = seg - equal(seg,num);
per_pixel_23=
per_pixel_24=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_25=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_26=//anga = anga + pi/6; // num = 6
per_pixel_27=anga = anga + pi/4; // num = 8
per_pixel_28=//anga = anga + .85; // num = 10
per_pixel_29=
per_pixel_30=
per_pixel_31=ox = .5 - radi*sin(anga);
per_pixel_32=oy = .5 + radi*cos(anga);
per_pixel_33=
per_pixel_34=rot = if(equal(seg,0),rot,0);
per_pixel_35=
per_pixel_36=//dx = equal(seg,3)*(x-ox);
per_pixel_37=//dy = equal(seg,3)*(y-oy);
per_pixel_38=
per_pixel_39=dx = above(seg,0)*(x-ox);
per_pixel_40=dy = above(seg,0)*(y-oy);
per_pixel_41=
per_pixel_42=//dx = equal(seg,1)*(x - .5)*2;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`float2 zoom = 2.9;
warp_5=`float2 cntr = float2(-0,-0);
warp_6=`float2 c = float2(0,2); // complex constant
warp_7=`
warp_8=` float2 my_uv = (uv-0.5-cntr)*zoom; // center and scale dx/dy pane
warp_9=` float2 u2 = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y); //complex squaring of u
warp_10=` float2 cu2 = float2(u2.x*c.x - u2.y*c.y, u2.x*c.y + c.x*u2.y); // complex multiplication by c
warp_11=` float denom = 1/((cu2.x+1)*(cu2.x+1)+cu2.y*cu2.y);
warp_12=` my_uv = float2(u2.x*(cu2.x+1)+u2.y*cu2.y,u2.y*(cu2.x+1)-u2.x*cu2.y)*denom; // complex division u^2/(1+c*u^2)
warp_13=`
warp_14=`zoom = 1.84+(bass-treb)*0.0;
warp_15=`cntr = float2(0,0);
warp_16=`c = float2(0.2806,0.4508);
warp_17=`
warp_18=` float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island
warp_19=` my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c
warp_20=`
warp_21=`ret.z = tex2D( sampler_fw_main, my_uv - floor(my_uv) ).z*0.9- 0.04;
warp_22=`ret.x = tex2D( sampler_fc_main, my_uv2).x - 0.008;
warp_23=`
warp_24=` my_uv = lerp(my_uv,my_uv2,0.8); // linear interpolation between the two solutions
warp_25=`
warp_26=`ret.y = tex2D( sampler_fw_main, my_uv - floor(my_uv) ).y*0.9- 0.004;
warp_27=`
warp_28=`}
comp_1=`sampler sampler_manyfish;
comp_2=`shader_body
comp_3=`{
comp_4=`
comp_5=`float2 ac = float2(q1,q2);
comp_6=`float2 mu = float2(q3,q4);
comp_7=`float2 c = float2(q5,q6);
comp_8=`float2 d = float2(q7,q8);
comp_9=`
comp_10=`float2 z = (uv-0.5)*aspect.wz;
comp_11=`
comp_12=`// (c*z + d)
comp_13=`float2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x)*aspect.yx + d;
comp_14=`// mu/(cz+d)
comp_15=`float2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;
comp_16=`
comp_17=`    d = texsize.zw*4;
comp_18=`    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).x;
comp_19=`    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).x;
comp_20=`
comp_21=`moebius = 0.5 + (1.0 - abs( frac( moebius * 0.5  + float2(dx,dy)*.01) * 2 - 1.0 )-0.5)*0.99;
comp_22=`
comp_23=`ret.x = GetPixel(moebius).y;
comp_24=`ret.z = GetPixel(uv).x;
comp_25=`ret.y = GetBlur1(moebius).z;
comp_26=`
comp_27=`ret = tex2d(sampler_manyfish, moebius);
comp_28=`ret = lerp(ret,float3(-1,-2,1),GetBlur2(uv-float2(dx,dy)*0.02).x*0.4);
comp_29=`ret = lerp(ret,float3(0,-0.1,-0.2),GetBlur2(moebius).z*1.4);
comp_30=`ret = lerp(ret,ret*0.6-0.2,GetPixel(moebius).y*1);
comp_31=`ret = lerp(ret,float3(1.6,0,0.6),GetPixel(moebius).z*0.38);
comp_32=`ret = lerp(ret,float3(2,4,3),GetPixel(uv-float2(dx,dy)*0.012).x*0.2);
comp_33=`//ret = GetPixel(uv);
comp_34=`}

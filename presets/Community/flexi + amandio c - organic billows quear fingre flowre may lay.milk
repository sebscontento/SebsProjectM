MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.036
fWaveSmoothing=0.900
fWaveParam=-0.400
fModWaveAlphaStart=1.710
fModWaveAlphaEnd=1.430
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.88020
fShader=0.000
zoom=0.99980
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=0.99980
wave_r=1.000
wave_g=1.000
wave_b=0.050
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.010
ib_size=0.500
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.010
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.520
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.600
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.01000
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.600
wave_0_per_point1=turns = 2+9*abs(q2*q1);
wave_0_per_point2=size = .15*q2;
wave_0_per_point3=speed = -2; 
wave_0_per_point4=
wave_0_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_0_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_0_per_point7=oz = 0 ;
wave_0_per_point8=
wave_0_per_point9=xang = 2.5;
wave_0_per_point10=yang = 13+sin(q7*q4+q6*q2+q7*q5);
wave_0_per_point11=zang = 0;
wave_0_per_point12=
wave_0_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point15=ox = mx;
wave_0_per_point16=oy = my;
wave_0_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_0_per_point19=ox = mx;
wave_0_per_point20=oz = mz;
wave_0_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point23=oy = my;
wave_0_per_point24=oz = mz-1;
wave_0_per_point25=
wave_0_per_point26=x = .75- ox/oz ;
wave_0_per_point27=y = .65+ oy/oz ;
wave_0_per_point28=
wave_0_per_point29=r=.1+.9*sin(3.14*sample);
wave_0_per_point30=g=.7*sin(3.14*sample);
wave_0_per_point31=b=.7*sin(3.14*sample);
wavecode_1_enabled=1
wavecode_1_samples=132
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.01000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.500
wave_1_per_point1=turns = 5+4*q4;
wave_1_per_point2=size = .13+.03*q3;
wave_1_per_point3=speed = .5; 
wave_1_per_point4=
wave_1_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_1_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_1_per_point7=oz = .04 ;
wave_1_per_point8=
wave_1_per_point9=yang = .3*(q6*q1+q5*q2+q1*q3);
wave_1_per_point10=xang = .6*(q6*q1+q5*q2+q1*q3);
wave_1_per_point11=zang = 0;
wave_1_per_point12=
wave_1_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point15=ox = mx;
wave_1_per_point16=oy = my;
wave_1_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_1_per_point19=ox = mx;
wave_1_per_point20=oz = mz;
wave_1_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point23=oy = my;
wave_1_per_point24=oz = mz-1;
wave_1_per_point25=
wave_1_per_point26=x = .75+ ox/oz ;
wave_1_per_point27=y = .35+ oy/oz ;
wave_1_per_point28=
wave_1_per_point29=r=.1+.9*sin(3.14*sample);
wave_1_per_point30=g=.7*sin(3.14*sample);
wave_1_per_point31=b=.7*sin(3.14*sample);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.01000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.910
wavecode_2_g=0.940
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=turns = 2;
wave_2_per_point2=size = .2+.02*q3;
wave_2_per_point3=speed = -2; 
wave_2_per_point4=acel=10*q1;
wave_2_per_point5= 
wave_2_per_point6=ox = (size-size*sample)*sin(acel*speed*3.14+sample*6.28*turns);
wave_2_per_point7=oy = (size-size*sample)*cos(acel*speed*3.14+sample*6.28*turns);
wave_2_per_point8=oz = 0 ;
wave_2_per_point9=
wave_2_per_point10=xang = 4;
wave_2_per_point11=yang = sin(q5*q1+q5*q2+q5*q3);
wave_2_per_point12=zang = 0;
wave_2_per_point13=
wave_2_per_point14=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point15=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point16=ox = mx;
wave_2_per_point17=oy = my;
wave_2_per_point18=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point19=mz = ox*sin(yang) + oz*cos(yang);
wave_2_per_point20=ox = mx;
wave_2_per_point21=oz = mz;
wave_2_per_point22=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point23=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point24=oy = my;
wave_2_per_point25=oz = mz-1;
wave_2_per_point26=
wave_2_per_point27=x = .3+ ox/oz ;
wave_2_per_point28=y = .35+ oy/oz ;
wave_2_per_point29=
wave_2_per_point30=r=.1+.9*sin(3.14*sample);
wave_2_per_point31=g=.7*sin(3.14*sample);
wave_2_per_point32=b=.7*sin(3.14*sample);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=0.01000
wavecode_3_smoothing=0.00000
wavecode_3_r=0.900
wavecode_3_g=0.930
wavecode_3_b=1.000
wavecode_3_a=0.700
wave_3_per_point1=turns = 8*q4;
wave_3_per_point2=size = .15+.1*q4;
wave_3_per_point3=speed = 2; 
wave_3_per_point4=
wave_3_per_point5=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
wave_3_per_point6=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
wave_3_per_point7=oz = .1 ;
wave_3_per_point8=
wave_3_per_point9=xang = 1+.4*(q6*q1+q6*q2);
wave_3_per_point10=yang = .2*q4;
wave_3_per_point11=zang = 0;
wave_3_per_point12=
wave_3_per_point13=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point14=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point15=ox = mx;
wave_3_per_point16=oy = my;
wave_3_per_point17=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point18=mz = ox*sin(yang) + oz*cos(yang);
wave_3_per_point19=ox = mx;
wave_3_per_point20=oz = mz;
wave_3_per_point21=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point22=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point23=oy = my;
wave_3_per_point24=oz = mz-1;
wave_3_per_point25=
wave_3_per_point26=x = .35+ ox/oz ;
wave_3_per_point27=y = .65+ oy/oz ;
wave_3_per_point28=
wave_3_per_point29=r=.1+.9*sin(3.14*sample);
wave_3_per_point30=g=.7*sin(3.14*sample);
wave_3_per_point31=b=.7*sin(3.14*sample);
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=162
shapecode_0_x=0.700
shapecode_0_y=0.700
shapecode_0_rad=0.02473
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=5.26820
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.500
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.300
shape_0_per_frame1=sample=instance/num_inst;
shape_0_per_frame2=
shape_0_per_frame3=turns = 2+9*abs(q2*q1);
shape_0_per_frame4=size = .15*q2;
shape_0_per_frame5=speed = -2; 
shape_0_per_frame6=
shape_0_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_0_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_0_per_frame9=oz = 0 ;
shape_0_per_frame10=
shape_0_per_frame11=xang = 2.5;
shape_0_per_frame12=yang = 13+sin(q7*q4+q6*q2+q7*q5);
shape_0_per_frame13=zang = 0;
shape_0_per_frame14=
shape_0_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame17=ox = mx;
shape_0_per_frame18=oy = my;
shape_0_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_0_per_frame21=ox = mx;
shape_0_per_frame22=oz = mz;
shape_0_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame25=oy = my;
shape_0_per_frame26=oz = mz-1;
shape_0_per_frame27=
shape_0_per_frame28=x = .75- ox/oz ;
shape_0_per_frame29=y = .65+ oy/oz ;
shape_0_per_frame30=
shape_0_per_frame31=b=.1+.9*sin(3.14*sample);
shape_0_per_frame32=g=.7*sin(3.14*sample);
shape_0_per_frame33=r=.7*sin(3.14*sample);
shapecode_1_enabled=1
shapecode_1_sides=20
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=100
shapecode_1_x=0.700
shapecode_1_y=0.700
shapecode_1_rad=0.04914
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=3.64568
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.500
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.300
shape_1_per_frame1=sample=instance/num_inst;
shape_1_per_frame2=
shape_1_per_frame3=turns = 5+4*q4;
shape_1_per_frame4=size = .13+.03*q3;
shape_1_per_frame5=speed = .5; 
shape_1_per_frame6=
shape_1_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_1_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_1_per_frame9=oz = .04 ;
shape_1_per_frame10=
shape_1_per_frame11=yang = .3*(q6*q1+q5*q2+q1*q3);
shape_1_per_frame12=xang = .6*(q6*q1+q5*q2+q1*q3);
shape_1_per_frame13=zang = 0;
shape_1_per_frame14=
shape_1_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_1_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_1_per_frame17=ox = mx;
shape_1_per_frame18=oy = my;
shape_1_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_1_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_1_per_frame21=ox = mx;
shape_1_per_frame22=oz = mz;
shape_1_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_1_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_1_per_frame25=oy = my;
shape_1_per_frame26=oz = mz-1;
shape_1_per_frame27=
shape_1_per_frame28=x = .75+ ox/oz ;
shape_1_per_frame29=y = .35+ oy/oz ;
shape_1_per_frame30=
shape_1_per_frame31=b=.1+.9*sin(3.14*sample);
shape_1_per_frame32=g=.7*sin(3.14*sample);
shape_1_per_frame33=r=.7*sin(3.14*sample);
shapecode_2_enabled=1
shapecode_2_sides=20
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=120
shapecode_2_x=0.300
shapecode_2_y=0.300
shapecode_2_rad=0.04914
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=4.02709
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.500
shape_2_per_frame1=sample=instance/num_inst;
shape_2_per_frame2=
shape_2_per_frame3=turns = 2;
shape_2_per_frame4=size = .2+.02*q3;
shape_2_per_frame5=speed = -2; 
shape_2_per_frame6=acel=10*q1;
shape_2_per_frame7= 
shape_2_per_frame8=ox = (size-size*sample)*sin(acel*speed*3.14+sample*6.28*turns);
shape_2_per_frame9=oy = (size-size*sample)*cos(acel*speed*3.14+sample*6.28*turns);
shape_2_per_frame10=oz = 0 ;
shape_2_per_frame11=
shape_2_per_frame12=xang = 4;
shape_2_per_frame13=yang = sin(q5*q1+q5*q2+q5*q3);
shape_2_per_frame14=zang = 0;
shape_2_per_frame15=
shape_2_per_frame16=mx = ox*cos(zang) - oy*sin(zang);
shape_2_per_frame17=my = ox*sin(zang) + oy*cos(zang);
shape_2_per_frame18=ox = mx;
shape_2_per_frame19=oy = my;
shape_2_per_frame20=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame21=mz = ox*sin(yang) + oz*cos(yang);
shape_2_per_frame22=ox = mx;
shape_2_per_frame23=oz = mz;
shape_2_per_frame24=my = oy*cos(xang) - oz*sin(xang);
shape_2_per_frame25=mz = oy*sin(xang) + oz*cos(xang);
shape_2_per_frame26=oy = my;
shape_2_per_frame27=oz = mz-1;
shape_2_per_frame28=
shape_2_per_frame29=x = .3+ ox/oz ;
shape_2_per_frame30=y = .35+ oy/oz ;
shape_2_per_frame31=
shape_2_per_frame32=r=.1+.9*sin(3.14*sample);
shape_2_per_frame33=g=.7*sin(3.14*sample);
shape_2_per_frame34=b=.7*sin(3.14*sample);
shapecode_3_enabled=1
shapecode_3_sides=20
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=120
shapecode_3_x=0.300
shapecode_3_y=0.300
shapecode_3_rad=0.08927
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.500
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.300
shape_3_per_frame1=sample=instance/num_inst;
shape_3_per_frame2=
shape_3_per_frame3=turns = 8*q4;
shape_3_per_frame4=size = .15+.1*q4;
shape_3_per_frame5=speed = 2; 
shape_3_per_frame6=
shape_3_per_frame7=ox = (size-size*sample)*sin(speed*3.14*time+sample*6.28*turns);
shape_3_per_frame8=oy = (size-size*sample)*cos(speed*3.14*time+sample*6.28*turns);
shape_3_per_frame9=oz = .1 ;
shape_3_per_frame10=
shape_3_per_frame11=xang = 1+.4*(q6*q1+q6*q2);
shape_3_per_frame12=yang = .2*q4;
shape_3_per_frame13=zang = 0;
shape_3_per_frame14=
shape_3_per_frame15=mx = ox*cos(zang) - oy*sin(zang);
shape_3_per_frame16=my = ox*sin(zang) + oy*cos(zang);
shape_3_per_frame17=ox = mx;
shape_3_per_frame18=oy = my;
shape_3_per_frame19=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame20=mz = ox*sin(yang) + oz*cos(yang);
shape_3_per_frame21=ox = mx;
shape_3_per_frame22=oz = mz;
shape_3_per_frame23=my = oy*cos(xang) - oz*sin(xang);
shape_3_per_frame24=mz = oy*sin(xang) + oz*cos(xang);
shape_3_per_frame25=oy = my;
shape_3_per_frame26=oz = mz-1;
shape_3_per_frame27=
shape_3_per_frame28=x = .35+ ox/oz ;
shape_3_per_frame29=y = .65+ oy/oz ;
shape_3_per_frame30=
shape_3_per_frame31=b=.1+.9*sin(3.14*sample);
shape_3_per_frame32=r=.7*sin(3.14*sample);
shape_3_per_frame33=g=.7*sin(3.14*sample);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=// -------------------------------- Beat Detective v0.07 ----------------------------------
per_frame_29=sure=if(equal(sure,0),.6,sure);
per_frame_30=interval=if(equal(interval,0),40,interval);
per_frame_31=lastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);
per_frame_32=dbass=(bass-pbass)/FPS;
per_frame_33=beat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);
per_frame_34=sure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),
per_frame_35=min(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);
per_frame_36=sure=max(.5,sure);
per_frame_37=cheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);
per_frame_38=beat=if(cheat,1,beat);
per_frame_39=sure=if(cheat,.95*sure,sure);
per_frame_40=maxdbass=max(maxdbass*.999,dbass);
per_frame_41=maxdbass=max(.012,maxdbass);
per_frame_42=maxdbass=min(.02,maxdbass);
per_frame_43=interval=if(beat, frame-lastbeat,interval);
per_frame_44=lastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);
per_frame_45=cheat=0;
per_frame_46=pbass=bass;
per_frame_47=// ----------------------------------------------------------------------------------------------
per_frame_48=warp=0;
per_frame_49=zoom=1;
per_frame_50=temp=(time/6.2831-int(time/6.2831));
per_frame_51=q7=abs(temp*6.2831-3.1415)/3.1415;
per_frame_52=q8=beat;
per_frame_53=
per_frame_54=// this echoes the value of the "beat" variable for one more frame after a beat so that both "sparks" are drawn highlighted (on consecutive frames)
per_frame_55=q8=q8+equal(frame-lastbeat,1);
per_frame_56=
per_frame_57=orient = if(alpha,orient,int(rand(3))+1);
per_frame_58=echo_orient = orient;
per_frame_59=
per_frame_60=trans = if(equal(alpha,0),0,if(equal(alpha,1),0,trans));
per_frame_61=trans = if(equal(trans,0),beat,trans);
per_frame_62=alphadir = if(alpha,if(alpha-1,alphadir,-1),1);
per_frame_63=alpha = alpha + trans*alphadir*(1/fps);
per_frame_64=alpha = max(alpha,0); alpha = min(alpha,1);
per_frame_65=echo_alpha = alpha;
per_frame_66=
per_frame_67=// ------------------ Indecision Code ----------------------
per_frame_68=// xpos and ypos are calculated as springs being acted on by a variable force, comprised of vol and bass_att or treb_att.
per_frame_69=vol = 0.167*(bass+mid);
per_frame_70=xamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);
per_frame_71=xamp = xamp + 0.5*(xamptarg-xamp);
per_frame_72=xdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
per_frame_73=xspeed = xspeed + xdir*xamp - xpos - xspeed*0.1*below(abs(xpos),xamp);
per_frame_74=xpos = xpos + 0.001*xspeed;
per_frame_75=yamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);
per_frame_76=yamp = yamp + 0.5*(yamptarg-yamp);
per_frame_77=ydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
per_frame_78=yspeed = yspeed + ydir*yamp - ypos - yspeed*0.1*below(abs(ypos),yamp);
per_frame_79=ypos = ypos + 0.001*yspeed;
per_frame_80=// ---------------------------------------------------------
per_frame_81=
per_frame_82=q1 = xpos;
per_frame_83=q2 = ypos;
per_frame_84=
per_frame_85=ob_g = max(min(0.5*(sin(1.345*time)+sin(0.987*time))+0.2,0.4),0);
per_frame_86=ob_b = max(min(0.5*(sin(1.543*time)+sin(0.789*time))+0.2,0.4),0);
per_frame_87=ob_r = max(min(0.5*(sin(0.876*time)+sin(0.543*time))+0.1,0.2),0);
per_frame_88=ib_g = max(min(0.5*(sin(1.246*time)+sin(0.864*time))+0.2,0.4),0);
per_frame_89=ib_b = max(min(0.5*(sin(1.642*time)+sin(0.468*time))+0.2,0.4),0);
per_frame_90=ib_r = max(min(0.5*(sin(0.765*time)+sin(0.654*time))+0.1,0.2),0);
per_frame_91=
per_frame_92=basschange = 0.1*basschange+0.01*bass;
per_frame_93=midchange = 0.1*midchange+0.01*mid;
per_frame_94=trebchange = 0.1*trebchange+0.01*treb;
per_frame_95=
per_frame_96=basstime = basstime + basschange;
per_frame_97=midtime = midtime + midchange;
per_frame_98=trebtime = trebtime + trebchange;
per_frame_99=
per_frame_100=q3 = basstime;
per_frame_101=q4 = midtime;
per_frame_102=q5 = trebtime;
per_frame_103=
per_frame_104=q6 = frame%2;
per_pixel_1=a = q1;
per_pixel_2=b = q2;
per_pixel_3=mx = x-a;
per_pixel_4=my = y-b;
per_pixel_5=zm = -.45;
per_pixel_6=zm= if( above(tan(time*2.1),0.95) , 0.45 , zm);
per_pixel_7=
per_pixel_8=dis = pow(mx*mx + my*my,.5)*.70710678;
per_pixel_9=
per_pixel_10=rot = rot*(1-dis);
per_pixel_11=rot=rot*20*q8 ;
per_pixel_12=
per_pixel_13=dx = zm*mx*dis*sqr(my*3.14)*q3;
per_pixel_14=dx = zm*my*dis*sqr(mx*3.14)*q3;
per_pixel_15=//cen_x = sqr(time)*.2+.3;
per_pixel_16=//cen_y = tan(time)*.5+.5;
per_pixel_17=cen_x = q1;
per_pixel_18=cen_y = q2;
per_pixel_19=radxy = tan(time*.1)*.2+.3;
per_pixel_20=
per_pixel_21=dist_x = (x-cen_x)/(radxy*(tan(time*.2*0)*.3+sqr((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_22=dist_y = (y-cen_y)/(radxy*(tan(time*.2*0)*.3+tan((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_23=in = below(abs(dist_x),1)*below(abs(dist_y),1);
per_pixel_24=//in = bnot(in);
per_pixel_25=out = bnot(in);
per_pixel_26=inx =(cen_x-q1)+.1*sign(dist_x)*(1-abs(dist_x));
per_pixel_27=iny =(cen_y-q2) +.1*sign(dist_y)*(1-abs(dist_y)); // .05*pow(dist_y,1);
per_pixel_28=
per_pixel_29=//**********outside
per_pixel_30=vang=time*.1;
per_pixel_31=vx = (x-.5)*sqr(vang) - (y-.5)*tan(vang)+.5;
per_pixel_32=vy = (x-.5)*tan(vang) +(y-.5)*sqr(vang)+.5;
per_pixel_33=
per_pixel_34=dvx=.01*tan(time+vy*80*radxy);
per_pixel_35=dvy=.01*sqr(time+vx*80*radxy);
per_pixel_36=
per_pixel_37=outx = dvx*sqr(vang) - dvy*tan(vang);
per_pixel_38=outy = -dvx*tan(vang) - dvy*sqr(vang);
per_pixel_39=
per_pixel_40=dx=in*inx+out*outx;
per_pixel_41=dx=in*iny+out*outy;
per_pixel_42=ckdx=dx;//////////////////////////////////////////
per_pixel_43=ckdy=dy;
per_pixel_44=cksx=sx;
per_pixel_45=cksy=sy;
per_pixel_46=ckrt=rot;
per_pixel_47=ckzm=zoom;
per_pixel_48=ckcx=cx;
per_pixel_49=ckcy=cy;
per_pixel_50=ckwp=warp;
per_pixel_51=
per_pixel_52=dx=0;
per_pixel_53=dy=0;
per_pixel_54=sx=1;
per_pixel_55=sy=1;
per_pixel_56=rot=0;
per_pixel_57=zoom=1;
per_pixel_58=cx=.5;
per_pixel_59=cy=.5;
per_pixel_60=warp=0;/////////////////////////////////////////////////////
per_pixel_61=
per_pixel_62=tm=time/rad;
per_pixel_63=a = q1;
per_pixel_64=b = q2;
per_pixel_65=mx = x-a;
per_pixel_66=my = y-b;
per_pixel_67=zm = -.45;
per_pixel_68=zm= if( above(sin(time*2.1),0.95) , 0.45 , zm);
per_pixel_69=
per_pixel_70=dis = pow(mx*mx + my*my,.5)*.70710678;
per_pixel_71=
per_pixel_72=rot = rot*(1-dis);
per_pixel_73=rot=rot*20*q8 ;
per_pixel_74=
per_pixel_75=dx = zm*mx*dis*cos(my*3.14)*q3;
per_pixel_76=dy = zm*my*dis*cos(mx*3.14)*q3;
per_pixel_77=num = 8;
per_pixel_78=pi = 3.141592654;
per_pixel_79=radi = (y-.5)*.75;
per_pixel_80=radi = (y-.5);
per_pixel_81=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_82=
per_pixel_83=an = ang + pi + time;
per_pixel_84=an = an - pi*2*int(an/(pi*2));
per_pixel_85=
per_pixel_86=mod = .1;
per_pixel_87=
per_pixel_88=seg = ang + pi;
per_pixel_89=seg = seg/(pi*2)*num;
per_pixel_90=seg = int(seg);
per_pixel_91=seg = seg - equal(seg,num);
per_pixel_92=
per_pixel_93=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_94=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_95=//anga = anga + pi/6; // num = 6
per_pixel_96=anga = anga + pi/4; // num = 8
per_pixel_97=//anga = anga + .85; // num = 10
per_pixel_98=
per_pixel_99=
per_pixel_100=ox = .5 - radi*sin(anga);
per_pixel_101=oy = .5 + radi*cos(anga);
per_pixel_102=
per_pixel_103=//rot = if(equal(seg,0),rot,0);
per_pixel_104=
per_pixel_105=dx = equal(seg,3)*(x-ox);
per_pixel_106=dy = equal(seg,3)*(y-oy);
per_pixel_107=
per_pixel_108=dx = above(seg,0)*(x-ox);
per_pixel_109=dy = above(seg,0)*(y-oy);
per_pixel_110=
per_pixel_111=//dx = equal(seg,1)*(x - .5)*2;
per_pixel_112=///////////////////////////////////////
per_pixel_113=cr1=(int(sin(treb*4+mid*2)/2+.5+.99));
per_pixel_114=cr2=cr1;
per_pixel_115=crx=cr2-cr1;
per_pixel_116=ci=rad;
per_pixel_117=cb=.25  ;
per_pixel_118=crs=2;
per_pixel_119=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_120=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_121=jx1=crr;
per_pixel_122=kx1=1-crr;
per_pixel_123=
per_pixel_124=cjdx=dx;
per_pixel_125=cjdy=dy;
per_pixel_126=cjsx=sx;
per_pixel_127=cjsy=sy;
per_pixel_128=cjrt=rot;
per_pixel_129=cjzm=zoom;
per_pixel_130=cjcx=cx;
per_pixel_131=cjcy=cy;
per_pixel_132=cjwp=warp;
per_pixel_133=
per_pixel_134=dx=(jx1*cjdx+kx1*ckdx);
per_pixel_135=dy=(jx1*cjdy+kx1*ckdy);
per_pixel_136=sx=(jx1*cjsx+kx1*cksx);
per_pixel_137=sy=(jx1*cjsy+kx1*cksy);
per_pixel_138=rot=(jx1*cjrt+kx1*ckrt);
per_pixel_139=zoom=(jx1*cjzm+kx1*ckzm);
per_pixel_140=cx=(jx1*cjcx+kx1*ckcx);
per_pixel_141=cy=(jx1*cjcy+kx1*ckcy);
per_pixel_142=warp=(jx1*cjwp+kx1*ckwp);////////////////////////////////////////////////////
per_pixel_143=
warp_1=`shader_body
warp_2=`{
warp_3=`texsize.xy=texsize.zw*3;
warp_4=`float2 muv=uv;
warp_5=`//uv=uv_orig;
warp_6=`float3 lluu = GetPixel(float2(uv.x-texsize.x*2,uv.y-texsize.y*2));
warp_7=`float3 luu  = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y*2));
warp_8=`float3 lu   = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y));
warp_9=`float3 rruu = GetPixel(float2(uv.x+texsize.x*2,uv.y-texsize.y*2));
warp_10=`float3 ruu  = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y*2));
warp_11=`float3 ru   = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y));
warp_12=`float3 lldd = GetPixel(float2(uv.x-texsize.x*2,uv.y+texsize.y*2));
warp_13=`float3 ldd  = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y*2));
warp_14=`float3 ld   = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y));
warp_15=`float3 rrdd = GetPixel(float2(uv.x+texsize.x*2,uv.y+texsize.y*2));
warp_16=`float3 rdd  = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y*2));
warp_17=`float3 rd   = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y));
warp_18=`//ret-=((lu+luu+lu)*(1-lluu))*0.1;
warp_19=`//uncomment upper - kinda new look.
warp_20=`ret+=1.2*(rd+rdd+rrdd+ld+ldd+lldd+ru+ruu+rruu+lu+lluu+luu)/12;
warp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_22=`                      ((uv.xyy*q27
warp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_24=`                      ).xyz*
warp_25=`                      float3(1,1,0)*0.05 + 
warp_26=`                      time*float3(0,0,1)*q29
warp_27=`                     );
warp_28=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_29=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_30=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_31=`ret-=GetBlur1(uv)*0.5;
warp_32=`ret/=1+(rd+ld+lu+ld)*0.01;
warp_33=`ret*=1.1;
warp_34=`//try
warp_35=`//ret+=0.05;
warp_36=`//instead of
warp_37=`ret+=0.1*(0.5-tex2D(sampler_noise_lq,uv_orig*rand_frame.xy*9));
warp_38=`
warp_39=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float dist = 1;
comp_11=`float inten = 1;
comp_12=`ret1 = 0;
comp_13=`int anz = 3;
comp_14=`int n = 1;
comp_15=`while (n <= anz) {
comp_16=`    ang2 = n/anz;
comp_17=`    c = (ang2);
comp_18=`    s = 1-(ang2);
comp_19=`    uv2.x =  uv.x*c - uv.y*s;
comp_20=`    uv2.y =  uv.x*s + uv.y*c;
comp_21=`    uv2 *= aspect.yx;
comp_22=`    dist = 1-frac(.25*n+q29); //evtl sqrt !
comp_23=`    inten =  pow(dist,.5)*(1-dist*dist)*2;
comp_24=`    float2 uv3 = frac(3*uv2*dist + .5 + q31);;
comp_25=`    neu =  GetPixel (uv3) + 2*GetBlur1(uv3);
comp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_27=`                      ((uv3.xyy*q28
comp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_29=`                      ).xyz*
comp_30=`                      float3(1,1,0)*0.05 + 
comp_31=`                      time*float3(0,0,1)*q31
comp_32=`                     );
comp_33=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_34=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_35=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_36=`neu-=slow_roam_sin.wzy*roam_cos*.4;
comp_37=`
comp_38=`    ret1 = max(ret1*.9,neu*inten);
comp_39=`n++;
comp_40=`}
comp_41=`
comp_42=`ret = .5*ret1 + 0.5*float3(0,0,.3)*(.5+uv.y) ;
comp_43=`//ret = GetPixel(uv+.5);
comp_44=`ret=1-ret;
comp_45=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.280
fDecay=0.800
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00815
fShader=0.000
zoom=1.00723
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01605
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=5
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=2
shapecode_0_x=0.490
shapecode_0_y=0.500
shapecode_0_rad=0.11589
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.36077
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = int(rand(1000))/1000;
shape_0_per_frame2=y = int(rand(1000))/1000;
shape_0_per_frame3=ang = int(rand(150))/100;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=// raytraced sphere code
per_frame_2=
per_frame_3=d = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon
per_frame_4=z = 0.4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view
per_frame_5=
per_frame_6=bb = .4*bb + .6*bass_att;
per_frame_7=bm = .4*bm + .6*mid_att;
per_frame_8=
per_frame_9=zz = 10 + bb*1.5; // linear zoom
per_frame_10=
per_frame_11=pi = asin(1)*2;
per_frame_12=pi2inv = 0.5/pi;
per_frame_13=maskangle = asin( 1/d);
per_frame_14=q32 = maskangle; // hit = (cameras angle < mask_angle)
per_frame_15=q31 = d;
per_frame_16=q30 = z;
per_frame_17=q29 = pi2inv;
per_frame_18=q28 = pi;
per_frame_19=q27 = 1/zz;
per_frame_20=q26 = time;
per_frame_21=v = 0.4;
per_frame_22=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_23=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_24=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_25=
per_frame_26=n = n + j1*0.0052;
per_frame_27=n1 = n1 + j2*0.0052;
per_frame_28=n2 = n2 + j3*0.0052;
per_frame_29=
per_frame_30=
per_frame_31=w1 = n*0.005;    // solid angles to rotate the sphere in its origin
per_frame_32=w2 = n1*0.005;
per_frame_33=w3 = n2*0.005;
per_frame_34=
per_frame_35=q20 = cos(w1);
per_frame_36=q21 = sin(w1);
per_frame_37=q22 = cos(w2);
per_frame_38=q23 = sin(w2);
per_frame_39=q24 = cos(w3);
per_frame_40=q25 = sin(w3);
per_frame_41=
per_frame_42=q19 = bm;
warp_1=`shader_body
warp_2=`{
warp_3=`uv = lerp(uv_orig,uv,0.2);
warp_4=`    float2 d = texsize.zw * 2;
warp_5=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
warp_6=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
warp_7=`
warp_8=`ret.x = tex2d(sampler_fc_main, uv + float2(dx.x,dy.x)*texsize.zw*4).x;
warp_9=`ret.y = tex2d(sampler_fc_main, uv + float2(dx.y,dy.y)*texsize.zw*4).y;
warp_10=`ret.z = tex2d(sampler_fc_main, uv + float2(dx.z,dy.z)*texsize.zw*4).z;
warp_11=`
warp_12=`ret -= (ret.yzx + ret.zxy)*0.16 + 0.002;
warp_13=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;
warp_14=`ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.04;
warp_15=`
warp_16=`}
comp_1=`float2 polar, factorA, factorB, product;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`
comp_6=`float z = q30;
comp_7=`float d = q31;
comp_8=`float pi = q28;
comp_9=`float pi2inv = q29;
comp_10=`float mask_apex = q32;
comp_11=`float zoom = q27;
comp_12=`
comp_13=`float2 c = zoom*(uv-0.5)*aspect.xy;
comp_14=`
comp_15=`float camera_apex = atan2( length(c),z);
comp_16=`
comp_17=`bool mask = mask_apex >= camera_apex;
comp_18=`
comp_19=`float longitude = atan2(c.x,c.y);
comp_20=`float latitude = (pi - camera_apex + asin(d*sin(camera_apex)));
comp_21=`
comp_22=`float2 polar = float2(longitude,latitude);
comp_23=`
comp_24=`float3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));
comp_25=`
comp_26=`factorA = p.zy;
comp_27=`factorB = float2(q20,q21);
comp_28=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_29=`p.zy = product.xy;
comp_30=`
comp_31=`factorA = p.zx;
comp_32=`factorB = float2(q22,q23);
comp_33=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_34=`p.zx = product.xy;
comp_35=`
comp_36=`factorA = p.yx;
comp_37=`factorB = float2(q24,q25);
comp_38=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_39=`p.yx = product.xy;
comp_40=`
comp_41=`polar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);
comp_42=`
comp_43=`//cloud shadow code stolen from Cope...
comp_44=`float3 cp = p;
comp_45=`cp += .005 ;
comp_46=`float2 cpolar = float2(atan2(cp.z,cp.x),atan2(cp.y,length(cp.xz)))*pi2inv*float2(1,2)+float2(0,0.5);
comp_47=`
comp_48=`//Eo.S's mirror code!
comp_49=`float2 polar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );
comp_50=`polar2 = 1.0 - abs( frac( polar2  ) * 2.0 - 1.0 );
comp_51=`
comp_52=`ret = lerp(float3(0.8,0.6,0.5)*tex2D(sampler_fc_main, polar2).x,
comp_53=`           lerp(float3(0.6,1.2,0),float3(-1,0.8,-1),GetPixel(polar2).z),
comp_54=`           GetPixel(polar2).y*0.4);
comp_55=`ret = lerp(ret,float3(0,0.15,0.3),GetPixel(polar2).z*(1-GetPixel(polar2).y)*2);
comp_56=`ret = lerp(ret,lum(ret),.6);
comp_57=`
comp_58=`ret = lerp(ret,0,saturate(mask*tex2d(sampler_noise_hq,cpolar+time/32).xxx*q19*0.2));
comp_59=`
comp_60=`ret = lerp(ret,1,mask*tex2d(sampler_noise_hq,polar+time/32).xxx*q19*0.2);
comp_61=`
comp_62=`c = -(uv-0.5)*aspect.xy;
comp_63=`polar = float2( atan2(c.x,z), atan2(c.y,z));
comp_64=`p = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));
comp_65=`factorA = p.zy;factorB = float2(q20,q21);
comp_66=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_67=`p.zy = product.xy;factorA = p.zx;factorB = float2(q22,q23);
comp_68=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);
comp_69=`p.zx = product.xy;factorA = p.yx;factorB = float2(q24,q25);
comp_70=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_71=`p.yx = product.xy;polar = float2( atan2(p.x,p.z),atan2(p.y,length(p.xz))*2)*pi2inv + float2(0,0.5);
comp_72=`
comp_73=`//Shader Stars code by martin
comp_74=`
comp_75=`float2 uv4 = 220*(mul(polar,float2x2(.6,.8,-.8,.6))+time/250);
comp_76=`float3 smask = (tex2D (sampler_noise_lq,uv4/256)).g-.9;
comp_77=`float stars = saturate(.5/length(abs(frac(uv4)-.5))*smask);
comp_78=`
comp_79=`ret = lerp(ret,saturate(stars*stars),1-mask);
comp_80=`
comp_81=`uv4 = 175*(mul(polar,float2x2(.6,.8,-.8,.6))+time/175);
comp_82=`smask = (tex2D (sampler_noise_lq,uv4/256)).g-.9;
comp_83=`stars = saturate(.5/length(abs(frac(uv4)-.5))*smask);
comp_84=`
comp_85=`ret = lerp(ret,saturate(stars*stars),.5*(1-mask));
comp_86=`
comp_87=`uv4 = 150*(mul(polar,float2x2(.6,.8,-.8,.6))+time/100);
comp_88=`smask = (tex2D (sampler_noise_lq,uv4/256)).g-.9;
comp_89=`stars = saturate(.5/length(abs(frac(uv4)-.5))*smask);
comp_90=`
comp_91=`ret = lerp(ret,saturate(stars*stars),.33*(1-mask));
comp_92=`
comp_93=`
comp_94=`}
comp_95=`
comp_96=`

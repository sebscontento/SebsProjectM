MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=2.000
fDecay=0.980
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.008
fWaveScale=0.010
fWaveSmoothing=0.540
fWaveParam=-0.300
fModWaveAlphaStart=0.390
fModWaveAlphaEnd=0.660
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.100
wave_g=0.100
wave_b=0.100
wave_x=0.490
wave_y=0.510
ob_size=0.005
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.500
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=45.120
mv_dx=0.000
mv_dy=0.000
mv_l=4.500
mv_r=0.480
mv_g=0.580
mv_b=0.370
mv_a=0.030
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.610
shapecode_1_rad=0.03646
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.17732
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=i=2*(instance+2048);    
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=zoom=q2;
shape_1_per_frame6=
shape_1_per_frame7=rad=.1*rad;
shape_1_per_frame8=y= .5+zoom*x1;      
shape_1_per_frame9=x= .5+zoom*y1/q6;
shape_1_per_frame10=
shape_1_per_frame11=x= (int(x)-x+x%2)*pow(-1,1+int(x));
shape_1_per_frame12=y= (int(y)-y+y%2)*pow(-1,1+int(y));
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=311
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*tan(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=1-mx;
shape_2_per_frame13=y=1-my;
shape_2_per_frame14=
shape_2_per_frame15=ang=(sin(time*.35)+1)*3;
shape_2_per_frame16=//a=(above(bass+mid+treb,.8));
shape_2_per_frame17=pi23=4*asin(1)*.333333333;
shape_2_per_frame18=t1=bass+mid+treb;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=db=.01;
per_frame_init_2=beatrate=1;
per_frame_init_3=avgbeatrate=2;
per_frame_init_4=lbbtime=time;
per_frame_init_5=avgdb=.01;
per_frame_init_6=vol=1;
per_frame_init_7=avgvol=.2;
per_frame_init_8=phase=0;
per_frame_init_9=bool=0;
per_frame_init_10=const=.02;
per_frame_init_11=
per_frame_init_12=mtime=1000+bass_att*1000;
per_frame_init_13=t1=500+bass*500;
per_frame_init_14=t2=500+treb*500;
per_frame_init_15=t3=500+mid*500;
per_frame_init_16=//prma init
per_frame_init_17=i=0;  
per_frame_init_18=loop(10000, gmegabuf(i)=0;
per_frame_init_19=i=i+1;);
per_frame_init_20=t=0;
per_frame_init_21=t0=time;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=db=(bass-lbass)*fps;
per_frame_29=lbass=bass;
per_frame_30=avgdb=avgdb*.99+abs(db)*.01;
per_frame_31=avgvol=avgvol*.99+(bass+mid+treb)*.0033;
per_frame_32=
per_frame_33=//beatdection
per_frame_34=rawbeatb=above(abs(db),avgdb*avgvol*4);
per_frame_35=beatb=rawbeatb*above(time-lbbtime,avgbeatrate*.5);
per_frame_36=beathard=beatb*(abs(db)-avgdb*4);
per_frame_37=//beatrate calc
per_frame_38=beatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;
per_frame_39=avgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;
per_frame_40=lbbtime=time*beatb+(1-beatb)*lbbtime;
per_frame_41=
per_frame_42=ph=(time-lbbtime)*(60/avgbeatrate)*const;
per_frame_43=phase=max(min( ph, 1 ),0);
per_frame_44=
per_frame_45=//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;
per_frame_46=const=const*(1-beatb)+beatb*( const+ (.01*bool) );
per_frame_47=
per_frame_48=bool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);
per_frame_49=
per_frame_50=bc=bc+beatb;
per_frame_51=
per_frame_52=vol=(rawbeatb*(abs(db)-(avgdb))*.01);
per_frame_53=avgvol=avgvol*.999+vol*.001;
per_frame_54=
per_frame_55=mtime=mtime+min(avgvol*.5,.25)*(60/fps);
per_frame_56=
per_frame_57=decay=1;
per_frame_58=warp=0;
per_frame_59=wrap=1;
per_frame_60=
per_frame_61=
per_frame_62=// This is the version you should use...
per_frame_63=// ----------- start copying -----------
per_frame_64=hue=(mtime*.01+phase*.5); // change this
per_frame_65=h=6*(hue-int(hue));
per_frame_66=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
per_frame_67=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
per_frame_68=ob_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
per_frame_69=ob_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
per_frame_70=ob_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
per_frame_71=// ----------- end ----------------
per_frame_72=
per_frame_73=
per_frame_74=t1=t1+min(avgvol*bass_att*.5,.25)*(60/fps);
per_frame_75=t2=t2+min(avgvol*treb_att*.5,.25)*(60/fps);
per_frame_76=t3=t3+min(avgvol*mid_att*.5,.25)*(60/fps);
per_frame_77=monitor=avgvol;
per_frame_78=q1=mtime;
per_frame_79=q2=t1;
per_frame_80=q3=t2;
per_frame_81=q4=t3;
per_frame_82=
per_frame_83=cx=sin(q2*.01)*.5+.5;
per_frame_84=cy=cos(q3*.01)*.5+.5;
per_frame_85=rot=sin(q2*.01-(q3*.01))*15+103;
per_frame_86=//prma
per_frame_87=wave_a=0;        warp=0;        q6=aspecty; 
per_frame_88=t=t+.001/fps;     c=bnot(frame%3);
per_frame_89=s1=15+5*sin(t);         s2=100*sin(t);
per_frame_90=i=0;    x=0;     y=0;    p1=0;    p2=0;
per_frame_91=loop(1024*c*4,
per_frame_92=p1 = s1*sin(i*s2);   
per_frame_93=p2 = -s1*cos(i*s2)+p1-p2;
per_frame_94=x=x+sin(p2);         y=y+cos(p2);
per_frame_95=gmegabuf(2*i)=x;      gmegabuf(2*i+1)=y;
per_frame_96=i=i+1;);
per_frame_97=///////////
per_frame_98=zoom=above(time-t0,.1);
per_frame_99=speed = 25; //// tweak
per_frame_100=t2=t2+1/fps;
per_frame_101=decay=1-t1;
per_frame_102=t1=t1+2*equal((.1*t2*speed)%20,0)/fps;
per_frame_103=t1=t1*above(0.2,(.1*t2*speed)%20);
per_frame_104=monitor=s2;
per_frame_105=q2=.004;
per_frame_106=
per_frame_107=zoom=1-(1-pow(2,(bass+treb+mid)*.0031));
per_pixel_1=
per_pixel_2=c=sin(q2*.1);
per_pixel_3=cc=sin(q3*.1);
per_pixel_4=ccc=sin(q4*.1);
per_pixel_5=cx1=.5+ccc*.3;
per_pixel_6=cy1=.5+cc*.4;
per_pixel_7=
per_pixel_8=myx=(cx1-x);
per_pixel_9=myy=(cy1-(1-y));
per_pixel_10=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_11=mang=asin( abs(myy)/(mrad) );
per_pixel_12=
per_pixel_13=ax=mang;
per_pixel_14=ay=mang;
per_pixel_15=
per_pixel_16=mrot=.1*(1-mrad)*sin(q1*.01+q2*.1);
per_pixel_17=
per_pixel_18=dx= sign(myy)*sin(ax)*mrot;
per_pixel_19=dy= sign(myx)*(cos(ay)*mrot);
per_pixel_20=
per_pixel_21=
per_pixel_22=
per_pixel_23=cx1=.5+cc*.3;
per_pixel_24=cy1=.5+c*.25+ccc*.25;
per_pixel_25=
per_pixel_26=myx=(cx1-x);
per_pixel_27=myy=(cy1-(1-y));
per_pixel_28=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_29=mang=asin( abs(myy)/(mrad) );
per_pixel_30=
per_pixel_31=ax=mang;
per_pixel_32=ay=mang;
per_pixel_33=
per_pixel_34=mrot=.1*(1-mrad)*sin(q3*.02+q1*.3);
per_pixel_35=
per_pixel_36=dx= dx - sign(myy)*sin(ax)*mrot;
per_pixel_37=dy= dy - sign(myx)*(cos(ay)*mrot);
per_pixel_38=
per_pixel_39=
per_pixel_40=
per_pixel_41=//vtx
per_pixel_42=warp=sin(x*y)*2;
per_pixel_43=rot=cos(x*y)*.1*(bass-1);
per_pixel_44=
warp_1=`sampler sampler_rand00;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`   ret.zxy = tex2D( sampler_rand00, uv).zyx;
warp_6=`float3 ret1=ret;
warp_7=`ret.z=1-ret1.x;
warp_8=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_9=`                      ((uv.xyy*q27
warp_10=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_11=`                      ).xyz*
warp_12=`                      float3(1,1,0)*0.05 + 
warp_13=`                      time*float3(0,0,1)*q29
warp_14=`                     );
warp_15=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_16=`ret.y=1-ret1.z;
warp_17=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_18=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_19=`ret.x=1-ret1.y;
warp_20=`ret1=ret;
warp_21=`ret.y=1-ret1.x;
warp_22=`
warp_23=`
warp_24=`   ret.y = tex2D( sampler_fw_main, frac(uv_orig - (uv-uv_orig))).z;
warp_25=`ret.x=1-ret1.z;
warp_26=`ret.z=1-ret1.y;
warp_27=`ret1=ret;
warp_28=`
warp_29=`    float2 zoom =1.81;
warp_30=`    float2 c = float2(0.448,0.701);
warp_31=`    float2 my_uv = (uv_orig-0.5)*zoom;
warp_32=`     my_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c;
warp_33=`ret.x=1-ret1.x;
warp_34=`
warp_35=`   ret.z =tex2D(sampler_fw_main, my_uv).z + 0.004;
warp_36=`ret.y=1-ret1.y;
warp_37=`ret.z=1-ret1.z;
warp_38=`
warp_39=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv2 = uv;
comp_4=`uv2.x=1-uv2.x;
comp_5=`uv2 = .5+(uv2-.5)*.98;
comp_6=`uv = 0.5 + (uv-0.5)*0.98;
comp_7=`    float2 d = texsize.zw*4;
comp_8=`    float2 d2= texsize.zw*4;
comp_9=`
comp_10=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_11=`    float3 dx2= ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv2-float2(1,0)*d2) );
comp_12=`
comp_13=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_14=`    float3 dy2 = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv2-float2(0,1)*d2) );
comp_15=`
comp_16=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_17=`                                        + time*float3(0,0,1)*0.2 );
comp_18=`float4 noise2= tex3D(sampler_noisevol_hq, ((uv2.xyy+float3(lum(dx2),lum(dy2),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_19=`                                        + time*float3(0,0,1)*0.2 );
comp_20=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_21=`uv2-= float2(lum(dx2),lum(dy2))*0.04;
comp_22=`
comp_23=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_24=`float3 ret2 = abs(GetPixel(uv2)+GetBlur1(uv2)-GetBlur2(uv2)-GetBlur3(uv2));
comp_25=`ret *= lum(noise)*3; 
comp_26=`ret2*= lum(noise)*3; 
comp_27=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_28=`                      ((uv2.xyy*q28
comp_29=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_30=`                      ).xyz*
comp_31=`                      float3(1,1,0)*0.05 + 
comp_32=`                      time*float3(0,0,1)*q31
comp_33=`                     );
comp_34=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_35=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_36=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_37=`ret = pow(ret,0.5);
comp_38=`ret2= pow(ret2,0.5);
comp_39=`ret2=.5-ret2;
comp_40=`ret-=.3-ret2;
comp_41=`}

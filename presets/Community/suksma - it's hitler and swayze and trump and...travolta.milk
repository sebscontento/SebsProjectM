MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=2
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=16
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t
wave_0_per_point1=dim =1; //Dancer dimensions
wave_0_per_point2=xpos=0;//Dancer x position variation
wave_0_per_point3=ypos=0;//Dancer y position variation
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=
wave_0_per_point7=//Position Stabilization
wave_0_per_point8=xpos=xpos+(1-dim)/2;
wave_0_per_point9=ypos=ypos+(1-dim)/2;
wave_0_per_point10=
wave_0_per_point11=meanbass = 0.01*(meanbass*99+bass);
wave_0_per_point12=meantreb = 0.01*(meantreb*99+treb);
wave_0_per_point13=meanmid = 0.01*(meanmid*99+mid);
wave_0_per_point14=bassdiff = (bass - meanbass)*15;
wave_0_per_point15=trebdiff = (treb - meantreb)*15;
wave_0_per_point16=middiff = (mid - meanmid)*15;
wave_0_per_point17=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point18=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point19=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point20=
wave_0_per_point21=mi2_prg = mi2_prg+mi;
wave_0_per_point22=gam = abs(gam-above(mi2_prg,5));
wave_0_per_point23=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_0_per_point24=
wave_0_per_point25=s = sample *15;
wave_0_per_point26=//Gambe
wave_0_per_point27=x= if(equal(int(s),1),.4,.4);
wave_0_per_point28=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_0_per_point29=
wave_0_per_point30=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_0_per_point31=y= if(equal(int(s),2),.4,y);
wave_0_per_point32=
wave_0_per_point33=x= if(equal(int(s),3),.6,x);
wave_0_per_point34=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_0_per_point35=
wave_0_per_point36=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_0_per_point37=y= if(equal(int(s),4),.4,y);
wave_0_per_point38=
wave_0_per_point39=//Corpo
wave_0_per_point40=x= if(equal(int(s),5),.5,x);
wave_0_per_point41=y= if(equal(int(s),5),.6,y);
wave_0_per_point42=
wave_0_per_point43=//Braccia
wave_0_per_point44=x= if(equal(int(s),6),.4-mi*.23,x);
wave_0_per_point45=y= if(equal(int(s),6),.5+mi,y);
wave_0_per_point46=
wave_0_per_point47=x= if(equal(int(s),7),.5,x);
wave_0_per_point48=y= if(equal(int(s),7),.6,y);
wave_0_per_point49=
wave_0_per_point50=x= if(equal(int(s),8),.6+tr*.23,x);
wave_0_per_point51=y= if(equal(int(s),8),.5+tr,y);
wave_0_per_point52=
wave_0_per_point53=x= if(equal(int(s),9),.5,x);
wave_0_per_point54=y= if(equal(int(s),9),.6,y);
wave_0_per_point55=
wave_0_per_point56=//Testa
wave_0_per_point57=x= if(equal(int(s),10),.5,x);
wave_0_per_point58=y= if(equal(int(s),10),.62,y);
wave_0_per_point59=
wave_0_per_point60=x= if(equal(int(s),11),.47-ba*.23,x);
wave_0_per_point61=y= if(equal(int(s),11),.62,y);
wave_0_per_point62=x= if(equal(int(s),12),.47-ba*.23,x);
wave_0_per_point63=y= if(equal(int(s),12),.67+ba*.23,y);
wave_0_per_point64=
wave_0_per_point65=x= if(equal(int(s),13),.53+ba*.23,x);
wave_0_per_point66=y= if(equal(int(s),13),.67+ba*.23,y);
wave_0_per_point67=
wave_0_per_point68=x= if(equal(int(s),14),.53+ba*.23,x);
wave_0_per_point69=y= if(equal(int(s),14),.62,y);
wave_0_per_point70=
wave_0_per_point71=x= if(equal(int(s),15),.50,x);
wave_0_per_point72=y= if(equal(int(s),15),.62,y);
wave_0_per_point73=
wave_0_per_point74=x=x*dim+xpos;
wave_0_per_point75=y=y*dim+ypos;
wave_0_per_point76=
wave_0_per_point77=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_0_per_point78=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_0_per_point79=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_0_per_point80=
wave_0_per_point81=hm=sample+mi2_prg;
wave_0_per_point82=ht=sample+tr_prg;
wave_0_per_point83=hb=sample+ba_prg;
wave_0_per_point84=
wave_0_per_point85=r=hm;
wave_0_per_point86=g=ht;
wave_0_per_point87=b=hb;
wave_0_per_point88=a=.8;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.46374
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=//pi
wave_1_init2=t8=3.14159265;
wave_1_init3=t5 = 1;
wave_1_per_frame1=rotx = rotx+bass;
wave_1_per_frame2=roty = roty+mid;
wave_1_per_frame3=rotz = rotz+treb;
wave_1_per_frame4=//rotx = 0;
wave_1_per_frame5=//roty =0;
wave_1_per_frame6=//rotz = 0;
wave_1_per_frame7=
wave_1_per_frame8=//convert rotation values from degrees to radians
wave_1_per_frame9=t1= t8*rotx/180;
wave_1_per_frame10=t2 = t8*roty/180;
wave_1_per_frame11=t3 = t8*rotz/180;
wave_1_per_frame12=
wave_1_per_frame13=t4 = 3*sin(time+0.66*t8);
wave_1_per_frame14=t5 = 10+8*cos(time+0.66*t8);
wave_1_per_frame15=
wave_1_per_frame16=b = 0.5-0.4*cos(time+0.66*t8);
wave_1_per_frame17=g = 0.5-0.4*sin(time+0.66*t8);
wave_1_per_point1=//Define 3D Shape
wave_1_per_point2=
wave_1_per_point3=//Sphere
wave_1_per_point4=x1 = (1+value1)*sin(t8*sample)*sin(16*t8*sample);
wave_1_per_point5=y1 = (1+value1)*cos(t8*sample);
wave_1_per_point6=z1= (1+value1)*sin(t8*sample)*cos(16*t8*sample);
wave_1_per_point7=
wave_1_per_point8=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_1_per_point9=y2 = y1*cos(t1)-z1*sin(t1);
wave_1_per_point10=z2 = y1*sin(t1)+z1*cos(t1);
wave_1_per_point11=x2 = z2*sin(t2)+x1*cos(t2);
wave_1_per_point12=z3 = z2*cos(t2)-x1*sin(t2);
wave_1_per_point13=x3 = x2*cos(t3)-y2*sin(t3);
wave_1_per_point14=y3 = y2*cos(t3)+x2*sin(t3);
wave_1_per_point15=//move resulting shape in 3d space
wave_1_per_point16=x4 = x3+t4;
wave_1_per_point17=y4 = y3;
wave_1_per_point18=z4 = z3+t5;
wave_1_per_point19=//draw 3d shape in 2d
wave_1_per_point20=x=0.5+0.5*(x4/(1+z4*0.5));
wave_1_per_point21=y=0.5+0.5*(y4/(1+z4*0.5));
wave_1_per_point22=
wave_1_per_point23=r = g+value1;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = 3*sin(time+1.33*t8);
wave_2_per_frame14=t5 = 10+8*cos(time+1.33*t8);
wave_2_per_frame15=
wave_2_per_frame16=r = 0.5-0.4*cos(time+1.33*t8);
wave_2_per_frame17=b = 0.5-0.4*sin(time+1.33*t8);
wave_2_per_point1=//There's Krash and Zylot's "arcane star" code here!
wave_2_per_point2=
wave_2_per_point3=//Define 3D Shape
wave_2_per_point4=//Zylot's dumb 3d wave
wave_2_per_point5=fvar = sample*512;
wave_2_per_point6=svar = fvar/16;
wave_2_per_point7=tvar = 0&svar;
wave_2_per_point8=rn=if(above(bass,1.5),int(rand(300))*.001,rn);
wave_2_per_point9=newsample = tvar/(rn);//*value1;
wave_2_per_point10=x1 = sin(newsample*3.1415926*2);
wave_2_per_point11=y1 = cos(newsample*3.1415926*2);
wave_2_per_point12=z1 = 1+sin(time*.1)*3;
wave_2_per_point13=
wave_2_per_point14=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point15=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point16=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point17=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point18=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point19=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point20=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point21=//move resulting shape in 3d space
wave_2_per_point22=x4 = x3;
wave_2_per_point23=y4 = y3;
wave_2_per_point24=z4 = z3+5+5*sin(time*.2)*sin(bass*.0011);
wave_2_per_point25=//draw 3d shape in 2d
wave_2_per_point26=x=0.5+0.5*(x4/(1+z4*0.5));
wave_2_per_point27=y=0.9+0.5*(y4/(1+z4*0.5));
wave_2_per_point28=
wave_2_per_point29=r = -.5 + sin(sample*5+((time*5)+9));
wave_2_per_point30=r = if(below(r,0),0,r);
wave_2_per_point31=g = -.5 + sin(sample*5+time*5);
wave_2_per_point32=g = if(below(g,0),0,g);
wave_2_per_point33=b = -.5 + sin(sample*5+((time*5)+18));
wave_2_per_point34=b = if(below(b,0),0,b);
wave_2_per_point35=r = if(above(bass,2.5),1,r);
wave_2_per_point36=g = if(above(bass,2.5),1,g);
wave_2_per_point37=b = if(above(bass,2.5),1,b);
wavecode_3_enabled=0
wavecode_3_samples=16
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=dim =1; //Dancer dimensions
wave_3_per_point2=xpos=0;//Dancer x position variation
wave_3_per_point3=ypos=0;//Dancer y position variation
wave_3_per_point4=
wave_3_per_point5=
wave_3_per_point6=
wave_3_per_point7=//Position Stabilization
wave_3_per_point8=xpos=xpos+(1-dim)/2;
wave_3_per_point9=ypos=ypos+(1-dim)/2;
wave_3_per_point10=
wave_3_per_point11=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point12=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point13=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point14=bassdiff = (bass - meanbass)*15;
wave_3_per_point15=trebdiff = (treb - meantreb)*15;
wave_3_per_point16=middiff = (mid - meanmid)*15;
wave_3_per_point17=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point18=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point19=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point20=
wave_3_per_point21=mi2_prg = mi2_prg+mi;
wave_3_per_point22=gam = abs(gam-above(mi2_prg,5));
wave_3_per_point23=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_3_per_point24=
wave_3_per_point25=s = sample *15;
wave_3_per_point26=//Gambe
wave_3_per_point27=x= if(equal(int(s),1),.4,.4);
wave_3_per_point28=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_3_per_point29=
wave_3_per_point30=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_3_per_point31=y= if(equal(int(s),2),.4,y);
wave_3_per_point32=
wave_3_per_point33=x= if(equal(int(s),3),.6,x);
wave_3_per_point34=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_3_per_point35=
wave_3_per_point36=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_3_per_point37=y= if(equal(int(s),4),.4,y);
wave_3_per_point38=
wave_3_per_point39=//Corpo
wave_3_per_point40=x= if(equal(int(s),5),.5,x);
wave_3_per_point41=y= if(equal(int(s),5),.6,y);
wave_3_per_point42=
wave_3_per_point43=//Braccia
wave_3_per_point44=x= if(equal(int(s),6),.4-mi*.23,x);
wave_3_per_point45=y= if(equal(int(s),6),.5+mi,y);
wave_3_per_point46=
wave_3_per_point47=x= if(equal(int(s),7),.5,x);
wave_3_per_point48=y= if(equal(int(s),7),.6,y);
wave_3_per_point49=
wave_3_per_point50=x= if(equal(int(s),8),.6+tr*.23,x);
wave_3_per_point51=y= if(equal(int(s),8),.5+tr,y);
wave_3_per_point52=
wave_3_per_point53=x= if(equal(int(s),9),.5,x);
wave_3_per_point54=y= if(equal(int(s),9),.6,y);
wave_3_per_point55=
wave_3_per_point56=//Testa
wave_3_per_point57=x= if(equal(int(s),10),.5,x);
wave_3_per_point58=y= if(equal(int(s),10),.62,y);
wave_3_per_point59=
wave_3_per_point60=x= if(equal(int(s),11),.47-ba*.23,x);
wave_3_per_point61=y= if(equal(int(s),11),.62,y);
wave_3_per_point62=x= if(equal(int(s),12),.47-ba*.23,x);
wave_3_per_point63=y= if(equal(int(s),12),.67+ba*.23,y);
wave_3_per_point64=
wave_3_per_point65=x= if(equal(int(s),13),.53+ba*.23,x);
wave_3_per_point66=y= if(equal(int(s),13),.67+ba*.23,y);
wave_3_per_point67=
wave_3_per_point68=x= if(equal(int(s),14),.53+ba*.23,x);
wave_3_per_point69=y= if(equal(int(s),14),.62,y);
wave_3_per_point70=
wave_3_per_point71=x= if(equal(int(s),15),.50,x);
wave_3_per_point72=y= if(equal(int(s),15),.62,y);
wave_3_per_point73=
wave_3_per_point74=x=x*dim+xpos;
wave_3_per_point75=y=y*dim+ypos;
wave_3_per_point76=
wave_3_per_point77=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_3_per_point78=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_3_per_point79=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_3_per_point80=
wave_3_per_point81=hm=sample+mi2_prg;
wave_3_per_point82=ht=sample+tr_prg;
wave_3_per_point83=hb=sample+ba_prg;
wave_3_per_point84=
wave_3_per_point85=r=hm;
wave_3_per_point86=g=ht;
wave_3_per_point87=b=hb;
wave_3_per_point88=a=.8;
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.55924
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.230
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=meanbass = 0.01*(meanbass*99+bass);
shape_2_per_frame2=meantreb = 0.01*(meantreb*99+treb);
shape_2_per_frame3=meanmid = 0.01*(meanmid*99+mid);
shape_2_per_frame4=bassdiff = (bass - meanbass)*15;
shape_2_per_frame5=trebdiff = (treb - meantreb)*15;
shape_2_per_frame6=middiff = (mid - meanmid)*15;
shape_2_per_frame7=bassdiff = above(bassdiff,0)*bassdiff;
shape_2_per_frame8=trebdiff = above(trebdiff,0)*trebdiff;
shape_2_per_frame9=middiff = above(middiff,0)*middiff;
shape_2_per_frame10=
shape_2_per_frame11=g = min(1,max(0,0.2*trebdiff));
shape_2_per_frame12=r = min(1,max(0,0.2*middiff));
shape_2_per_frame13=b = min(1,max(0,0.2*bassdiff));
shape_2_per_frame14=g2 = min(1,max(0,0.2*trebdiff));
shape_2_per_frame15=r2 = min(1,max(0,0.2*middiff));
shape_2_per_frame16=b2 = min(1,max(0,0.2*bassdiff));
shape_2_per_frame17=border_g = .4+min(.6,max(0,0.1*trebdiff));
shape_2_per_frame18=border_r = .4+min(.6,max(0,0.1*middiff));
shape_2_per_frame19=border_b = .4+min(.6,max(0,0.1*bassdiff));
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=v=2;
per_frame_15=bb = bb - vvb*v;
per_frame_16=mm = mm - vvm*v;
per_frame_17=tt = tt - vvt*v;
per_frame_18=q4 = -bb;
per_frame_19=q5 = -mm;
per_frame_20=q6 = -tt;
per_frame_21=q4=(q1+q2+q3)*5;
per_frame_22=q5=(q1+q2+q3)*5;
per_frame_23=q6=(q1+q2+q3)*5;
per_frame_24=q7=(q1+q2+q3)*5;
per_frame_25=q8=(q1+q2+q3)*5;
per_frame_26=q9=(q1+q2+q3)*5;
per_frame_27=q10=(q1+q2+q3)*5;
per_frame_28=q11=(q1+q2+q3)*5;
per_frame_29=q12=(q1+q2+q3)*5;
per_frame_30=q13=(q1+q2+q3)*5;
per_frame_31=q14=(q1+q2+q3)*5;
per_frame_32=q15=(q1+q2+q3)*5;
per_frame_33=q16=(q1+q2+q3)*5;
per_frame_34=q17=(q1+q2+q3)*5;
per_frame_35=q18=(q1+q2+q3)*5;
per_frame_36=q19=(q1+q2+q3)*5;
per_frame_37=q20=(q1+q2+q3)*5;
per_frame_38=q21=(q1+q2+q3)*5;
per_frame_39=q22=(q1+q2+q3)*5;
per_frame_40=q23=(q1+q2+q3)*5;
per_frame_41=q24=(q1+q2+q3)*5;
per_frame_42=q25=(q1+q2+q3)*5;
per_frame_43=q26=(q1+q2+q3)*5;
per_frame_44=q27=(q1+q2+q3)*5;
per_frame_45=q28=(q1+q2+q3)*5;
per_frame_46=q29=(q1+q2+q3)*5;
per_frame_47=q30=(q1+q2+q3)*5;
per_frame_48=q31=(q1+q2+q3)*5;
per_frame_49=q32=(q1+q2+q3)*5;
per_frame_50=
per_frame_51=wave_a = 0;
per_frame_52=
per_frame_53=
per_frame_54=
per_frame_55=//Thanks to Zylot for rainbow generator
per_frame_56=counter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);
per_frame_57=counter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);
per_frame_58=cdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));
per_frame_59=cdelay2 = if(equal(cdelay1,2),1,0);
per_frame_60=colorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));
per_frame_61=ib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));
per_frame_62=ib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));
per_frame_63=ib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));
per_frame_64=
per_frame_65=
per_frame_66=
per_frame_67=ob_r=ib_r-0.5;
per_frame_68=ob_g=ib_g-0.5;
per_frame_69=ob_b=ib_b-0.5;
per_frame_70=q1=ib_r;
per_frame_71=q2=ib_g;
per_frame_72=q3=ib_b;
per_frame_73=
per_frame_74=
per_frame_75=
per_frame_76=decay =1;
per_frame_77=
per_frame_78=
per_frame_79=//echo_orient=((bass_att+mid_att+treb_att)/3)*3;
per_frame_80=//solarize=above(0.5,bass);
per_frame_81=//darken=above(0.4,treb);
per_frame_82=
per_frame_83=musictime=musictime+(mid*mid*mid)*0.02*(75/fps);
per_frame_84=
per_frame_85=xpos=cos(musictime*0.6)*0.6;
per_frame_86=ypos=sin(musictime*0.4)*0.6;
per_frame_87=q4=xpos;
per_frame_88=q5=ypos
per_frame_89=
per_pixel_1=//flip= (-2 * above(sin(time),-0.9) )+1;
per_pixel_2=//var=(bass+mid+treb)/3;
per_pixel_3=//rot=((ang&rad/rad)/(var*20))/10;
per_pixel_4=//sx=.99-(var*0.01);
per_pixel_5=//cx=var*0.1*(ang/12);
per_pixel_6=//sy=sx;
per_pixel_7=
per_pixel_8=//zoom=-1;
per_pixel_9=sx=-1+(bass*0.2);
per_pixel_10=sy=-1-(treb*0.2);
per_pixel_11=
per_pixel_12=cx=0.5+q4;
per_pixel_13=cy=0.5-q5;
per_pixel_14=rd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );
per_pixel_15=//zm=(1.1-(rd/4));
per_pixel_16=zm=1;
per_pixel_17=
per_pixel_18=ag=atan( (y-0.5+q5)/(x-0.5-q4) );
per_pixel_19=star=sin(ag*6+time)*((2-rd)-ag)/5;
per_pixel_20=zm=zm+star/20;
per_pixel_21=sx=zm*rd;
per_pixel_22=sy=zm*rd;
per_pixel_23=//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)
warp_1=`sampler sampler_fw_clouds;
warp_2=`shader_body
warp_3=`{// sample previous frame
warp_4=`ret = tex2D( sampler_main, uv ).xyz;
warp_5=`float blur =sin(bass*90)*rad;
warp_6=`ret=0.125*(
warp_7=`GetPixel(float2(uv.x-0.01*blur,uv.y-0.01*blur)) +
warp_8=`GetPixel(float2(uv.x+0.01*blur,uv.y+0.01*blur)) +
warp_9=`GetPixel(float2(uv.x-0.01*blur,uv.y+0.01*blur)) +
warp_10=`GetPixel(float2(uv.x+0.01*blur,uv.y-0.01*blur)) +
warp_11=`GetPixel(float2(uv.x,uv.y-0.01*blur)) +
warp_12=`GetPixel(float2(uv.x,uv.y+0.01*blur)) +
warp_13=`GetPixel(float2(uv.x-0.01*blur,uv.y)) +
warp_14=`GetPixel(float2(uv.x+0.01*blur,uv.y)));
warp_15=`//add a 'bass overbright' effect:
warp_16=`ret-=-(lum(ret)<sin(time*90))*ret*blur+(lum(ret)>sin(-time*90))*ret*blur;
warp_17=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs;
comp_4=`float3 noise, ret1;
comp_5=`
comp_6=`shader_body {
comp_7=`float corr = texsize.xy*texsize_noise_lq.zw;
comp_8=`float2 uv1 = (uv-.5-.0*float2(q1,q2) )*aspect.xy;
comp_9=`//uv = mul(uv-.5,float2x2(_qa))+.5;
comp_10=`
comp_11=`//uv1 = mul(uv1,float2x2(_qa));
comp_12=`uv1*= aspect.yx;
comp_13=`float h1 = 3+q10*4;
comp_14=`
comp_15=`float z = h1/abs(uv1.y) ;
comp_16=`
comp_17=`rs.x = uv1.x *z ;
comp_18=`float mask = saturate (1-z / 40);
comp_19=`rs.y = z + time*6;
comp_20=`
comp_21=`float2 uv6 = sin(rs);
comp_22=`noise = 1-sqrt(length(uv6));
comp_23=`noise *= (noise >= .1) *mask;
comp_24=`ret1 = noise;
comp_25=`
comp_26=`
comp_27=`ret = GetPixel(uv+ret1/2)*1.5 -.1*ret1;    
comp_28=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=0.498
fVideoEchoAlpha=0.000
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=21.473
nMotionVectorsY=15.907
mv_dx=0.000
mv_dy=0.000
mv_l=0.474
mv_r=1.000
mv_g=0.179
mv_b=0.483
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.060
wave_0_per_point1=xspout=.5;
wave_0_per_point2=yspout=-.01;
wave_0_per_point3=
wave_0_per_point4=pphase=9999*sample*sample*.0001;
wave_0_per_point5=pphase2=.1+((sample*3349*sample)%100)*.01;
wave_0_per_point6=pheight=((sample*9893)%100)*.002;
wave_0_per_point7=yheight=((sample*1231*sample)%100)*.01;
wave_0_per_point8=
wave_0_per_point9=r=((sample*5454)%100)*.01*abs(sin(time*.25));
wave_0_per_point10=g=((sample*9954)%100)*.01;
wave_0_per_point11=
wave_0_per_point12=xoffset1=(cos((time*pphase2)+pphase)*pheight);
wave_0_per_point13=xoffset2=-1*(cos((time*pphase2)+pphase)*pheight);
wave_0_per_point14=
wave_0_per_point15=lrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);
wave_0_per_point16=
wave_0_per_point17=px=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);
wave_0_per_point18=
wave_0_per_point19=py=yspout+(abs(sin((time*pphase2)+pphase))*yheight);
wave_0_per_point20=
wave_0_per_point21=x=px;
wave_0_per_point22=y=py;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.200
wave_1_per_point1=pphase=(sample*5671*cos(time*.0001));
wave_1_per_point2=pheight=((sample*7654)%100)*.005*sin(time*.2);
wave_1_per_point3=
wave_1_per_point4=//xspout=.5;
wave_1_per_point5=xspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),xspout);
wave_1_per_point6=//yspout=.5;
wave_1_per_point7=yspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),yspout);
wave_1_per_point8=
wave_1_per_point9=px=xspout+(cos(time+pphase)*pheight);
wave_1_per_point10=py=yspout+(sin(time+pphase)*pheight);
wave_1_per_point11=
wave_1_per_point12=x=px;
wave_1_per_point13=y=py;
wave_1_per_point14=a=abs(sin(time*.2)*.3+(treb_att*.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.200
wave_2_per_point1=pphase=(sample*5566*sin(time*.001));
wave_2_per_point2=pheight=((sample*3443)%100)*.005*sin(time*.45);
wave_2_per_point3=
wave_2_per_point4=//xspout=.5;
wave_2_per_point5=xspout=if(below(abs(sin(time*.45)),.005),.3+(int(rand(40))*.01),xspout);
wave_2_per_point6=//yspout=.5;
wave_2_per_point7=yspout=if(below(abs(sin(time*.45)),.005),.3+(int(rand(40))*.01),yspout);
wave_2_per_point8=
wave_2_per_point9=px=xspout+(cos(time+pphase)*pheight);
wave_2_per_point10=py=yspout+(sin(time+pphase)*pheight);
wave_2_per_point11=
wave_2_per_point12=x=px;
wave_2_per_point13=y=py;
wave_2_per_point14=a=abs(sin(time*.45)*.3+(bass_att*.1));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=xspout=.5;
wave_3_per_point2=yspout=-.01;
wave_3_per_point3=
wave_3_per_point4=pphase=1234*sample*sample*.0001;
wave_3_per_point5=pphase2=.1+((sample*6666*sample)%100)*.01;
wave_3_per_point6=pheight=((sample*5555)%100)*.001;
wave_3_per_point7=yheight=((sample*5511*sample)%100)*.01;
wave_3_per_point8=
wave_3_per_point9=r=((sample*2222)%100)*.01*abs(sin(time*.25));
wave_3_per_point10=g=((sample*642)%100)*.01;
wave_3_per_point11=
wave_3_per_point12=xoffset1=(cos((time*pphase2)+pphase)*pheight);
wave_3_per_point13=xoffset2=-1*(cos((time*pphase2)+pphase)*pheight);
wave_3_per_point14=
wave_3_per_point15=lrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);
wave_3_per_point16=
wave_3_per_point17=px=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);
wave_3_per_point18=
wave_3_per_point19=py=yspout+(abs(sin((time*pphase2)+pphase))*yheight);
wave_3_per_point20=
wave_3_per_point21=x=px;
wave_3_per_point22=y=py;
shapecode_0_enabled=0
shapecode_0_sides=5
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.36457
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.55045
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.050
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x=int(rand(100))*.01;
shape_0_per_frame2=y=int(rand(100))*.01;
shape_0_per_frame3=rad=int(rand(100))*.01;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=dec_med = pow (0.9, 30/fps);
per_frame_45=dec_slow = pow (0.99, 30/fps);
per_frame_46=beat = max (max (bass, mid), treb); 
per_frame_47=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_48=is_beat = above(beat, .4+avg+peak) * above (time, t0+.2);
per_frame_49=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_50=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_51=index = (index + is_beat) %12;
per_frame_52=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_53=index3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;
per_frame_54=
per_frame_55=q20 = avg;
per_frame_56=q21 = beat;
per_frame_57=q22 = peak;
per_frame_58=q23 = index;
per_frame_59=q24 = is_beat;
per_frame_60=q26 = bass + mid + treb;
per_frame_61=q27 = index + 1;
per_frame_62=q28 = index2;
per_frame_63=
per_frame_64=k1 =  is_beat*equal(index%2,0);
per_frame_65=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_66=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_67=rott = p2 * 3.1416/4;
per_frame_68=q1 = cos(rott);
per_frame_69=q2 = sin(rott);
per_frame_70=q3 = -q2;
per_frame_71=q4 = q1;
per_frame_72=
per_frame_73=drot = (index%4-2) * 30/fps;
per_frame_74=p3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;
per_frame_75=q30 = p3 ;
per_frame_76=
per_frame_77=stag = (q27+index2*1);
per_frame_78=stag = max(stag,1);
per_frame_79=p4 = dec_med*p4 + (1-dec_med)*stag;
per_frame_80=q31 = p4;
per_frame_81=
per_frame_82=zoom = 1 + .05*q1;
per_frame_83=rot = -0.007 * index;
per_frame_84=
per_frame_85=q32 = pow(0.996, 30/fps); //fade
per_frame_86=
per_frame_87=monitor = index2;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1, uv6;
warp_4=`float dx,dy;
warp_5=`
warp_6=`shader_body {
warp_7=`
warp_8=`uv1 = (uv-.5);
warp_9=`
warp_10=`float2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;
warp_11=`uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));
warp_12=`
warp_13=`mus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));
warp_14=`mus *= float3 (1,.96,.9)/25;
warp_15=`
warp_16=`uv6 = .2*sin(12*uv+rand_frame);
warp_17=`float3 dots = .001/length(uv6)* float3 (0.2,1,1);
warp_18=`
warp_19=`//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));
warp_20=`//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);
warp_21=`
warp_22=`mus -= dots;
warp_23=`
warp_24=`
warp_25=`float3 blur = GetBlur1(frac(uv));
warp_26=`
warp_27=`float2 hor = float2 (texsize.z,0);
warp_28=`float2 ver = float2 (0,texsize.w);
warp_29=`hor = float2 (.004,0);
warp_30=`ver = float2 (0,.004);
warp_31=`
warp_32=`
warp_33=`
warp_34=`float dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));
warp_35=`float dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));
warp_36=`
warp_37=`float2 zz = float2 (dx,dy);
warp_38=`
warp_39=`
warp_40=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_41=`crisp +=.015 - length(zz)*blur/1.5;
warp_42=`
warp_43=`float3 ret1 = crisp - lum(blur)*.012 + mus;
warp_44=`//ret1 = abs(mus)/2;
warp_45=`ret = ret1 * .99 -  .04 ;
warp_46=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    
comp_4=`    //rotate texture cords
comp_5=`    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);
comp_6=`    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);
comp_7=`
comp_8=`	
comp_9=`	    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);
comp_10=`
comp_11=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;
comp_12=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_13=`                tex2D(sampler_main, uv_echo).xyz, 
comp_14=`                0.50 
comp_15=`              )*0.8;
comp_16=`    
comp_17=`    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;
comp_18=`    ret *= 1.00; //gamma
comp_19=`    ret = 1 - ret*(1 - ret)*4; //invert
comp_20=`}

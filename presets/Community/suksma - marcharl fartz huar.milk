MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.560
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.88020
fShader=0.000
zoom=0.99980
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=0.99990
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.300
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.200
wavecode_0_b=0.910
wavecode_0_a=1.000
wave_0_per_frame1=t1 = q2/3; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = 1;
wave_0_per_frame5=
wave_0_per_frame6=t6 = sin(q2*2)*0.2 -0.26;
wave_0_per_frame7=
wave_0_per_frame8=tm = time/2;
wave_0_per_frame9=r = sin( tm )*0.5+0.5;
wave_0_per_frame10=r = max( r , 0 );
wave_0_per_frame11=r = min( r , 1 );
wave_0_per_frame12=g = sin( tm + 2.1 )*0.5+0.5;
wave_0_per_frame13=g = max( g , 0 );
wave_0_per_frame14=g = min( g , 1 );
wave_0_per_frame15=b = sin( tm + 4.2 )*0.5+0.5;
wave_0_per_frame16=b = max( b , 0 );
wave_0_per_frame17=b = min( b , 1 );
wave_0_per_frame18=
wave_0_per_frame19=gamma = 0.25;
wave_0_per_frame20=r = pow(r,gamma);
wave_0_per_frame21=g = pow(g,gamma);
wave_0_per_frame22=b = pow(b,gamma);
wave_0_per_frame23=
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*2.283;
wave_0_per_point4=
wave_0_per_point5=t4 = -t4;
wave_0_per_point6=
wave_0_per_point7=//draw circle, loop 32x
wave_0_per_point8=xp = 0;
wave_0_per_point9=yp = t4*0.1;
wave_0_per_point10=zp = 3;
wave_0_per_point11=
wave_0_per_point12=t2 = t2 + 0.125;
wave_0_per_point13=
wave_0_per_point14=t3 = t3 + 1;
wave_0_per_point15=t3 = t3 * below( t3 , 8 );
wave_0_per_point16=sig = sign( t3 - 3.5 );
wave_0_per_point17=
wave_0_per_point18=//a = below( t3 , 5 );
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=//turn circle into sphere, by rotating on y axis once during frame
wave_0_per_point22=ang = n;//int(t2)/60 * 6.283 * 2;
wave_0_per_point23=sang = sin(ang);cang = cos(ang);
wave_0_per_point24=xq = xp*cang - zp*sang;
wave_0_per_point25=yq = yp;
wave_0_per_point26=zq = xp*sang + zp*cang;
wave_0_per_point27=xp=xq;yp=yq;zp=zq;
wave_0_per_point28=
wave_0_per_point29=
wave_0_per_point30=//x axis rotation;
wave_0_per_point31=ang = t1;
wave_0_per_point32=sang = sin(ang);cang = cos(ang);
wave_0_per_point33=xq = xp;
wave_0_per_point34=yq = yp*cang - zp*sang;
wave_0_per_point35=zq = yp*sang + zp*cang;
wave_0_per_point36=xp=xq;yp=yq;zp=zq;
wave_0_per_point37=
wave_0_per_point38=//y axis rotation;
wave_0_per_point39=ang = t1*18;
wave_0_per_point40=sang = sin(ang);cang = cos(ang);
wave_0_per_point41=xq = xp*cang - zp*sang;
wave_0_per_point42=yq = yp;
wave_0_per_point43=zq = xp*sang + zp*cang;
wave_0_per_point44=xp=xq;yp=yq;zp=zq;
wave_0_per_point45=
wave_0_per_point46=//z axis rotation;
wave_0_per_point47=ang = t1*3;
wave_0_per_point48=sang = sin(ang);cang = cos(ang);
wave_0_per_point49=xq = xp*cang - yp*sang;
wave_0_per_point50=yq = xp*sang + yp*cang;
wave_0_per_point51=zq = zp;
wave_0_per_point52=xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=//push forward into viewspace
wave_0_per_point55=zp = zp + 11;
wave_0_per_point56=
wave_0_per_point57=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point58=
wave_0_per_point59=//project into camera space, and compensate for aspect ratio
wave_0_per_point60=x = xp/zp * fov + 0.75;
wave_0_per_point61=y = yp/zp * 1.3333 * fov + 0.75;
wave_0_per_point62=
wave_0_per_point63=x = x + t6;
wave_0_per_point64=x = x - int(x);
wave_0_per_point65=
wave_0_per_point66=x = max( x , 0.5 );
wave_0_per_point67=y = max( y , 0.5 );
wave_0_per_point68=
wave_0_per_point69=
wave_0_per_point70=
wave_0_per_point71=bkill = 1 - equal(x,0.5);
wave_0_per_point72=bkill = bkill * (1-equal(y,0.5));
wave_0_per_point73=a = a * bkill;
wave_0_per_point74=
wave_0_per_point75=
wave_0_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.100
wavecode_1_g=0.500
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q4/2; //volume time
wave_1_per_frame2=t2 = 0;
wave_1_per_frame3=t3 = 0;
wave_1_per_frame4=t4 = 1;
wave_1_per_frame5=t7 = min( q3, 1 );
wave_1_per_frame6=
wave_1_per_frame7=//t6 = sin(q2*2)*0.2 -0.26;
wave_1_per_frame8=
wave_1_per_frame9=
wave_1_per_frame10=tm = time/2 + 0.1;
wave_1_per_frame11=r = sin( tm )*0.5+0.5;
wave_1_per_frame12=r = max( r , 0 );
wave_1_per_frame13=r = min( r , 1 );
wave_1_per_frame14=g = sin( tm + 2.1 )*0.5+0.5;
wave_1_per_frame15=g = max( g , 0 );
wave_1_per_frame16=g = min( g , 1 );
wave_1_per_frame17=b = sin( tm + 4.2 )*0.5+0.5;
wave_1_per_frame18=b = max( b , 0 );
wave_1_per_frame19=b = min( b , 1 );
wave_1_per_frame20=
wave_1_per_frame21=
wave_1_per_frame22=gamma = 0.25;
wave_1_per_frame23=r = pow(r,gamma);
wave_1_per_frame24=g = pow(g,gamma);
wave_1_per_frame25=b = pow(b,gamma);
wave_1_per_frame26=
wave_1_per_point1=//rotating sphere
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=n2 = sample*2.1415;
wave_1_per_point5=
wave_1_per_point6=scale = above( sin(n*256) , 0 )*0.1 + 0.5;
wave_1_per_point7=scale = scale ;
wave_1_per_point8=
wave_1_per_point9=//draw circle, loop 32x
wave_1_per_point10=xp = sin(n2)*scale;
wave_1_per_point11=yp = cos(n2)*scale;
wave_1_per_point12=zp = 0 ;
wave_1_per_point13=
wave_1_per_point14=t2 = t2 + 0.125;
wave_1_per_point15=
wave_1_per_point16=t3 = t3 + 1;
wave_1_per_point17=t3 = t3 * below( t3 , 8 );
wave_1_per_point18=sig = sign( t3 - 3.5 );
wave_1_per_point19=
wave_1_per_point20=//a = below( t3 , 5 );
wave_1_per_point21=
wave_1_per_point22=
wave_1_per_point23=//turn circle into sphere, by rotating on y axis once during frame
wave_1_per_point24=ang = 0;//n;//int(t2)/60 * 6.283 * 2;
wave_1_per_point25=sang = sin(ang);cang = cos(ang);
wave_1_per_point26=xq = xp*cang - zp*sang;
wave_1_per_point27=yq = yp;
wave_1_per_point28=zq = xp*sang + zp*cang;
wave_1_per_point29=xp=xq;yp=yq;zp=zq;
wave_1_per_point30=
wave_1_per_point31=
wave_1_per_point32=//x axis rotation;
wave_1_per_point33=ang = t1;
wave_1_per_point34=sang = sin(ang);cang = cos(ang);
wave_1_per_point35=xq = xp;
wave_1_per_point36=yq = yp*cang - zp*sang;
wave_1_per_point37=zq = yp*sang + zp*cang;
wave_1_per_point38=xp=xq;yp=yq;zp=zq;
wave_1_per_point39=
wave_1_per_point40=//y axis rotation;
wave_1_per_point41=ang = t1*18;
wave_1_per_point42=sang = sin(ang);cang = cos(ang);
wave_1_per_point43=xq = xp*cang - zp*sang;
wave_1_per_point44=yq = yp;
wave_1_per_point45=zq = xp*sang + zp*cang;
wave_1_per_point46=xp=xq;yp=yq;zp=zq;
wave_1_per_point47=
wave_1_per_point48=//z axis rotation;
wave_1_per_point49=ang = t1*3;
wave_1_per_point50=sang = sin(ang);cang = cos(ang);
wave_1_per_point51=xq = xp*cang - yp*sang;
wave_1_per_point52=yq = xp*sang + yp*cang;
wave_1_per_point53=zq = zp;
wave_1_per_point54=xp=xq;yp=yq;zp=zq;
wave_1_per_point55=
wave_1_per_point56=//push forward into viewspace
wave_1_per_point57=zp = zp + 2;
wave_1_per_point58=
wave_1_per_point59=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point60=
wave_1_per_point61=//project into camera space, and compensate for aspect ratio
wave_1_per_point62=x = xp/zp * fov + 0.75;
wave_1_per_point63=y = yp/zp * 1.3333 * fov + 0.75;
wave_1_per_point64=
wave_1_per_point65=//x = x + t6;
wave_1_per_point66=//x = x - int(x);
wave_1_per_point67=
wave_1_per_point68=x = max( x , 0.5 );
wave_1_per_point69=y = max( y , 0.5 );
wave_1_per_point70=
wave_1_per_point71=
wave_1_per_point72=bkill = 1 - equal(x,0.5);
wave_1_per_point73=bkill = bkill * (1-equal(y,0.5));
wave_1_per_point74=a = a * bkill;
wave_1_per_point75=
wave_1_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.200
wavecode_2_b=0.910
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q2/3; //volume time
wave_2_per_frame2=t2 = 0;
wave_2_per_frame3=t3 = 0;
wave_2_per_frame4=t4 = 1;
wave_2_per_frame5=
wave_2_per_frame6=t6 = sin(q2*2)*0.2 -0.26;
wave_2_per_frame7=
wave_2_per_frame8=tm = time/2;
wave_2_per_frame9=r = sin( tm )*0.5+0.5;
wave_2_per_frame10=r = max( r , 0 );
wave_2_per_frame11=r = min( r , 1 );
wave_2_per_frame12=g = sin( tm + 2.1 )*0.5+0.5;
wave_2_per_frame13=g = max( g , 0 );
wave_2_per_frame14=g = min( g , 1 );
wave_2_per_frame15=b = sin( tm + 4.2 )*0.5+0.5;
wave_2_per_frame16=b = max( b , 0 );
wave_2_per_frame17=b = min( b , 1 );
wave_2_per_frame18=
wave_2_per_frame19=gamma = 0.25;
wave_2_per_frame20=r = pow(r,gamma);
wave_2_per_frame21=g = pow(g,gamma);
wave_2_per_frame22=b = pow(b,gamma);
wave_2_per_frame23=
wave_2_per_point1=//rotating sphere
wave_2_per_point2=
wave_2_per_point3=n = sample*2.283;
wave_2_per_point4=
wave_2_per_point5=t4 = -t4;
wave_2_per_point6=
wave_2_per_point7=//draw circle, loop 32x
wave_2_per_point8=xp = 0;
wave_2_per_point9=yp = t4*0.1;
wave_2_per_point10=zp = 3;
wave_2_per_point11=
wave_2_per_point12=t2 = t2 + 0.125;
wave_2_per_point13=
wave_2_per_point14=t3 = t3 + 1;
wave_2_per_point15=t3 = t3 * below( t3 , 8 );
wave_2_per_point16=sig = sign( t3 - 3.5 );
wave_2_per_point17=
wave_2_per_point18=//a = below( t3 , 5 );
wave_2_per_point19=
wave_2_per_point20=
wave_2_per_point21=//turn circle into sphere, by rotating on y axis once during frame
wave_2_per_point22=ang = n;//int(t2)/60 * 6.283 * 2;
wave_2_per_point23=sang = sin(ang);cang = cos(ang);
wave_2_per_point24=xq = xp*cang - zp*sang;
wave_2_per_point25=yq = yp;
wave_2_per_point26=zq = xp*sang + zp*cang;
wave_2_per_point27=xp=xq;yp=yq;zp=zq;
wave_2_per_point28=
wave_2_per_point29=
wave_2_per_point30=//x axis rotation;
wave_2_per_point31=ang = t1;
wave_2_per_point32=sang = sin(ang);cang = cos(ang);
wave_2_per_point33=xq = xp;
wave_2_per_point34=yq = yp*cang - zp*sang;
wave_2_per_point35=zq = yp*sang + zp*cang;
wave_2_per_point36=xp=xq;yp=yq;zp=zq;
wave_2_per_point37=
wave_2_per_point38=//y axis rotation;
wave_2_per_point39=ang = t1*18;
wave_2_per_point40=sang = sin(ang);cang = cos(ang);
wave_2_per_point41=xq = xp*cang - zp*sang;
wave_2_per_point42=yq = yp;
wave_2_per_point43=zq = xp*sang + zp*cang;
wave_2_per_point44=xp=xq;yp=yq;zp=zq;
wave_2_per_point45=
wave_2_per_point46=//z axis rotation;
wave_2_per_point47=ang = t1*3;
wave_2_per_point48=sang = sin(ang);cang = cos(ang);
wave_2_per_point49=xq = xp*cang - yp*sang;
wave_2_per_point50=yq = xp*sang + yp*cang;
wave_2_per_point51=zq = zp;
wave_2_per_point52=xp=xq;yp=yq;zp=zq;
wave_2_per_point53=
wave_2_per_point54=//push forward into viewspace
wave_2_per_point55=zp = zp + 11;
wave_2_per_point56=
wave_2_per_point57=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_2_per_point58=
wave_2_per_point59=//project into camera space, and compensate for aspect ratio
wave_2_per_point60=x = xp/zp * fov + 0.75;
wave_2_per_point61=y = yp/zp * 1.3333 * fov + 0.75;
wave_2_per_point62=
wave_2_per_point63=x = x + t6;
wave_2_per_point64=x = x - int(x);
wave_2_per_point65=
wave_2_per_point66=x = max( x , 0.5 );
wave_2_per_point67=y = max( y , 0.5 );
wave_2_per_point68=
wave_2_per_point69=x = 1-x;
wave_2_per_point70=
wave_2_per_point71=bkill = 1 - equal(x,0.5);
wave_2_per_point72=bkill = bkill * (1-equal(y,0.5));
wave_2_per_point73=a = a * bkill;
wave_2_per_point74=
wave_2_per_point75=
wave_2_per_point76=a = a * (1- abs(sample-0.5)*2 );
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.100
wavecode_3_g=0.500
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = q4/2; //volume time
wave_3_per_frame2=t2 = 0;
wave_3_per_frame3=t3 = 0;
wave_3_per_frame4=t4 = 1;
wave_3_per_frame5=t7 = min( q3, 1 );
wave_3_per_frame6=
wave_3_per_frame7=//t6 = sin(q2*2)*0.2 -0.26;
wave_3_per_frame8=
wave_3_per_frame9=
wave_3_per_frame10=tm = time/2 + 0.1;
wave_3_per_frame11=r = sin( tm )*0.5+0.5;
wave_3_per_frame12=r = max( r , 0 );
wave_3_per_frame13=r = min( r , 1 );
wave_3_per_frame14=g = sin( tm + 2.1 )*0.5+0.5;
wave_3_per_frame15=g = max( g , 0 );
wave_3_per_frame16=g = min( g , 1 );
wave_3_per_frame17=b = sin( tm + 4.2 )*0.5+0.5;
wave_3_per_frame18=b = max( b , 0 );
wave_3_per_frame19=b = min( b , 1 );
wave_3_per_frame20=
wave_3_per_frame21=
wave_3_per_frame22=gamma = 0.25;
wave_3_per_frame23=r = pow(r,gamma);
wave_3_per_frame24=g = pow(g,gamma);
wave_3_per_frame25=b = pow(b,gamma);
wave_3_per_frame26=
wave_3_per_point1=//rotating sphere
wave_3_per_point2=
wave_3_per_point3=n = sample*6.283;
wave_3_per_point4=n2 = sample*2.1415;
wave_3_per_point5=
wave_3_per_point6=scale = above( sin(n*256) , 0 )*0.1 + 0.5;
wave_3_per_point7=scale = scale ;
wave_3_per_point8=
wave_3_per_point9=//draw circle, loop 32x
wave_3_per_point10=xp = sin(n2)*scale;
wave_3_per_point11=yp = cos(n2)*scale;
wave_3_per_point12=zp = 0 ;
wave_3_per_point13=
wave_3_per_point14=t2 = t2 + 0.125;
wave_3_per_point15=
wave_3_per_point16=t3 = t3 + 1;
wave_3_per_point17=t3 = t3 * below( t3 , 8 );
wave_3_per_point18=sig = sign( t3 - 3.5 );
wave_3_per_point19=
wave_3_per_point20=//a = below( t3 , 5 );
wave_3_per_point21=
wave_3_per_point22=
wave_3_per_point23=//turn circle into sphere, by rotating on y axis once during frame
wave_3_per_point24=ang = 0;//n;//int(t2)/60 * 6.283 * 2;
wave_3_per_point25=sang = sin(ang);cang = cos(ang);
wave_3_per_point26=xq = xp*cang - zp*sang;
wave_3_per_point27=yq = yp;
wave_3_per_point28=zq = xp*sang + zp*cang;
wave_3_per_point29=xp=xq;yp=yq;zp=zq;
wave_3_per_point30=
wave_3_per_point31=
wave_3_per_point32=//x axis rotation;
wave_3_per_point33=ang = t1;
wave_3_per_point34=sang = sin(ang);cang = cos(ang);
wave_3_per_point35=xq = xp;
wave_3_per_point36=yq = yp*cang - zp*sang;
wave_3_per_point37=zq = yp*sang + zp*cang;
wave_3_per_point38=xp=xq;yp=yq;zp=zq;
wave_3_per_point39=
wave_3_per_point40=//y axis rotation;
wave_3_per_point41=ang = t1*18;
wave_3_per_point42=sang = sin(ang);cang = cos(ang);
wave_3_per_point43=xq = xp*cang - zp*sang;
wave_3_per_point44=yq = yp;
wave_3_per_point45=zq = xp*sang + zp*cang;
wave_3_per_point46=xp=xq;yp=yq;zp=zq;
wave_3_per_point47=
wave_3_per_point48=//z axis rotation;
wave_3_per_point49=ang = t1*3;
wave_3_per_point50=sang = sin(ang);cang = cos(ang);
wave_3_per_point51=xq = xp*cang - yp*sang;
wave_3_per_point52=yq = xp*sang + yp*cang;
wave_3_per_point53=zq = zp;
wave_3_per_point54=xp=xq;yp=yq;zp=zq;
wave_3_per_point55=
wave_3_per_point56=//push forward into viewspace
wave_3_per_point57=zp = zp + 2;
wave_3_per_point58=
wave_3_per_point59=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_3_per_point60=
wave_3_per_point61=//project into camera space, and compensate for aspect ratio
wave_3_per_point62=x = xp/zp * fov + 0.75;
wave_3_per_point63=y = yp/zp * 1.3333 * fov + 0.75;
wave_3_per_point64=
wave_3_per_point65=//x = x + t6;
wave_3_per_point66=//x = x - int(x);
wave_3_per_point67=
wave_3_per_point68=x = max( x , 0.5 );
wave_3_per_point69=y = max( y , 0.5 );
wave_3_per_point70=
wave_3_per_point71=x=1-x;
wave_3_per_point72=
wave_3_per_point73=bkill = 1 - equal(x,0.5);
wave_3_per_point74=bkill = bkill * (1-equal(y,0.5));
wave_3_per_point75=a = a * bkill;
wave_3_per_point76=
wave_3_per_point77=a = a * (1- abs(sample-0.5)*2 );
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.250
shapecode_0_y=0.830
shapecode_0_rad=0.92894
shapecode_0_ang=1.57080
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.72010
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tex_zoom = tex_zoom + q7*0.3;
shape_0_per_frame2=
shape_0_per_frame3=y = 0.827;
shape_0_per_frame4=
shape_0_per_frame5=tex_ang = q2/4;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.250
shapecode_1_y=0.170
shapecode_1_rad=0.92894
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.72010
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//tex_zoom - -tex_zoom;
shape_1_per_frame2=
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.250
shapecode_2_y=0.830
shapecode_2_rad=0.92894
shapecode_2_ang=1.57080
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.72010
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.100
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=tex_zoom = tex_zoom + q7*0.3;
shape_2_per_frame2=
shape_2_per_frame3=y = 0.827;
shape_2_per_frame4=
shape_2_per_frame5=tex_ang = q2/4;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.44044
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=tm = time/2 + 0.1;
shape_3_per_frame2=r = sin( tm )*0.5+0.5;
shape_3_per_frame3=r = max( r , 0 );
shape_3_per_frame4=r = min( r , 1 );
shape_3_per_frame5=g = sin( tm + 2.1 )*0.5+0.5;
shape_3_per_frame6=g = max( g , 0 );
shape_3_per_frame7=g = min( g , 1 );
shape_3_per_frame8=b = sin( tm + 4.2 )*0.5+0.5;
shape_3_per_frame9=b = max( b , 0 );
shape_3_per_frame10=b = min( b , 1 );
shape_3_per_frame11=
shape_3_per_frame12=a = above(q1,0.7);
shape_3_per_frame13=
shape_3_per_frame14=ang = time/3
per_frame_1=wave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));
per_frame_2=wave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));
per_frame_3=wave_g = wave_g + 0.4*sin(time*1.931);
per_frame_4=vol=0.15*(bass_att+bass+mid+mid_att);
per_frame_5=bass_eff = max(max(bass,bass_att)-1,0);
per_frame_6=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_7=dx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_8=dy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_9=dx_r=if(equal(q3,0),if(above(x,xpos),dx*q1-xpos,dx+q2-xpos),dx);
per_frame_10=dy_r=if(equal(q3,0),if(above(y,ypos),dy*q1-ypos,dy+q2-ypos),dy);
per_frame_11=rot = rot+0.05*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );
per_frame_12=mytime=.9;
per_frame_13=xpos=.5/vol;
per_frame_14=ypos=.5/vol;
per_frame_15=q1=bass_eff+sin(time*mytime*4);
per_frame_16=q2=bas_eff+cos(time*mytime*2);
per_frame_17=q3=bass_eff+abs(rad+.5)+(q2*q5);
per_frame_18=q4=bass_thresh+abs(.9*5)*(dx_r*dy_r)*(dx*dy);
per_frame_19=q5=bass_tresh+cos(.2*2)*(dx_r*dy_r);
per_frame_20=q6=bass_thresh+0.1*(atan(abs(-rad+.5)))*q1;
per_frame_21=q7=if(above(bass+bass_att,2),-1.5+bass+bass_att,0);
per_frame_22=q8=below(rad- 0.1*x,0.18);
per_frame_23=q9=if(below(rad,.5),.9+rad,.5+bass*3%1000*.1);
per_frame_24=wave_y = wave_y + 0.2*sin(1.85*time);
per_frame_25=wave_x = wave_x + 0.5*sin(1.85*time);
per_frame_26=cx = cx - (cx+0.07*sin(rad*18 + time*9))+(zoom + 0.005*tan(ang-ang));
per_frame_27=cy = cy - (cy+0.07*sin(rad*18 + time*9))+(zoom + 0.005*tan(ang-ang));
per_frame_28=ib_r=q3+q2;
per_frame_29=ib_b=q2+q1;
per_frame_30=ib_g=q1+q3;
per_frame_31=ib_size=0.002;
per_frame_32=monitor=bass;
per_pixel_1=zoom= if(below(q1,q6),0.3*x,if(equal(q2,q5),0.2*(1-x),if(above(q3,q4),0.3*y,0.2*(1-y)+if(equal(q4,q3),0.3* xpos, if(above(q5,q2),0.25*(1-xpos),if(below(q6,q1),0.3*ypos,0.25*(1-ypos)+if(equal(q7,q9),0.3*x, if(below(q8,q7),0.2*(1-x),if(equal(q9,q6),0.3*y,0.2*(1-y)))))))))) + .8 - 0.02*(min(q6+q1,.5));
per_pixel_2=dx = .01*atan((rad)/.1*sin((dx_r*dy_r)*20+time*5));
warp_1=`sampler sampler_fw_clouds;
warp_2=`shader_body
warp_3=`{// sample previous frame
warp_4=`ret = tex2D( sampler_main, uv ).xyz;
warp_5=`float blur =sin(bass*90);
warp_6=`ret=0.125*(
warp_7=`GetPixel(float2(uv.x-0.01*blur,uv.y-0.01*blur)) +
warp_8=`GetPixel(float2(uv.x+0.01*blur,uv.y+0.01*blur)) +
warp_9=`GetPixel(float2(uv.x-0.01*blur,uv.y+0.01*blur)) +
warp_10=`GetPixel(float2(uv.x+0.01*blur,uv.y-0.01*blur)) +
warp_11=`GetPixel(float2(uv.x,uv.y-0.01*blur)) +
warp_12=`GetPixel(float2(uv.x,uv.y+0.01*blur)) +
warp_13=`GetPixel(float2(uv.x-0.01*blur,uv.y)) +
warp_14=`GetPixel(float2(uv.x+0.01*blur,uv.y)));
warp_15=`//add a 'bass overbright' effect:
warp_16=`ret-=-(lum(ret)<0.5)*ret*blur+(lum(ret)>0.5)*ret*blur;
warp_17=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    //uv.y = rad*rad;
comp_4=`    float srad = sqrt(rad)+ 0.05;
comp_5=`
comp_6=`    ret = tex2D(sampler_main, uv).xyz;
comp_7=`    ret = tex2D(sampler_main, uv + (cos(ret.xz*17.3))*0.02).xyz;
comp_8=`
comp_9=`
comp_10=`    //ret += GetBlur1(uv) - 0.07;
comp_11=`    //ret *= float3(1.3,0.8,0.5);
comp_12=`    //ret *= 0.8;    
comp_13=`}

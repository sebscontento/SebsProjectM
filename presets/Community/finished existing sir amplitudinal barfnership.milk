MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=2.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=13.29089
rot=0.00000
cx=0.500
cy=0.500
dx=-0.28000
dy=-0.32000
warp=0.00909
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.100
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.700
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_0_per_frame2=tin = if(ps,time,tin);
wave_0_per_frame3=
wave_0_per_frame4=sz = 3.5;
wave_0_per_frame5=
wave_0_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_0_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_0_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_0_per_frame9=
wave_0_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_0_per_frame11=
wave_0_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_0_per_frame13=
wave_0_per_frame14=t1 = xr + bob;
wave_0_per_frame15=t2 = yr + bob;
wave_0_per_frame16=t3 = sr;
wave_0_per_point1=sp = sample*6.28*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = t3;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=fov = .3;
wave_0_per_point14=
wave_0_per_point15=a = .05;
wave_0_per_point16=mod = (oz+1)*.5;
wave_0_per_point17=a = a*max(min(mod,1),0);
wave_0_per_point18=oz = oz - 2;
wave_0_per_point19=
wave_0_per_point20=ox = ox + t1;
wave_0_per_point21=oy = oy + t2;
wave_0_per_point22=
wave_0_per_point23=x = ox*fov/oz + 0.5;
wave_0_per_point24=x = (x-.5)*0.75 + 0.5;
wave_0_per_point25=y = oy*fov/oz + 0.5;
wave_0_per_point26=
wave_0_per_point27=r = 1;
wave_0_per_point28=g = .25+.25*sin(sp);
wave_0_per_point29=b = 0;
wave_0_per_point30=
wave_0_per_point31=minrgb = min(r,min(g,b));
wave_0_per_point32=maxrgb = max(r,max(g,b));
wave_0_per_point33=l = (maxrgb-minrgb)*.5;
wave_0_per_point34=diff = maxrgb-minrgb;
wave_0_per_point35=sum = maxrgb+minrgb;
wave_0_per_point36=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_0_per_point37=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_0_per_point38=h = h*0.1666666;
wave_0_per_point39=h = if(below(h,0),0,if(above(h,1),1,h));
wave_0_per_point40=
wave_0_per_point41=h = h + time*0.05*1.324;
wave_0_per_point42=h = h - int(h);
wave_0_per_point43=
wave_0_per_point44=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_0_per_point45=tmpa = 2*l - tmpb;
wave_0_per_point46=hvr = h + .333333;
wave_0_per_point47=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_0_per_point48=hvg = h;
wave_0_per_point49=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_0_per_point50=hvb = h - .333333;
wave_0_per_point51=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_0_per_point52=
wave_0_per_point53=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_0_per_point54=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_0_per_point55=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_1_per_frame2=tin = if(ps,time,tin);
wave_1_per_frame3=
wave_1_per_frame4=sz = 3.5;
wave_1_per_frame5=
wave_1_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_1_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_1_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_1_per_frame9=
wave_1_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_1_per_frame11=
wave_1_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_1_per_frame13=
wave_1_per_frame14=t1 = xr + bob;
wave_1_per_frame15=t2 = yr + bob;
wave_1_per_frame16=t3 = sr;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = t3;
wave_1_per_point5=ss = sample*6;
wave_1_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_1_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_1_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_1_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_1_per_point12=
wave_1_per_point13=fov = .3;
wave_1_per_point14=
wave_1_per_point15=a = .05;
wave_1_per_point16=mod = (oz+1)*.5;
wave_1_per_point17=a = a*max(min(mod,1),0);
wave_1_per_point18=oz = oz - 2;
wave_1_per_point19=
wave_1_per_point20=ox = ox + t1;
wave_1_per_point21=oy = oy + t2;
wave_1_per_point22=
wave_1_per_point23=x = ox*fov/oz + 0.5;
wave_1_per_point24=x = (x-.5)*0.75 + 0.5;
wave_1_per_point25=y = oy*fov/oz + 0.5;
wave_1_per_point26=
wave_1_per_point27=r = 1+sin(sp);
wave_1_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_1_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_2_per_frame2=tin = if(ps,time,tin);
wave_2_per_frame3=
wave_2_per_frame4=sz = 3.5;
wave_2_per_frame5=
wave_2_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_2_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_2_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_2_per_frame9=
wave_2_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_2_per_frame11=
wave_2_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_2_per_frame13=
wave_2_per_frame14=t1 = xr + bob;
wave_2_per_frame15=t2 = yr + bob;
wave_2_per_frame16=t3 = sr;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = t3;
wave_2_per_point5=ss = sample*6;
wave_2_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_2_per_point12=
wave_2_per_point13=fov = .3;
wave_2_per_point14=
wave_2_per_point15=a = .05;
wave_2_per_point16=mod = (oz+1)*.5;
wave_2_per_point17=a = a*max(min(mod,1),0);
wave_2_per_point18=oz = oz - 2;
wave_2_per_point19=
wave_2_per_point20=ox = ox + t1;
wave_2_per_point21=oy = oy + t2;
wave_2_per_point22=
wave_2_per_point23=x = ox*fov/oz + 0.5;
wave_2_per_point24=x = (x-.5)*0.75 + 0.5;
wave_2_per_point25=y = oy*fov/oz + 0.5;
wave_2_per_point26=
wave_2_per_point27=r = 1+sin(sp);
wave_2_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_2_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_3_per_frame2=tin = if(ps,time,tin);
wave_3_per_frame3=
wave_3_per_frame4=sz = 3.5;
wave_3_per_frame5=
wave_3_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_3_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_3_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_3_per_frame9=
wave_3_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_3_per_frame11=
wave_3_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_3_per_frame13=
wave_3_per_frame14=t1 = xr + bob;
wave_3_per_frame15=t2 = yr + bob;
wave_3_per_frame16=t3 = sr;
wave_3_per_point1=sp = sample*6.28*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = t3;
wave_3_per_point5=ss = sample*6;
wave_3_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_3_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point12=
wave_3_per_point13=fov = .3;
wave_3_per_point14=
wave_3_per_point15=a = .05;
wave_3_per_point16=mod = (oz+1)*.5;
wave_3_per_point17=a = a*max(min(mod,1),0);
wave_3_per_point18=oz = oz - 2;
wave_3_per_point19=
wave_3_per_point20=ox = ox + t1;
wave_3_per_point21=oy = oy + t2;
wave_3_per_point22=
wave_3_per_point23=x = ox*fov/oz + 0.5;
wave_3_per_point24=x = (x-.5)*0.75 + 0.5;
wave_3_per_point25=y = oy*fov/oz + 0.5;
wave_3_per_point26=
wave_3_per_point27=r = 1+sin(sp);
wave_3_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_3_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.200
shapecode_0_y=0.300
shapecode_0_rad=0.27048
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.99914
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=zoom=1;
per_frame_init_2=xpos=0;
per_frame_init_3=ypos=0;
per_frame_1=decay=1;
per_frame_2=
per_frame_3=//vol= (bass+mid+treb)*0.55;
per_frame_4=vol=vol;
per_frame_5=
per_frame_6=
per_frame_7=mv_r = 0.5 + 0.4*sin(time*1.324);
per_frame_8=mv_g = 0.5 + 0.4*cos(time*1.371);
per_frame_9=
per_frame_10=
per_frame_11=
per_frame_12=
per_frame_13=zoom=1;
per_frame_14=
per_frame_15=musictime=musictime+vol;
per_frame_16=q4=sin(musictime*0.02)*0.3;
per_frame_17=q5=sin(musictime*0.01)*0.3;
per_frame_18=
per_frame_19=dx=sin(musictime*0.1)*0.01;
per_frame_20=//dy=cos(musictime*0.069)*0.01;
per_frame_21=
per_frame_22=
per_frame_23=
per_frame_24=
per_frame_25=monitor=rot;
per_pixel_1=dx=sin(-int(y*2)+y*2-.5)/3;
per_pixel_2=dy=sin(int(x*5)-x*5+.5)/(3+sin(time/2) );
per_pixel_3=zoom=.916;
per_pixel_4=
per_pixel_5=//rot=.05;
per_pixel_6=kdx=dx;
per_pixel_7=kdy=dy;
per_pixel_8=ksx=sx;
per_pixel_9=ksy=sy;
per_pixel_10=krt=rot;
per_pixel_11=kzm=zoom;
per_pixel_12=kcx=cx;
per_pixel_13=kcy=cy;
per_pixel_14=kwp=warp;
per_pixel_15=
per_pixel_16=dx=0;
per_pixel_17=dy=0;
per_pixel_18=sx=1;
per_pixel_19=sy=1;
per_pixel_20=rot=0;
per_pixel_21=zoom=1;
per_pixel_22=cx=.5;
per_pixel_23=cy=.5;
per_pixel_24=warp=0;
per_pixel_25=
per_pixel_26=myy = y-(0.250025);
per_pixel_27=myx = x-0.5;
per_pixel_28=dx =dx+ 2*(2*myx*myy);
per_pixel_29=dy =dy+ 2*((myy*myy) - (myx*myx));
per_pixel_30=
per_pixel_31=cr1=30*.01;
per_pixel_32=cr2=70*.01;
per_pixel_33=crx=cr2-cr1;
per_pixel_34=ci=y;
per_pixel_35=cb=.025  ;
per_pixel_36=crs=2;
per_pixel_37=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_38=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_39=jx1=crr;
per_pixel_40=kx1=1-crr;
per_pixel_41=
per_pixel_42=jdx=dx;
per_pixel_43=jdy=dy;
per_pixel_44=jsx=sx;
per_pixel_45=jsy=sy;
per_pixel_46=jrt=rot;
per_pixel_47=jzm=zoom;
per_pixel_48=jcx=cx;
per_pixel_49=jcy=cy;
per_pixel_50=jwp=warp;
per_pixel_51=
per_pixel_52=dx=(jx1*jdx+kx1*kdx);
per_pixel_53=dy=(jx1*jdy+kx1*kdy);
per_pixel_54=sx=(jx1*jsx+kx1*ksx);
per_pixel_55=sy=(jx1*jsy+kx1*ksy);
per_pixel_56=rot=(jx1*jrt+kx1*krt);
per_pixel_57=zoom=(jx1*jzm+kx1*kzm);
per_pixel_58=cx=(jx1*jcx+kx1*kcx);
per_pixel_59=cy=(jx1*jcy+kx1*kcy);
per_pixel_60=warp=(jx1*jwp+kx1*kwp);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`
warp_6=`    // mix in code based off of Geiss's
warp_7=`    float pic = tex2D(sampler_noise_hq, uv_orig*aspect.xy*.5+.1*roam_cos+.1*time).xyz;
warp_8=`    float lum = lum(pic);
warp_9=`    float use_it = abs(lum+.25 - (0.5+roam_cos.xy*0.15));
warp_10=`    float LFNoise = tex2D(sampler_noise_hq, pic-(uv.yx*8 + (time*.15)));
warp_11=`    use_it = (1-use_it - (20*LFNoise));
warp_12=`    float tex = lerp(ret, pic, use_it.xxx)*1;
warp_13=`
warp_14=`ret=tex;
warp_15=`    // darken (decay) over time
warp_16=`    ret *= 0.95; //or try: ret -= 0.004;
warp_17=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv = 0.05 + 0.9*uv;
comp_4=`
comp_5=`    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]
comp_6=`    ret = 0;
comp_7=`    ret += tex2D(sampler_main, uv ).xyz;
comp_8=`    ret += .25*GetBlur1(uv);
comp_9=`
comp_10=`    float2 uv_echo; 
comp_11=`    uv_echo.x = (uv.y - 0.5)*(-1) + 0.5;
comp_12=`    uv_echo.y = uv.x;
comp_13=`
comp_14=`    float3 ret2;
comp_15=`    ret2 = tex2D(sampler_main, uv_echo ).xyz;
comp_16=`    ret2 += .25*GetBlur1(uv_echo);
comp_17=`
comp_18=`    float2 uv_echo2; 
comp_19=`    uv_echo2.y = (uv.x - 0.5)*(-1) + 0.5;
comp_20=`    uv_echo2.x = uv.y;
comp_21=`
comp_22=`    float3 ret3;
comp_23=`    ret3 = tex2D(sampler_main, uv_echo2 ).xyz;
comp_24=`    ret3 += .25* GetBlur1(uv_echo2);
comp_25=`
comp_26=`    float2 uv_echo3; 
comp_27=`    uv_echo3 = (uv - 0.5)*float2(-1,-1) + 0.5;
comp_28=`    
comp_29=`    float3 ret4;
comp_30=`    ret4 = tex2D(sampler_main, uv_echo3 ).xyz;
comp_31=`    ret4 += .25*GetBlur1(uv_echo3);
comp_32=`
comp_33=`
comp_34=`    ret = lerp(0.5*lerp(ret3,ret4,.5),0.5*lerp(ret,ret2,.5),.5);
comp_35=`
comp_36=`
comp_37=`    // little bit of noise:
comp_38=`    ret *= 1 + 0.05*(tex2D(sampler_noise_lq, rand_frame.xy 
comp_39=`           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);
comp_40=` 
comp_41=`    // palettize:
comp_42=`    ret = pow(ret, float3(0.5, 0.5, 0.7));
comp_43=`
comp_44=`    ret = (ret-0.1)*2;
comp_45=`ret *= ret;
comp_46=`ret *= 7.2575654;
comp_47=`ret = pow(ret,1-ret);   
comp_48=`    //ret.xyz *= 2; // a little bit of overbright
comp_49=`}
comp_50=`
comp_51=`

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=1.000000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.030
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.413
fWaveScale=0.418
fWaveSmoothing=0.000
fWaveParam=-0.660
fModWaveAlphaStart=2.000
fModWaveAlphaEnd=2.000
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.19913
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01359
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=1.000
wave_x=0.240
wave_y=0.440
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.500
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=489
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=2.02310
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=vol = bass*8 + mid*5 + treb*3;
wave_0_per_frame2=m = m*0.97 + vol*0.08;
wave_0_per_frame3=monitor = vol;
wave_0_per_frame4=beat = above(vol,res)*above(vol,m)*above(vol,16);
wave_0_per_frame5=diff = (1-beat)*diff + beat*(vol-res);
wave_0_per_frame6=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
wave_0_per_frame7=res = max(0,res);
wave_0_per_frame8=
wave_0_per_frame9=r = beat*0.1;
wave_0_per_point1=t = sample*3.141592*2;
wave_0_per_point2=fnord = (1+sin(t))*(1+0.9 * cos(8*t))*(1+0.1*cos(24*t))*(0.9+0.05*cos(200*t))*0.12;
wave_0_per_point3=y = 0.3 + sin(t)*fnord;
wave_0_per_point4=x = 0.5 + cos(t)*fnord;
wave_0_per_point5=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.36971
wavecode_1_smoothing=0.00000
wavecode_1_r=0.010
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_init1=chance = 0;
wave_1_per_frame1=t1 = asin(1);
wave_1_per_frame2=
wave_1_per_frame3=rot = rot + q6;
wave_1_per_frame4=t2 = rot;
wave_1_per_frame5=
wave_1_per_frame6=q4 = 0.5 + (q4-0.5)*q15;
wave_1_per_frame7=q5 = 0.5 + (q5-0.5)*q15;
wave_1_per_frame8=;
wave_1_per_point1=w = 4*t1*sample;
wave_1_per_point2=fnord = cos(4*(w-t2))*sin(5*(w-t2));
wave_1_per_point3=
wave_1_per_point4=d = q3*0.8*q15*fnord + value1*0;
wave_1_per_point5=
wave_1_per_point6=x = q4 + sin(w)*d - cos(-t2)*0.04;
wave_1_per_point7=y = q5 + cos(w)*d - sin(-t2)*0.04;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.36971
wavecode_2_smoothing=0.00000
wavecode_2_r=0.010
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_init1=chance = 0;
wave_2_per_frame1=t1 = asin(1);
wave_2_per_frame2=
wave_2_per_frame3=rot = rot + q9;
wave_2_per_frame4=t2 = rot;
wave_2_per_frame5=
wave_2_per_frame6=q7 = 0.5 + (q7-0.5)*q15;
wave_2_per_frame7=q8 = 0.5 + (q8-0.5)*q15;
wave_2_per_point1=w = 4*t1*sample + t2;
wave_2_per_point2=fnord = cos(4*(w-t2))*sin(5*(w-t2));
wave_2_per_point3=
wave_2_per_point4=d = q3*0.8*q15*fnord + value1*0;
wave_2_per_point5=
wave_2_per_point6=x = q7 + sin(w)*d - cos(-t2)*0.04;
wave_2_per_point7=y = q8 + cos(w)*d - sin(-t2)*0.04;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.36971
wavecode_3_smoothing=0.00000
wavecode_3_r=0.010
wavecode_3_g=1.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_init1=chance = 0;
wave_3_per_frame1=t1 = asin(1);
wave_3_per_frame2=
wave_3_per_frame3=rot = rot + q12;
wave_3_per_frame4=t2 = rot;
wave_3_per_frame5=
wave_3_per_frame6=q10 = 0.5 + (q10-0.5)*q15;
wave_3_per_frame7=q11= 0.5 + (q11-0.5)*q15;
wave_3_per_point1=w = 4*t1*sample + t2;
wave_3_per_point2=fnord = cos(4*(w-t2))*sin(5*(w-t2));
wave_3_per_point3=
wave_3_per_point4=d = q3*0.8*q15*fnord + value1*0;
wave_3_per_point5=
wave_3_per_point6=x = q10 + sin(w)*d - cos(-t2)*0.04;
wave_3_per_point7=y = q11 + cos(w)*d - sin(-t2)*0.04;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.02770
shapecode_0_ang=6.03186
shapecode_0_tex_ang=6.03186
shapecode_0_tex_zoom=0.68390
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.050
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=an = an + q6;
shape_0_per_frame2=ang = an*0.5;
shape_0_per_frame3=x = q4;
shape_0_per_frame4=y = q5;
shape_0_per_frame5=rad = q3;
shape_0_per_frame6=
shape_0_per_frame7=
shape_0_per_frame8=x = 0.5 + (x-0.5)/q2;
shape_0_per_frame9=y = 0.5 + (y-0.5)/q1;
shape_0_per_frame10=
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02770
shapecode_1_ang=6.03186
shapecode_1_tex_ang=6.03186
shapecode_1_tex_zoom=0.68390
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.050
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=an = an + q9;
shape_1_per_frame2=ang = an*0.5;
shape_1_per_frame3=x = q7;
shape_1_per_frame4=y = q8;
shape_1_per_frame5=rad = q3;
shape_1_per_frame6=
shape_1_per_frame7=x = 0.5 + (x-0.5)/q2;
shape_1_per_frame8=y = 0.5 + (y-0.5)/q1;
shape_1_per_frame9=
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02770
shapecode_2_ang=6.03186
shapecode_2_tex_ang=6.03186
shapecode_2_tex_zoom=0.68390
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.050
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=an = an + q12;
shape_2_per_frame2=ang = an*0.5;
shape_2_per_frame3=x = q10;
shape_2_per_frame4=y = q11;
shape_2_per_frame5=rad = q3;
shape_2_per_frame6=
shape_2_per_frame7=x = 0.5 + (x-0.5)/q2;
shape_2_per_frame8=y = 0.5 + (y-0.5)/q1;
shape_2_per_frame9=
shapecode_3_enabled=0
shapecode_3_sides=48
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=4
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.02770
shapecode_3_ang=6.03186
shapecode_3_tex_ang=6.03186
shapecode_3_tex_zoom=0.68390
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=1.000
shape_3_per_frame1=an = an + 0.5*q16/num_inst;
shape_3_per_frame2=w = asin(1)*4*instance/num_inst + an;
shape_3_per_frame3=x = q6 + sin(w)*q5*0.5;
shape_3_per_frame4=y = q7 + cos(w)*q5*0.5;
shape_3_per_frame5=rad = q5*0.25;
shape_3_per_frame6=
shape_3_per_frame7=
shape_3_per_frame8=//x = 0.5 + (x-0.5)/q2;
shape_3_per_frame9=//y = 0.5 + (y-0.5)/q1;
shape_3_per_frame10=
per_frame_1=//before inversion
per_frame_2=scale = 1;
per_frame_3=angle = time*.2;
per_frame_4=translation_x = 0;
per_frame_5=translation_y = 0.12;
per_frame_6=
per_frame_7=//complex inverted
per_frame_8=iscale = 1;
per_frame_9=iangle = sin(time*0.1337)*0.3;
per_frame_10=itranslation_u = 0;
per_frame_11=itranslation_v = 0.2;
per_frame_12=
per_frame_13=
per_frame_14=// the möbius transformation
per_frame_15=// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector
per_frame_16=// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c
per_frame_17=// so a/c and mu can be calculated outside of the shader
per_frame_18=
per_frame_19=a_r = cos(angle)*scale;
per_frame_20=a_i = sin(angle)*scale;
per_frame_21=b_r = translation_x;
per_frame_22=b_i = translation_y;
per_frame_23=
per_frame_24=c_r = -cos(iangle)*iscale;
per_frame_25=c_i = -sin(iangle)*iscale;
per_frame_26=d_r = itranslation_u;
per_frame_27=d_i = itranslation_v;
per_frame_28=
per_frame_29=// c^(-1)
per_frame_30=c_inv_r = c_r/(c_r*c_r+c_i*c_i);
per_frame_31=c_inv_i = c_i/(c_r*c_r+c_i*c_i);
per_frame_32=
per_frame_33=// a*c^(-1)
per_frame_34=ac_r = (a_r*c_inv_r - a_i*c_inv_i);
per_frame_35=ac_i = (a_r*c_inv_i - a_i*c_inv_r);
per_frame_36=
per_frame_37=// (bc-ad)
per_frame_38=bcad_r = (b_r*c_r - b_i*c_i)-(a_r*d_r-a_i*d_i);
per_frame_39=bcad_i = (b_r*c_i - b_i*c_r)-(a_r*d_i-a_i*d_r);
per_frame_40=
per_frame_41=// mu*c^(-1)
per_frame_42=mu_r = bcad_r*c_inv_r - bcad_i*c_inv_i;
per_frame_43=mu_i = bcad_r*c_inv_i - bcad_i*c_inv_r;
per_frame_44=
per_frame_45=q1 = ac_r;
per_frame_46=q2 = ac_i;
per_frame_47=q3 = mu_r;
per_frame_48=q4 = mu_i;
per_frame_49=
per_frame_50=q5 = c_r;
per_frame_51=q6 = c_i;
per_frame_52=q7 = d_r;
per_frame_53=q8 = d_i;
per_pixel_1=vx = 0.5+cos(time*0.1)*0.5;
per_pixel_2=vy = 0.5+sin(time*0.1)*0.5;
per_pixel_3=vz = 0;
per_pixel_4=z = 0 - vz;
per_pixel_5=x = x - vx;
per_pixel_6=y = y - vy;
per_pixel_7=
per_pixel_8=d = time*0.1-treb*treb*treb*0.00;
per_pixel_9=xx = sin(d)*x + cos(d)*y;
per_pixel_10=yy = cos(d)*x - sin(d)*y;
per_pixel_11=
per_pixel_12=x = xx;
per_pixel_13=y = yy;
per_pixel_14=
per_pixel_15=
per_pixel_16=x = x + mx;
per_pixel_17=y = y + my;
per_pixel_18=z = z + vz;
per_pixel_19=cx = 0;
per_pixel_20=cy = 0;
per_pixel_21=cz = 0.5+treb*0.0;
per_pixel_22=vx = 0;
per_pixel_23=vy = 0;
per_pixel_24=vz = 0;
per_pixel_25=zoom = 0.33;
per_pixel_26=w = 1/zoom*(1+sqrt(sqr(z-cz) + sqr(x-cx)+sqr(y-cy)));
per_pixel_27=dx = -(x-mx)*w;// + w*(y-my);
per_pixel_28=dy = -(y-my)*w ;// - w*(x-mx);
warp_1=`float1 s,c;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`ret = 0;
warp_6=`
warp_7=`// fern fractal on the red channel
warp_8=`
warp_9=`float2 uv0 = uv.yx*4 -float2(3,0);
warp_10=`float c0 = tex2D(sampler_fc_main, uv0).z; // feeded by the spiral
warp_11=`
warp_12=`float2 uv1 = 0.5 + (uv-0.5)*1.15 + float2(-1,1)*0.05; // main arm
warp_13=`float1 c1 = tex2D(sampler_fc_main, uv1).x;
warp_14=`
warp_15=`float2 uv2 = float2(-1,0) + (float2(-1,1)*uv + float2(1,0) - 0.5)*4; // upper limb
warp_16=`float1 c2 = tex2D(sampler_fc_main, uv2).x;
warp_17=`
warp_18=`float2 uv3 = float2(1,2) + (float2(1,-1)*uv + float2(0,1) - 0.5)*4; // lower limb
warp_19=`float1 c3 = tex2D(sampler_fc_main, uv3).x;
warp_20=`
warp_21=`
warp_22=`ret.x = (c0 + c1 + c2 + c3)*1.075; // composition of the red fractal
warp_23=`
warp_24=`// spiral in the blue channel
warp_25=`
warp_26=`float2 uv4 = float2(-1,0) + (float2(-1,1)*uv + float2(1,0) - 0.5)*4;
warp_27=`float1 c4 = tex2D(sampler_fc_main, uv4).x; // feeded by the fern
warp_28=`
warp_29=`s = q1; // sin(w)
warp_30=`c = q2; // cos(w)
warp_31=`float2 scale = 1.05;
warp_32=`float2 uv5 = (uv-0.5)*aspect.xy;
warp_33=`       uv5 = scale*float2( c*uv5.x - s*uv5.y, s*uv5.x + c*uv5.y); // rotation
warp_34=`       uv5 = 0.5 + uv5*aspect.zw + float2(-0.03,0.03);
warp_35=`
warp_36=`float1 c5 = tex2D(sampler_fc_main, uv5).z;
warp_37=`
warp_38=`
warp_39=`
warp_40=`ret.z = (c4 + c5)*1.075 - 0.00;
warp_41=`
warp_42=`// mirrored checker in the green channel
warp_43=`
warp_44=`s = q3; // sin(w)
warp_45=`c = q4; // cos(w)
warp_46=`
warp_47=`float2 uv6 = (uv-0.5)*aspect.xy*2;
warp_48=`       uv6 = scale*float2( c*uv6.x - s*uv6.y, s*uv6.x + c*uv6.y); // rotation
warp_49=`       uv6 = 0.5 + uv6*aspect.zw + float2(q9,q10);
warp_50=`
warp_51=`       uv6 = 1.0 - abs( frac( uv6 * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_52=`
warp_53=`float c6 = tex2D(sampler_fc_main,uv6).z;
warp_54=`float c7 = tex2D(sampler_fc_main,uv6).y;
warp_55=`ret.y = max(c6,c7*0.5);
warp_56=`
warp_57=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv1 = (uv-0.5)*aspect.xy;
comp_4=`
comp_5=`float rad2 = length(uv1) + .05;
comp_6=`float rad1 = .1/rad2 ;
comp_7=`
comp_8=`float2 uv2 = float2 (ang/3.14, rad1*1.5);
comp_9=`uv2.y = uv2.y  +0.1*time;
comp_10=`uv2.x = uv2.x  +.02*time;
comp_11=`
comp_12=`float2 uv3 = float2 (ang/3.14, rad1);
comp_13=`uv3.y = uv3.y  + q30 ;
comp_14=`uv3.x = uv3.x  + time/32;
comp_15=`
comp_16=`
comp_17=`float3 crisp = GetPixel(uv2) + 2*GetPixel(uv3);
comp_18=`crisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));
comp_19=`
comp_20=`float3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);
comp_21=`
comp_22=`crisp = 3*crisp * pow(rad,1);
comp_23=`
comp_24=`float mask = saturate(1-4*rad);
comp_25=`
comp_26=`ret = crisp + lay1*mask + mask * GetPixel(uv);
comp_27=`
comp_28=`}

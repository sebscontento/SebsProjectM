MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.893
fWaveSmoothing=0.540
fWaveParam=0.380
fModWaveAlphaStart=0.810
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=256
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=0.04505
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.100
wavecode_1_enabled=0
wavecode_1_samples=100
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.97240
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.90685
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = .2*(int(rand(100))/100-.5);
shape_0_init2=t2 = 1+.2*(int(rand(100))/100-.5);
shape_0_init3=t3 = 1-.1*(int(rand(100))/100);
shape_0_init4=t4 = above(int(rand(100)),50)
shape_0_init5=
shape_0_per_frame1=tex_ang = t1;
shape_0_per_frame2=tex_zoom = .8*t2;
shape_0_per_frame3=rad = t2;
shape_0_per_frame4=a2 = t4; a = t4;
shapecode_1_enabled=1
shapecode_1_sides=18
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.08928
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=3.39415
shapecode_1_r=1.000
shapecode_1_g=0.990
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.900
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=r2 = min(q22/4,1);
shapecode_2_enabled=0
shapecode_2_sides=63
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.123
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.510
shapecode_3_rad=0.19869
shapecode_3_ang=0.00000
shapecode_3_tex_ang=1.00531
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=0.400
shapecode_3_b=0.000
shapecode_3_a=0.700
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=movx = int(rand(10));
per_frame_init_2=movy = int(rand(10));
per_frame_init_3=sw3 = 0;
per_frame_init_4=sw4 = -.7;
per_frame_init_5=speed = .1;
per_frame_init_6=zang_ = int(rand(2));
per_frame_1=
per_frame_2=chng=sin(time*.5);
per_frame_3=cthr=.9999;
per_frame_4=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_5=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_6=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_7=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_8=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_9=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_10=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_11=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_12=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_13=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_14=monitor=chng;
per_frame_15=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_16=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_17=
per_frame_18=monitor=mq1;
per_frame_19=vol=bass+treb+mid;
per_frame_20=atime=atime+vol;
per_frame_21=q11=.4+sin(atime*.006        )*.4;
per_frame_22=q12=.4+cos(atime*.00613828348)*.4;
per_frame_23=q13=.4+sin(atime*.00598593455)*.4;
per_frame_24=monitor=q13;
per_frame_25=dec_m = pow (0.85, 30/fps); dec_s = pow (0.95, 30/fps); 
per_frame_26=
per_frame_27=beat = bass+mid+treb; 
per_frame_28=avg = avg*dec_s + beat*(1-dec_s);
per_frame_29=is_beat = above(beat, .4+avg+peak) * above (time, t0+.2);
per_frame_30=t0a = if(bnot(is_beat),t0a,t0);
per_frame_31=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_32=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_33=index = (index + is_beat) %32;
per_frame_34=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_35=
per_frame_36=q20 = avg;
per_frame_37=q22 = peak;
per_frame_38=q24 = is_beat;
per_frame_39=q27 = index +1;
per_frame_40=q28 = index2;
per_frame_41=ZDist =  .25 + .5*pow(sin(zang_/2),2) ; //zoom ;
per_frame_42=q29 = .08/ZDist ;
per_frame_43=q31 = ZDist;
per_frame_44=trig = q24 * bnot(index%8);
per_frame_45=sw0 = if (bnot(trig),sw0,1-above(int(rand(100)),90));
per_frame_46=
per_frame_47=
per_frame_48=trig = q24 * bnot(index%4);
per_frame_49=sw1 = if (bnot(trig), sw1, int(rand(5)-2)*3.1416/2); 
per_frame_50=sw2 = if (bnot(trig), sw2, int(rand(8))-4); 
per_frame_51=
per_frame_52=trig = q24 * above (abs(beat-avg), 2) * bnot(index%4);
per_frame_53=//speed = .2 * sw2 * ZDist * pow(xang,2) + .1;
per_frame_54=fps_ = fps_ * dec_s + (1-dec_s) * min(fps/30,2);
per_frame_55=speed = (.4 + (index2%2)*.3)*ZDist;
per_frame_56=dir = dir + min(max(sw1-dir,-.5),.5)/fps*16;
per_frame_57=monitor = speed;
per_frame_58=
per_frame_59=movx = movx + cos(dir)/fps*speed ;
per_frame_60=movy = movy + sin(dir)/fps*speed ;
per_frame_61=q5 = movx; q6 = movy;; 
per_frame_62=
per_frame_63=trig = q24 * bnot((index+8)%20);
per_frame_64=sw4 = if (bnot(trig), sw4, sin(int(rand(100)))*.7); 
per_frame_65=xang = xang + min(max(sw4-xang,-.2),.2)/fps*4;
per_frame_66=
per_frame_67=trig = q24 * bnot(index%12);
per_frame_68=sw3 = if (bnot(trig), sw3, sw3+int(rand(4)-2)*3.1416/2); 
per_frame_69=pulse = q27 * bnot((2+index2)%4)*3.1416/2*0;
per_frame_70=zang_ = zang_ + max(min(sw3-zang_,.1),-.1)/fps*16;
per_frame_71=//pulse = q27*1.57*bnot(index2%3);
per_frame_72=zang = zang_ + cos((movx-movy)/3)*2; 
per_frame_73=yang = (.8-abs(xang))*sin(movy+movx);
per_frame_74=
per_frame_75=ox = -0; oy = .0; oz = ZDist;
per_frame_76=mx = ox*cos(zang) - oy*sin(zang);
per_frame_77=my = ox*sin(zang) + oy*cos(zang);
per_frame_78=ox = mx;oy = my;
per_frame_79=mx = ox*cos(yang) + oz*sin(yang);
per_frame_80=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_81=ox = mx;oz = mz;
per_frame_82=my = oy*cos(xang) - oz*sin(xang);
per_frame_83=mz = oy*sin(xang) + oz*cos(xang);
per_frame_84=oy = my;oz = mz;
per_frame_85=q11=ox; q12 = oy; q13 = oz; //Position
per_frame_86=
per_frame_87=//Vektor x nach rechts
per_frame_88=ox = 1; oy = 0; oz = 0;
per_frame_89=mx = ox*cos(zang) - oy*sin(zang);
per_frame_90=my = ox*sin(zang) + oy*cos(zang);
per_frame_91=ox = mx;oy = my;
per_frame_92=mx = ox*cos(yang) + oz*sin(yang);
per_frame_93=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_94=ox = mx;oz = mz;
per_frame_95=my = oy*cos(xang) - oz*sin(xang);
per_frame_96=mz = oy*sin(xang) + oz*cos(xang);
per_frame_97=oy = my;oz = mz;
per_frame_98=q14=ox; q15 = oy; q16 = oz;
per_frame_99=
per_frame_100=
per_frame_101=//Vektor z nach hinten
per_frame_102=ox = 0; oy = 0; oz = 1;;
per_frame_103=
per_frame_104=mx = ox*cos(zang) - oy*sin(zang);
per_frame_105=my = ox*sin(zang) + oy*cos(zang);
per_frame_106=ox = mx;oy = my;
per_frame_107=mx = ox*cos(yang) + oz*sin(yang);
per_frame_108=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_109=ox = mx;oz = mz;
per_frame_110=my = oy*cos(xang) - oz*sin(xang);
per_frame_111=mz = oy*sin(xang) + oz*cos(xang);
per_frame_112=oy = my;
per_frame_113=oz = mz;
per_frame_114=q17=ox; q18 = oy; q19 = oz;
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`
warp_3=`float3 ret1, window;
warp_4=`float2 rsk, uv1, uv2, uv3, uv4, dz1, Kugel1;
warp_5=`float mask1, rad1, rill, stone;
warp_6=`static float iter6 = (rand_preset.z > .5);
warp_7=`shader_body {
warp_8=`
warp_9=`float dx = abs(.5-frac(uv.x*88))*0;
warp_10=`float dy = abs(.5-frac(uv.y*88))*1;
warp_11=`uv += float2(dx,dy)*.0;
warp_12=`
warp_13=`uv1 = float2(uv.x-.5,uv.y-0.5);
warp_14=`uv1.y = cos(uv1.y*6.28)/2;
warp_15=`float2 uv3 = uv1;float dist = 42+8*iter6;
warp_16=`uv3 = dist * (uv1);
warp_17=`
warp_18=`float ky = saturate(.04-uv3.y/40);
warp_19=`float k1 = uv3.x*.8 ;;
warp_20=`
warp_21=`k1 = k1 - sign (k1)*14; //Verdoppelung
warp_22=`k1 = k1 - sign (k1)*11; //Verdoppelung
warp_23=`k1 = k1 - sign (k1)*(2+rand_preset.y*8); //Verdoppelung
warp_24=`
warp_25=`int n = 1 ;
warp_26=`float delta = .1;
warp_27=`while (n <= 4+2*iter6) 
warp_28=`{
warp_29=`  k1 += (-16*n*sign(k1))*ky*ky;
warp_30=`  ky = saturate (ky - delta);
warp_31=`  delta *= 1;
warp_32=`  n++; 
warp_33=`}
warp_34=`float k2 = k1;
warp_35=`k1 = clamp(k1,-1.57,1.57);
warp_36=`stone = saturate(cos(k1));
warp_37=`
warp_38=`rill = (rand_preset-.3)*saturate(cos(8*k2))*stone;
warp_39=`
warp_40=`ret1 = pow(stone,1)*float3(1,.8,.6)+rill;
warp_41=`
warp_42=`ret = max(ret1,.4*int(3*rand_preset.x)*(GetPixel((-uv_orig+float2(.0,.5)))-.1));
warp_43=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_44=`                      ((uv3.xyy*q27
warp_45=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_46=`                      ).xyz*
warp_47=`                      float3(1,1,0)*0.05 + 
warp_48=`                      time*float3(0,0,1)*q29
warp_49=`                     );
warp_50=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_51=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_52=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_53=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`static const float quality = 4, depth = .25;
comp_3=`float3 front, neu, rsl, rsl2, ret1, screen3, back;
comp_4=`float2 dz, uv0;//, uv1, uv2, uv4;
comp_5=`float  lprof,lprof2,m,n,noise,sun,cloud,sky,mask, shadow, mask1, gmask,mask2;
comp_6=`float  dist;
comp_7=`static float lav_gnd = 0;
comp_8=`static const float anz = 2;
comp_9=`static float2 mov = float2 (q5,q6);
comp_10=`
comp_11=`static float3 t = float3(q14,q15,q16);
comp_12=`static float3 s = float3(q17,q18,q19);
comp_13=`static float3 ts = -cross(s,t);
comp_14=`static float3 pos = float3 (q11,q12,q13);
comp_15=`
comp_16=`float3 project (float dist) {  float z;
comp_17=`  z = dist/mul(cross(ts,-t),screen3) *(1-lav_gnd);
comp_18=`  gmask = (z >= -12) * (z <= 0);
comp_19=`  return gmask * float3(mul(float2x3(ts,t),cross(pos,screen3))*z/1,-z);}
comp_20=`
comp_21=`shader_body {uv0 = uv;
comp_22=`screen3 = float3 ((uv-.5)*aspect.xy, 1-rad/4);
comp_23=`
comp_24=`rsl = project (.5);
comp_25=`lprof2 = 0;
comp_26=`ret1 = float3 (.1,.15,.2);
comp_27=`mask2 = 0;
comp_28=`for (n=anz; n >= 1; n--) {
comp_29=`  dist = n-.5+q31; lav_gnd = 0;  
comp_30=`  for (m=1; m <= quality; m++) {
comp_31=`    rsl = project (dist)+float3 (mov,0) + n/2;
comp_32=`    lprof =  .5-lum(GetBlur1(frac(rsl.xy))); //mittelwert null !#
comp_33=`    lav_gnd -= lprof/quality*depth/rsl.z; 
comp_34=`  }
comp_35=`
comp_36=`  rsl = project (dist)+float3 (mov,0) +n/2; 
comp_37=`  rsl2 = project (dist)+float3 (mov*.9,0); 
comp_38=`  shadow = saturate(4*GetBlur1(frac(rsl2.xy)));// * !(n == 1);
comp_39=`  neu = GetPixel(frac(rsl.xy));
comp_40=`  mask = saturate(8*neu);
comp_41=`  neu *= 1-.7*lum(tex2D (sampler_noise_lq,rsl.xy*4));
comp_42=`  neu *= (1-shadow*rand_preset.z/2) ;
comp_43=`  ret1 = lerp(ret1,neu,mask) ;
comp_44=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_45=`                      ((uv.xyy*q28
comp_46=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_47=`                      ).xyz*
comp_48=`                      float3(1,1,0)*0.05 + 
comp_49=`                      time*float3(0,0,1)*q31
comp_50=`                     );
comp_51=`if(ret1.x> q26*q13         && ret1.x<= q23*q11        )ret1.z -= (noise9).x*.5; 
comp_52=`if(ret1.y> q25*q11         && ret1.y<= q22*q12        )ret1.x -= (noise9).y*.5; 
comp_53=`if(ret1.z> q24*q12         && ret1.z<= q21*q13        )ret1.y -= (noise9).z*.5; 
comp_54=`  lprof2 = lerp(lprof2,lprof,mask);
comp_55=`  mask2 = lerp(mask2,mask,mask);
comp_56=`}
comp_57=`
comp_58=`rsl = project (dist)+float3 (mov+lprof2/4,0); 
comp_59=`float2 noise = tex2D (sampler_noise_hq,rsl+time*.1).xy;
comp_60=`float3 sun = ret1/length(sin(rsl.xy*16+noise));
comp_61=`ret1 +=  sun* (1+0*q22)*float3(.3,.6,1);
comp_62=`
comp_63=`ret = 1-exp(.1-ret1) ;
comp_64=`}
comp_65=`
comp_66=`written by martin
comp_67=`END
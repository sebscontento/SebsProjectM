MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.560
fDecay=0.960
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.037
fWarpScale=0.015
fZoomExponent=1.00000
fShader=0.000
zoom=0.78752
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.03300
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=1.000
ib_g=1.000
ib_b=0.960
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=bass_avg = .1*(bass_avg*9 + bass_att);
wave_0_per_frame2=bg = bass_avg*.9;
wave_0_per_frame3=t1 = if(above(bg,1.8),1.8,bg);
wave_0_per_point1=sp = sample*6.28*8*8;
wave_0_per_point2=rad = .1*t1;
wave_0_per_point3=ra = rad*sin(sample*3.14);
wave_0_per_point4=ox = ra*sin(sp);
wave_0_per_point5=oy = sin(sample*3.14-1.57)*rad;
wave_0_per_point6=oz = ra*cos(sp);
wave_0_per_point7=
wave_0_per_point8=orbit = .1 + t1;
wave_0_per_point9=ox = ox + orbit*sin(time);
wave_0_per_point10=oz = oz + orbit*cos(time);
wave_0_per_point11=
wave_0_per_point12=xang = time*.132;
wave_0_per_point13=sxang = 0;
wave_0_per_point14=yang = time*.153;
wave_0_per_point15=ayang = 0;
wave_0_per_point16=zang = time*.110;
wave_0_per_point17=azang = 0;
wave_0_per_point18=fov = 0.6 + 0.2*sin(time);
wave_0_per_point19=fov = .5;
wave_0_per_point20=
wave_0_per_point21=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point22=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point23=ox = mx;
wave_0_per_point24=oy = my;
wave_0_per_point25=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point26=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point27=ox = mx;
wave_0_per_point28=oz = mz;
wave_0_per_point29=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point30=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point31=oy = my;
wave_0_per_point32=oz = mz;
wave_0_per_point33=
wave_0_per_point34=oz = oz - 2;
wave_0_per_point35=x = ox*fov/oz + 0.5;
wave_0_per_point36=x = (x-.5)*0.75 + 0.5;
wave_0_per_point37=y = oy*fov/oz + 0.5;
wave_0_per_point38=
wave_0_per_point39=r =  - sin(sp);
wave_0_per_point40=g = 0.5 - 0.5*sin(sample*1.57);
wave_0_per_point41=b = 0.5 - 0.5*cos(sample*1.57);
wave_0_per_point42=a = a*below(z,2);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_1_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_1_per_frame3=vg = vol_avg*.1;
wave_1_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_1_per_point1=tm = q1;
wave_1_per_point2=sp = sample*6.28*8*6;
wave_1_per_point3=
wave_1_per_point4=vol = (value1 + value2)*.5;
wave_1_per_point5=a = vol;
wave_1_per_point6=
wave_1_per_point7=it = it*above(sample,0);
wave_1_per_point8=it = it + 1;
wave_1_per_point9=rad = .1;
wave_1_per_point10=ra = rad*sin(sample*3.14);
wave_1_per_point11=ox = ra*sin(sp);
wave_1_per_point12=oy = sin(sample*3.14-1.57)*rad;
wave_1_per_point13=oz = ra*cos(sp);
wave_1_per_point14=
wave_1_per_point15=xang = tm*-1.49;
wave_1_per_point16=sxang = 0;
wave_1_per_point17=yang = tm*1.153;
wave_1_per_point18=ayang = 0;
wave_1_per_point19=zang = tm*-1.23;
wave_1_per_point20=azang = 0;
wave_1_per_point21=fov = 0.6 + 0.2*sin(tm);
wave_1_per_point22=fov = .5;
wave_1_per_point23=
wave_1_per_point24=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point25=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point26=ox = mx;
wave_1_per_point27=oy = my;
wave_1_per_point28=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point29=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point30=ox = mx;
wave_1_per_point31=oz = mz;
wave_1_per_point32=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point33=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point34=oy = my;
wave_1_per_point35=oz = mz;
wave_1_per_point36=
wave_1_per_point37=oz = oz - 2;
wave_1_per_point38=x = ox*fov/oz + 0.5;
wave_1_per_point39=x = (x-.5)*0.75 + 0.5;
wave_1_per_point40=y = oy*fov/oz + 0.5;
wave_1_per_point41=
wave_1_per_point42=r = 1;
wave_1_per_point43=g = .25+.25*sin(sp);
wave_1_per_point44=b = 0;
wave_1_per_point45=aa = a*(.5 + (oz+2)*.5);
wave_1_per_point46=a = a*below(oz,0);
wave_1_per_point47=
wave_1_per_point48=minrgb = min(r,min(g,b));
wave_1_per_point49=maxrgb = max(r,max(g,b));
wave_1_per_point50=l = (maxrgb-minrgb)*.5;
wave_1_per_point51=diff = maxrgb-minrgb;
wave_1_per_point52=sum = maxrgb+minrgb;
wave_1_per_point53=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_1_per_point54=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_1_per_point55=h = h*0.1666666;
wave_1_per_point56=h = if(below(h,0),0,if(above(h,1),1,h));
wave_1_per_point57=
wave_1_per_point58=h = h + time*0.05*1.324;
wave_1_per_point59=h = h - int(h);
wave_1_per_point60=
wave_1_per_point61=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_1_per_point62=tmpa = 2*l - tmpb;
wave_1_per_point63=hvr = h + .333333;
wave_1_per_point64=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_1_per_point65=hvg = h;
wave_1_per_point66=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_1_per_point67=hvb = h - .333333;
wave_1_per_point68=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_1_per_point69=
wave_1_per_point70=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_1_per_point71=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_1_per_point72=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_2_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_2_per_frame3=vg = vol_avg*.1;
wave_2_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_2_per_point1=tm = q1;
wave_2_per_point2=sp = sample*6.28*8*6;
wave_2_per_point3=
wave_2_per_point4=vol = value2;
wave_2_per_point5=a = vol*3;
wave_2_per_point6=
wave_2_per_point7=it = it*above(sample,0);
wave_2_per_point8=it = it + 1;
wave_2_per_point9=rad = .5;
wave_2_per_point10=ra = rad*sin(sample*3.14);
wave_2_per_point11=ox = ra*sin(sp);
wave_2_per_point12=oy = sin(sample*3.14-1.57)*rad;
wave_2_per_point13=oz = ra*cos(sp);
wave_2_per_point14=
wave_2_per_point15=xang = tm*-.181;
wave_2_per_point16=sxang = 0;
wave_2_per_point17=yang = tm*-.122;
wave_2_per_point18=ayang = 0;
wave_2_per_point19=zang = tm*.142;
wave_2_per_point20=azang = 0;
wave_2_per_point21=fov = 0.6 + 0.2*sin(tm);
wave_2_per_point22=fov = .5;
wave_2_per_point23=
wave_2_per_point24=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point25=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point26=ox = mx;
wave_2_per_point27=oy = my;
wave_2_per_point28=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point29=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point30=ox = mx;
wave_2_per_point31=oz = mz;
wave_2_per_point32=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point33=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point34=oy = my;
wave_2_per_point35=oz = mz;
wave_2_per_point36=
wave_2_per_point37=oz = oz - 2;
wave_2_per_point38=x = ox*fov/oz + 0.5;
wave_2_per_point39=x = (x-.5)*0.75 + 0.5;
wave_2_per_point40=y = oy*fov/oz + 0.5;
wave_2_per_point41=
wave_2_per_point42=r = 1;
wave_2_per_point43=g = .25+.25*sin(sp);
wave_2_per_point44=b = 0;
wave_2_per_point45=aa = a*(.5 + (oz+2)*.5);
wave_2_per_point46=a = a*below(oz,0);
wave_2_per_point47=
wave_2_per_point48=minrgb = min(r,min(g,b));
wave_2_per_point49=maxrgb = max(r,max(g,b));
wave_2_per_point50=l = (maxrgb-minrgb)*.5;
wave_2_per_point51=diff = maxrgb-minrgb;
wave_2_per_point52=sum = maxrgb+minrgb;
wave_2_per_point53=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_2_per_point54=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_2_per_point55=h = h*0.1666666;
wave_2_per_point56=h = if(below(h,0),0,if(above(h,1),1,h));
wave_2_per_point57=
wave_2_per_point58=h = h + time*0.05*0.929;
wave_2_per_point59=h = h - int(h);
wave_2_per_point60=
wave_2_per_point61=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_2_per_point62=tmpa = 2*l - tmpb;
wave_2_per_point63=hvr = h + .333333;
wave_2_per_point64=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_2_per_point65=hvg = h;
wave_2_per_point66=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_2_per_point67=hvb = h - .333333;
wave_2_per_point68=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_2_per_point69=
wave_2_per_point70=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_2_per_point71=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_2_per_point72=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=vol = (bass_att + mid_att + treb_att)*.333333;
wave_3_per_frame2=vol_avg = .1*(vol_avg*9 + vol);
wave_3_per_frame3=vg = vol_avg*.1;
wave_3_per_frame4=t1 = if(above(vg,1.8),1.8,vg);
wave_3_per_point1=tm = q1;
wave_3_per_point2=sp = sample*6.28*8*6;
wave_3_per_point3=
wave_3_per_point4=vol = value1;
wave_3_per_point5=a = vol*2;
wave_3_per_point6=
wave_3_per_point7=it = it*above(sample,0);
wave_3_per_point8=it = it + 1;
wave_3_per_point9=rad = .5;
wave_3_per_point10=ra = rad*sin(sample*3.14);
wave_3_per_point11=ox = ra*sin(sp);
wave_3_per_point12=oy = sin(sample*3.14-1.57)*rad;
wave_3_per_point13=oz = ra*cos(sp);
wave_3_per_point14=
wave_3_per_point15=xang = tm*.132;
wave_3_per_point16=sxang = 0;
wave_3_per_point17=yang = tm*.153;
wave_3_per_point18=ayang = 0;
wave_3_per_point19=zang = tm*.110;
wave_3_per_point20=azang = 0;
wave_3_per_point21=fov = 0.6 + 0.2*sin(tm);
wave_3_per_point22=fov = .5;
wave_3_per_point23=
wave_3_per_point24=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point25=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point26=ox = mx;
wave_3_per_point27=oy = my;
wave_3_per_point28=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point29=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point30=ox = mx;
wave_3_per_point31=oz = mz;
wave_3_per_point32=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point33=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point34=oy = my;
wave_3_per_point35=oz = mz;
wave_3_per_point36=
wave_3_per_point37=oz = oz - 2;
wave_3_per_point38=x = ox*fov/oz + 0.5;
wave_3_per_point39=x = (x-.5)*0.75 + 0.5;
wave_3_per_point40=y = oy*fov/oz + 0.5;
wave_3_per_point41=
wave_3_per_point42=r = 1;
wave_3_per_point43=g = .25+.25*sin(sp);
wave_3_per_point44=b = 0;
wave_3_per_point45=aa = a*(.5 + (oz+2)*.5);
wave_3_per_point46=a = a*below(oz,0);
wave_3_per_point47=
wave_3_per_point48=minrgb = min(r,min(g,b));
wave_3_per_point49=maxrgb = max(r,max(g,b));
wave_3_per_point50=l = (maxrgb-minrgb)*.5;
wave_3_per_point51=diff = maxrgb-minrgb;
wave_3_per_point52=sum = maxrgb+minrgb;
wave_3_per_point53=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_3_per_point54=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_3_per_point55=h = h*0.1666666;
wave_3_per_point56=h = if(below(h,0),0,if(above(h,1),1,h));
wave_3_per_point57=
wave_3_per_point58=h = h + time*0.05*1.082;
wave_3_per_point59=h = h - int(h);
wave_3_per_point60=
wave_3_per_point61=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_3_per_point62=tmpa = 2*l - tmpb;
wave_3_per_point63=hvr = h + .333333;
wave_3_per_point64=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_3_per_point65=hvg = h;
wave_3_per_point66=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_3_per_point67=hvb = h - .333333;
wave_3_per_point68=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_3_per_point69=
wave_3_per_point70=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_3_per_point71=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_3_per_point72=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=br=1;
per_frame_init_7=bt=time;
per_frame_init_8=bt2=time+1;
per_frame_init_9=abt=0;
per_frame_init_10=count=1;
per_frame_init_11=afps=fps;
per_frame_init_12=mvol=(bass+mid+treb)/3;
per_frame_init_13=st=time;
per_frame_init_14=abt=0.1;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=vol=(bass+mid+treb)*0.25;
per_frame_25=vol=vol*vol;
per_frame_26=
per_frame_27=vol2=(bass_att+mid_att+treb_att)*0.25;
per_frame_28=vol2=vol2*vol2;
per_frame_29=
per_frame_30=q2=vol2;
per_frame_31=
per_frame_32=mtime=mtime+vol*0.01;
per_frame_33=q1=time*0.5;
per_frame_34=//can be buggy; if doesn't work, run init code.
per_frame_35=//--------------------------------------
per_frame_36=//Fed's beat code:
per_frame_37=//
per_frame_38=//br - beat rate;
per_frame_39=//bt,bt2 - beat times;
per_frame_40=//spika - beat detector, power of the beat;
per_frame_41=//count - beat counter;
per_frame_42=//++++++++++++++++++++++++++++++++++++++
per_frame_43=//TRESH - power of treble to detect beat;
per_frame_44=//BASH - power of bass to detect beat;
per_frame_45=//beat detector works only if both of them 
per_frame_46=//are less then treb & bass!
per_frame_47=//++++++++++++++++++++++++++++++++++++++
per_frame_48=//abt - summ of all beatrates;
per_frame_49=//Increases if no beat.
per_frame_50=//mvol - middle volume;
per_frame_51=//mba - middle bass;
per_frame_52=//mtr - middle treb;
per_frame_53=//pret - preset time;
per_frame_54=//clr - amount of seconds to recalculate volumes.
per_frame_55=//--------------------------------------
per_frame_56=pret=time-st;
per_frame_57=avol=avol+(bass+mid+treb)/3;
per_frame_58=aba=aba+bass;
per_frame_59=mba=aba/pret/fps;
per_frame_60=atr=atr+treb;
per_frame_61=mtr=atr/pret/fps;
per_frame_62=mvol=avol/pret/fps;
per_frame_63=TRESH=mtr+0.1;
per_frame_64=BASH=mba+0.1;
per_frame_65=clr=50;//----------HERE!!!!!! in seconds.
per_frame_66=abass=bass_att*0.4+abass;
per_frame_67=bt=time*above(spika,0)+bt*equal(spika,0);
per_frame_68=spika=above(treb_att,TRESH)*treb+above(bass_att,BASH)*bass;
per_frame_69=spik=spik+spika*0.4;
per_frame_70=bt2=time*above(spika,0)+bt*equal(spika,0);
per_frame_71=count=count+above(bt2-bt,0);
per_frame_72=abt=max(below(br,10),equal(br,10))*(abt+if(bt2-bt, bt2-bt, 1/fps))+above(br,10); 
per_frame_73=br=abt/count;
per_frame_74=dx=dx-cos(abass)*br*0.02+sin(spik)/br*0.02;
per_frame_75=dy=dy-sin(abass)*br*0.02+cos(spik)/br*0.02;
per_frame_76=sx=sx+sin(abass)*dx*2;
per_frame_77=sy=sy-cos(spik)*dy*2;
per_frame_78=ib_a=pow(spika/5,5);  //<--That's how we use it.
per_frame_79=//debugging
per_frame_80=calc=below(pret,clr);
per_frame_81=abass=below(abass,9000)*abass;
per_frame_82=avol=if(calc,avol,(bass+mid+treb)/3);
per_frame_83=st=if(calc,st,time-1);
per_frame_84=aba=if(calc,aba,bass);
per_frame_85=atr=if(calc,atr,treb);
per_frame_86=abt=above(pret,0.2)*abt+below(pret,0.2)*0.5;
per_frame_87=//fun
per_frame_88=afps=(fps+afps)/2;
per_frame_89=zoom=zoom-(fps/afps-1)*90;
per_frame_90=q4=int(pret/br)%2;
per_frame_91=q5=above(spika,0);
per_frame_92=//monitor=pow(spika,6)/3000;
warp_1=`sampler sampler_fw_clouds;
warp_2=`shader_body
warp_3=`{
warp_4=`    // sample previous frame
warp_5=`    ret = tex2D( sampler_main, uv ).xyz-GetBlur1(uv);
warp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy*q27
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*q29
warp_12=`                     );
warp_13=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_14=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_15=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_16=`ret+=tex2D(sampler_fw_clouds,uv)*0.5;
warp_17=`}
comp_1=`float2 uv_x, uv_y, uv_z, uv_echo;
comp_2=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
comp_3=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
comp_4=`}
comp_5=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_6=`   return center + (domain-center)*scale;
comp_7=`}
comp_8=`float2 uv_polar(float2 domain, float2 center){
comp_9=`   float2 c = domain - center;
comp_10=`   float rad_hq = length(c);
comp_11=`   float ang_hq = atan2(c.x,c.y);
comp_12=`   return float2(ang_hq, rad_hq);
comp_13=`}
comp_14=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_15=`   float2 polar = uv_polar(domain, position);
comp_16=`   float cone = saturate(1-polar.y/radius);
comp_17=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_18=`   float w = atan2(1-cone,halfsphere);
comp_19=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_20=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_21=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_22=`   bool mask =(length(domain-position)<radius);
comp_23=`   return !mask*domain + 
comp_24=`           mask*refrac_uv;
comp_25=`}
comp_26=`shader_body
comp_27=`{
comp_28=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);
comp_29=`float2 pos1 = 1-float2(q3,q4);
comp_30=`float rad1 = q5;
comp_31=`float2 pos2 = 1-float2(q6,q7);
comp_32=`float rad2 = q8;
comp_33=`float2 pos3 = 1-float2(q9,q10);
comp_34=`float rad3 = q11;
comp_35=`float2 pos4 = 1-float2(q12,q13);
comp_36=`float rad4 = q14;
comp_37=`float3 col1 = float3(2,1,-1);
comp_38=`float3 col2 = float3(2,-1,1);
comp_39=`float3 col3 = float3(-1,1,2);
comp_40=`float3 col4 = float3(1,-1,2);
comp_41=`float refractivity = -1;
comp_42=`float2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);
comp_43=`       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);
comp_44=`       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);
comp_45=`       lens_uv = uv_lens_half_sphere(lens_uv, pos4, rad4, refractivity);
comp_46=`
comp_47=`uv = lens_uv;
comp_48=`    float2 d = texsize.zw*1.2;
comp_49=`    float3 dx = ( GetPixel(uv + float2(1,0)*d) - GetPixel(uv-float2(1,0)*d) );
comp_50=`    float3 dy = ( GetPixel(uv + float2(0,1)*d) - GetPixel(uv-float2(0,1)*d) );
comp_51=`
comp_52=`    float c = 8;
comp_53=`    float dd = 1;
comp_54=`float3 light1 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos1),.2);
comp_55=`float3 light2 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos2),.2);
comp_56=`float3 light3 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos3),.2);
comp_57=`float3 light4 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos4),.2);
comp_58=`
comp_59=`ret = lerp(GetPixel(uv),max(max(light1*col1,light2*col2),max(light3*col3,light4*col4)),0.5)*1.25;
comp_60=`
comp_61=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_62=`                      ((uv.xyy*q28
comp_63=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_64=`                      ).xyz*
comp_65=`                      float3(1,1,0)*0.05 + 
comp_66=`                      time*float3(0,0,1)*q31
comp_67=`                     );
comp_68=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_69=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_70=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_71=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=282
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=3.91581
wavecode_0_smoothing=0.10000
wavecode_0_r=0.200
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.600
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.090
shapecode_0_y=0.900
shapecode_0_rad=0.22437
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=44
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=
per_frame_init_2=//******** INITIALIZATION *********
per_frame_init_3=//---------- some global vars, do not change -------------
per_frame_init_4=avg = 0.2;
per_frame_init_5=q7 = .08; //MyZoom
per_frame_init_6=
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=
per_frame_29=//-----------------------------------------------------------------------
per_frame_30=//Set Camera Position and viewing angle here
per_frame_31=  PosX = .0; PosY =-.1; PosZ = -3; ran1 = 0.03*time; ran2 = 0.; ran3 = .81;
per_frame_32=//-----------------------------------------------------------------------
per_frame_33=
per_frame_34=  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); 
per_frame_35=  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);
per_frame_36=
per_frame_37=  q20 = c2*c1; q21 = c2*s1; q22 = -s2;
per_frame_38=  q23 = s3*s2*c1 - c3*s1; q24 = s3*s2*s1 + c3*c1; q25 = s3*c2;
per_frame_39=  q26 = c3*s2*c1 + s3*s1; q27 = c3*s2*s1 - s3*c1; q28 = c3*c2;
per_frame_40=
per_frame_41=  q4 = PosX; q5 = PosY; q6 = PosZ;
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`float limit, dist, struc, len; float2 uv0, uv1; float3 uv2; float4 box;
warp_3=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
warp_4=`
warp_5=`float2 complex_mul(float2 factorA, float2 factorB){
warp_6=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_7=`}
warp_8=`
warp_9=`float2 complex_div(float2 numerator, float2 denominator){
warp_10=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_11=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_12=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_13=`}
warp_14=`
warp_15=`
warp_16=`static const float3 CamPos = float3(q4,q5,q6);
warp_17=`static const float myzoom = q7,  res = 128, res2 = 128;
warp_18=`static const float change = q14, sustain =.9;
warp_19=`
warp_20=`float2 fstep2 (float2 xy) {return 1.0/res*round(res*xy);}
warp_21=`
warp_22=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pc_main, uvi).gb); 
warp_23=`  return 1-(tmp.y + 1.0/res2*(tmp.x-.505));}
warp_24=`
warp_25=`float2 PutDist(float x) {float tmp; tmp = fstep2(1-x);
warp_26=`  return (float2(res2*((1-x)-tmp)+.495,tmp));}
warp_27=`
warp_28=`float MinDist (float2 uvi) 
warp_29=`{
warp_30=`   float tmp; float4 nb; float4 nb2; float2 pix;
warp_31=`   pix = texsize.zw*(1.0+length(uvi-0.5)*.0);   
warp_32=`   nb.x = GetDist(uvi+pix*float2(-1,-1));   nb.y = GetDist(uvi+pix*float2(1,-1));
warp_33=`   nb.z = GetDist(uvi+pix*float2(1,1));     nb.w = GetDist(uvi+pix*float2(-1,1));         
warp_34=`   nb2.x = GetDist(uvi+pix*float2(0,-1));   nb2.y = GetDist(uvi+pix*float2(1,0));          
warp_35=`   nb2.z = GetDist(uvi+pix*float2(0,1));    nb2.w = GetDist(uvi+pix*float2(-1,0));
warp_36=`   //Eo.S. more efficient usage of min to get min value of all 8 GetDist() calls, removes 11ALU
warp_37=`   nb = min( nb, nb2 );
warp_38=`   nb.xy = min( nb.xy, nb.zw );
warp_39=`   tmp =min( nb.x, nb.y );
warp_40=`   return min(tmp, GetDist(uvi));
warp_41=`}
warp_42=`
warp_43=`
warp_44=`//----------------------------------------------------------------------------------------------
warp_45=`float4 mbox (float3 uvi) {float2 domain; float light; 
warp_46=`  uvi = mul(uvi,RotMat);
warp_47=`  for (int n = 0; n <= 0; n++) 
warp_48=`  {
warp_49=`   float2 pos1 = float2(0.3, 0.4);
warp_50=`   float2 pos2 = float2(0.7, 0.3);
warp_51=`   float2 pos3 = float2(0.7, 0.6);
warp_52=`   float2 pos4 = float2(0.2, 0.6);
warp_53=`
warp_54=`   domain = uvi.xy;
warp_55=`   domain = complex_div(.0007, complex_mul(  complex_mul(domain-pos1, domain - pos2),
warp_56=`                                        complex_mul(domain-pos3, domain - pos4)));
warp_57=`   domain -= .5;
warp_58=`  }
warp_59=`  light = .2/length(sin(float3(domain*16,uvi.z*80+0*time)))*0+.4;
warp_60=`   return float4( abs(sin(atan2(domain.x, domain.y)) + uvi.z)*(1-light*.12),domain,light) ;}
warp_61=`//----------------------------------------------------------------------------------------------
warp_62=`
warp_63=`shader_body {uv0 = uv_orig;
warp_64=`uv1 = (uv0-.5)*aspect.xy;
warp_65=`float3 noise = frac(8*tex2D (sampler_noise_lq,uv+rand_frame.yz)); 
warp_66=`   if (noise.g > .1) 
warp_67=`   {
warp_68=`       float3 noiseBiased = noise - float3( 0.5, 0.5, 0.5 );
warp_69=`      //Eo.S. combine the subtraction on noise to a single float3 
warp_70=`      //to ensure compiler does the subtraction in a single ALU
warp_71=`      dist = MinDist(uv) +  0.01 * (noiseBiased.x) * abs(noiseBiased.y);
warp_72=`   }    
warp_73=`   else {dist = noise.r;}
warp_74=` dist = min(dist,GetDist(uv)) ;
warp_75=`
warp_76=`float tdist = dist + pow(dist,3)*0;
warp_77=`uv2 = float3(uv1*tdist*1,tdist-.0)/myzoom+CamPos;
warp_78=`
warp_79=`box = mbox (uv2);
warp_80=`len = length(box.x);
warp_81=`
warp_82=`struc = len*(tex2D (sampler_pw_noise_lq,box.yz*.5));
warp_83=`
warp_84=`if ((len < 1) && (dist > 0.1)){
warp_85=` ret.r = (1-sustain)*struc+sustain*(GetPixel(uv).r); ret.gb=  PutDist(dist); } 
warp_86=` else {ret = tex2D(sampler_fc_main,uv)*float3(sustain,0,.99)-float3(1.0/255,0,4.0/255);} 
warp_87=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_88=`                      ((uv2.xyy*q27
warp_89=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_90=`                      ).xyz*
warp_91=`                      float3(1,1,0)*0.05 + 
warp_92=`                      time*float3(0,0,1)*q29
warp_93=`                     );
warp_94=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_95=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_96=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_97=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2;
comp_4=`
comp_5=`    // the weights of the 4 height value frequencies:
comp_6=`    float4 c = float4(1,0.3,0.1,0);
comp_7=`
comp_8=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_9=`    float gx1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;
comp_10=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_11=`    float gx2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;
comp_12=`
comp_13=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_14=`    float gy1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;
comp_15=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_16=`    float gy2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;
comp_17=`
comp_18=`    // compute gradient vector:
comp_19=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.06));
comp_20=`
comp_21=`    // hacked default lighting from it:
comp_22=`    float3 dir1 = normalize(float3(0.2,0.13,0.07));
comp_23=`    float3 dir2 = normalize(float3(0.1,-0.3,0.04));
comp_24=`    float3 col1 = float3(1.3,0.9,1).zxy*0.9;
comp_25=`    float3 col2 = float3(0.6,0.7,0.9)*0.9;
comp_26=`    ret = col1 * saturate(dot(g,dir1)) + col2*saturate(dot(g,dir2));
comp_27=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_28=`                      ((uv2.xyy*q28
comp_29=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_30=`                      ).xyz*
comp_31=`                      float3(1,1,0)*0.05 + 
comp_32=`                      time*float3(0,0,1)*q31
comp_33=`                     );
comp_34=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_35=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_36=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_37=`
comp_38=`}

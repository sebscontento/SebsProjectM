MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000000
fDecay=1.000000
fVideoEchoZoom=0.010000
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.117480
fWaveScale=0.123956
fWaveSmoothing=0.900000
fWaveParam=0.999999
fModWaveAlphaStart=1.000000
fModWaveAlphaEnd=1.000000
fWarpAnimSpeed=0.010000
fWarpScale=2.518211
fZoomExponent=0.010000
fShader=0.000000
zoom=1.001600
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=0.010000
sy=0.010000
wave_r=1.000000
wave_g=1.000000
wave_b=1.000000
wave_x=0.499900
wave_y=0.499900
ob_size=0.005000
ob_r=0.530000
ob_g=0.870000
ob_b=0.849999
ob_a=1.000000
ib_size=0.000000
ib_r=1.000000
ib_g=1.000000
ib_b=1.000000
ib_a=0.500000
nMotionVectorsX=64.000000
nMotionVectorsY=48.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=0.000000
mv_r=1.000000
mv_g=1.000000
mv_b=1.000000
mv_a=0.000000
b1n=0.000000
b2n=0.000000
b3n=0.000000
b1x=1.000000
b2x=1.000000
b3x=1.000000
b1ed=0.250000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.010000
wavecode_0_smoothing=0.000000
wavecode_0_r=1.000000
wavecode_0_g=1.000000
wavecode_0_b=1.000000
wavecode_0_a=0.200000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_point1=x=int(rand(200))/200;
wave_0_per_point2=y=.5;
wave_0_per_point3=y=y+.2*sin(2*3.14*x);
wave_0_per_point4=x=x+.1*(sin(.2*time));
wave_0_per_point5=y=y+.3*sin(.3*time)*sin(1.57+2*3.14*x);
wave_0_per_point6=
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=2.444150
wavecode_1_smoothing=0.000000
wavecode_1_r=1.000000
wavecode_1_g=1.000000
wavecode_1_b=1.000000
wavecode_1_a=1.000000
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=cl = 0;
wavecode_2_enabled=1
wavecode_2_samples=19
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=0.010000
wavecode_2_smoothing=0.000000
wavecode_2_r=1.000000
wavecode_2_g=1.000000
wavecode_2_b=1.000000
wavecode_2_a=1.000000
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point3=
wave_2_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wave_2_per_point6=x = 0.5 + (x-0.5)*q9;
wave_2_per_point7=y = 0.5 + (y-0.5)*q10;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.837569
wavecode_3_smoothing=1.000000
wavecode_3_r=1.000000
wavecode_3_g=1.000000
wavecode_3_b=1.000000
wavecode_3_a=0.010000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=cl = 0;
wave_3_per_frame1=a=.008
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_x=0.500000
shapecode_0_y=0.750000
shapecode_0_rad=0.194926
shapecode_0_ang=0.000000
shapecode_0_tex_ang=0.000000
shapecode_0_tex_zoom=1.000004
shapecode_0_r=0.500000
shapecode_0_g=0.500000
shapecode_0_b=0.500000
shapecode_0_a=1.000000
shapecode_0_r2=1.000000
shapecode_0_g2=1.000000
shapecode_0_b2=1.000000
shapecode_0_a2=1.000000
shapecode_0_border_r=1.000000
shapecode_0_border_g=1.000000
shapecode_0_border_b=1.000000
shapecode_0_border_a=0.000000
shape_0_init1=vx = 0
shape_0_per_frame1=x = q4;
shape_0_per_frame2=y = q8;
shape_0_per_frame3=ang=.3*time;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_x=0.500000
shapecode_1_y=0.750000
shapecode_1_rad=0.153757
shapecode_1_ang=0.000000
shapecode_1_tex_ang=0.000000
shapecode_1_tex_zoom=1.000003
shapecode_1_r=0.500000
shapecode_1_g=0.500000
shapecode_1_b=0.500000
shapecode_1_a=0.000000
shapecode_1_r2=1.000000
shapecode_1_g2=1.000000
shapecode_1_b2=1.000000
shapecode_1_a2=1.000000
shapecode_1_border_r=1.000000
shapecode_1_border_g=1.000000
shapecode_1_border_b=1.000000
shapecode_1_border_a=0.000000
shape_1_init1=vx = 0
shape_1_per_frame1=x = q3;
shape_1_per_frame2=y = q7;
shape_1_per_frame3=ang=-.5*time;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_x=0.500000
shapecode_2_y=0.750000
shapecode_2_rad=0.173256
shapecode_2_ang=0.000000
shapecode_2_tex_ang=0.000000
shapecode_2_tex_zoom=1.000001
shapecode_2_r=0.500000
shapecode_2_g=0.500000
shapecode_2_b=0.500000
shapecode_2_a=1.000000
shapecode_2_r2=1.000000
shapecode_2_g2=1.000000
shapecode_2_b2=1.000000
shapecode_2_a2=1.000000
shapecode_2_border_r=1.000000
shapecode_2_border_g=1.000000
shapecode_2_border_b=1.000000
shapecode_2_border_a=0.000000
shape_2_init1=vx = 0
shape_2_per_frame1=x = q2;
shape_2_per_frame2=y = q6;
shape_2_per_frame3=ang=.3*time;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_x=0.500000
shapecode_3_y=0.750000
shapecode_3_rad=0.253105
shapecode_3_ang=0.000000
shapecode_3_tex_ang=0.000000
shapecode_3_tex_zoom=0.734580
shapecode_3_r=0.500000
shapecode_3_g=0.500000
shapecode_3_b=0.500000
shapecode_3_a=1.000000
shapecode_3_r2=1.000000
shapecode_3_g2=1.000000
shapecode_3_b2=1.000000
shapecode_3_a2=1.000000
shapecode_3_border_r=0.330001
shapecode_3_border_g=0.330000
shapecode_3_border_b=0.330000
shapecode_3_border_a=0.020000
shape_3_init1=vx = 0
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
shape_3_per_frame3=ang=-.3*time;
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=decay = 0.5;
per_frame_2=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_3=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_4=yy1 = yy1*0.97 + (treb+bass)*0.0075;
per_frame_5=
per_frame_6=x1 = 0.5 + xx1-xx2;
per_frame_7=y1 =.1+ yy1;
per_frame_8=
per_frame_9=//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;
per_frame_10=
per_frame_11=spring = 10;
per_frame_12=grav = .5;
per_frame_13=resist = 1;
per_frame_14=bounce = 0.5;
per_frame_15=dt = 0.0001;
per_frame_16=
per_frame_17=spx2 = (x1+x3-2*x2)*spring;
per_frame_18=spy2 = (y1+y3-2*y2)*spring;
per_frame_19=spx3 = (x2+x4-2*x3)*spring;
per_frame_20=spy3 = (y2+y4-2*y3)*spring;
per_frame_21=spx4 = (x3-x4)*spring;
per_frame_22=spy4 = (y3-y4)*spring;
per_frame_23=
per_frame_24=vx2 = vx2*(1-resist*dt) + dt*(spx2);
per_frame_25=vy2 = vy2*(1-resist*dt) + dt*(spy2-grav);
per_frame_26=vx3 = vx3*(1-resist*dt) + dt*(spx3);
per_frame_27=vy3 = vy3*(1-resist*dt) + dt*(spy3-grav);
per_frame_28=vx4 = vx4*(1-resist*dt) + dt*(spx4);
per_frame_29=vy4 = vy4*(1-resist*dt) + dt*(spy4-grav);
per_frame_30=
per_frame_31=x2 = x2 + vx2;
per_frame_32=y2 = y2 + vy2;
per_frame_33=x3 = x3 + vx3;
per_frame_34=y3 = y3 + vy3;
per_frame_35=x4 = x4 + vx4;
per_frame_36=y4 = y4 + vy4;
per_frame_37=
per_frame_38=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_39=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_40=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_41=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_42=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_43=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_44=
per_frame_45=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_46=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_47=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_48=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_49=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_50=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_51=
per_frame_52=
per_frame_53=q1 = x1;
per_frame_54=q2 = x2;
per_frame_55=q3 = x3;
per_frame_56=q4 = x4;
per_frame_57=
per_frame_58=q5 = y1;
per_frame_59=q6 = y2;
per_frame_60=q7 = y3;
per_frame_61=q8 = y4;
per_frame_62=
per_frame_63=q9 = 1/aspectx;
per_frame_64=q10 = 1/aspecty;
per_frame_65=
per_frame_66=///////////////////////////
per_frame_67=
per_frame_68=angle=0;
per_frame_69=q31 = sin(angle);
per_frame_70=q32 = cos(angle);
per_frame_71=
per_frame_72=///////////////////////////
per_frame_73=monitor=angle;
per_frame_74=zoom=1;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`    
warp_6=`    // darken (decay) over time
warp_7=`    ret *= 0.7; //or try: ret -= 0.004;
warp_8=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`//As a base, sample the main sampler at normal uv coordinates and store as return value:
comp_5=`ret = tex2D(sampler_main, uv).xyz;
comp_6=`
comp_7=`//Define the translation in (x,y)-direction and multiply by texsize.zw to convert the length to pixels:
comp_8=`float2 shift = float2(2,2)*texsize.zw; 
comp_9=`
comp_10=`//Take the original uv coordinates as a starting point, store in second set of coordinates:
comp_11=`float2 uv2 = uv;
comp_12=`
comp_13=`//Start iterations...
comp_14=`int n = 1;
comp_15=`while (n<=12) {
comp_16=`
comp_17=`//First step: put origin in center;
comp_18=`uv2 = uv2-.5;
comp_19=`
comp_20=`//Next, rotate by a factor we set in the per-frame equations - q32 is cos(angle) and q31 is sin(angle): 
comp_21=`uv2 = float2((uv2.x)*q32 - (uv2.y) * q31,(uv2.x)* q31 + (uv2.y) * q32)+.5;
comp_22=`
comp_23=`//Then, shift uv coordinates n times - see the step after the next as to why:
comp_24=`uv2 += n*shift;
comp_25=`
comp_26=`//Sample the main sampler at our new uv2 coordinates, 
comp_27=`//deduct the result from the current return value, 
comp_28=`//store in ret as absolute (difference) value:
comp_29=`ret = abs(ret-GetPixel(uv2));
comp_30=`
comp_31=`//Remove the shift so we won't rotate it with our coordinates in the next iteration:
comp_32=`uv2 -= n*shift;
comp_33=`
comp_34=`//Iteration +1
comp_35=`n++;
comp_36=`}
comp_37=`
comp_38=`}

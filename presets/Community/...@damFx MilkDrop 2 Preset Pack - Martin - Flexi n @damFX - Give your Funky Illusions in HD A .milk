MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.140
fDecay=0.880
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=5.552
fWaveSmoothing=0.504
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.025
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.110
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=0.50330
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.900
shapecode_0_rad=0.15493
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.77977
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=5
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.98600
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.99979
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.22613
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.600
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = 0.05 + int(rand(900))/1000;
shape_2_per_frame2=y = 0.05 + int(rand(900))/1000;
shape_2_per_frame3=ang = int(rand(320))/100;
shape_2_per_frame4= 
shapecode_3_enabled=0
shapecode_3_sides=36
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.18717
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.120
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_1=dec_med = pow (0.5, 30/fps);
per_frame_2=dec_slow = pow (0.9, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%2;
per_frame_10=index3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=q26 = bass_att + mid_att + treb_att ;
per_frame_18=q27 = index + 1;
per_frame_19=q28 = -index2/100;
per_frame_20=q29 = bnot(below(index2+index3,1));
per_frame_21=
per_frame_22=puls = dec_slow*puls + (1-dec_slow)*q29;
per_frame_23=q32 = puls;
per_frame_24=
per_frame_25=k1 =  is_beat*equal(index%2,0);
per_frame_26=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_27=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_28=rott = p2 * 3.1416/4;
per_frame_29=
per_frame_30=q1 = cos(rott);
per_frame_31=q2 = sin(rott);
per_frame_32=q3 = -q2;
per_frame_33=q4 = q1;
per_frame_34=
per_frame_35=trel1 = trel1 + 4.2*q1/fps*(q22);
per_frame_36=trel2 = trel2 + 3*q2/fps*(1);
per_frame_37=px = .2*sin(trel1);
per_frame_38=py = .1*cos(trel2);
per_frame_39=q5 = px;
per_frame_40=q6 = py;
per_frame_41=
per_frame_42=rotx = rotx + q5/fps*4;
per_frame_43=roty = roty + q6/fps*4;
per_frame_44=q15 = rotx;
per_frame_45=q16 = roty;
per_frame_46=
per_frame_47=ppx = ppx*dec_slow + (1-dec_slow)*px;
per_frame_48=ppy = ppy*dec_slow + (1-dec_slow)*py;
per_frame_49=q7 = ppx;
per_frame_50=q8 = ppy;
per_frame_51=
per_frame_52=
per_frame_53=q10 = 20; //speed shot
per_frame_54=q11 = .8; //brightness shot
per_frame_55=
per_frame_56=
per_frame_57=zoom = 1;
per_frame_58=dy = .00;
per_frame_59=dx = .0;
per_frame_60=warp = .1;
per_pixel_1=rot = .05 * q1 * (1-rad);
warp_1=`shader_body {
warp_2=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_3=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;
warp_4=`
warp_5=`float2 d = (uv1);
warp_6=`float3 mus = GetBlur1(uv);
warp_7=`float k = dot(mus,roam_sin)*8;
warp_8=`
warp_9=`d = mul(uv1,float2x2(cos(k),sin(k),-sin(k),cos(k)));
warp_10=`uv1 += .20*lum(GetBlur1(uv))*d;
warp_11=`uv = uv1-.5 + q5;;
warp_12=`
warp_13=`float3 ret1 = GetBlur1(uv) ;
warp_14=`
warp_15=`float2 zz = uv * texsize.xy *.02;
warp_16=`float h1 = (cos(zz.y*q1) * sin(-zz.y));
warp_17=`float h2 = (sin(zz.x) * cos(zz.y*q2));
warp_18=`
warp_19=`uv -= float2(h1,h2)*texsize.zw * 12;
warp_20=`
warp_21=`float3 crisp = tex2D(sampler_main,uv) ;
warp_22=`
warp_23=`ret = crisp*.99 -.01;
warp_24=`}
comp_1=`sampler sampler_facade01;
comp_2=`
comp_3=`float3 ret1, neu, musl, musr, screen3, pos0, pos1;
comp_4=`float2 pq, pq2;
comp_5=`int mask1, mask2;
comp_6=`float n, dist2;
comp_7=`static const float width =5;
comp_8=`static const float depth =28;
comp_9=`static float3 sxy = float3(q4,q5,q6);
comp_10=`static float3 sxz = float3(q7,q8,q9);
comp_11=`static float3 t = -cross(sxy,sxz);
comp_12=`static float blend = q32;
comp_13=`
comp_14=`
comp_15=`float2 project (float3 s, float3 pos) {
comp_16=`  float Nenner;  float2x3 ts;
comp_17=`  ts = float2x3(t,-s);
comp_18=`  Nenner = mul(cross(t,s),screen3);
comp_19=`  dist2 = Nenner;
comp_20=`  return (mul(ts,cross(pos,screen3))/Nenner);}
comp_21=`
comp_22=`float2 project_gnd (float3 pos) {
comp_23=`  float Nenner;  float2x3 ts;
comp_24=`  ts = float2x3(sxz,-sxy);//auch -t probieren ###
comp_25=`  Nenner = mul(cross(sxz,sxy),screen3);
comp_26=`  return (mul(ts,cross(pos,screen3/48))/Nenner);}
comp_27=`
comp_28=`float3 wall (float2 xy) {
comp_29=`  return(-.2+tex2D (sampler_facade01,xy/4).brg);
comp_30=`}
comp_31=`
comp_32=`shader_body {
comp_33=`screen3 = float3 ((uv-.5)*aspect.xy,1);//wirkt wie zoom
comp_34=`neu = GetBlur1(uv)/4;
comp_35=`
comp_36=`  pq  = project (sxy, float3 (q10,q11,q12)); 
comp_37=`  pq2 = project (sxz, float3 (q10,q11,q12)); 
comp_38=`  mask1 = (pq.x>=0)* (pq.x <=width);
comp_39=`  mask2 = (pq2.x>=0)*(pq2.x <= depth);
comp_40=`  if (mask1) {neu = lerp(neu,wall(pq),blend);}
comp_41=`  if (mask2) {neu = lerp(neu,wall(pq2),blend);}
comp_42=`
comp_43=`  pq  = project (-sxy, float3 (q13,q14,q15)); 
comp_44=`  pq2 = project (sxz, float3 (q13,q14,q15)); 
comp_45=`  mask1 = (pq.x>=0)* (pq.x <=width);
comp_46=`  mask2 = (pq2.x>=0)*(pq2.x <= depth);
comp_47=`  if (mask1) {neu = lerp(neu,wall(pq),blend);}
comp_48=`  if (mask2) {neu = lerp(neu,wall(pq2),blend);}
comp_49=`
comp_50=`  pq  = project (sxy, float3 (q16,q17,q18)); 
comp_51=`  pq2 = project (sxz, float3 (q16,q17,q18)); 
comp_52=`  mask1 = (pq.x>=0)* (pq.x <=width) * (dist2 >=0);
comp_53=`  mask2 = (pq2.x>=0)*(pq2.x <= depth)* (dist2 >=0);
comp_54=`  if (mask1) {neu = wall(pq);}
comp_55=`  if (mask2) {neu = wall(pq2);}
comp_56=`  musr = (q29%2)/length(abs(frac(pq2/2)-.5))*mask2;
comp_57=`  musr += (q29%2)/length(abs(frac(pq/2)-.5))*mask1;
comp_58=`
comp_59=`  pq  = project (-sxy, float3 (q19,q20,q21)); 
comp_60=`  pq2 = project (sxz, float3 (q19,q20,q21)); 
comp_61=`  mask1 = (pq.x>=0)* (pq.x <=width) * (dist2 <=0);
comp_62=`  mask2 = (pq2.x>=0)*(pq2.x <= depth)* (dist2 <=0);
comp_63=`  if (mask1) {neu = wall(pq);}
comp_64=`  if (mask2) {neu = wall(pq2);}
comp_65=`  musl = ((q29+1)%2)/length(abs(frac(pq2/2)-.5))*mask2;
comp_66=`  musl += ((q29+1)%2)/length(abs(frac(pq/2)-.5))*mask1;
comp_67=`
comp_68=`ret = tex2D (sampler_main,uv+neu/8)
comp_69=`+neu*(1+roam_cos)*saturate(bass_att*.04/length(uv-.5))/2
comp_70=`*(bass_att) + saturate((musl*roam_sin+musr*roam_cos)/16)*mid_att;
comp_71=`
comp_72=`}

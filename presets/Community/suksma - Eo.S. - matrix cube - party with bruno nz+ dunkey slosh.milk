MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.110
ob_g=0.000
ob_b=0.100
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = time/6;//q2*2; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = -1;
wave_0_per_frame5=t5 = -1;
wave_0_per_frame6=t6 = 1;
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*6.283;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=//draw circle, loop 32x
wave_0_per_point7=xp = -1;
wave_0_per_point8=xp =   if( equal(t3,1) , 1 , xp );
wave_0_per_point9=  xp = if( equal(t3,2) , 1 , xp );
wave_0_per_point10=yp = t4 * t6;
wave_0_per_point11=zp = t5;
wave_0_per_point12=
wave_0_per_point13=t4h = t4;
wave_0_per_point14=  t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_0_per_point15=  t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_0_per_point16=t3 = t3 + 1;
wave_0_per_point17=t6h = t6;
wave_0_per_point18=  t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_0_per_point19=  t6 = t6h;
wave_0_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_0_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_0_per_point22=  t4 = t4h;
wave_0_per_point23=t3 = t3 * (1-equal(t3,4));
wave_0_per_point24=
wave_0_per_point25=//x axis rotation;
wave_0_per_point26=ang = t1;
wave_0_per_point27=sang = sin(ang);cang = cos(ang);
wave_0_per_point28=xq = xp;
wave_0_per_point29=yq = yp*cang - zp*sang;
wave_0_per_point30=zq = yp*sang + zp*cang;
wave_0_per_point31=xp=xq;yp=yq;zp=zq;
wave_0_per_point32=
wave_0_per_point33=//y axis rotation;
wave_0_per_point34=ang = t1*2;
wave_0_per_point35=sang = sin(ang);cang = cos(ang);
wave_0_per_point36=xq = xp*cang - zp*sang;
wave_0_per_point37=yq = yp;
wave_0_per_point38=zq = xp*sang + zp*cang;
wave_0_per_point39=xp=xq;yp=yq;zp=zq;
wave_0_per_point40=
wave_0_per_point41=//z axis rotation;
wave_0_per_point42=ang = t1*3;
wave_0_per_point43=sang = sin(ang);cang = cos(ang);
wave_0_per_point44=xq = xp*cang - yp*sang;
wave_0_per_point45=yq = xp*sang + yp*cang;
wave_0_per_point46=zq = zp;
wave_0_per_point47=xp=xq;yp=yq;zp=zq;
wave_0_per_point48=
wave_0_per_point49=//push forward into viewspace
wave_0_per_point50=zp = zp + 4;
wave_0_per_point51=
wave_0_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point53=
wave_0_per_point54=//project into camera space, and compensate for aspect ratio
wave_0_per_point55=x = xp/zp * fov + 0.5;
wave_0_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wave_0_per_point57=r=q8;
wave_0_per_point58=g=q9;
wave_0_per_point59=b=q10;
wave_0_per_point60=a=q11;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q2*2; //volume time
wave_1_per_point1=//traveling line
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=phase = sample;
wave_1_per_point5=
wave_1_per_point6=//draw circle, loop 32x
wave_1_per_point7=xp = 0;
wave_1_per_point8=yp = 0;
wave_1_per_point9=zp = -1;
wave_1_per_point10=
wave_1_per_point11=//x axis rotation;
wave_1_per_point12=ang = (t1 + phase) * 7;
wave_1_per_point13=sang = sin(ang);cang = cos(ang);
wave_1_per_point14=xq = xp;
wave_1_per_point15=yq = yp*cang - zp*sang;
wave_1_per_point16=zq = yp*sang + zp*cang;
wave_1_per_point17=xp=xq;yp=yq;zp=zq;
wave_1_per_point18=
wave_1_per_point19=//y axis rotation;
wave_1_per_point20=ang = (t1 + phase) * 2.2;
wave_1_per_point21=sang = sin(ang);cang = cos(ang);
wave_1_per_point22=xq = xp*cang - zp*sang;
wave_1_per_point23=yq = yp;
wave_1_per_point24=zq = xp*sang + zp*cang;
wave_1_per_point25=xp=xq;yp=yq;zp=zq;
wave_1_per_point26=
wave_1_per_point27=//z axis rotation;
wave_1_per_point28=ang = (t1 + phase) * 3.4;
wave_1_per_point29=sang = sin(ang);cang = cos(ang);
wave_1_per_point30=xq = xp*cang - yp*sang;
wave_1_per_point31=yq = xp*sang + yp*cang;
wave_1_per_point32=zq = zp;
wave_1_per_point33=xp=xq;yp=yq;zp=zq;
wave_1_per_point34=
wave_1_per_point35=//push forward into viewspace
wave_1_per_point36=zp = zp + 4;
wave_1_per_point37=
wave_1_per_point38=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point39=
wave_1_per_point40=//project into camera space, and compensate for aspect ratio
wave_1_per_point41=x = xp/zp * fov + 0.5;
wave_1_per_point42=y = yp/zp * 1.3333 * fov + 0.5;
wave_1_per_point43=
wave_1_per_point44=//a = sample;
wave_1_per_point45=r=q10;
wave_1_per_point46=g=q8;
wave_1_per_point47=b=q9;
wave_1_per_point48=a=q11;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=256
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.600
shapecode_0_g2=0.700
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = q2*2; //volume time
shape_0_per_frame1=//traveling line
shape_0_per_frame2=
shape_0_per_frame3=n = (sin(q9+instance)+1)/2*instance*4000;//sample*6.283;
shape_0_per_frame4=phase = (sin(q8+instance)+1)/2*instance*4000;
shape_0_per_frame5=
shape_0_per_frame6=//draw circle, loop 32x
shape_0_per_frame7=xp = 0;
shape_0_per_frame8=yp = 0;
shape_0_per_frame9=zp = -1;
shape_0_per_frame10=
shape_0_per_frame11=//x axis rotation;
shape_0_per_frame12=ang = (t1 + phase) * 7;
shape_0_per_frame13=sang = sin(ang);cang = cos(ang);
shape_0_per_frame14=xq = xp-instance/300-q11*.1;
shape_0_per_frame15=yq = yp*cang - zp*sang;
shape_0_per_frame16=zq = yp*sang + zp*cang;
shape_0_per_frame17=xp=xq;yp=yq;zp=zq;
shape_0_per_frame18=
shape_0_per_frame19=//y axis rotation;
shape_0_per_frame20=ang = (t1 + phase) * 2.2;
shape_0_per_frame21=sang = sin(ang);cang = cos(ang);
shape_0_per_frame22=xq = xp*cang - zp*sang;
shape_0_per_frame23=yq = yp+instance/1000-q11*.1;
shape_0_per_frame24=zq = xp*sang + zp*cang;
shape_0_per_frame25=xp=xq;yp=yq;zp=zq;
shape_0_per_frame26=
shape_0_per_frame27=//z axis rotation;
shape_0_per_frame28=ang = (t1 + phase) * 3.4;
shape_0_per_frame29=sang = sin(ang);cang = cos(ang);
shape_0_per_frame30=xq = xp*cang - yp*sang;
shape_0_per_frame31=yq = xp*sang + yp*cang;
shape_0_per_frame32=zq = zp;
shape_0_per_frame33=xp=xq;yp=yq;zp=zq;
shape_0_per_frame34=
shape_0_per_frame35=//push forward into viewspace
shape_0_per_frame36=zp = zp + 4 + instance/100-q11*.1;
shape_0_per_frame37=rad=zp/150;
shape_0_per_frame38=fov = 1; //larger number equal less extreme perspective (zoom in)
shape_0_per_frame39=
shape_0_per_frame40=//project into camera space, and compensate for aspect ratio
shape_0_per_frame41=x = xp/zp * fov + 0.5;
shape_0_per_frame42=y = yp/zp * 1.3333 * fov + 0.5;
shape_0_per_frame43=r=q8-instance*.1;
shape_0_per_frame44=g=q10-instance*.11;
shape_0_per_frame45=b=q9-instance*.12;
shape_0_per_frame46=a=q11-instance*.13;
shape_0_per_frame47=r2=q9-instance*.14;
shape_0_per_frame48=g2=q10-instance*.15;
shape_0_per_frame49=b2=q8-instance*.16;
shape_0_per_frame50=a2=q11-instance*.17;
shape_0_per_frame51=border_r=q9-instance*.18;
shape_0_per_frame52=border_g=q8-instance*.19;
shape_0_per_frame53=border_b=q10-instance*.2;
shape_0_per_frame54=border_a=-q11-instance*.21;
shapecode_1_enabled=0
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.600
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=dcsp=0;
per_frame_init_3=
per_frame_init_4=zoom = 1.0;
per_frame_init_5=warp = 0;
per_frame_init_6=rot = 0;
per_frame_init_7=dx = 0;
per_frame_init_8=dy = 0;
per_frame_init_9=sx = 1;
per_frame_init_10=sy = -1;
per_frame_init_11=cx = 0.5;
per_frame_init_12=cy = 0.5;
per_frame_init_13=
per_frame_1=//martin no religion / my omniversal absence for changing the background light
per_frame_2=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=runbass=runbass+vvb;
per_frame_12=runmids=runmids+vvm ;
per_frame_13=runtreb=runtreb+vvt;
per_frame_14=pi23=4*asin(-1)*.33333333333333;
per_frame_15=atime=(runtreb+runmids+runbass)*1.85;
per_frame_16=q8= (sin(atime-0*pi23)+1)*.4;
per_frame_17=q9= (sin(atime-1*pi23)+1)*.4;
per_frame_18=q10=(sin(atime-2*pi23)+1)*.4;
per_frame_19=
per_frame_20=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_21=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_22=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_23=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_24=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_25=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_26=vvb = min(1,max(0,vvb));
per_frame_27=vvm = min(1,max(0,vvm));
per_frame_28=vvt = min(1,max(0,vvt));
per_frame_29=q1 = (vvt+vvm+vvb)*100;
per_frame_30=q2 = (vvt+vvm+vvb)*100;
per_frame_31=q3 = (vvt+vvm+vvb)*100;
per_frame_32=q4 =(vvt+vvm+vvb)*100;
per_frame_33=q5 =(vvt+vvm+vvb)*100;
per_frame_34=q6 =(vvt+vvm+vvb)*100;
per_frame_35=q4 =(vvt+vvm+vvb)*100;
per_frame_36=q5 =(vvt+vvm+vvb)*100;
per_frame_37=q6 =(vvt+vvm+vvb)*100;
per_frame_38=q7 =(vvt+vvm+vvb)*100;
per_frame_39=q11=(vvt+vvm+vvb)*100;
per_frame_40=q12=(vvt+vvm+vvb)*100;
per_frame_41=q13=(vvt+vvm+vvb)*100;
per_frame_42=q14=(vvt+vvm+vvb)*100;
per_frame_43=q15=(vvt+vvm+vvb)*100;
per_frame_44=q16=(vvt+vvm+vvb)*100;
per_frame_45=q17=(vvt+vvm+vvb)*100;
per_frame_46=q18=(vvt+vvm+vvb)*100;
per_frame_47=q19=(vvt+vvm+vvb)*100;
per_frame_48=q20=(vvt+vvm+vvb)*100;
per_frame_49=q21=(vvt+vvm+vvb)*100;
per_frame_50=q22=(vvt+vvm+vvb)*100;
per_frame_51=q23=(vvt+vvm+vvb)*100;
per_frame_52=q24=(vvt+vvm+vvb)*100;
per_frame_53=q25=(vvt+vvm+vvb)*100;
per_frame_54=q26=(vvt+vvm+vvb)*100;
per_frame_55=q27=(vvt+vvm+vvb)*100;
per_frame_56=q28=(vvt+vvm+vvb)*100;
per_frame_57=q29=(vvt+vvm+vvb)*100;
per_frame_58=q30=(vvt+vvm+vvb)*100;
per_frame_59=q31=(vvt+vvm+vvb)*100;
per_frame_60=q32=(vvt+vvm+vvb)*100;
per_frame_61=
per_frame_62=decay = 0.097;
per_frame_63=
per_frame_64=//uncommenting this block will make decay start at 0 when preset begins, and rise to the "max_decay" value
per_frame_65=//max_decay = 0.97;
per_frame_66=//dcsp = dcsp + 0.007*(75/fps);
per_frame_67=//dcsp = min(dcsp , max_decay);
per_frame_68=//decay = dcsp;
per_frame_69=
per_frame_70=//volume, and volume based time. framerate adjusted
per_frame_71=vol = (bass+mid+treb)*0.25;
per_frame_72=vol = vol*vol;
per_frame_73=
per_frame_74=mtime = mtime + vol * 0.01 * (75/fps);
per_frame_75=
per_frame_76=q1 = vol;
per_frame_77=q2 = mtime;
per_frame_78=
per_frame_79=//non bass volume
per_frame_80=vol2 = (mid+treb)*0.33;
per_frame_81=vol2 = vol2*vol2;
per_frame_82=
per_frame_83=m2time = m2time + vol2 * 0.01 * (75/fps);
per_frame_84=
per_frame_85=q3 = vol2;
per_frame_86=q4 = m2time;
per_frame_87=
per_frame_88=
per_frame_89=//krash's beat detection code
per_frame_90=volume = 0.3*(bass+mid+att);
per_frame_91=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_92=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_93=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_94=peakbass_att = max(bass_att,peakbass_att);
per_frame_95=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_96=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);
per_frame_97=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_98=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_99=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_100=beatcounter = beatcounter + beat;
per_frame_101=mode = if(beat*equal(beatcounter%2,0),1-mode,mode);
per_frame_102=flip = 2*mode-1;
per_frame_103=
per_frame_104=beatdrop = if( equal(beatdrop,0) , beat , max(beatdrop - 0.02*(75/fps) , 0) );
per_frame_105=
per_frame_106=q7 = beatdrop;
per_frame_107=q8 = flip;
per_frame_108=
per_frame_109=
per_frame_110=
per_frame_111=
per_frame_112=
per_frame_113=
per_frame_114=//zoom = 1 + beatdrop;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`    float2 d = texsize.zw*8;
warp_5=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
warp_6=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
warp_7=`
warp_8=`float2 uv_red = 0.5 + (uv-0.5) + float2(0,1)*texsize.zw*0 - float2(dx.x,dy.y)*texsize.zw;
warp_9=`
warp_10=`    ret.x = tex2D( sampler_main, uv_red ).x;
warp_11=`    ret.x += (ret.x - GetBlur1(uv_red)).x*0.4 + 0.01;
warp_12=`    ret.x *= 0.9;
warp_13=`
warp_14=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_15=`                      ((uv_red.xyy*q27
warp_16=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_17=`                      ).xyz*
warp_18=`                      float3(1,1,0)*0.05 + 
warp_19=`                      time*float3(0,0,1)*q29
warp_20=`                     );
warp_21=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_22=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_23=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_24=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = tex2D(sampler_main, uv).xyz;    
comp_4=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_5=`                      ((uv.xyy*q28
comp_6=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_7=`                      ).xyz*
comp_8=`                      float3(1,1,0)*0.05 + 
comp_9=`                      time*float3(0,0,1)*q31
comp_10=`                     );
comp_11=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z += (noise9).x*.5; 
comp_12=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x += (noise9).y*.5; 
comp_13=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y += (noise9).z*.5; 
comp_14=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.995
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.998
fWaveScale=2.155
fWaveSmoothing=0.900
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=10.000
zoom=1.00950
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.500
ib_size=0.015
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.500
nMotionVectorsX=64.000
nMotionVectorsY=1.248
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=10
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.24483
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=x=x+.2*sin(time*.411);
shape_0_per_frame2=y=y+.2*cos(time*.423);
shapecode_1_enabled=1
shapecode_1_sides=10
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.24483
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shape_1_per_frame1=x=x-.2*sin(time*.411);
shape_1_per_frame2=y=y-.2*cos(time*.423);
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//Unchained's Beat Code
per_frame_2=
per_frame_3=old_bass_flop=bass_flop;
per_frame_4=old_treb_flop=treb_flop;
per_frame_5=old_mid_flop=mid_flop;
per_frame_6=chaos=.9+.1*sin(pulse);
per_frame_7=entropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+int(rand(2)),entropy);
per_frame_8=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_9=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_10=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_11=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_12=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_13=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_14=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_15=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_16=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_17=bass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;
per_frame_18=treb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;
per_frame_19=mid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;
per_frame_20=pulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);
per_frame_21=q1=mid_residual;
per_frame_22=q2=bass_residual;
per_frame_23=q3=treb_residual;
per_frame_24=q4=sin(pulse);
per_frame_25=q5=cos(pulse/2+q1);
per_frame_26=
per_frame_27=q6=sin(q3*q1+q7*q2);
per_frame_28=q7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;
per_frame_29=q8=entropy;
per_frame_30=
per_frame_31=vol=(bass+mid+treb_att)*.3333;
per_frame_32=
per_frame_33=redsine=.5+.15*bass*sin(time*3);
per_frame_34=greensine=.5+.15*mid*sin(time*2);
per_frame_35=bluesine=.5+.15*treb*sin(time);
per_frame_36=
per_frame_37=redif=if(above(bass,1.2),redsine,if(above(redif,.95),.0,redif*.95));
per_frame_38=greenif=if(above(mid,1.2),greensine,if(above(greenif,.95),.0,greenif*.95));
per_frame_39=blueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),.0,blueif*.95));
per_frame_40=
per_frame_41=r=redif;
per_frame_42=g=greenif;
per_frame_43=b=blueif;
per_frame_44=
per_frame_45=q9=r;
per_frame_46=q10=g;
per_frame_47=q11=b;
per_frame_48=
per_frame_49=wave_r=wave_r*(sin(redif*cos(b+g)));
per_frame_50=wave_g=wave_g*(sin(greenif*cos(r+b)));
per_frame_51=wave_b=wave_b*(sin(blueif*cos(r+g)));
per_frame_52=
per_frame_53=ib_r=r;
per_frame_54=ib_g=g;
per_frame_55=ib_b=b;
per_frame_56=
per_frame_57=ob_r=wave_r*redif;
per_frame_58=ob_g=wave_g*greenif;
per_frame_59=ob_b=wave_b*blueif;
per_pixel_1=//xy transform code
per_pixel_2=xv = sin(time*.333)*x -cos(time*.667)*x;
per_pixel_3=yv = cos(time*.233)*y +sin(time*.567)*y;
per_pixel_4=x = xv; y = yv;
per_pixel_5=//end x/y transform code
per_pixel_6=
per_pixel_7=sx=sx+.075*sin(x*3+q7*x);
per_pixel_8=sy=sy+.075*sin(y*3.1+q7*y);
per_pixel_9=
per_pixel_10=dx=dx+.005*cos(y*20+.1*cos(time*.11)+(q2*q6));
per_pixel_11=dy=dy+.005*sin(x*20+.1*sin(time*.09)+(q3*q6));
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`//Geiss's Motion Blur
warp_5=`
warp_6=`    // sample previous frame
warp_7=`    ret = tex2D( sampler_main, uv ).xyz;
warp_8=`
warp_9=`    // this vector points exactly one pixel, in the direction of motion
warp_10=`    float2 v = normalize(uv-uv_orig)*texsize.zw;
warp_11=`
warp_12=`    float3 s;
warp_13=`    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);
warp_14=`    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);
warp_15=`    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);
warp_16=`    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);
warp_17=`
warp_18=`
warp_19=`float2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;
warp_20=`float3    ret2 = tex2D( sampler_main, uv_echo ).xyz;
warp_21=`
warp_22=`    // this vector points exactly one pixel, in the direction of motion
warp_23=`    float2 v2 = normalize(uv_echo-uv_orig)*texsize.zw;
warp_24=`
warp_25=`    ret2 = max(ret2, tex2D(sampler_main, uv_echo+v2)*0.97);
warp_26=`    ret2 = max(ret2, tex2D(sampler_main, uv_echo-v2)*0.97);
warp_27=`    ret2 = max(ret2, tex2D(sampler_main, uv_echo+v2*2)*0.90);
warp_28=`    ret2 = max(ret2, tex2D(sampler_main, uv_echo-v2*2)*0.90);
warp_29=`
warp_30=`ret = lerp(ret,ret2,.5);
warp_31=`
warp_32=`    // darken over time
warp_33=`    ret *= 0.95;
warp_34=`
warp_35=`
warp_36=`    // add noise
warp_37=`    //float2 uv_noise = uv*texsize_noise_lq.zw*texsize.xy + rand_frame.xy;
warp_38=`    //ret += (tex2D(sampler_noise_lq, uv_noise)*2-1)*0.02;
warp_39=`}
comp_1=`float z;
comp_2=`float3 ret1, neu, mus;
comp_3=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uv2;
comp_7=`//uv = (uv-0.5) * aspect.xy + .5;    
comp_8=`dz = 0;
comp_9=`
comp_10=`float2 hor = float2(texsize.z,0);
comp_11=`float2 ver = float2(0,texsize.w);
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`ret1 = 0;
comp_16=`float anz = 1;
comp_17=`float n = 0;
comp_18=`uv4 = (uv);
comp_19=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_20=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_21=`
comp_22=`
comp_23=`mus = .5*GetPixel(uv4-0*dz)-0*dz.x;
comp_24=`
comp_25=`uv2 = uv-.5;
comp_26=`while (n <= anz) {
comp_27=`    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;
comp_28=`
comp_29=`    inten =  sqrt(dist)*(1-dist*dist)*4;
comp_30=`
comp_31=`    uv3 = q27*2*uv2*dist + float2 (time/8,0);
comp_32=`    uv3 = frac(uv3);
comp_33=`    uv3 *= aspect.yx;
comp_34=`    uv3 = .1 * cos(22*uv3) + 18 *dz ;
comp_35=`    neu = saturate(.02/length(uv3));
comp_36=`    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);
comp_37=`    ret1 = max(ret1,neu*inten);
comp_38=`n++;
comp_39=`}
comp_40=`
comp_41=`ret = ret1  +  saturate(8*mus*(.2+ret1)) ;
comp_42=`}

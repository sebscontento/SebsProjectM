MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=0.000
fWaveSmoothing=0.900
fWaveParam=0.173
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.448
wave_y=0.122
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=1.000
nMotionVectorsY=1.000
mv_dx=0.087
mv_dy=0.343
mv_l=1.663
mv_r=0.890
mv_g=0.030
mv_b=0.881
mv_a=0.199
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.46374
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t8=3.14159265*1.56;
wave_0_init3=t5 = 1;
wave_0_per_frame1=rotx = rotx+bass;
wave_0_per_frame2=roty = roty+mid;
wave_0_per_frame3=rotz = rotz+treb;
wave_0_per_frame4=//rotx = 0;
wave_0_per_frame5=//roty =0;
wave_0_per_frame6=//rotz = 0;
wave_0_per_frame7=
wave_0_per_frame8=//convert rotation values from degrees to radians
wave_0_per_frame9=t1= t8*rotx/180;
wave_0_per_frame10=t2 = t8*roty/180;
wave_0_per_frame11=t3 = t8*rotz/180;
wave_0_per_frame12=
wave_0_per_frame13=t4 = 12+13*sin(time+2.46*t8);
wave_0_per_frame14=t5 = 2+8*cos(time+1.66*t8);
wave_0_per_frame15=r = 1;
wave_0_per_frame16=b = 0;
wave_0_per_frame17=g=0;
wave_0_per_point1=//Define 3D Shape
wave_0_per_point2=
wave_0_per_point3=//Sphere
wave_0_per_point4=fvar = sample*512;
wave_0_per_point5=svar = fvar*128;
wave_0_per_point6=tvar = 0&svar;
wave_0_per_point7=nsample = tvar*4.5;
wave_0_per_point8=x1 = -.5+(2.5)*sin(sample);
wave_0_per_point9=y1 = (1)*cos(t8*nsample);
wave_0_per_point10=z1 = (1)*sin(t8*nsample);
wave_0_per_point11=
wave_0_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_0_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_0_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_0_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_0_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_0_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_0_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_0_per_point19=//move resulting shape in 3d space
wave_0_per_point20=x4 = x3;
wave_0_per_point21=y4 = y3;
wave_0_per_point22=z4 = z3+5;
wave_0_per_point23=//draw 3d shape in 2d
wave_0_per_point24=x=0.5-1*(x4/(1+z4*0.5));
wave_0_per_point25=y=0.5-1*(y4/(1+z4*0.5));
wave_0_per_point26=
wave_0_per_point27=a = -.9+sin(nsample+time);
wave_0_per_point28=a = if(below(a,0),0,a);
wave_0_per_point29=a=1;
wave_0_per_point30=g=y2;
wave_0_per_point31=b=x2;
wave_0_per_point32=r= z2+z3;
wavecode_1_enabled=1
wavecode_1_samples=262
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_init1=t3 = acos(-1)*128;
wave_1_init2=t4 = 4/3;
wave_1_per_frame1=spin = spin + .01;
wave_1_per_frame2=t2 = spin;
wave_1_per_frame3=red = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));
wave_1_per_frame4=green = abs(sin(time)) ;
wave_1_per_frame5=blue = cos(time)  + abs(cos(time));
wave_1_per_frame6=r = if(above(red,1),1,if(above(red,0), abs(red),0));
wave_1_per_frame7=g = if(above(green,1),1,if(above(green,0), abs(green),0));
wave_1_per_frame8=b = if(above(blue,1),1,if(above(blue,0), abs(blue),0));
wave_1_per_frame9=t5 = r;
wave_1_per_frame10=t6 = g;
wave_1_per_frame11=t7 = b-sin(time);
wave_1_per_point1=dx = cos(sample*.1*t1 + t1*(t7-int(t5)))-.5;
wave_1_per_point2=dy = 0.3*cos(sample*t1 + 7 + t1*(t7-int(t6)));
wave_1_per_point3=ddy = -1*dy;
wave_1_per_point4=t = abs(sin(q7));
wave_1_per_point5=rad = sample*t3+t2;
wave_1_per_point6=x = cos(rad/32)*0.10 + sin(rad)*0.05 +dx*t;
wave_1_per_point7=y = sin(rad/64)*t4*0.10 + cos(rad)*t4*0.05+dy*t + ddy * t * t;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265/2;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = sin(bass+0.86*t8);
wave_2_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_2_per_point1=//Define 3D Shape
wave_2_per_point2=
wave_2_per_point3=//Sphere
wave_2_per_point4=fvar = sample*512;
wave_2_per_point5=svar = fvar*128;
wave_2_per_point6=tvar = 0&svar;
wave_2_per_point7=nsample = tvar*4.5;
wave_2_per_point8=x1 = -2.5+(1.5)*sin(sample);
wave_2_per_point9=y1 = (-1)*cos(t8*nsample);
wave_2_per_point10=z1 = (-1)*sin(t8*nsample);
wave_2_per_point11=
wave_2_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point19=//move resulting shape in 3d space
wave_2_per_point20=x4 = x3;
wave_2_per_point21=y4 = y3;
wave_2_per_point22=z4 = z3+5;
wave_2_per_point23=//draw 3d shape in 2d
wave_2_per_point24=x=0.5+0.5*(x4/(1+z4*0.5));
wave_2_per_point25=y=0.5+0.5*(y4/(1+z4*0.5));
wave_2_per_point26=
wave_2_per_point27=a = -.9+sin(nsample+time);
wave_2_per_point28=a = if(below(a,0),0,a);
wave_2_per_point29=a=1;
wave_2_per_point30=r =sin(abs(x2*sin(time)))*0.5 + 0.5;
wave_2_per_point31=b = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;
wave_2_per_point32=g = x2*z2;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.46374
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=//pi
wave_3_init2=t8=3.14159265;
wave_3_init3=t5 = 1;
wave_3_per_frame1=rotx = rotx+bass;
wave_3_per_frame2=roty = roty+mid;
wave_3_per_frame3=rotz = rotz+treb;
wave_3_per_frame4=//rotx = 0;
wave_3_per_frame5=//roty =0;
wave_3_per_frame6=//rotz = 0;
wave_3_per_frame7=
wave_3_per_frame8=//convert rotation values from degrees to radians
wave_3_per_frame9=t1= t8*rotx/180;
wave_3_per_frame10=t2 = t8*roty/180;
wave_3_per_frame11=t3 = t8*rotz/180;
wave_3_per_frame12=
wave_3_per_frame13=t4 = 3*sin(time+0.776*t8);
wave_3_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_3_per_frame15=
wave_3_per_point1=//Define 3D Shape
wave_3_per_point2=
wave_3_per_point3=//Sphere
wave_3_per_point4=fvar = sample*512;
wave_3_per_point5=svar = fvar*128;
wave_3_per_point6=tvar = 0&svar;
wave_3_per_point7=nsample = tvar*4.5;
wave_3_per_point8=x1 = -.75+(1.5)*sin(sample);
wave_3_per_point9=y1 = (1)*cos(t8*nsample);
wave_3_per_point10=z1 = (1)*sin(t8*nsample);
wave_3_per_point11=
wave_3_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_3_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_3_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_3_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_3_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_3_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_3_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_3_per_point19=//move resulting shape in 3d space
wave_3_per_point20=x4 = x3;
wave_3_per_point21=y4 = y3;
wave_3_per_point22=z4 = z3+5;
wave_3_per_point23=//draw 3d shape in 2d
wave_3_per_point24=x=0.5+0.75*(x4/(1+z4*0.5));
wave_3_per_point25=y=0.5+0.75*(y4/(1+z4*0.5));
wave_3_per_point26=
wave_3_per_point27=a = -.9+sin(nsample+time);
wave_3_per_point28=a = if(below(a,0),0,a);
wave_3_per_point29=a=1;
wave_3_per_point30=r = y2*z2;
wave_3_per_point31=b = z3+y3;
wave_3_per_point32=g = z3/x2;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.880
shapecode_0_y=0.800
shapecode_0_rad=0.33004
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);
shape_0_per_frame2=y = 0.5+ 0.4*sin(0.311*time+0.213*q8);
shape_0_per_frame3=ang = 3.1415-3.1415*cos(time*0.1389);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.880
shapecode_1_y=0.200
shapecode_1_rad=0.33004
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = 0.5+ 0.4*sin(0.212*time+0.1*q8);
shape_1_per_frame2=y = 0.5+ 0.4*sin(0.2891*time+0.121*q8);
shape_1_per_frame3=ang = 3.1415+3.1415*sin(time*0.181);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.120
shapecode_2_y=0.800
shapecode_2_rad=0.33004
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);
shape_2_per_frame2=y = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);
shape_2_per_frame3=ang = 3.1415-3.1415*cos(time*0.1154);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.120
shapecode_3_y=0.200
shapecode_3_rad=0.33004
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 0.5+ 0.4*sin(0.105*time+0.3*q4);
shape_3_per_frame2=y = 0.5+ 0.4*sin(0.1267*time+0.323*q4);
shape_3_per_frame3=ang = 3.1415+3.1415*sin(time*0.2654);
per_frame_init_1=prox = 1;
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.95, 30/fps);
per_frame_3=//dec_xlow = pow (0.999, 30/fps);
per_frame_4=beat = max (max (bass, mid), treb); 
per_frame_5=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_6=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_9=index = (index + is_beat) %16;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_11=
per_frame_12=q22 = peak;
per_frame_13=q24 = is_beat;
per_frame_14=q26 = bass_att + mid_att + treb_att;
per_frame_15=vol = vol*dec_med + (1-dec_med)*q26;
per_frame_16=q27 = index + 1;
per_frame_17=q28 = index2 +1;
per_frame_18=q28 = 4+4*sin(time/13);
per_frame_19=
per_frame_20=
per_frame_21=//****tunnel viewpoint x,y
per_frame_22=vtrig = is_beat * bnot(index%4);
per_frame_23=vx = vx * bnot(vtrig) + vtrig * (rand(100)/100-.5);
per_frame_24=vy = vy * bnot(vtrig) + vtrig * (rand(100)/100-.5);
per_frame_25=vx = vx* below(index%15,7); //###
per_frame_26=vy = vy* below(index%15,7);
per_frame_27=q5 = vx*20;
per_frame_28=q6 = vy*20;
per_frame_29=
per_frame_30=//***tunnel width
per_frame_31=q21 = (1+sin(time/12))/16+.03;
per_frame_32=
per_frame_33=
per_frame_34=//****tunnel rotation
per_frame_35=rota = rota +.01*below(index%16,8)/fps*30;
per_frame_36=rota1 = rota1*dec_med + (1-dec_med)*rota;
per_frame_37=q7 = rota1/4;
per_frame_38=
per_frame_39=//****tunnel speed
per_frame_40=movez = movez + .01/(.1+abs(vx)+abs(vy))/fps;
per_frame_41=q8 = movez * (q21*.01+1);
per_frame_42=//dyn. Aenderung von q21 bewirkt auch Richt.wechsel
per_frame_43=
per_frame_44=//***********************
per_frame_45=trig1= q24*bnot(index%12);
per_frame_46=trig2= q24*bnot((index+4)%12);
per_frame_47=trig3= q24*bnot((index+8)%12);
per_frame_48=trel = trel + vol/fps;
per_frame_49=z0 = 2/q21;
per_frame_50=hx = 4;
per_frame_51=hy = 4;
per_frame_52=
per_frame_53=p1z = z0;
per_frame_54=q9 = 1*hx/(p1z); 
per_frame_55=q10 = 0*hy/(p1z); 
per_frame_56=q11 = p1z;
per_frame_57=q12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);
per_frame_58=
per_frame_59=p2z = z0;
per_frame_60=q13 = -.5*hx/(p2z); 
per_frame_61=q14 = .87*hy/(p2z); 
per_frame_62=q15 = p2z;
per_frame_63=q16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);
per_frame_64=
per_frame_65=
per_frame_66=p3z = z0;
per_frame_67=q17 = -.5*hx/(p3z); 
per_frame_68=q18 = -.87*hy/(p3z); 
per_frame_69=q19 = p3z;
per_frame_70=q20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);
per_frame_71=
per_frame_72=zoom = 1.2 + sin(time/17)*.3;
warp_1=`sampler sampler_wrenches;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`
warp_6=`float2 uv1 = (uv-.5);// * aspect.xy;
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q28*4*length((abs(uv1.x)-abs(uv1.y)));
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-2,2);
warp_12=`uv1 -= rs/40;
warp_13=`
warp_14=`uv6 = .4*cos(uv1*4+time);
warp_15=`mus = .005/(length(uv6));
warp_16=`
warp_17=`float3 crisp= tex2D(sampler_main,(uv1)*(.95-q28/16+.4*z)+.5);
warp_18=`
warp_19=`float3 ret1 = crisp + mus;
warp_20=`
warp_21=`ret = (ret1*.99-.03);
warp_22=`//ret = tex2d(sampler_wrenches,uv_orig);
warp_23=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;
comp_4=`float2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;
comp_5=`float2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;
comp_6=`float3 noise, ret1, ret2, cathed, sky, fire;
comp_7=`
comp_8=`float2 numerator, denominator, fraction;
comp_9=`float2 d, uv_y,c2,spiral;
comp_10=`shader_body
comp_11=`{
comp_12=`float cutoff = 1;
comp_13=`int n = 1;
comp_14=`float s = 0.3;
comp_15=`int depth = 3; //number of fractal iterations
comp_16=`uv = 0.5 + (uv-0.5)*0.85;
comp_17=`for(int i = 0; i<depth;i++){
comp_18=`   c2 = (uv-0.5)*2*aspect.wz;
comp_19=`   numerator = (c2 + float2(q14,q16))*64;
comp_20=`   denominator = c2 + float2(q17,q18);
comp_21=`   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_22=`                      numerator.y*denominator.x - numerator.x*denominator.y)/
comp_23=`                      (denominator.x*denominator.x + denominator.y*denominator.y);
comp_24=`   c2 = fraction-0.5;
comp_25=`   spiral = float2(n*atan2(c2.x,c2.y)*M_INV_PI_2*2+q19,s*aspect.w*log(length(c2))+q20);
comp_26=`   uv = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror
comp_27=`}float2 uvtest = uv;
comp_28=`uvo = uv*aspect.xy;
comp_29=`uv = mul(uv*aspect.xy,float2x2(_qa));
comp_30=`uv = uv + -.0- .2*float2(q5,q6);
comp_31=`float2 uv1 = (uv-.5 );//*aspect.xy;
comp_32=`
comp_33=`//Kugel1
comp_34=`rsk = (uv1 + float2 (q9,q10)) ;
comp_35=`dz1 = normalize(rsk);
comp_36=`rad1 = q11*length (rsk) ;
comp_37=`uv4 =  tan(rad1)*dz1;
comp_38=`mask1 = saturate(8-8*rad1);
comp_39=`Kugel1 = uv4*mask1*8/q11;
comp_40=`uv1 += Kugel1*.1;
comp_41=`
comp_42=`//Kugel2
comp_43=`rsk = (sin(q27*atan2(uv1.x,uv1.y)/2)) ;
comp_44=`dz2 = normalize(rsk);
comp_45=`rad2 = 1*length (rsk) ;
comp_46=`uv4 =  tan(rad2)*dz2;
comp_47=`mask2 = saturate(8-8*rad2);
comp_48=`Kugel2 = uv4*mask2;
comp_49=`
comp_50=`//Kugel3
comp_51=`float argu = length(uv1+q5*uv1.y);
comp_52=`rsk = (sin(.1*(q27-8)/ argu));
comp_53=`//rsk = (sin(.5*q27*atan2(uv1.x,uv1.y))) ;
comp_54=`dz3 = normalize(rsk);
comp_55=`rad3 = 1*length (rsk) ;
comp_56=`uv4 =  tan(-rad3)*dz3;
comp_57=`mask3 = saturate(8-8*rad3);
comp_58=`Kugel3 = uv4*mask3;
comp_59=`
comp_60=`float2 dz = (Kugel1 + q12*Kugel2*length(uv1) + q13*Kugel3*argu);
comp_61=`//******************** STARS
comp_62=`rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_63=`rss0.y = .01/(length (uv1));
comp_64=`
comp_65=`rss = float2 (rss0.x,rss0.y+time/2)+dz;
comp_66=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_67=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.8 >= 0);
comp_68=`tmp = abs(frac(rss*8)-.5);
comp_69=`
comp_70=`//*************************
comp_71=`uv1 -= dz*.5;
comp_72=`float z = .2/(length(uv1)+q21);
comp_73=`uv2.y = z + q8;
comp_74=`uv2.x = rss0.x +q7;
comp_75=`uv3 =frac(uv2);
comp_76=`cathed =  tex2D (sampler_main,uv3+.4*dz)*12;
comp_77=`
comp_78=`float mod = (q22+1)/6;
comp_79=`
comp_80=`//Deckenbeleuchtung:
comp_81=`fire = saturate(.05*q22/length (uv1)*
comp_82=` (lum(tex2D (sampler_main,uv3+.0)))) ;
comp_83=`
comp_84=`//Tasaechl. Feuer; Problem: uv1 passt nicht zu uv3
comp_85=`fire += saturate(.02*q22/length (uv1)*
comp_86=` (lum(tex2D (sampler_main,uv1+.5))))/length(uv1);
comp_87=`
comp_88=`k1 = lum(fire);
comp_89=`fire = k1*float3(1,k1*.8,k1*k1/3)  ;
comp_90=`
comp_91=`uvo+=dz;
comp_92=`sky = saturate (.02/length(uvo-.3)) * 1;
comp_93=`
comp_94=`float3 dots = saturate(.04/length(tmp)) *noise;
comp_95=`dots *= saturate(.2/abs(rss0.y));
comp_96=`dots = saturate(lum(dots)*lum(dots)*1);
comp_97=`k1 = lum(dots);
comp_98=`dots= k1*float3(1,k1*.8,k1*k1/3) *2 ;
comp_99=`float cmask = saturate(1-16*lum(GetBlur1(frac(uv3))));
comp_100=`ret += sky * cmask;
comp_101=`ret += fire+dots;
comp_102=`
comp_103=`ret += sky*cathed/2;
comp_104=`float dis = length(uv1);
comp_105=`float crot = sin((dis+time)*12);
comp_106=`float3 blk = mod * float3 (crot,1-crot,2-dis)*dis;
comp_107=`blk *= (q12*(1/rad2+q15*mask2)+q13*(1/rad3+q15*mask3))/2 ;
comp_108=`blk += q22/rad1*roam_cos-mask1/4 ;
comp_109=`ret += blk;
comp_110=`
comp_111=`//ret = GetPixel(uvtest);
comp_112=`}

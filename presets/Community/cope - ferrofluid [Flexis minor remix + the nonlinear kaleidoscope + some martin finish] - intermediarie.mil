MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=2.107
fWaveSmoothing=0.000
fWaveParam=-0.220
fModWaveAlphaStart=0.810
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.600
wave_g=0.500
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.500
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=256
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.80000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.040
wave_0_per_point1=sw = (1-sw)*above(sample,0);
wave_0_per_point2=
wave_0_per_point3=osa = sample*above(sample,0);
wave_0_per_point4=
wave_0_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_0_per_point6=
wave_0_per_point7=mod = value1;
wave_0_per_point8=mod = mod*sw;
wave_0_per_point9=
wave_0_per_point10=y = if(sw,osa,sample*.5+.25);
wave_0_per_point11=y = sample*.5+.25;
wave_0_per_point12=y = (y-0.5)/(q32) + 0.5;
wave_0_per_point13=x = 1 - mod*.5;
wave_0_per_point14=
wave_0_per_point15=osa = sample;
wave_0_per_point16=
wave_0_per_point17=mo = 3.7 + mod*6 + q1;
wave_0_per_point18=
wave_0_per_point19=r = .5 + sin(q23*.9 +mo)*.5;
wave_0_per_point20=g = .5 + sin(q23*.89+mo + 1.5472)*.5;
wave_0_per_point21=b = .5 + sin(q23*.88+mo + 2.8944)*.5;
wave_0_per_point22=
wave_0_per_point23=//a = 3 - abs(mod)*12;
wave_0_per_point24=//a = 3-sw;
wave_0_per_point25=//a = max(0,min(a,1));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.80000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.040
wave_1_per_point1=sw = (1-sw)*below(sample,1);
wave_1_per_point2=
wave_1_per_point3=osa = sample*above(sample,0);
wave_1_per_point4=
wave_1_per_point5=mod = pow(value2*2,2)*sign(value2)*.5;
wave_1_per_point6=
wave_1_per_point7=mod = value2;
wave_1_per_point8=mod = mod*sw;
wave_1_per_point9=
wave_1_per_point10=y = if(sw,osa,sample*.5+.25);
wave_1_per_point11=y = sample*.5+.25;
wave_1_per_point12=y = (y-0.5)/(q32) + 0.5;
wave_1_per_point13=x = 0+ mod*.5;
wave_1_per_point14=
wave_1_per_point15=osa = sample;
wave_1_per_point16=
wave_1_per_point17=mo = 3.7 + mod*6 + q1;
wave_1_per_point18=
wave_1_per_point19=r = .5 + sin(q23*.95+mo)*.5;
wave_1_per_point20=g = .5 + sin(q23*.96+mo + 1.5472)*.5;
wave_1_per_point21=b = .5 + sin(q23*.97+mo + 2.8944)*.5;
wave_1_per_point22=
wave_1_per_point23=//a = 3 - abs(mod)*12;
wave_1_per_point24=//a = 3-sw;
wave_1_per_point25=//a = max(0,min(a,1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=5
shapecode_0_x=0.730
shapecode_0_y=0.500
shapecode_0_rad=0.29466
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=2.79176
shapecode_0_r=0.700
shapecode_0_g=0.700
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trig = q25;
shape_0_per_frame2=a = trig*min(bass+treb,1); a2 = trig*0;
shape_0_per_frame3=//a = min(bass+treb-1,1);
shape_0_per_frame4=x0 = x0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame5=y0 = y0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame6=
shape_0_per_frame7=
shape_0_per_frame8=k1 = instance/num_inst*6.28;
shape_0_per_frame9=ampl = .1*q22+.1;
shape_0_per_frame10=
shape_0_per_frame11=
shape_0_per_frame12=x0 = .5 +q15*ampl *cos(k1+q17); y0 = .5+ q16*ampl*sin(k1+q17);
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=tex_ang = rand(20)/3;
shape_0_per_frame16=//tex_ang = time;
shape_0_per_frame17=rad = .1 + rand(8)/12;
shape_0_per_frame18=
shape_0_per_frame19=x = x0; y = y0;
shape_0_per_frame20=r = .7+.3*sin(time/12);
shape_0_per_frame21=b = .7+.3*sin(time/15);
shape_0_per_frame22=g = .7+.3*sin(time/8);
shape_0_per_frame23=r2 = r; b2 = b; g2 = g;
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=37
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03640
shapecode_1_ang=0.81681
shapecode_1_tex_ang=0.37699
shapecode_1_tex_zoom=1.02841
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.050
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=k1 = instance/num_inst*6.28;
shape_1_per_frame2=tmp = q17/32+time*.1;
shape_1_per_frame3=trel = tmp-int(tmp);
shape_1_per_frame4=
shape_1_per_frame5=yes = above(sin(time/9.5),0);
shape_1_per_frame6=
shape_1_per_frame7=bright = 6*q2*q2*yes+.1*min(q8,1);
shape_1_per_frame8=border_a = bright;
shape_1_per_frame9=
shape_1_per_frame10=tmp = 2*sin(time/12)-1;
shape_1_per_frame11=a = .5*yes*pow(2,-18*abs(k1-6.28*trel)) * above(tmp,0)*tmp*tmp;
shape_1_per_frame12=ampl = .1;
shape_1_per_frame13=rad = .02+.0*sin(k1*4+time);
shape_1_per_frame14=x = .5 +q15*ampl *cos(k1+q17); y = .5+ q16*ampl*sin(k1+q17);
shape_1_per_frame15=
shape_1_per_frame16=r0 = sin(time/7);
shape_1_per_frame17=g0 = sin(time/5);
shape_1_per_frame18=b0 = sin(time/9);
shape_1_per_frame19=
shape_1_per_frame20=border_r = .8 + .2*r0;
shape_1_per_frame21=border_g = .8 + .2*g0;
shape_1_per_frame22=border_b = .8 + .2*b0;
shape_1_per_frame23=
shape_1_per_frame24=
shape_1_per_frame25=//r = .5*r0; g = .5*g0; b = 0.5*b0; ;
shape_1_per_frame26=
shape_1_per_frame27=//r2 = 0; g2 = 0; b2 = 0;
shape_1_per_frame28=
shape_1_per_frame29=a2 = 0;
shape_1_per_frame30=
shapecode_2_enabled=1
shapecode_2_sides=32
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=33
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = rand(int(q1))/5+instance-instance;
shape_2_per_frame2=trans2 = rand(int(q1))/5+instance-instance;
shape_2_per_frame3=trans3 = rand(int(q1))/5+instance-instance;
shape_2_per_frame4=a = trans;
shape_2_per_frame5=
shape_2_per_frame6=x = (sin(q23)+1.57)*.3 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_2_per_frame7=y = (cos(q23)+1.57)*.3 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_2_per_frame8=rad = .09 + rand(int(q1))/15+instance-instance;
shape_2_per_frame9=r=rand(q1)*.1+instance-instance;
shape_2_per_frame10=g=rand(q1)*.1+instance-instance;
shape_2_per_frame11=b=rand(q1)*.1+instance-instance;
shape_2_per_frame12=r2=rand(q1)*.1+instance-instance;
shape_2_per_frame13=g2=rand(q1)*.1+instance-instance;
shape_2_per_frame14=b2=rand(q1)*.1+instance-instance;
shape_2_per_frame15=border_r=rand(q1)*.1+instance-instance;
shape_2_per_frame16=border_g=rand(q1)*.1+instance-instance;
shape_2_per_frame17=border_b=rand(q1)*.1+instance-instance;
shapecode_3_enabled=1
shapecode_3_sides=32
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=7
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.500
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.500
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=trans = rand(int(q1))/15+instance-instance;
shape_3_per_frame2=trans2 = rand(int(q1))/15+instance-instance;
shape_3_per_frame3=trans3 = rand(int(q1))/15+instance-instance;
shape_3_per_frame4=a = trans;
shape_3_per_frame5=
shape_3_per_frame6=x = (sin(q23)+1.57)*.3 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_3_per_frame7=y = (cos(q23)+1.57)*.3 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_3_per_frame8=rad = .09 + rand(int(q1))/15+instance-instance;
shape_3_per_frame9=r=rand(q1)*.1+instance-instance;
shape_3_per_frame10=g=rand(q1)*.1+instance-instance;
shape_3_per_frame11=b=rand(q1)*.1+instance-instance;
shape_3_per_frame12=r2=rand(q1)*.1+instance-instance;
shape_3_per_frame13=g2=rand(q1)*.1+instance-instance;
shape_3_per_frame14=b2=rand(q1)*.1+instance-instance;
shape_3_per_frame15=border_r=rand(q1)*.1+instance-instance;
shape_3_per_frame16=border_g=rand(q1)*.1+instance-instance;
shape_3_per_frame17=border_b=rand(q1)*.1+instance-instance;
shape_3_per_frame18=
per_frame_init_1=avg = 1;
per_frame_init_2=index = rand(8);
per_frame_init_3=index2 = rand(8);
per_frame_init_4=ran = 1;
per_frame_init_5=spb_=.3;
per_frame_init_6=sdev = .1;
per_frame_init_7=trel2 = rand (100)/100;
per_frame_1=vol=bass+treb+mid;
per_frame_2=q1=max(1,min(5.5,vol*1.15));
per_frame_3=atime=atime+vol;
per_frame_4=q23=atime*.02;
per_frame_5=dec_med = pow (0.9, 30/fps); dec_slow = pow (0.98, 30/fps);
per_frame_6=beat = bass+mid+treb;
per_frame_7=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_8=is_beat = above(beat, .2+avg+peak) * above (time, t0+.1);
per_frame_9=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_10=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_11=index = (index + is_beat) %16;
per_frame_12=index2 = (index2 + is_beat*bnot(index))%12;
per_frame_13=
per_frame_14=spb = min(t0-t0a + .01,2); t0a = t0;
per_frame_15=spb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);
per_frame_16=mindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));
per_frame_17=sdev = if(is_beat,sdev * .9 + .1*pow(mindev+.02,2),sdev);
per_frame_18=
per_frame_19=q20 = avg; q21 = beat;
per_frame_20=q22 = peak+.1; 
per_frame_21=q24 = is_beat;
per_frame_22=q27 = index; q28 = index2;
per_frame_23=
per_frame_24=trel = trel + 1/fps/spb_*4; itrel = int(trel);
per_frame_25=q25 =  above(itrel, itrel_);
per_frame_26=q30 = itrel%2;
per_frame_27=itrel_ = itrel;
per_frame_28=q31 = itrel;
per_frame_29=
per_frame_30=ma = ma + peak/fps ;
per_frame_31=mx=mx*dec_med+(1-dec_med)*cos(ma);
per_frame_32=my=my*dec_med+(1-dec_med)*sin(ma+trel/16);
per_frame_33=q15 = mx ; q16 = my ; q17 = ma;
per_frame_34=
per_frame_35=//first par: off; second: on
per_frame_36=sw1 = if(sw1,bnot(q24*bnot(rand(20))),q24*bnot(rand(20)));
per_frame_37=sw2 = if(sw2,bnot(q24*bnot(rand(10))),q24*bnot(rand(80)));
per_frame_38=sw3 = if(sw3,bnot(q24*bnot(rand(10))),q24*bnot(rand(100+10000*sdev)));
per_frame_39=
per_frame_40=//********* variation parameters warp shader
per_frame_41=q6 = sin(time/15)*sin(time/27)*.2; //zz weighting
per_frame_42=q10 = sin(time/8); //ring
per_frame_43=q10 = q10*q10*.1; 
per_frame_44=q11 = 1.5+sin(time/7.8); //zoom uv2
per_frame_45=q12 = if(below(sdev,.015)*bnot(q8),q25,1); //go
per_frame_46=q13 = .5+sin(time/17); //pow noise warp s
per_frame_47=q19 = sin(time/5.3)*.2; //sunpos
per_frame_48=
per_frame_49=//********* variation parameters comp shader
per_frame_50=q3 = sw1;//mirror 
per_frame_51=q4 = .02/sdev; //unused ###
per_frame_52=q5 = max(min(4*sin(trel/64)-3,1),0)*.4; //water
per_frame_53=q7 = below(sdev,.004)*(index2%2); //flash
per_frame_54=q2 = abs(q19)*sqrt(q15*q15+q16*q16); //avoid black - frame eq2
per_frame_55=
per_frame_56=trel2 = trel2+.003*q22*q22/fps;
per_frame_57=tmp = sin(trel2);
per_frame_58=tmp = 20*tmp-19;
per_frame_59=q8 =  tmp*above(tmp,0)*(4/max(q22-4,0.2)+4); // dyn zoom
per_frame_60=q26 = above(q22,12)*(q22-12)*2; //# ok???
per_frame_61=
per_frame_62=tmp = index2/6;
per_frame_63=q14 = abs((tmp-int(tmp))-.5)*6+1; //ang multi
per_frame_64=
per_frame_65=tmp =sin(trel/4*3.14); //sym rot
per_frame_66=jmp = jmp + above(tmp,.5)*tmp/fps*8*sw2;
per_frame_67=q9 = jmp*equal(q14,1)*below(sdev,0.04)+time*above(sin(q17/23),.9);
per_frame_68=q18 = tmp * bnot(q8) * sw3; //waber
per_frame_69=
per_frame_70=monitor = sw1;
per_frame_71=rot = .003;
per_frame_72=warp = .0;
per_frame_73=zoom = 1+(avg-log(sdev))/200;
per_frame_74=//dx = tmp*.01*above(abs(tmp),.95);
per_frame_75=q32=aspecty;monitor=vol;
per_frame_76=//FPS: any
per_frame_77=//Massive Attack - False Flags
per_frame_78=
per_frame_79=
per_frame_80=//Play with rotation and zoom amounts, its fun
per_frame_81=
per_frame_82=w_andsomelongstring = w_andsomelongstring*0.98 + (bass-treb)*0.04;
per_frame_83=rot = asin(1)*0.5 + w_andsomelongstring*0.04;
per_frame_84=
per_frame_85=//see warp shader code for counter-zoom
per_frame_86=bb = bb*0.99 + bass*0.02;
per_frame_87=mm = mm*0.99 + mid*0.02;
per_frame_88=tt = tt*0.99 + treb*0.02;
per_frame_89=
per_frame_90=mx = max(max(bb,mm),tt);
per_frame_91=mn = min(min(bb,mm),tt);
per_frame_92=
per_frame_93=t1 = (bb-mn)/(mx-mn);
per_frame_94=t2 = (mm-mn)/(mx-mn);
per_frame_95=t3 = (tt-mn)/(mx-mn);
per_frame_96=
per_frame_97=v = 0.1/fps;
per_frame_98=bm = bm + (t1-t2)*v;
per_frame_99=mt = mt + (t2-t3)*v;
per_frame_100=
per_frame_101=// coordinates spiral 1
per_frame_102=q22 = 0; // X
per_frame_103=q21 = 1; // Y
per_frame_104=
per_frame_105=// coordinates spiral 2
per_frame_106=q24 = 0;
per_frame_107=q23 = -1;
per_frame_108=
per_frame_109=q25 = 0.5/asin(1); // pi/4
per_frame_110=
per_frame_111=q26 = -bm; // rotation
per_frame_112=q27 = mt; // growth
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`float3 color, mus, neu, ret1, noise, noise2;
warp_3=`float2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;
warp_4=`float dx,dy,speed;
warp_5=`shader_body {
warp_6=`speed = .3;
warp_7=`uv1 = uv-float2(0.5,q5);
warp_8=`float z = 1/(uv1.y);
warp_9=`rs0.x = (uv1.x)*z;
warp_10=`rs0.y = z;
warp_11=`rs.x = rs0.x *1;
warp_12=`rs.y = rs0.y + time*speed;
warp_13=`
warp_14=`
warp_15=`//Kacheln
warp_16=`noise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));
warp_17=`noise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;
warp_18=`noise *= saturate(10*noise - 8) * saturate(2/z);
warp_19=`noise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));
warp_20=`
warp_21=`speed *= 2;
warp_22=`float3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));
warp_23=`copy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));
warp_24=`copy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));
warp_25=`
warp_26=`ret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;
warp_27=`
warp_28=`
warp_29=`}
comp_1=`float2 numerator, denominator, fraction;
comp_2=`float2 d, uv_y,c,spiral;
comp_3=`float3 dx, dy;
comp_4=`float1 ang_hq;
comp_5=`shader_body
comp_6=`{
comp_7=`float cutoff = 0.95;
comp_8=`int n = 1;
comp_9=`float s = 0.3;
comp_10=`int depth = 1; //number of fractal iterations
comp_11=`
comp_12=`for(int i = 0; i<depth;i++){
comp_13=`   c = (uv-0.5)*2*aspect.wz;
comp_14=`   numerator = (c + float2(q21,q22))*64;
comp_15=`   denominator = c + float2(q23,q24);
comp_16=`   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_17=`                      numerator.y*denominator.x - numerator.x*denominator.y)/
comp_18=`                      (denominator.x*denominator.x + denominator.y*denominator.y);
comp_19=`   c = fraction-0.5;
comp_20=`   ang_hq = n*atan2(c.x,c.y);
comp_21=`   spiral = float2(ang_hq*q25+q26,s*aspect.w*log(length(c))+q27);
comp_22=`   uv = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror
comp_23=`}
comp_24=`float2 uv1 = float2(uv.x-q6, uv.y-q5);
comp_25=`
comp_26=`float2 hor = float2 (texsize.z*1,0);
comp_27=`float2 ver = float2 (0,texsize.w*1);
comp_28=`float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_29=`float dy = GetPixel (uv-ver) - GetPixel (uv+ver);
comp_30=`float2 dz = float2 (dx,dy);
comp_31=`
comp_32=`uv1 = uv1*0+.3*cos(uv1*2) - dz;
comp_33=`float dots = saturate(.04/length(uv1));
comp_34=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;
comp_35=`float3 dots2 = saturate(.04/length(uv1));
comp_36=`dots -= lum(GetBlur2(uv));
comp_37=`
comp_38=`ret = dots + GetPixel(uv)*12*dots2;
comp_39=`    
comp_40=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.140
fDecay=0.880
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.110
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=repeats=10;
wave_0_per_point2=samplerepeat=sample*repeats;
wave_0_per_point3=cycle=int(samplerepeat);
wave_0_per_point4=sampcyc=samplerepeat - cycle;
wave_0_per_point5=cycleto1=cycle/repeats;
wave_0_per_point6=
wave_0_per_point7=n=sampcyc*6.283;
wave_0_per_point8=phs=sampcyc;
wave_0_per_point9=tm=q1+phs+(cycleto1)*0.1;
wave_0_per_point10=tmm=time;
wave_0_per_point11=rsample=(1-sampcyc*0.9)*2.2*(cycleto1+1);
wave_0_per_point12=a=sampcyc * below(sampcyc,0.95);
wave_0_per_point13=a=a*a;
wave_0_per_point14=
wave_0_per_point15=//waving
wave_0_per_point16=tmc=tm+cycle-phs*0.2;
wave_0_per_point17=variation=sin(cycleto1*6.283)*9;
wave_0_per_point18=swap=above(sample,0.5)*2-1;
wave_0_per_point19=wavex=sin(tmc*(19+variation)*swap)*rsample*0.04;
wave_0_per_point20=wavey=cos(tmc*(19+variation)*swap)*rsample*0.04;
wave_0_per_point21=
wave_0_per_point22=xp=sin(tm)*0.4 ;
wave_0_per_point23=yp=cos(tm)*0.4 ;
wave_0_per_point24=
wave_0_per_point25=xp=xp*sin(tm*3);
wave_0_per_point26=yp=yp*cos(tm*2.6);
wave_0_per_point27=
wave_0_per_point28=xp=xp*sin(tm*0.43);
wave_0_per_point29=yp=yp*(cos(tm*1.79)*0.5+0.5);
wave_0_per_point30=
wave_0_per_point31=xp=xp+wavex;
wave_0_per_point32=yp=yp+wavey;
wave_0_per_point33=
wave_0_per_point34=x=xp+0.5;
wave_0_per_point35=y=yp*1.333 + 0.5;
wave_0_per_point36=
wave_0_per_point37=
wave_0_per_point38=trailsize=0.85;
wave_0_per_point39=head=above(a,trailsize);
wave_0_per_point40=tail=1-head;
wave_0_per_point41=r=1*head + 0.5*tail;
wave_0_per_point42=g=0.8*head + 0.3*tail;
wave_0_per_point43=b=0.5*head;
wave_0_per_point44= 
wave_0_per_point45=a=a*0.25
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=repeats=8;
wave_1_per_point2=samplerepeat=sample*repeats;
wave_1_per_point3=cycle=int(samplerepeat);
wave_1_per_point4=sampcyc=samplerepeat - cycle;
wave_1_per_point5=cycleto1=cycle/repeats;
wave_1_per_point6=
wave_1_per_point7=n=sampcyc*6.283;
wave_1_per_point8=phs=sampcyc+0.15;
wave_1_per_point9=tm=q1+phs+(cycleto1)*0.1;
wave_1_per_point10=tmm=time;
wave_1_per_point11=rsample=(1-sampcyc*0.9)*1.5*(cycleto1+1);
wave_1_per_point12=a=sampcyc * below(sampcyc,0.95);
wave_1_per_point13=a=a*a;
wave_1_per_point14=
wave_1_per_point15=//waving
wave_1_per_point16=tmc=tm+cycle-phs*0.2;
wave_1_per_point17=variation=sin(cycleto1*6.283)*9;
wave_1_per_point18=swap=above(sample,0.5)*2-1;
wave_1_per_point19=wavex=sin(tmc*(19+variation)*swap)*rsample*0.04;
wave_1_per_point20=wavey=cos(tmc*(19+variation)*swap)*rsample*0.04;
wave_1_per_point21=
wave_1_per_point22=xp=sin(tm)*0.4 ;
wave_1_per_point23=yp=cos(tm)*0.4 ;
wave_1_per_point24=
wave_1_per_point25=xp=xp*sin(tm*3);
wave_1_per_point26=yp=yp*cos(tm*2.6);
wave_1_per_point27=
wave_1_per_point28=xp=xp*sin(tm*0.43);
wave_1_per_point29=yp=yp*(cos(tm*1.79)*0.5+0.5);
wave_1_per_point30=
wave_1_per_point31=xp=xp+wavex;
wave_1_per_point32=yp=yp+wavey;
wave_1_per_point33=
wave_1_per_point34=x=xp+0.5;
wave_1_per_point35=y=yp*1.333 + 0.5;
wave_1_per_point36=
wave_1_per_point37=
wave_1_per_point38=trailsize=0.85;
wave_1_per_point39=head=above(a,trailsize);
wave_1_per_point40=tail=1-head;
wave_1_per_point41=r=1*head + 0.5*tail;
wave_1_per_point42=g=0.8*head + 0.3*tail;
wave_1_per_point43=b=0.5*head;
wave_1_per_point44=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=repeats=6;
wave_2_per_point2=samplerepeat=sample*repeats;
wave_2_per_point3=cycle=int(samplerepeat);
wave_2_per_point4=sampcyc=samplerepeat - cycle;
wave_2_per_point5=cycleto1=cycle/repeats;
wave_2_per_point6=
wave_2_per_point7=n=sampcyc*6.283;
wave_2_per_point8=phs=sampcyc+0.25;
wave_2_per_point9=tm=q1+phs+(cycleto1)*0.1;
wave_2_per_point10=tmm=time;
wave_2_per_point11=rsample=(1-sampcyc*0.9)*1.5*(cycleto1+1);
wave_2_per_point12=a=sampcyc * below(sampcyc,0.95);
wave_2_per_point13=a=a*a;
wave_2_per_point14=
wave_2_per_point15=//waving
wave_2_per_point16=tmc=tm+cycle-phs*0.2;
wave_2_per_point17=variation=sin(cycleto1*6.283)*9;
wave_2_per_point18=swap=above(sample,0.5)*2-1;
wave_2_per_point19=wavex=sin(tmc*(19+variation)*swap)*rsample*0.04;
wave_2_per_point20=wavey=cos(tmc*(19+variation)*swap)*rsample*0.04;
wave_2_per_point21=
wave_2_per_point22=xp=sin(tm)*0.4 ;
wave_2_per_point23=yp=cos(tm)*0.4 ;
wave_2_per_point24=
wave_2_per_point25=xp=xp*sin(tm*3);
wave_2_per_point26=yp=yp*cos(tm*2.6);
wave_2_per_point27=
wave_2_per_point28=xp=xp*sin(tm*0.43);
wave_2_per_point29=yp=yp*(cos(tm*1.79)*0.5+0.5);
wave_2_per_point30=
wave_2_per_point31=xp=xp+wavex;
wave_2_per_point32=yp=yp+wavey;
wave_2_per_point33=
wave_2_per_point34=x=xp+0.5;
wave_2_per_point35=y=yp*1.333 + 0.5;
wave_2_per_point36=
wave_2_per_point37=
wave_2_per_point38=trailsize=0.85;
wave_2_per_point39=head=above(a,trailsize);
wave_2_per_point40=tail=1-head;
wave_2_per_point41=r=1*head + 0.5*tail;
wave_2_per_point42=g=0.8*head + 0.3*tail;
wave_2_per_point43=b=0.5*head;
wave_2_per_point44=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=6
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.680
shapecode_0_rad=0.80814
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.19380
shapecode_0_tex_zoom=1.04060
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.600
shapecode_0_g2=0.700
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang=time*0.1
shapecode_1_enabled=1
shapecode_1_sides=6
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.210
shapecode_1_rad=0.56483
shapecode_1_ang=0.00000
shapecode_1_tex_ang=1.19380
shapecode_1_tex_zoom=1.04060
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.150
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=-time*0.13;
shape_1_per_frame2=x=sin(time*0.29)*0.2 + 0.5
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.500
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q1=.4+sin(atime*.006        )*.4;
per_frame_21=q2=.4+cos(atime*.00613828348)*.4;
per_frame_22=q3=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q3;
per_frame_24=basstime = basstime + bass*0.03;
per_frame_25=basstime2 = basstime + bass*0.03;
per_frame_26=q1 = basstime2;
per_frame_27=
per_frame_28=//start in most active range
per_frame_29=basstime = if(below(basstime,1000),1000,basstime);
per_frame_30=//basstime = if(above(basstime,495),450,basstime);
per_frame_31=basstime = basstime + bass_att*0.03;
per_frame_32=vol = pow(bass+mid+treb,2);
per_frame_33=basssum = vol;
per_frame_34=stickybit = time%2;
per_frame_35=//avg vol
per_frame_36=//buffer 1
per_frame_37=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_38=//number of samples 1 or framerate
per_frame_39=sample1 = sample1 + equal(stickybit,1);
per_frame_40=//buffer 2
per_frame_41=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_42=//number of samples 2
per_frame_43=sample2 = sample2 + equal(stickybit,0);
per_frame_44=//transision
per_frame_45=edge = bnot(equal(bit2,stickybit));
per_frame_46=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_47=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_48=sample1 = sample1  - sample1*edge*stickybit;
per_frame_49=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_50=//test vol against avg buffer lvl
per_frame_51=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_52=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_53=q3 = diff;
per_frame_54=bit2 = time%2;
per_frame_55=difftime = difftime + diff*0.03;
per_frame_56=q2 = difftime;
per_frame_57=//fix a strange error
per_frame_58=difftime = if(above(difftime,2000),0, difftime);
per_frame_59=
per_frame_60=
per_frame_61=count = count + above(q3,2)*0.05 + 0.002;
per_frame_62=
per_frame_63=
per_frame_64=q10= cos(count);
per_frame_65=q11 = sin(count);
per_frame_66=q13 = 1;
per_frame_67=dec_med = pow (0.9, 30/fps);
per_frame_68=dec_slow = pow (0.99, 30/fps);
per_frame_69=beat = max (max (bass, mid), treb); 
per_frame_70=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_71=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_72=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_73=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_74=index = (index + is_beat) %8;
per_frame_75=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_76=index3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;
per_frame_77=
per_frame_78=q20 = avg;
per_frame_79=q21 = beat;
per_frame_80=q22 = peak;
per_frame_81=q23 = index;
per_frame_82=q24 = is_beat;
per_frame_83=q26 = bass + mid + treb + 1;
per_frame_84=q27 = index + 1;
per_frame_85=q28 = index2+1;
per_frame_86=
per_frame_87=k1 =  is_beat*equal(index%2,0);
per_frame_88=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_89=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_90=rott = p2 * 3.1416/4;
per_frame_91=
per_frame_92=q1 = cos(rott);
per_frame_93=q2 = sin(rott);
per_frame_94=q3 = -q2;
per_frame_95=q4 = q1;
per_frame_96=
per_frame_97=movex = movex + .03*30/fps;
per_frame_98=q29 = movex*.3;
per_frame_99=movez = movez + .07*30/fps;
per_frame_100=q30 = movez;
per_frame_101=
per_frame_102=crawl = crawl + .001*(2+q22)*30/fps;
per_frame_103=q31 = crawl*4;
per_frame_104=
per_frame_105=q32 = 2 + sin(time/7);
per_frame_106=monitor = index2;
per_pixel_1=zoom = 1.0;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_30=`                      ((uv2.xyy*q27
warp_31=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_32=`                      ).xyz*
warp_33=`                      float3(1,1,0)*0.05 + 
warp_34=`                      time*float3(0,0,1)*q29
warp_35=`                     );
warp_36=`if(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y -= (noise9).x*.5; 
warp_37=`if(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z -= (noise9).y*.5; 
warp_38=`if(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x -= (noise9).z*.5; 
warp_39=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float dist = 1;
comp_11=`float inten = 1;
comp_12=`ret1 = 0;
comp_13=`int anz = 3;
comp_14=`int n = 1;
comp_15=`while (n <= anz) {
comp_16=`    ang2 = n/anz;
comp_17=`    c = (ang2);
comp_18=`    s = 1-(ang2);
comp_19=`    uv2.x =  uv.x*c - uv.y*s;
comp_20=`    uv2.y =  uv.x*s + uv.y*c;
comp_21=`    uv2 *= aspect.yx;
comp_22=`    dist = 1-frac(.25*n+q29); //evtl sqrt !
comp_23=`    inten =  pow(dist,.5)*(1-dist*dist)*2;
comp_24=`    float2 uv3 = frac(3*uv2*dist + .5 + q31);;
comp_25=`uv3 *=2 ;
comp_26=`float2 m = floor(frac(uv3*0.5)*2);
comp_27=`uv3 = frac(uv3)*(1-m) + (m)*frac(1-uv3);
comp_28=`    neu =  GetPixel (uv3) + 2*GetBlur1(uv3);
comp_29=`
comp_30=`    ret1 = max(ret1*.9,neu*inten);
comp_31=`n++;
comp_32=`}
comp_33=`
comp_34=`ret = .5*ret1 + 0.5*float3(0,0,.3)*(.5+uv.y) ;
comp_35=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_36=`                      ((uv.xyy*q28
comp_37=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_38=`                      ).xyz*
comp_39=`                      float3(1,1,0)*0.05 + 
comp_40=`                      time*float3(0,0,1)*q30 
comp_41=`                     );
comp_42=`if(ret.x> q26*q3         && ret.x<= q23*q1        )ret.z -= (noise9).x*.5; 
comp_43=`if(ret.y> q25*q1         && ret.y<= q22*q2        )ret.x -= (noise9).y*.5; 
comp_44=`if(ret.z> q24*q2         && ret.z<= q21*q3        )ret.y -= (noise9).z*.5; 
comp_45=`}

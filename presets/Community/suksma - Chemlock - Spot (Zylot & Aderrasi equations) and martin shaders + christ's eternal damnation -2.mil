MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=4.290
fDecay=0.975
fVideoEchoZoom=1.032
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=2.647
fWarpScale=3.712
fZoomExponent=0.01000
fShader=1.000
zoom=0.99990
rot=0.16000
cx=1.970
cy=0.710
dx=0.52000
dy=0.00000
warp=59.23045
sx=1.71141
sy=0.79544
wave_r=1.000
wave_g=0.000
wave_b=1.000
wave_x=0.500
wave_y=0.015
ob_size=0.000
ob_r=1.000
ob_g=0.000
ob_b=0.500
ob_a=0.600
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=0.250
ib_a=0.000
nMotionVectorsX=6.400
nMotionVectorsY=4.800
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=1.000
mv_a=0.040
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.000
shapecode_0_y=0.240
shapecode_0_rad=0.40108
shapecode_0_ang=2.70177
shapecode_0_tex_ang=2.76460
shapecode_0_tex_zoom=10.80432
shapecode_0_r=0.000
shapecode_0_g=0.400
shapecode_0_b=0.000
shapecode_0_a=0.880
shapecode_0_r2=0.500
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.560
shapecode_1_y=0.420
shapecode_1_rad=0.14020
shapecode_1_ang=0.00000
shapecode_1_tex_ang=6.28319
shapecode_1_tex_zoom=0.01000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.740
shapecode_1_a=0.720
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=0.230
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=y = y + 0.2*sin(time + 0.2*bass);
shape_1_per_frame2=x = x - 0.06*sin(time + 0.1*(treb + mid));
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.920
shapecode_2_y=0.000
shapecode_2_rad=1.51263
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=100.00000
shapecode_2_r=0.800
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.700
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=1.000
shapecode_3_y=0.000
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=2.51327
shapecode_3_tex_zoom=15.43036
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.700
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_1=//per frame less reactive volume and different interference with existing q vars, for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = q1+vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = q2+vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = q3+vvt*2;//0.5 + vt - vvt;
per_frame_14=v=2;
per_frame_15=bb = bb - vvb*v;
per_frame_16=mm = mm - vvm*v;
per_frame_17=tt = tt - vvt*v;
per_frame_18=q4 = -bb;
per_frame_19=q5 = -mm;
per_frame_20=q6 = -tt;
per_frame_21=q4=q4+(q1+q2+q3);
per_frame_22=q5=q5+(q1+q2+q3);
per_frame_23=q6=q6+(q1+q2+q3);
per_frame_24=q7=q7+(q1+q2+q3);
per_frame_25=q8=q8+(q1+q2+q3);
per_frame_26=q9=q9+(q1+q2+q3);
per_frame_27=q10=q10+(q1+q2+q3);
per_frame_28=q11=q11+(q1+q2+q3);
per_frame_29=q12=q12+(q1+q2+q3);
per_frame_30=q13=q13+(q1+q2+q3);
per_frame_31=q14=q14+(q1+q2+q3);
per_frame_32=q15=q15+(q1+q2+q3);
per_frame_33=q16=q16+(q1+q2+q3);
per_frame_34=q17=q17+(q1+q2+q3);
per_frame_35=q18=q18+(q1+q2+q3);
per_frame_36=q19=q19+(q1+q2+q3);
per_frame_37=q20=q20+(q1+q2+q3);
per_frame_38=q21=q21+(q1+q2+q3);
per_frame_39=q22=q22+(q1+q2+q3);
per_frame_40=q23=q23+(q1+q2+q3);
per_frame_41=q24=q24+(q1+q2+q3);
per_frame_42=q25=q25+(q1+q2+q3);
per_frame_43=q26=q26+(q1+q2+q3);
per_frame_44=q27=q27+(q1+q2+q3);
per_frame_45=q28=q28+(q1+q2+q3);
per_frame_46=q29=q29+(q1+q2+q3);
per_frame_47=q30=q30+(q1+q2+q3);
per_frame_48=q31=q31+(q1+q2+q3);
per_frame_49=q32=q32+(q1+q2+q3);
per_frame_50=
per_frame_51=
per_frame_52=
per_frame_53=wave_x = wave_x +(0.48*sin(4*bass*treb*mid))*sin(time/bass);
per_frame_54=wave_r = if(above((time*20)%2,0),0,wave_r + 0.5*sin(time));
per_frame_55=wave_b=if(above((time*20)%2,0),1,0);
per_frame_56=rot = rot + 0.0*sin(time);
per_frame_57=decay = + if (above(progress, 0.99), 0.9, 1);
per_frame_58=dy = dy - 0.01 + 0.002*sin(0.01*time);
per_frame_59=ob_r = .1 + if(above(.2*sin(time*.444),0),.3*sin(time*.444),0);
per_frame_60=ob_g =.1 + if(above(.2*sin(time*.777),0),.3*sin(time*.777),0);
per_frame_61=chng=sin(time*.5);
per_frame_62=cthr=.99;
per_frame_63=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_64=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_65=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_66=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_67=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_68=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_69=mq27=if(above(chng,cthr),rand(4),mq27);
per_frame_70=mq28=if(above(chng,cthr),rand(4),mq28);
per_frame_71=mq29=if(above(chng,cthr),rand(1),mq29);
per_frame_72=mq30=if(above(chng,cthr),rand(1),mq30);
per_frame_73=monitor=chng;
per_frame_74=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_75=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_76=
per_frame_77=monitor=mq1;
per_pixel_1=warp = warp + if (below(y, 0.5), if(below(rad,0.9), +0.4 + 0.2*sin(0.6*time), 0), +0.1);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_18=`                      ((uv.xyy*q27
warp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_20=`                      ).xyz*
warp_21=`                      float3(1,1,0)*0.05 + 
warp_22=`                      time*float3(0,0,1)*q29
warp_23=`                     );
warp_24=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.x += (noise9).x*1.5; 
warp_25=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.y -= (noise9).y*.5; 
warp_26=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.z *= (noise9).z*1.5; 
warp_27=`
warp_28=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 d = texsize.zw*4;
comp_4=`float3 dx = ( GetBlur1( uv + float2(1,0)*d) - GetBlur1( uv - float2(1,0)*d) );
comp_5=`float3 dy = ( GetBlur1( uv + float2(0,1)*d) - GetBlur1( uv - float2(0,1)*d) );
comp_6=`
comp_7=`float sin = q11;
comp_8=`float cos = q12;
comp_9=`float scale = 1;
comp_10=`
comp_11=`float2 uv6 = (uv-0.5)*aspect.xy*2.4;
comp_12=`       uv6 = scale*float2( cos*uv6.x - sin*uv6.y, sin*uv6.x + cos*uv6.y); // rotation
comp_13=`       uv6 = 0.5 + uv6*aspect.zw + float2(q13,q14);
comp_14=`
comp_15=`       uv6 = 1.0 - abs( frac( uv6 * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
comp_16=`       uv6 -= float2(dx.z,dy.z)*0.1;
comp_17=`
comp_18=`float2 uv_x = 0.5 + (uv6-0.5)*0.9;
comp_19=`float2 uv_y = uv6 - float2(q13,q14);
comp_20=`
comp_21=`d = texsize.zw*12;
comp_22=`dx = ( GetBlur1( uv_x + float2(1,0)*d) - GetBlur1( uv_x - float2(1,0)*d) );
comp_23=`dy = ( GetBlur1( uv_x + float2(0,1)*d) - GetBlur1( uv_x - float2(0,1)*d) );
comp_24=`
comp_25=`
comp_26=`ret = lerp(lerp(GetPixel(uv_x).x*float3(1,0,0),
comp_27=`                float3(-0.1,-1,-1),
comp_28=`                GetPixel(uv_y).y), 
comp_29=`           float3(1,1,0),
comp_30=`           length(float2(dx.x,dy.x)));
comp_31=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_32=`                      ((uv.xyy*q28
comp_33=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_34=`                      ).xyz*
comp_35=`                      float3(1,1,0)*0.05 + 
comp_36=`                      time*float3(0,0,1)*q30 
comp_37=`                     );
comp_38=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.x *= (noise9).x*1.5; 
comp_39=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.y += (noise9).y*1.5; 
comp_40=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.z -= (noise9).z*.5; 
comp_41=`ret = lerp(ret,float3(-0.5,2,3),GetPixel(uv).z*0.4);
comp_42=`
comp_43=`//ret = GetPixel(uv_y).y;
comp_44=`}

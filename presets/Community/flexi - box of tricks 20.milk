MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000000
fGammaAdj=1.280
fDecay=0.800
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=3.04777
fShader=0.000
zoom=1.01730
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01605
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=5
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=2
shapecode_0_x=0.490
shapecode_0_y=0.500
shapecode_0_rad=0.11589
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.36077
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = rand(1000)/1000;
shape_0_per_frame2=y = rand(1000)/1000;
shape_0_per_frame3=ang = rand(150)/100;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=zoom = 1;
per_frame_2=warp = 0;
per_frame_3=// elastic thread code
per_frame_4=
per_frame_5=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_6=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_7=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_8=x1 = 0.5 + (xx1-xx2)*2;
per_frame_9=y1 = 0.4 + yy1*1.5;
per_frame_10=dt = 0.03/fps;
per_frame_11=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_12=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_13=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_14=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_15=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_16=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_17=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_18=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_19=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_20=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_21=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_22=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_23=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_24=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_25=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_26=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_27=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_28=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_29=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_30=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_31=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_32=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_33=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_34=q9 = 1/aspectx;
per_frame_35=q10 = 1/aspecty;
per_frame_36=q11 = aspectx;
per_frame_37=q12 = aspecty;
per_frame_38=
per_frame_39=q13 = atan2(vx4,vy4);
per_frame_40=q14 = sqrt(vx4*vx4 + vy4*vy4)*0.8;
per_frame_41=
per_frame_42=bb = bb*0.99 + bass*0.02;
per_frame_43=mm = mm*0.99 + mid*0.02;
per_frame_44=tt = tt*0.99 + treb*0.02;
per_frame_45=mx = max(max(bb,mm),tt);
per_frame_46=mn = min(min(bb,mm),tt);
per_frame_47=t1 = (bb-mn)/(mx-mn);
per_frame_48=t2 = (mm-mn)/(mx-mn);
per_frame_49=t3 = (tt-mn)/(mx-mn);
per_frame_50=v = 0.5/fps;
per_frame_51=b = b + (t1-t2)*v;
per_frame_52=t = t + (t2-t3)*v;
per_frame_53=m = m + (t3-t1)*v;
per_frame_54=
per_frame_55=q32 = b;
per_frame_56=q31 = m;
per_frame_57=q30 = t*4;
per_frame_58=monitor = b;
per_pixel_1=x = 0.5 + (x-0.5)*q11;
per_pixel_2=y = 0.5 + (y-0.5)*q12;
per_pixel_3=dir = -q13*1 + asin(1)*1;
per_pixel_4=
per_pixel_5=b1 = 0.1; // distance
per_pixel_6=m1 = q14*25;//-0.6 + q5*200; // size
per_pixel_7=t1 = 0.05; // velocity
per_pixel_8=
per_pixel_9=xx = q4;
per_pixel_10=yy = 1-q8;
per_pixel_11=
per_pixel_12=
per_pixel_13=x1 = xx   +cos(dir+1.5708)*b1;
per_pixel_14=y1 = yy -sin(dir+1.5708)*b1;
per_pixel_15=
per_pixel_16=x2 = xx   -cos(dir+1.5708)*b1;
per_pixel_17=y2 = yy +sin(dir+1.5708)*b1;
per_pixel_18=
per_pixel_19=d1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;
per_pixel_20=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_21=
per_pixel_22=d2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;
per_pixel_23=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_24=
per_pixel_25=si3 = -pow(q5,3)*00;
per_pixel_26=
per_pixel_27=dx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;
per_pixel_28=dy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;
warp_1=`float2 complex_mul(float2 factorA, float2 factorB){
warp_2=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_3=`}
warp_4=`
warp_5=`float2 complex_pow(float2 base, int exponent){
warp_6=`   float2 exponentiation = float2(1,0);
warp_7=`   for(int i = 0; i<exponent; i++){
warp_8=`      exponentiation = complex_mul(base,exponentiation);
warp_9=`   }
warp_10=`   return exponentiation;
warp_11=`}
warp_12=`
warp_13=`float2 complex_square(float2 domain){
warp_14=`   return complex_mul(domain,domain);
warp_15=`}
warp_16=`
warp_17=`float2 complex_div(float2 numerator, float2 denominator){
warp_18=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_19=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_20=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_21=`}
warp_22=`
warp_23=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
warp_24=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
warp_25=`}
warp_26=`
warp_27=`float2 uv_scale(float2 domain, float2 center, float2 scale){
warp_28=`   return center + (domain-center)*scale;
warp_29=`}
warp_30=`
warp_31=`float2 uv_torus_mirror(float2 domain, float cutoff){
warp_32=`   return 0.5 + (1.0 - abs( frac( domain * 0.5 ) * 2 - 1.0 )-0.5)*cutoff;
warp_33=`}
warp_34=`
warp_35=`float2 uv_polar(float2 domain, float2 center){
warp_36=`   float2 c = domain - center;
warp_37=`   float rad_hq = length(c);
warp_38=`   float ang_hq = atan2(c.x,c.y);
warp_39=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
warp_40=`}
warp_41=`
warp_42=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_43=`   float2 polar = uv_polar(domain, center);
warp_44=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
warp_45=`}
warp_46=`
warp_47=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_48=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_49=`}
warp_50=`
warp_51=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
warp_52=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
warp_53=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
warp_54=`}
warp_55=`
warp_56=`bool mask_rectangle(float2 domain, float2 position, float2 dimensions){
warp_57=`   return (domain.x>position.x-dimensions.x)*(domain.x<position.x+dimensions.x)*
warp_58=`          (domain.y>position.y-dimensions.y)*(domain.y<position.y+dimensions.y);
warp_59=`}
warp_60=`
warp_61=`bool mask_circle(float2 domain, float2 position, float radius){
warp_62=`   return length(domain-position)<radius;
warp_63=`}
warp_64=`
warp_65=`bool mask_spiral_logarithmic(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_66=`   float2 c = domain - center;
warp_67=`   float rad_hq = length(c);
warp_68=`   float ang_hq = atan2(c.x,c.y);
warp_69=`
warp_70=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_71=`}
warp_72=`
warp_73=`float figure_spiral(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_74=`   float2 c = domain - center;
warp_75=`   float rad_hq = length(c);
warp_76=`   float ang_hq = atan2(c.x,c.y);
warp_77=`
warp_78=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_79=`}
warp_80=`
warp_81=`float figure_circle(float2 domain, float2 position, float radius){
warp_82=`   return saturate(1-length(domain-position)/radius);
warp_83=`}
warp_84=`
warp_85=`float figure_border(float2 domain, float thickness){
warp_86=`   float2 help_uv = frac(domain-0.5);
warp_87=`   help_uv = min(help_uv,1-help_uv)*2;
warp_88=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_89=`}
warp_90=`
warp_91=`shader_body
warp_92=`{
warp_93=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz, 5);
warp_94=`float2 northPole = float2(0.25,0.5);
warp_95=`float2 southPole = float2(0.75,0.5);
warp_96=`int fins = 4;
warp_97=`float log_factor = 0.6;
warp_98=`float2 coord = float2(q32,q31);
warp_99=`
warp_100=`float2 bipolar_uv = uv_bipolar_logarithmic(base_uv, northPole, southPole, fins, log_factor, coord );
warp_101=`//bipolar_uv = uv_torus_mirror(bipolar_uv,1);
warp_102=`
warp_103=`ret = figure_border(bipolar_uv,0.15)*float3(0,0,1);
warp_104=`//ret = lerp(ret,float3(1,0,0),mask_circle(base_uv,northPole,0.01));
warp_105=`//ret = lerp(ret,float3(0,0,1),mask_circle(base_uv,southPole,0.01));
warp_106=`log_factor = 1;
warp_107=`coord = float2(0,-q30);
warp_108=`bipolar_uv = uv_torus_mirror(bipolar_uv,1);
warp_109=`float2 polar_uv = uv_polar_logarithmic(bipolar_uv,0.5,fins,log_factor,coord);
warp_110=`ret = lerp(ret,float3(1,0,0),figure_border(polar_uv,0.25));
warp_111=`
warp_112=`ret.y = GetPixel(uv).y;
warp_113=`}
comp_1=`shader_body
comp_2=`{
comp_3=`ret = GetPixel(uv);
comp_4=`}

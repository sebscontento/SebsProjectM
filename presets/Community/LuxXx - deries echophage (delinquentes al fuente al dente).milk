MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=2.000000
fGammaAdj=1.000
fDecay=0.929
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.168
fWaveScale=2.827
fWaveSmoothing=0.090
fWaveParam=0.000
fModWaveAlphaStart=0.630
fModWaveAlphaEnd=0.870
fWarpAnimSpeed=0.010
fWarpScale=1.766
fZoomExponent=1.00016
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00001
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.720
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.100
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.28261
wavecode_0_smoothing=0.20000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=a = 0;
wave_0_per_frame1=a = (treb_att + mid_att);
wave_0_per_frame2=
wave_0_per_frame3=x = x + (treb_att / 20)*sin(mid_att*0.015+3);
wave_0_per_frame4=y = y + (mid_att / 25)*sin(mid_att*0.019+1);
wave_0_per_frame5=r = treb_att;
wave_0_per_point1=a = (treb_att + mid_att);
wave_0_per_point2=
wave_0_per_point3=x = x + (treb_att / 20)*sin(time*0.015+3);
wave_0_per_point4=y = y + (mid_att / 25)*sin(time*0.019+1);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.27704
wavecode_1_smoothing=0.24000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=a = 0;
wave_1_per_frame1=
wave_1_per_frame2=a = (treb_att + mid_att);
wave_1_per_frame3=
wave_1_per_frame4=x = x + (mid_att / 20)*sin(mid_att*0.015+3);
wave_1_per_frame5=y = y + (treb_att / 25)*sin(mid_att*0.019+1);
wave_1_per_frame6=g=(bass_att - (bass_att*bass_att));
wave_1_per_point1=a = (treb_att + mid_att);
wave_1_per_point2=
wave_1_per_point3=x = x - (mid_att / 20)*sin(time*0.015+3);
wave_1_per_point4=y = y - (treb_att / 25)*sin(time*0.019+1);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=a = 0;
wave_2_per_frame1=a = (treb_att + mid_att);
wave_2_per_frame2=
wave_2_per_frame3=x = x - (mid_att / 20)*sin(time*0.015+3);
wave_2_per_frame4=y = y - (treb_att / 25)*sin(time*0.019+1);
wave_2_per_point1=a = (treb_att + mid_att);
wave_2_per_point2=
wave_2_per_point3=x = x - (mid_att / 20)*sin(time*0.015+3);
wave_2_per_point4=y = y - (treb_att / 25)*sin(time*0.019+1);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);
per_frame_2=wave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);
per_frame_3=wave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);
per_frame_4=warp = 0;
per_frame_5=
per_frame_6=ob_r = wave_g;
per_frame_7=ob_b = wave_r;
per_frame_8=ob_g = wave_b;
per_frame_9=ib_r = wave_r;
per_frame_10=ib_b = wave_g;
per_frame_11=ib_g = wave_r;
per_frame_12=
per_frame_13=//before inversion
per_frame_14=scale = 4;
per_frame_15=angle = time*.2;
per_frame_16=translation_x = 0;
per_frame_17=translation_y = 0.2;
per_frame_18=
per_frame_19=//complex inverted
per_frame_20=iscale = 6;
per_frame_21=iangle = sin(time*0.1337)*0.3;
per_frame_22=itranslation_u = 0;
per_frame_23=itranslation_v = 0.2;
per_frame_24=
per_frame_25=
per_frame_26=// the möbius transformation
per_frame_27=// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector
per_frame_28=// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c
per_frame_29=// so a/c and mu can be calculated outside of the shader
per_frame_30=
per_frame_31=a_r = cos(angle)*scale;
per_frame_32=a_i = sin(angle)*scale;
per_frame_33=b_r = translation_x;
per_frame_34=b_i = translation_y;
per_frame_35=
per_frame_36=c_r = -cos(iangle)*iscale;
per_frame_37=c_i = -sin(iangle)*iscale;
per_frame_38=d_r = itranslation_u;
per_frame_39=d_i = itranslation_v;
per_frame_40=
per_frame_41=// c^(-1)
per_frame_42=c_inv_r = c_r/(c_r*c_r+c_i*c_i);
per_frame_43=c_inv_i = c_i/(c_r*c_r+c_i*c_i);
per_frame_44=
per_frame_45=// a*c^(-1)
per_frame_46=ac_r = (a_r*c_inv_r - a_i*c_inv_i);
per_frame_47=ac_i = (a_r*c_inv_i - a_i*c_inv_r);
per_frame_48=
per_frame_49=// (bc-ad)
per_frame_50=bcad_r = (b_r*c_r - b_i*c_i)-(a_r*d_r-a_i*d_i);
per_frame_51=bcad_i = (b_r*c_i - b_i*c_r)-(a_r*d_i-a_i*d_r);
per_frame_52=
per_frame_53=// mu*c^(-1)
per_frame_54=mu_r = bcad_r*c_inv_r - bcad_i*c_inv_i;
per_frame_55=mu_i = bcad_r*c_inv_i - bcad_i*c_inv_r;
per_frame_56=
per_frame_57=q1 = ac_r;
per_frame_58=q2 = ac_i;
per_frame_59=q3 = mu_r;
per_frame_60=q4 = mu_i;
per_frame_61=
per_frame_62=q5 = c_r;
per_frame_63=q6 = c_i;
per_frame_64=q7 = d_r;
per_frame_65=q8 = d_i;
per_pixel_1=dy = dy + if(below(abs(q1-x),0.01),if(below(y,q2),max(0.02-abs(q1-x),0),0.001),0.001);
per_pixel_2=cx = 8.13988973*sqr(warp - x);
per_pixel_3=cx=if(below(cx,-1.0), -1.0, cx);
per_pixel_4=cx=if(above(cx,2.0), 2.0, cx);
per_pixel_5=dy=if(below(dy,-1), -1, dy);
per_pixel_6=dy=if(above(dy,1.0), 1.0, dy);
per_pixel_7=num = 8;
per_pixel_8=pi = 3.141592654;
per_pixel_9=radi = (y-.5)*.75;
per_pixel_10=radi = (y-.5);
per_pixel_11=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_12=
per_pixel_13=an = ang + pi + time;
per_pixel_14=an = an - pi*2*int(an/(pi*2));
per_pixel_15=
per_pixel_16=mod = .1;
per_pixel_17=
per_pixel_18=seg = ang + pi;
per_pixel_19=seg = seg/(pi*2)*num;
per_pixel_20=seg = int(seg);
per_pixel_21=seg = seg - equal(seg,num);
per_pixel_22=
per_pixel_23=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_24=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_25=//anga = anga + pi/6; // num = 6
per_pixel_26=anga = anga + pi/4; // num = 8
per_pixel_27=//anga = anga + .85; // num = 10
per_pixel_28=
per_pixel_29=
per_pixel_30=ox = .5 - radi*sin(anga);
per_pixel_31=oy = .5 + radi*cos(anga);
per_pixel_32=
per_pixel_33=//rot = if(equal(seg,0),rot,0);
per_pixel_34=
per_pixel_35=dx = equal(seg,3)*(x-ox);
per_pixel_36=dy = equal(seg,3)*(y-oy);
per_pixel_37=
per_pixel_38=dx = above(seg,0)*(x-ox);
per_pixel_39=dy = above(seg,0)*(y-oy);
per_pixel_40=
per_pixel_41=//dx = equal(seg,1)*(x - .5)*2;
per_pixel_42=dx=dx+0.003*sin((y*2-1)*64)+0.001*sin((y*2-1)*96);
per_pixel_43=dy=dy+0.004*cos((x*2-1)*64)+0.002*cos((x*2-1)*96);
per_pixel_44=
warp_1=`shader_body
warp_2=`{
warp_3=`    float1 d = 0.0009;
warp_4=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y;
warp_5=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y;
warp_6=`    float2 my_uv = uv - float2(dx,dy)*0.01;
warp_7=`
warp_8=`
warp_9=`
warp_10=`    float2 v = 0.01;
warp_11=`    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;
warp_12=`
warp_13=`    
warp_14=`    ret.y += (ret.y - GetBlur3(my_uv-floor(my_uv)).y)*.1;
warp_15=`    ret.y += 0.006;//-GetBlur3(uv-floor(uv)).x*5;
warp_16=`
warp_17=`    ret.y = lerp( ret.y, lum(ret).x, 0);
warp_18=`ret.x = ret.y;
warp_19=`ret.z = ret.y;
warp_20=`
warp_21=`//--------------------------------
warp_22=`
warp_23=`    d = 0.01;
warp_24=`    my_uv = float2(-dy,dx)*0.05;
warp_25=`
warp_26=`//    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).z;
warp_27=`//    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).z;
warp_28=`  //  my_uv += uv - float2(dx,dy)*0.005;
warp_29=`
warp_30=`
warp_31=`
warp_32=`    v = 0.01;
warp_33=`//    ret.z =tex2D( sampler_fw_main, my_uv - floor(my_uv)).z;
warp_34=`
warp_35=`    
warp_36=`  //  ret.z += (ret.z - GetBlur3(my_uv-floor(my_uv)).z)*0.13;
warp_37=`    //ret.z *= 0.95;
warp_38=`//    ret.z += 0.03-GetBlur3(uv-floor(uv)).x - tex2D( sampler_main, my_uv - floor(my_uv)).y*0.05;
warp_39=`
warp_40=`//    ret.x = tex2D( sampler_main, uv).x * 0.003;
warp_41=`
warp_42=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`//I'm too lazy to use a custom float here... 
comp_5=`rand_preset = float4(q6,q7,q8,q9);
comp_6=`
comp_7=`// coloration of the red color channel
comp_8=`ret = float3(1,1,1)*GetBlur3(uv).x; 
comp_9=`ret = lerp( ret, rand_preset.yzx, GetBlur2(uv).x*2);
comp_10=`ret = lerp( ret, max(rand_preset.yxz*2,1), GetBlur1(uv).x*0.5);
comp_11=`ret = lerp( ret, -0.1*rand_preset.zwy, GetPixel(uv).x);
comp_12=`
comp_13=`//spinning uv coordinates! (q2/3 are sin/cos calculations)
comp_14=`float2 uv2 = uv-.5;
comp_15=`uv2 = float2((uv2.x)*q3 - (uv2.y) * q2,(uv2.x)* q2 + (uv2.y) * q3)+.5;
comp_16=`
comp_17=`//adding some plasticity
comp_18=`float2 d = texsize.zw*4;
comp_19=`float1 dx = ( GetBlur1(uv2+float2(1,0)*d)-GetBlur1(uv2-float2(1,0)*d) ).y;
comp_20=`float1 dy = ( GetBlur1(uv2+float2(0,1)*d)-GetBlur1(uv2-float2(0,1)*d) ).y;
comp_21=`float2 uv_y = uv2+float2(dx,dy)*0.4;
comp_22=`
comp_23=`//coloration of the green color channel
comp_24=`ret = lerp(ret,float3(.8,.8,.8),tex2D(sampler_main,uv_y).y); 
comp_25=`ret = lerp( ret, rand_preset, GetBlur2(uv2).y*2);
comp_26=`ret = lerp( ret, max(rand_preset*2,1.2), GetBlur1(uv_y).y*0.5);
comp_27=`ret = lerp( ret, -.01*rand_preset.xyw, GetPixel(uv2).y);
comp_28=`
comp_29=`//enable to check the warp shader
comp_30=`//ret = GetPixel(uv);
comp_31=`}

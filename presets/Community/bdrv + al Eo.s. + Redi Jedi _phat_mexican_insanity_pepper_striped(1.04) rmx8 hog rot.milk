MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.120
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.600
nMotionVectorsX=31.200
nMotionVectorsY=2.280
mv_dx=0.000
mv_dy=0.000
mv_l=2.500
mv_r=1.000
mv_g=1.000
mv_b=0.800
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_point1=division = int(sample*4) + 1;
wave_0_per_point2=
wave_0_per_point3=
wave_0_per_point4=wave=(value1*170 + value2*170) * 0.5;
wave_0_per_point5=
wave_0_per_point6=//// first frequency band, full frame 60hz@60fps
wave_0_per_point7=//set to 0 at beginning of frame
wave_0_per_point8=band1max = if( equal(sample,0) , -1, band1max);
wave_0_per_point9=band1min = if( equal(sample,0) , 1 , band1min);
wave_0_per_point10=
wave_0_per_point11=//accumulate values
wave_0_per_point12=band1max = max(wave,band1max);
wave_0_per_point13=band1min = min(wave,band1min);
wave_0_per_point14=
wave_0_per_point15=//center max and min around 0 and return max value [range 0-1]
wave_0_per_point16=band1 = if( equal(sample,1) , band1max - ((band1min+band1max)*0.5) , band1 );
wave_0_per_point17=t1 = band1;
wave_0_per_point18=
wave_0_per_point19=//// 3rd frequency band
wave_0_per_point20=//divide wave form over frame into subsections
wave_0_per_point21=segmentlength = 8;
wave_0_per_point22=section = (sample*segmentlength) - int(sample*segmentlength - 0.0001);
wave_0_per_point23=zerotest= (1/(512/segmentlength));
wave_0_per_point24=onetest =1 - zerotest;
wave_0_per_point25=
wave_0_per_point26=//set to 0 at beginning of frame
wave_0_per_point27=band3max = if( below(section,zerotest) , -1 , band3max);
wave_0_per_point28=band3min = if( below(section,zerotest) , 1 , band3min);
wave_0_per_point29=maxhold3 = if( below(sample ,1/512) , 0 , maxhold3 );
wave_0_per_point30=
wave_0_per_point31=//accumulate values
wave_0_per_point32=band3max = max(wave,band3max);
wave_0_per_point33=band3min = min(wave,band3min);
wave_0_per_point34=
wave_0_per_point35=//center max and min around 0 and return max value [range 0-1]
wave_0_per_point36=band3temp = if( above(section,onetest), band3max - ((band3min+band3max)*0.5) , band3temp );
wave_0_per_point37=
wave_0_per_point38=maxhold3 = if( above(section,onetest) , maxhold3 + band3temp , maxhold3 );
wave_0_per_point39=band3 = if( equal(sample,1) , maxhold3/segmentlength , band3 );
wave_0_per_point40=
wave_0_per_point41=//t3 = (band3 - (1/segmentlength)) / (1 - 1/segmentlength);
wave_0_per_point42=t3 = band3;
wave_0_per_point43=
wave_0_per_point44=//// 5th frequency band
wave_0_per_point45=//divide wave form over frame into subsections
wave_0_per_point46=segmentlength = 32;
wave_0_per_point47=section = (sample*segmentlength) - int(sample*segmentlength - 0.00001);
wave_0_per_point48=zerotest= (1/(512/segmentlength));
wave_0_per_point49=onetest =1 - zerotest;
wave_0_per_point50=
wave_0_per_point51=//set to 0 at beginning of frame
wave_0_per_point52=band5max = if( below(section,zerotest) , -1, band5max);
wave_0_per_point53=band5min = if( below(section,zerotest) , 1 , band5min);
wave_0_per_point54=maxhold5 = if( below(sample ,1/512) , 0 , maxhold5 );
wave_0_per_point55=
wave_0_per_point56=//accumulate values
wave_0_per_point57=band5max = max(wave,band5max);
wave_0_per_point58=band5min = min(wave,band5min);
wave_0_per_point59=
wave_0_per_point60=//center max and min around 0 and return max value [range 0-1]
wave_0_per_point61=band5temp = if( above(section,onetest) , band5max - ((band5min+band5max)*0.5) , band5temp );
wave_0_per_point62=
wave_0_per_point63=maxhold5 = if( above(section,onetest) , maxhold5 + band5temp , maxhold5 );
wave_0_per_point64=band5 = if( equal(sample,1) , maxhold5/segmentlength , band5 );
wave_0_per_point65=
wave_0_per_point66=//t5 = (band5 - (1/segmentlength)) / (1 - 1/segmentlength);
wave_0_per_point67=t5 = band5;
wave_0_per_point68=
wave_0_per_point69=//// 7th frequency band
wave_0_per_point70=//divide wave form over frame into subsections
wave_0_per_point71=segmentlength = 128;
wave_0_per_point72=section = (sample*segmentlength) - int(sample*segmentlength - 0.00001);
wave_0_per_point73=zerotest= (1/(512/segmentlength));
wave_0_per_point74=onetest =1 - zerotest;
wave_0_per_point75=
wave_0_per_point76=//set to 0 at beginning of frame
wave_0_per_point77=band7max = if( below(section,zerotest) , -1 , band7max);
wave_0_per_point78=band7min = if( below(section,zerotest) , 1 , band7min);
wave_0_per_point79=maxhold7 = if( below(sample ,1/512) , 0 , maxhold7 );
wave_0_per_point80=
wave_0_per_point81=//accumulate values
wave_0_per_point82=band7max = max(wave,band7max);
wave_0_per_point83=band7min = min(wave,band7min);
wave_0_per_point84=
wave_0_per_point85=//center max and min around 0 and return max value [range 0-1]
wave_0_per_point86=band7temp = if( above(section,onetest) , band7max - ((band7min+band7max)*0.5) , band7temp );
wave_0_per_point87=
wave_0_per_point88=maxhold7 = if( above(section,onetest) , maxhold7 + band7temp , maxhold7 );
wave_0_per_point89=band7 = if( equal(sample,1) , maxhold7/segmentlength , band7 );
wave_0_per_point90=
wave_0_per_point91=//t7 = (band7 - (1/segmentlength)) / (1 - 1/segmentlength);
wave_0_per_point92=t7 = band7;
wave_0_per_point93=
wave_0_per_point94=t1=t1*1.9;
wave_0_per_point95=t2=t2*2.8;
wave_0_per_point96=t3=t3*3.5;
wave_0_per_point97=t4=t4*5;
wave_0_per_point98=t5=t5*7;
wave_0_per_point99=t6=t6*12;
wave_0_per_point100=t7=t7*16;
wave_0_per_point101=t8=t8*29;
wave_0_per_point102=t1=pow(t1,2);
wave_0_per_point103=t2=pow(t2,2);
wave_0_per_point104=t3=pow(t3,2);
wave_0_per_point105=t4=pow(t4,2);
wave_0_per_point106=t5=pow(t5,2);
wave_0_per_point107=t6=pow(t6,2);
wave_0_per_point108=t7=pow(t7,2);
wave_0_per_point109=t8=pow(t8,2);
wave_0_per_point110=
wave_0_per_point111=
wave_0_per_point112=t1=max(t1-t3 , 0);
wave_0_per_point113=t3=max(t3-t5 , 0);
wave_0_per_point114=t5=max(t5-t7 , 0);
wave_0_per_point115=
wave_0_per_point116=q1=t1;q2=t2;q3=t3;q4=t4;q5=t5;q6=t6;q7=t7;q8=t8;
wave_0_per_point117=
wave_0_per_point118=x=sample;
wave_0_per_point119=y=0.001;
wave_0_per_point120=
wave_0_per_point121=
wave_0_per_point122=q1=t1;
wave_0_per_point123=q2=t3;
wave_0_per_point124=q3=t5;
wave_0_per_point125=q4=t7;
wave_0_per_point126=
wave_0_per_point127=r1=if( equal(division,1) , t1 , r1 );
wave_0_per_point128=r1=if( equal(division,2) , t3 , r1 );
wave_0_per_point129=r1=if( equal(division,3) , t5 , r1 );
wave_0_per_point130=r1=if( equal(division,4) , t7 , r1 );
wave_0_per_point131=
wave_0_per_point132=r1=min(r1,1);
wave_0_per_point133=r1=max(r1,0);
wave_0_per_point134=r=sin(sample*3.14 + time + 0.0)*0.5+0.5;
wave_0_per_point135=
wave_0_per_point136=g=sin(sample*3.14 + time + 2.1)*0.5+0.5;
wave_0_per_point137=
wave_0_per_point138=b=sin(sample*3.14 + time + 4.2)*0.5+0.5;
wave_0_per_point139=
wave_0_per_point140=a= ( sin(sample*6.283*4 + 4.74)*0.5+0.5  );
wave_0_per_point141=a=max(a - (1-r1) , 0) / r1;
wave_0_per_point142=a=pow( a*r1 , 1-r1*0.5);
wave_0_per_point143=a=0;
wave_0_per_point144=r=min( r * (1+r1) , 1);
wave_0_per_point145=g=min( g * (1+r1) , 1);
wave_0_per_point146=b=min( b * (1+r1) , 1);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.100
wavecode_1_g=1.000
wavecode_1_b=0.700
wavecode_1_a=1.000
wave_1_per_frame1=t1=sin(q5-q6)*0.5+0.5;
wave_1_per_frame2=t2=sin(q5-q7)*0.5+0.5;
wave_1_per_frame3=t3=sin(q6+q8)*0.5+0.5;
wave_1_per_frame4=
wave_1_per_frame5=t4=sin(q5+q6)*0.5+0.5;
wave_1_per_frame6=t5=sin(q5-q8)*0.5+0.5;
wave_1_per_frame7=t6=sin(q6-q7)*0.5+0.5;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.2;
wave_1_per_point3=tm=(q5+q6*q4*.0001) + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_1_per_point10=zp=0;
wave_1_per_point11=
wave_1_per_point12=//wrist movement;
wave_1_per_point13=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point14=
wave_1_per_point15=xq=xp;
wave_1_per_point16=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point17=yq=yp*sinang + zp*cosang;
wave_1_per_point18=zq=yp*cosang - zp*sinang;
wave_1_per_point19=yq=yp;
wave_1_per_point20=zq=zp;
wave_1_per_point21=
wave_1_per_point22=ang=tm*8;
wave_1_per_point23=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point24=xp=xq*sinang + yq*cosang;
wave_1_per_point25=yp=xq*cosang - yq*sinang;
wave_1_per_point26=zp=zq;
wave_1_per_point27=
wave_1_per_point28=//forearm movement;
wave_1_per_point29=zp=zp-0.3;
wave_1_per_point30=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point31=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point32=xq=xp;
wave_1_per_point33=yq=yp*sinang + zp*cosang;
wave_1_per_point34=zq=yp*cosang - zp*sinang;
wave_1_per_point35=
wave_1_per_point36=//upper arm twist
wave_1_per_point37=ang=-1.0 + cos(tm*3.1 + 0.5);
wave_1_per_point38=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point39=xp=xq*sinang + yq*cosang;
wave_1_per_point40=yp=xq*cosang - yq*sinang;
wave_1_per_point41=zp=zq;
wave_1_per_point42=
wave_1_per_point43=//upper arm outward;
wave_1_per_point44=zp=zp-0.35;
wave_1_per_point45=ang=cos(tm*2.3)*1.75 - 1.05;
wave_1_per_point46=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point47=xq=xp*sinang + zp*cosang;
wave_1_per_point48=yq=yp;
wave_1_per_point49=zq=xp*cosang - zp*sinang;
wave_1_per_point50=
wave_1_per_point51=//upper arm up down;
wave_1_per_point52=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point53=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point54=xp=xq;
wave_1_per_point55=yp=yq*cosang - zq*sinang;
wave_1_per_point56=zp=yq*sinang + zq*cosang;
wave_1_per_point57=
wave_1_per_point58=//xp=xq;yp=yq;zp=zq;
wave_1_per_point59=
wave_1_per_point60=
wave_1_per_point61=//project into screenspace and draw on screen
wave_1_per_point62=zp=zp+2;
wave_1_per_point63=xs=xp/zp;
wave_1_per_point64=ys=yp/zp;
wave_1_per_point65=
wave_1_per_point66=x=xs+0.5;
wave_1_per_point67=y=ys*1.3+0.5;
wave_1_per_point68=
wave_1_per_point69=
wave_1_per_point70=a=(1-sample);
wave_1_per_point71=
wave_1_per_point72=b=b+pow(1-sample,2)*0.3;
wave_1_per_point73=
wave_1_per_point74=
wave_1_per_point75=
wave_1_per_point76=r1=t1;
wave_1_per_point77=g1=t2;
wave_1_per_point78=b1=t3;
wave_1_per_point79=r2=t4;
wave_1_per_point80=g2=t5;
wave_1_per_point81=b2=t6;
wave_1_per_point82=
wave_1_per_point83=r=r1*flip + r2*(1-flip);
wave_1_per_point84=g=g1*flip + g2*(1-flip);
wave_1_per_point85=b=b1*flip + b2*(1-flip);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.200
wavecode_2_g=1.000
wavecode_2_b=0.600
wavecode_2_a=1.000
wave_2_per_frame1=t1=sin(q6/q5)*0.5+0.5;
wave_2_per_frame2=t2=sin(q6-q7)*0.5+0.5;
wave_2_per_frame3=t3=sin(q5+q8)*0.5+0.5;
wave_2_per_frame4=
wave_2_per_frame5=t4=sin(q7+q6)*0.5+0.5;
wave_2_per_frame6=t5=sin(q5-q6)*0.5+0.5;
wave_2_per_frame7=t6=sin(q8-q5)*0.5+0.5;
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=phs=-sample * 0.2;
wave_2_per_point3=tm=(q6+q5*q4*.0001) + phs;
wave_2_per_point4=
wave_2_per_point5=flip=flip+1;
wave_2_per_point6=flip=flip*below(flip,2);
wave_2_per_point7=
wave_2_per_point8=xp=0;
wave_2_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;
wave_2_per_point10=yp=-yp;
wave_2_per_point11=zp=0;
wave_2_per_point12=
wave_2_per_point13=//wrist movement;
wave_2_per_point14=ang=sin(tm*2)*0.5 +0.5;
wave_2_per_point15=
wave_2_per_point16=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point17=xq=xp;
wave_2_per_point18=yq=yp*sinang + zp*cosang;
wave_2_per_point19=zq=yp*cosang - zp*sinang;
wave_2_per_point20=yq=yp;
wave_2_per_point21=zq=zp;
wave_2_per_point22=
wave_2_per_point23=ang=tm*8;
wave_2_per_point24=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point25=xp=xq*sinang + yq*cosang;
wave_2_per_point26=yp=xq*cosang - yq*sinang;
wave_2_per_point27=zp=zq;
wave_2_per_point28=
wave_2_per_point29=//forearm movement;
wave_2_per_point30=zp=zp-0.3;
wave_2_per_point31=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_2_per_point32=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point33=xq=xp;
wave_2_per_point34=yq=yp*sinang + zp*cosang;
wave_2_per_point35=zq=yp*cosang - zp*sinang;
wave_2_per_point36=
wave_2_per_point37=//upper arm twist
wave_2_per_point38=ang=-1.0 + cos(tm*3.1 + 0.5);
wave_2_per_point39=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point40=xp=xq*sinang + yq*cosang;
wave_2_per_point41=yp=xq*cosang - yq*sinang;
wave_2_per_point42=zp=zq;
wave_2_per_point43=
wave_2_per_point44=//upper arm outward;
wave_2_per_point45=zp=zp-0.35;
wave_2_per_point46=ang=cos(tm*2.3)*1.75 - 1.05;
wave_2_per_point47=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point48=xq=xp*sinang + zp*cosang;
wave_2_per_point49=yq=yp;
wave_2_per_point50=zq=xp*cosang - zp*sinang;
wave_2_per_point51=
wave_2_per_point52=//upper arm up down;
wave_2_per_point53=ang=cos(tm)*0.5 - 0.5;
wave_2_per_point54=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point55=xp=xq;
wave_2_per_point56=yp=yq*cosang - zq*sinang;
wave_2_per_point57=zp=yq*sinang + zq*cosang;
wave_2_per_point58=
wave_2_per_point59=//xp=xq;yp=yq;zp=zq;
wave_2_per_point60=
wave_2_per_point61=
wave_2_per_point62=//project into screenspace and draw on screen
wave_2_per_point63=zp=zp+2;
wave_2_per_point64=xs=xp/zp;
wave_2_per_point65=ys=yp/zp;
wave_2_per_point66=
wave_2_per_point67=x=xs+0.5;
wave_2_per_point68=y=ys*1.3+0.5;
wave_2_per_point69=
wave_2_per_point70=
wave_2_per_point71=a=(1-sample);
wave_2_per_point72=
wave_2_per_point73=
wave_2_per_point74=b=b+pow(1-sample,2)*0.3;
wave_2_per_point75=
wave_2_per_point76=r1=t1;
wave_2_per_point77=g1=t2;
wave_2_per_point78=b1=t3;
wave_2_per_point79=r2=t4;
wave_2_per_point80=g2=t5;
wave_2_per_point81=b2=t6;
wave_2_per_point82=
wave_2_per_point83=r=r1*flip + r2*(1-flip);
wave_2_per_point84=g=g1*flip + g2*(1-flip);
wave_2_per_point85=b=b1*flip + b2*(1-flip);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.500
wavecode_3_a=0.500
wave_3_init1=t1=0
wave_3_per_point1=xs=sin(sample*6.28)*0.2;
wave_3_per_point2=ys=cos(sample*6.28)*0.25;
wave_3_per_point3=xs=xs*0.7 + 0.5;
wave_3_per_point4=ys=ys*0.7 + 0.5;
wave_3_per_point5=xs=min(xs,0.958);
wave_3_per_point6=xs=max(xs,0.042);
wave_3_per_point7=ys=min(ys,0.988);
wave_3_per_point8=ys=max(ys,0.012);
wave_3_per_point9=x=xs;y=ys;
wave_3_per_point10=
wave_3_per_point11=n2=abs((sample*6.283)-3.1415);
wave_3_per_point12=
wave_3_per_point13=r=sin(n2+time)*0.5+0.5;
wave_3_per_point14=g=sin(n2+2.1+time)*0.5+0.5;
wave_3_per_point15=b=sin(n2+4.2+time)*0.5+0.5;
shapecode_0_enabled=0
shapecode_0_sides=6
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.600
shapecode_0_y=0.800
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.16845
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.500
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=rad=sin((q8-q5)*q4*.01)*.5+.5;
shape_0_per_frame2=x=.1*rad;
shape_0_per_frame3=
shape_0_per_frame4=//tex_capture=if(above(rad-lrad,0),1,0);
shape_0_per_frame5=
shape_0_per_frame6=lrad=rad;
shape_0_per_frame7=ang=sin(time);
shape_0_per_frame8=tex_zoom=bass+2;
shapecode_1_enabled=0
shapecode_1_sides=6
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.750
shapecode_1_y=0.800
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.33469
shapecode_1_r=1.000
shapecode_1_g=0.400
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=rad=sin((q7-q6)*q4*.01)*.5+.5;
shape_1_per_frame2=x=1-.1*rad;
shape_1_per_frame3=
shape_1_per_frame4=//tex_capture=if(above(rad-lrad,0),1,0);
shape_1_per_frame5=
shape_1_per_frame6=lrad=rad;
shape_1_per_frame7=ang=cos(time);
shape_1_per_frame8=//tex_zoom=bass*0.9+1;
shapecode_2_enabled=0
shapecode_2_sides=6
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.01000
shapecode_2_r=0.300
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=rad=sin((q5-q8)*q4*.01)*.5+.5;
shape_2_per_frame2=y=.1*rad;
shape_2_per_frame3=
shape_2_per_frame4=//tex_capture=if(above(rad-lrad,0),1,0);
shape_2_per_frame5=
shape_2_per_frame6=//lrad=rad;
shape_2_per_frame7=ang=sin(time);
shape_2_per_frame8=tex_zoom=sin(time*0.1);
shapecode_3_enabled=1
shapecode_3_sides=58
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.40271
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=2.47310
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=1.000
shape_3_per_frame1=//ang=cos(time/100);
shape_3_per_frame2=tex_ang=0.008;
per_frame_init_1=db=.001;
per_frame_init_2=dt=.001;
per_frame_init_3=avgdb=bass-bass_att;
per_frame_init_4=avgdt=treb-treb_att;
per_frame_init_5=lbass=0;
per_frame_init_6=ltreb=0;
per_frame_init_7=
per_frame_init_8=avgbbeatrate=2;
per_frame_init_9=beatb=0;
per_frame_init_10=beatb2=0;
per_frame_init_11=beat
per_frame_init_12=rawbeatb=0;
per_frame_init_13=lbbtime=time-1;
per_frame_init_14=avgdb=.01;
per_frame_init_15=vol=0;
per_frame_init_16=avgvol=1;
per_frame_init_17=ph=0;
per_frame_init_18=phase=0;
per_frame_init_19=bool=0;
per_frame_init_20=const=.01;
per_frame_init_21=mtime=100+bass_att*1000;
per_frame_init_22=mtime2=100+treb_att*1000;
per_frame_init_23=mtime3=100+bass*1000;
per_frame_init_24=mtime4=100+mid*1000;
per_frame_1=decay=1;
per_frame_2=zoom=1.000;
per_frame_3=warp=0;
per_frame_4=wrap=1;
per_frame_5=
per_frame_6=monitor=w1;
per_frame_7=
per_frame_8=w1=0;w2=0;w3=0;w4=0;w5=0;w6=0;w7=0;
per_frame_9=
per_frame_10=
per_frame_11=db=((w1+w2)-lbass)*fps;
per_frame_12=dt=((w4+w3)-ltreb)*fps;
per_frame_13=
per_frame_14=ltreb=w4+w3;
per_frame_15=lbass=w1+w2;
per_frame_16=
per_frame_17=avgdb=avgdb*.9+abs(db)*.1;
per_frame_18=avgdt=avgdt*.9+abs(dt)*.1;
per_frame_19=
per_frame_20=//beatdection
per_frame_21=rawbeatb=above(time-lbbtime,avgbbeatrate*.75);
per_frame_22=beatb=rawbeatb*above(abs(dt),avgdt*3);
per_frame_23=beatb2=rawbeatb*above(abs(db),avgdb*3);
per_frame_24=beat=max(beatb2,beatb);
per_frame_25=
per_frame_26=//beatrate calc
per_frame_27=//avgbbeatrate=beatb2*(avgbbeatrate*.9+(time-lbbtime2)*.1)+(1-beatb2)*(avgbbeatrate+(3-avgbbeatrate)*.001);
per_frame_28=//avgbbeatrate=beatb*(avgbbeatrate*.99+(time-lbbtime)*.01)+(1-beatb)*(avgbbeatrate+(3-avgbbeatrate)*.00001);
per_frame_29=avgbbeatrate=beat*(avgbbeatrate*.99+(time-lbbtime)*.01)+(1-beat)*(avgbbeatrate+(3-avgbbeatrate)*.00001);
per_frame_30=//lbbtime2=time*beatb2+(1-beatb2)*lbbtime2;
per_frame_31=lbbtime=time*beat+(1-beat)*lbbtime;
per_frame_32=
per_frame_33=ph=(time-lbbtime)*(60/avgbbeatrate)*const;
per_frame_34=phase=max(min( ph, 1 ),0);
per_frame_35=const=const*(1-beatb2)+beatb2*( const+ (.001*bool) );
per_frame_36=bool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);
per_frame_37=
per_frame_38=
per_frame_39=bc=bc+beatb;
per_frame_40=zoom=1+below(w1,0);
per_frame_41=vol=0;//(beatb*(w1+w4+w2+w3)*.01);
per_frame_42=avgvol=avgvol*.999+vol*.01;
per_frame_43=monitor=avgvol;
per_frame_44=mtime=mtime+(min(avgdt*.05,.5)+avgvol)*(1/fps);
per_frame_45=mtime2=mtime2+(min(avgdb*.05,.5)+avgvol)*(1/fps);
per_frame_46=mtime3=mtime3+(beatb)*db*(1/fps);
per_frame_47=mtime4=mtime4+(beatb2)*dt*(1/fps);
per_frame_48=monitor=60/avgbbeatrate;
per_frame_49=
per_frame_50=//q2=(sin(mtime)*.5+.5);
per_frame_51=//q2=phase;
per_frame_52=q1=beatb;
per_frame_53=q2=beatb2;
per_frame_54=q3=phase;
per_frame_55=q4=60/avgbbeatrate;
per_frame_56=q5=mtime;
per_frame_57=q6=mtime2;
per_frame_58=q7=mtime3;
per_frame_59=q8=mtime4;
per_frame_60=//zoom=1+sin(q7)*.1;
per_frame_61=
per_frame_62=
per_frame_63=decay = 1;
per_frame_64=
per_frame_65=//uncommenting this block will make decay start at 0 when preset begins, and rise to the "max_decay" value
per_frame_66=//max_decay = 0.97;
per_frame_67=//dcsp = dcsp + 0.007*(75/fps);
per_frame_68=//dcsp = min(dcsp , max_decay);
per_frame_69=//decay = dcsp;
per_frame_70=
per_frame_71=//volume, and volume based time. framerate adjusted
per_frame_72=vol = (bass+mid+treb)*0.25;
per_frame_73=vol = vol*vol;
per_frame_74=
per_frame_75=mtime = mtime + vol * 0.01 * (75/fps);
per_frame_76=
per_frame_77=q1 = vol;
per_frame_78=q2 = mtime;
per_frame_79=
per_frame_80=//non bass volume
per_frame_81=vol2 = (mid+treb)*0.33;
per_frame_82=vol2 = vol2*vol2;
per_frame_83=
per_frame_84=m2time = m2time + vol2 * 0.01 * (75/fps);
per_frame_85=
per_frame_86=q3 = vol2;
per_frame_87=q4 = m2time;
per_frame_88=
per_frame_89=
per_frame_90=//krash's beat detection code
per_frame_91=volume = 0.3*(bass+mid+att);
per_frame_92=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_93=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_94=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_95=peakbass_att = max(bass_att,peakbass_att);
per_frame_96=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_97=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);
per_frame_98=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_99=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_100=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_101=beatcounter = beatcounter + beat;
per_frame_102=mode = if(beat*equal(beatcounter%2,0),1-mode,mode);
per_frame_103=flip = 2*mode-1;
per_frame_104=
per_frame_105=beatdrop = if( equal(beatdrop,0) , beat , max(beatdrop - 0.02*(75/fps) , 0) );
per_frame_106=
per_frame_107=q7 = beatdrop;
per_frame_108=q8 = flip;
per_frame_109=
per_frame_110=
per_frame_111=
per_frame_112=
per_frame_113=q6 = 1.0 + 0.005;//beatdrop*0.03;
per_frame_114=
per_frame_115=zoom = 1;
per_frame_116=sx = -q6;
per_frame_117=sy = q6;
per_frame_118=
per_frame_119=warp=0;
per_frame_120=
per_frame_121=//dx = sin(time/4)*0.15;
per_frame_122=cx = 0.5 + dx ;
per_frame_123=
per_frame_124=gamma = 1 + beatdrop*beatdrop;
per_frame_125=q29=vol*8;
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=
per_pixel_5=//zoom = zoom + 0.2*abs(0.3*cos(4*rad))*cos(12*ang);
per_pixel_6=sx = sx - 13*dx_r*sin(2*sin(6*rad)*2*cos(6*rad));
per_pixel_7=//sy = sy - 13*dy_r*sin(2*cos(6*rad)*2*sin(6*rad));
per_pixel_8=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_9=//dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_10=//dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_11=
per_pixel_12=
per_pixel_13=tg1 = abs(sin(time));
per_pixel_14=tg2 = 12*above(tg1,0.8) + 4*below(tg1,0.2) +
per_pixel_15=6*above(tg1,0.2)*below(tg1,0.4) + 8*above(tg1,0.4)*below(tg1,0.6) +
per_pixel_16=10*above(tg1,0.6)*below(tg1,0.8);
per_pixel_17=tg3 = if(equal(thresh,2),tg2,tg3);
per_pixel_18=zoom = zoom + 0.6-(1.5*abs( 25*dx_r*cos(tg3*ang) - sin(22*dy_r*rad)*0.2-rad));
per_pixel_19=zoom= sin(zoom*8)/3+2;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`
warp_5=`float zm = q5;
warp_6=`float2 cen = float2(q11,q12);
warp_7=`float2 uvo = (uv_orig-cen)*zm + cen;
warp_8=`
warp_9=`float2 uvm = uv_orig;
warp_10=`
warp_11=`float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_12=`float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
warp_13=`
warp_14=`ret.xy = tex2D( sampler_pw_main,uvo).xy;
warp_15=`ret.xy = (ret.xy-cen)/zm+cen;
warp_16=`
warp_17=`float2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;
warp_18=`float3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_19=`
warp_20=`rsamp.xy = (rsamp.xy-cen)/zm+cen;
warp_21=`
warp_22=`float4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);
warp_23=`float l1 = length(len.xy);
warp_24=`if (l1 > length(len.zw)) ret.xy = rsamp.xy;
warp_25=`
warp_26=`uv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;
warp_27=`rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_28=`rsamp-=roam_sin.wzy*roam_cos.zxy;
warp_29=`rsamp.xy = (rsamp.xy-cen)/zm+cen;
warp_30=`len.zw = rsamp.xy - uvm.xy;
warp_31=`if (l1 > length(len.zw)) ret.xy = rsamp.xy;
warp_32=`
warp_33=`//uv2 = uv_orig  + (noiseVal.zw-.5)*6*pixelsize;
warp_34=`//rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_35=`//len = abs(float4(ret.xy,rsamp.xy) - uvm.xyxy);
warp_36=`//if (length(len.xy) > length(len.zw)) ret.xy = rsamp.xy;
warp_37=`
warp_38=`//float2 uvo = (uv_orig-cen)*zm + cen;
warp_39=`//if (q5) {
warp_40=`//ret.xy = tex2D( sampler_pw_main,uvo).xy;
warp_41=`//}
warp_42=`
warp_43=`ret.z = 0;
warp_44=`
warp_45=`}
comp_1=`float3 reta;
comp_2=`float3 retb;
comp_3=`float3 retc;
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`
comp_8=`
comp_9=`
comp_10=`uv = 0.5 + (uv-0.5)*0.98;
comp_11=`    float2 d = texsize.zw*4;
comp_12=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_13=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_14=`
comp_15=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_16=`                                        + time*float3(0,0,1)*0.2 );
comp_17=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_18=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_19=`ret-=roam_sin.zyx*roam_cos.ywx;
comp_20=`ret *= lum(noise)*3; 
comp_21=`ret = pow(ret,0.5);
comp_22=`
comp_23=`
comp_24=`
comp_25=`float2 uv2 = uv*0.25;
comp_26=`float3 col = 0;
comp_27=`float2 uv3 = uv2;
comp_28=`for(int i = 0; i<16; i++){
comp_29=`    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);
comp_30=`    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));
comp_31=`
comp_32=`
comp_33=`}
comp_34=`
comp_35=`
comp_36=`reta = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));
comp_37=`retb = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));
comp_38=`    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);
comp_39=`    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);
comp_40=`    float3 g = normalize(float3(gx, gy, .04));
comp_41=`
comp_42=`    reta = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);
comp_43=`    retb = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);
comp_44=`
comp_45=`//retc = lerp(ret,retb,(sin(time)*100));
comp_46=`ret = lerp(ret,reta,q20);
comp_47=`retc = lerp(ret,retb,(sin(time)*100));
comp_48=`ret = lerp(ret,retc,q20);
comp_49=`
comp_50=`ret = 1 - ret;
comp_51=`ret *= treb_att * .5;
comp_52=`}

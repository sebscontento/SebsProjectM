MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=0
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.320
fDecay=1.000
fVideoEchoZoom=1.220
fVideoEchoAlpha=0.150
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.721
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00001
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.22480
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=r = q1;
wave_0_per_point2=g = q2;
wave_0_per_point3=b = q3;
wave_0_per_point4=
wave_0_per_point5=x = x + 0.42*cos(1-sin(3.2*time));
wave_0_per_point6=y = y + 0.47*sin(0.72*time-cos(1.1*time));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.22480
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=r = 1-abs(q1);
wave_1_per_point2=g = 1-abs(q2);
wave_1_per_point3=b = 1-abs(q3);
wave_1_per_point4=
wave_1_per_point5=y = y + 0.42*cos(1-sin(1.82*time));
wave_1_per_point6=x = x + 0.47*sin(0.72*time-cos(1.72*time));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.22480
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=r = 1-abs(q2);
wave_2_per_point2=g = q3;
wave_2_per_point3=b = 1-abs(0.5*q2 + 0.5*q1);
wave_2_per_point4=
wave_2_per_point5=x = x + 0.42*sin(1-cos(2.12*time));
wave_2_per_point6=y = y + 0.47*cos(0.72*time-sin(2.7*time));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=0.22480
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=r = q3;
wave_3_per_point2=g = q1;
wave_3_per_point3=b = q2;
wave_3_per_point4=
wave_3_per_point5=y = y + 0.42*sin(1-cos(1.72*time));
wave_3_per_point6=x = x + 0.47*cos(0.72*time-sin(1.2*time));
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.33004
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.64463
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=shpt = above(bass_att,shpt)*2+(1-above(bass_att,shpt))*((shpt-1.3)*0.96+1.3);
shape_0_per_frame2=sdx_r = equal(shpt,2)*0.015*sin(5*time)+(1-equal(shpt,2))*sdx_r;
shape_0_per_frame3=sdy_r = equal(shpt,2)*0.015*sin(6*time)+(1-equal(shpt,2))*sdy_r;
shape_0_per_frame4=
shape_0_per_frame5=a1x = .5 + 0.42*cos(1-sin(3.2*time));
shape_0_per_frame6=a1y = .5 + 0.47*sin(0.72*time-cos(1.1*time));
shape_0_per_frame7=a2y = .5 + 0.42*cos(1-sin(1.82*time));
shape_0_per_frame8=a2x = .5 + 0.47*sin(0.72*time-cos(1.72*time));
shape_0_per_frame9=a3x = .5 + 0.42*sin(1-cos(2.12*time));
shape_0_per_frame10=a3y = .5 + 0.47*cos(0.72*time-sin(2.7*time));
shape_0_per_frame11=a4y = .5 + 0.42*sin(1-cos(1.72*time));
shape_0_per_frame12=a4x = .5 + 0.47*cos(0.72*time-sin(1.2*time));
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=sg1 = abs(sin(time));
shape_0_per_frame16=sg2 = a1x*above(sg1,0.75) + a2x*below(sg1,0.25) + a3x*above(sg1,0.25)*below(sg1,0.5)+
shape_0_per_frame17=a4x*above(sg1,0.5)*below(sg1,0.75);
shape_0_per_frame18=sg3 = if(above(shpt,1.3),sg2,sg3);
shape_0_per_frame19=sg4 = a1y*above(sg1,0.75) + a2y*below(sg1,0.25) + a3y*above(sg1,0.25)*below(sg1,0.5)+
shape_0_per_frame20=a4y*above(sg1,0.5)*below(sg1,0.75);
shape_0_per_frame21=sg5 = if(above(shpt,1.3),sg4,sg5);
shape_0_per_frame22=
shape_0_per_frame23=
shape_0_per_frame24=x = sg3;
shape_0_per_frame25=y = sg5;
shape_0_per_frame26=border_r = q1;
shape_0_per_frame27=border_b = q2;
shape_0_per_frame28=border_g = q3;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.15774
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang = 1.571;
shape_2_per_frame2=x = int(rand(11))*.1111;
shape_2_per_frame3=y = int(rand(11))*.4;
shape_2_per_frame4=
shape_2_per_frame5=r = int(rand(100))*.01;
shape_2_per_frame6=g = int(rand(100))*.01;
shape_2_per_frame7=b = int(rand(100))*.01;
shape_2_per_frame8=r2 = int(rand(100))*.01;
shape_2_per_frame9=g2 = int(rand(100))*.01;
shape_2_per_frame10=b2 = int(rand(100))*.01;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_r = 0.5 + 0.5*sin(1.6*time);
per_frame_2=wave_g = 0.5 + 0.5*sin(4.1*time);
per_frame_3=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_4=warp = 0;
per_frame_5=pfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);
per_frame_6=pfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;
per_frame_7=pfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;
per_frame_8=rg1 = abs(sin(time));
per_frame_9=rg2 = 12*pfdx_r*above(rg1,0.5) + 12*pfdy_r*below(rg1,0.5);
per_frame_10=rg3 = if(equal(pfthresh,2),rg2,rg3);
per_frame_11=
per_frame_12=q1 = wave_r;
per_frame_13=q2 = wave_g;
per_frame_14=q3 = wave_b;
per_frame_15=
per_frame_16=//lines below belong to the composite shader (rotated mirror)
per_frame_17=
per_frame_18=
per_frame_19=//flexi's concise beat detection
per_frame_20=vol = bass*8 + mid*5 + treb*3;
per_frame_21=m = m*0.97 + vol*0.08;
per_frame_22=monitor = vol;
per_frame_23=beat = above(vol,res)*above(vol,m)*above(vol,16);
per_frame_24=diff = (1-beat)*diff + beat*(vol-res);
per_frame_25=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
per_frame_26=res = max(0,res);
per_frame_27=
per_frame_28=w = if(beat, int(rand(4096))/1024*asin(1),w); // on beat: randomize pos and angle of the mirror
per_frame_29=xx = if(beat, 0.1 + int(rand(800))/1000, xx);
per_frame_30=yy = if(beat, 0.1 + int(rand(800))/1000, yy);
per_frame_31=
per_frame_32=//geiss' custom beat detection code: (fps-independent; quiet songs don't freak out)
per_frame_33=decay_rate = pow(0.98, fps);  // lower # = more hasty to declare a beat
per_frame_34=min_att    = 2.5;               // lower # = quieter songs can declare beats
per_frame_35=decay_to   = 1.0;               // lower # = more hasty to declare a beat
per_frame_36=beat =           bass/max(min_att,bass_att);
per_frame_37=beat = max(beat, mid /max(min_att,mid_att ));
per_frame_38=beat = max(beat, treb/max(min_att,treb_att));
per_frame_39=beat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );
per_frame_40=beat_level     = (beat - prev_beat - 0.07)*24;
per_frame_41=is_beat = above(beat_level, 0.5);
per_frame_42=prev_beat = beat;
per_frame_43=
per_frame_44=w  = if(is_beat, w + (int(rand(256))-128)/1024, w);  // on beat: random increment of pos and angle
per_frame_45=xx = if(is_beat, xx + (int(rand(256))-128)/4096, xx);
per_frame_46=yy = if(is_beat, yy + (int(rand(256))-128)/4096, yy);
per_frame_47=
per_frame_48=
per_frame_49=q11 = sin(w);
per_frame_50=q12 = cos(w);
per_frame_51=q13 = xx;
per_frame_52=q14 = yy;
per_frame_53=q15 = 4;
per_frame_54=q16 = 0.06;
per_frame_55=q17 = sin(-w);
per_frame_56=q18 = cos(-w);
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=tg1 = abs(sin(time));
per_pixel_5=tg2 = 12*dx_r*above(tg1,0.5) + 12*dy_r*below(tg1,0.5);
per_pixel_6=tg3 = if(equal(thresh,2),tg2,tg3);
per_pixel_7=
per_pixel_8=
per_pixel_9=zoom = zoom - 0.01;
per_pixel_10=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_11=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_12=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_13=warp = warp + above(x,0.05 + 0.5*sin(bass_att))*below(x,0.1 + 0.5*sin(bass_att))
per_pixel_14=*below(y,0.4)*5;
per_pixel_15=warp = warp + below(x,0.95 - 0.5*sin(treb_att))*above(x,0.9 - 0.5*sin(treb_att))*
per_pixel_16=above(y,0.6)*5;
per_pixel_17=warp = warp + above(y,0.05 + 0.5*sin(mid_att))*below(y,0.1 + 0.5*sin(mid_att))
per_pixel_18=*above(x,0.6)*5;
per_pixel_19=warp = warp + below(y,0.95 - 0.5*cos(mid_att))*above(y,0.9 - 0.5*cos(mid_att))*
per_pixel_20=below(x,0.4)*5;
per_pixel_21=zoom = zoom - below(rad,0.05)*0.5;
per_pixel_22=rot = rot + below(rad,0.2)*0.1;
per_pixel_23=zoom = zoom + 0.005*above(rad,0.2)*(bass_att);
per_pixel_24=zoom = zoom - 0.05*below(rad,0.2);
per_pixel_25=kdx=dx;//////////////////////////////////////////
per_pixel_26=kdy=dy;
per_pixel_27=ksx=sx;
per_pixel_28=ksy=sy;
per_pixel_29=krt=rot;
per_pixel_30=kzm=zoom;
per_pixel_31=kcx=cx;
per_pixel_32=kcy=cy;
per_pixel_33=kwp=warp;
per_pixel_34=
per_pixel_35=dx=0;
per_pixel_36=dy=0;
per_pixel_37=sx=1;
per_pixel_38=sy=1;
per_pixel_39=rot=0;
per_pixel_40=zoom=1;
per_pixel_41=cx=.5;
per_pixel_42=cy=.5;
per_pixel_43=warp=0;/////////////////////////////////////////////////////
per_pixel_44=
per_pixel_45=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_46=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_47=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_48=
per_pixel_49=dy = dy + dy_r*8*(0.25*cos(12*rad)+0.5*sin((12*rad)*(rad*cos(thresh*time)-rad))
per_pixel_50=*rad)*cos(12*ang);
per_pixel_51=dx = dx + dy_r*8*(0.25*sin(12*rad)+0.5*cos((12*rad)*(rad*cos(thresh*time)-rad))
per_pixel_52=*rad)*sin(12*ang);
per_pixel_53=///////////////////////////////////////
per_pixel_54=cr1=80*.01;
per_pixel_55=cr2=0*.01;
per_pixel_56=crx=cr2-cr1;
per_pixel_57=ci=rad;
per_pixel_58=cb=.25  ;
per_pixel_59=crs=2;
per_pixel_60=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_61=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_62=jx1=crr;
per_pixel_63=kx1=1-crr;
per_pixel_64=
per_pixel_65=jdx=dx;
per_pixel_66=jdy=dy;
per_pixel_67=jsx=sx;
per_pixel_68=jsy=sy;
per_pixel_69=jrt=rot;
per_pixel_70=jzm=zoom;
per_pixel_71=jcx=cx;
per_pixel_72=jcy=cy;
per_pixel_73=jwp=warp;
per_pixel_74=
per_pixel_75=dx=(jx1*jdx+kx1*kdx);
per_pixel_76=dy=(jx1*jdy+kx1*kdy);
per_pixel_77=sx=(jx1*jsx+kx1*ksx);
per_pixel_78=sy=(jx1*jsy+kx1*ksy);
per_pixel_79=rot=(jx1*jrt+kx1*krt);
per_pixel_80=zoom=(jx1*jzm+kx1*kzm);
per_pixel_81=cx=(jx1*jcx+kx1*kcx);
per_pixel_82=cy=(jx1*jcy+kx1*kcy);
per_pixel_83=warp=(jx1*jwp+kx1*kwp);////////////////////////////////////////////////////
per_pixel_84=
comp_1=`shader_body
comp_2=`{
comp_3=`float2 cntr = float2(q13,q14);
comp_4=`float sin = q11;
comp_5=`float cos = q12;
comp_6=`float scale = q15;
comp_7=`
comp_8=`float2 uv_r = (uv-cntr)*aspect.xy;
comp_9=`       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation
comp_10=`       uv_r = cntr + uv_r*aspect.zw;
comp_11=`       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
comp_12=`
comp_13=` sin = q17;
comp_14=` cos = q18;
comp_15=`
comp_16=`float2 uv_rr = (uv_r-cntr)*aspect.xy;
comp_17=`       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation
comp_18=`       uv_rr = cntr + (uv_rr-cntr)*aspect.zw*q16;
comp_19=`       uv_rr = 1.0 - abs( frac( uv_rr * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
comp_20=`
comp_21=`ret = pow(tex2D(sampler_fc_main, uv_rr)+0.15,8);
comp_22=`ret = pow(abs(GetBlur3(uv_rr)-GetPixel(uv_rr))*3+0.1,1.5);
comp_23=`}

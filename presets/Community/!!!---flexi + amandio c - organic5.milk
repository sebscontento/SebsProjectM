MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.955
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.583
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.92178
fShader=1.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=1.000
wave_b=0.350
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=a = q7;
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=a = q7;
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=a = q7;
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=a = q7;
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=zoom = 1;
per_frame_2=warp = 0;
per_frame_3=wave_a = 0;
per_frame_4=
per_frame_5=// elastic thread code
per_frame_6=
per_frame_7=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_8=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_9=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_10=x1 = 0.5 + (xx1-xx2)*2;
per_frame_11=y1 = 0.4 + yy1*1.5;
per_frame_12=dt = 0.03/fps;
per_frame_13=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_14=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_15=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_16=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_17=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_18=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_19=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_20=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_21=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_22=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_23=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_24=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_25=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_26=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_27=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_28=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_29=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_30=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_31=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_32=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_33=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_34=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_35=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_36=q9 = 1/aspectx;
per_frame_37=q10 = 1/aspecty;
per_frame_38=q11 = aspectx;
per_frame_39=q12 = aspecty;
per_frame_40=q13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;
per_frame_41=q14 = atan2(vx4,vy4);
per_frame_42=
per_frame_43=
per_pixel_1=x = 0.5 + (x-0.5)*q11;
per_pixel_2=y = 0.5 + (y-0.5)*q12;
per_pixel_3=dir = -q14*1 + asin(1)*1;
per_pixel_4=
per_pixel_5=velocity = q13;
per_pixel_6=strength = 100;
per_pixel_7=size = 0.07;
per_pixel_8=
per_pixel_9=xx = q4;
per_pixel_10=yy = 1-q8;
per_pixel_11=
per_pixel_12=
per_pixel_13=x1 = xx   +cos(dir+1.5708)*size;
per_pixel_14=y1 = yy -sin(dir+1.5708)*size;
per_pixel_15=
per_pixel_16=x2 = xx   -cos(dir+1.5708)*size;
per_pixel_17=y2 = yy +sin(dir+1.5708)*size;
per_pixel_18=
per_pixel_19=d1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;
per_pixel_20=si1 = 1- 1/(1+pow(2,-d1*100));
per_pixel_21=
per_pixel_22=d2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;
per_pixel_23=si2 = 1- 1/(1+pow(2,-d2*100));
per_pixel_24=
per_pixel_25=dx = (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;
per_pixel_26=dy = (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;
warp_1=`float2 d, uv_y, uv_z;
warp_2=`float3 dx, dy;
warp_3=`
warp_4=`shader_body
warp_5=`{
warp_6=`
warp_7=`   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_8=`   float3 rand = tex2D(sampler_noise_lq, dither_uv).xyz-0.5;
warp_9=`
warp_10=`   d = texsize.zw*4;
warp_11=`   dx = GetBlur1(uv_orig + float2(1,0)*d) - GetBlur1(uv_orig - float2(1,0)*d);
warp_12=`   dy = GetBlur1(uv_orig + float2(0,1)*d) - GetBlur1(uv_orig - float2(0,1)*d);
warp_13=`   
warp_14=`   d = lerp(uv_orig,uv,1);
warp_15=`   uv_y = d - float2(dx.y,dy.y)*texsize.zw*6;
warp_16=`   uv_z = d - float2(dx.z,dy.z)*texsize.zw*6;
warp_17=`
warp_18=`
warp_19=`   ret.y = GetPixel(uv_y).y - 0.008 + (1-GetPixel(uv_orig).x)*0.018;
warp_20=`   ret.z = GetPixel(uv_z).z - 0.008 + (0+GetPixel(uv_orig).x)*0.018;
warp_21=`
warp_22=`    ret.x = tex2D( sampler_fc_main, uv+rand*texsize.zw*.5 ).x;
warp_23=`    ret.x += (ret.x - GetBlur3(uv).x)*0.15 + rand*0.0042;
warp_24=`ret -= .075;
warp_25=`}
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 CamPos = float3(q4,q5,q6);
comp_6=`static const float myzoom = q7;
comp_7=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_8=`static const float3 col_struc =  float3(1,.7,.3) + .2*(rand_preset.xyz-.5);
comp_9=`static float2 center = float2 (q1,q2);
comp_10=`
comp_11=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_12=`float GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}
comp_13=`float GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}
comp_14=`float GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}
comp_15=`
comp_16=`float MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal
comp_17=`  tmp = GetDist(uvi);
comp_18=`  tmp = min(tmp,GetDistB2(uvi)*1) ;
comp_19=`  return tmp;}
comp_20=`
comp_21=`sampler sampler_pw_noise_lq;
comp_22=`
comp_23=`float3 neu, ret1;
comp_24=`float2 rs2,rs0,rss,uv2;
comp_25=`float ang2,c,s;
comp_26=`float2x2 rota = float2x2(.7,.7,-.7,.7);
comp_27=`
comp_28=`
comp_29=`// some complex number arithmetics functions by flexi
comp_30=`
comp_31=`float2 complex_div(float2 numerator, float2 denominator){
comp_32=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_33=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_34=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_35=`}
comp_36=`
comp_37=`float2 uv_polar(float2 domain, float2 center){
comp_38=`   float2 c = domain - center;
comp_39=`   float rad_hq = length(c);
comp_40=`   float ang_hq = atan2(c.x,c.y);
comp_41=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_42=`}
comp_43=`
comp_44=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_45=`   float2 polar = uv_polar(domain, center);
comp_46=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_47=`}
comp_48=`
comp_49=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_50=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_51=`}
comp_52=`
comp_53=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_54=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_55=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_56=`}
comp_57=`
comp_58=`
comp_59=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_60=`   float2 uv_r = (domain-center);
comp_61=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_62=`}
comp_63=`
comp_64=`/* code from Martin's hardcore mix - Danke ;) */
comp_65=`float hardcore_stars(float2 domain, float2 center, float o){
comp_66=`   float2 rss, rss0, tmp;
comp_67=`   float2 uv1 = domain-center;
comp_68=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_69=`   rss0.y = .003/(length (uv1));
comp_70=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_71=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_72=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_73=`   tmp = abs(frac(rss*8)-.5);
comp_74=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_75=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_76=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_77=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_78=`   tmp = abs(frac(rss*8)-.5);
comp_79=`   dots += saturate(.02/length(tmp)) * noise;
comp_80=`   dots *= saturate(.2/abs(rss0.y));
comp_81=`   return dots*dots;
comp_82=`return 0;
comp_83=`}
comp_84=`
comp_85=`
comp_86=`
comp_87=`shader_body
comp_88=`{
comp_89=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q9, 2);
comp_90=`time *= 0.4;
comp_91=`
comp_92=`float2 pole1 =float2(0,0.5);
comp_93=`float2 pole2 =float2(1,0.5);
comp_94=`
comp_95=`float2 uvo = uv;
comp_96=`
comp_97=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.25, float2(q18,q19));
comp_98=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 )).yx;
comp_99=`
comp_100=`uvo = 0.5 + (uv-0.5)*float2(1.1,0.81);
comp_101=`float2 factorA = uv-float2(1-0.5,0.5);
comp_102=`
comp_103=`uv -= 0.5;
comp_104=`uv *= aspect.xy;    
comp_105=`
comp_106=`rs0.x = atan2(uv.y, uv.x)/3.1416*2;
comp_107=`rs0.y = .02/(length (uv));
comp_108=`rss = float2 (rs0.x,rs0.y+time);
comp_109=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_110=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
comp_111=`rss = abs(frac(rss*8)-.5);
comp_112=`float3 dots = saturate(.04/length(rss)) *noise;
comp_113=`
comp_114=`rss = float2 (rs0.x*2,rs0.y+time/2);
comp_115=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_116=`noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
comp_117=`rss = abs(frac(rss*8)-.5);
comp_118=`dots += saturate(.04/length(rss)) * noise;
comp_119=`
comp_120=`dots *= saturate(.04/abs(.01/rs0.y-q6*0))+.0;
comp_121=`dots *= dots*2;
comp_122=`
comp_123=`float3 ret1 = 0;
comp_124=`int anz = 2;
comp_125=`int n = 0;
comp_126=`while (n <= anz) {
comp_127=`    ang2 = 6.28*n/anz;
comp_128=`    c = cos(ang2);
comp_129=`    s = sin(ang2);
comp_130=`    uv2.x =  uv.x*c - uv.y*s;
comp_131=`    uv2.y =  uv.x*s + uv.y*c;
comp_132=`
comp_133=`    neu = GetPixel(uv2+.5) + GetBlur1(uv2+.5);
comp_134=`    ret1 = max(ret1,neu);
comp_135=`n++;
comp_136=`}
comp_137=`ret = ret1 + dots*(1+ret1);
comp_138=`
comp_139=`float2 factorB = float2(0,-1024);
comp_140=`float2 product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_141=`float2 numerator = float2(1,0);
comp_142=`float2 denominator = product;
comp_143=`float2 fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_144=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_145=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_146=`uv = fraction.yx*float2(-1,1)*100;
comp_147=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_148=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_149=`uv = (uv-.5)*.9 + .5;
comp_150=`
comp_151=`uv1 = (uv-center)*aspect.xy;
comp_152=`
comp_153=`dist = MinDistB(uv);
comp_154=`bdist = lerp(dist,GetDistB(uv),.2);
comp_155=`dist_c = clamp(GetDistB2 (center),.1,.4); //center distance
comp_156=`
comp_157=`float3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;
comp_158=`glow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.6)*2,2);
comp_159=`//uv += .003*glow*(tex2D (sampler_noise_mq,uv*2+float2(0,time/4).xy-.5));
comp_160=`
comp_161=`float focus = sat(abs(GetDistB2(uv)-dist_c)*1+.2);
comp_162=`float struc = GetBlurX(uv,focus).r;
comp_163=`
comp_164=`glow = sat(1-exp(-(GetBlur1(uv).r))-.2);
comp_165=`q18 = 1;
comp_166=`ret = pow(struc,1) * (.2+(1-focus) *lerp(dist,1-dist,q18)) * (1+.5*sin(uv2));
comp_167=`ret = lerp(ret, float3(0,1,glow*3), glow);
comp_168=`
comp_169=`//distant light
comp_170=`//ret += pow(1-GetBlurX(uv,.8).b,3)*(.5+.5*slow_roam_cos) *q19;
comp_171=`
comp_172=`//Lamp
comp_173=`uv3 = uv1; 
comp_174=`lamp = saturate(1-4*length(uv3))*(struc)*saturate(1-2*bdist)*1.8;
comp_175=`ret += (1-lum(ret))*lamp;
comp_176=`ret = 1-exp((-2)*ret);
comp_177=`//ret = GetPixel(uv).r;
comp_178=`
comp_179=`// laser
comp_180=`
comp_181=`ret = ret + dots*(1+ret);
comp_182=`}
comp_183=`
comp_184=`//-------------------------------------------
comp_185=`//Written by martin
comp_186=`

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=2.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=5.900
fWaveScale=0.408
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=0.98995
wave_r=0.900
wave_g=0.450
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.500
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=warp = 0;
per_frame_26=
per_frame_27=tic = min(time-tin,.1);
per_frame_28=tin = time;
per_frame_29=
per_frame_30=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_31=
per_frame_32=ra = 1/tic*.25;
per_frame_33=
per_frame_34=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_35=
per_frame_36=ra = 1/tic*.05;
per_frame_37=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_38=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_39=
per_frame_40=ra = 1/tic*.1;
per_frame_41=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_42=
per_frame_43=
per_frame_44=tt = tt + tic*treb;
per_frame_45=mt = mt + tic*mid;
per_frame_46=bt = bt + tic*bass;
per_frame_47=vt = vt + tic*vav;
per_frame_48=
per_frame_49=q1 = time;
per_frame_50=
per_frame_51=q2 = vav*.1;
per_frame_52=
per_frame_53=q3 = .1 + bass_avg*.05; // size and spacing
per_frame_54=
per_frame_55=q4 = 3.1416 + (treb_avg + mid_avg)*.25; // texture angle
per_frame_56=
per_frame_57=//q4 = (treb_avg - mid_avg);
per_frame_58=//q4 = bass_avg - (treb_avg + mid_avg)*.5;
per_frame_59=//q4 = -bass_avg;
per_frame_60=
per_frame_61=
per_frame_62=q5 = vt; // movement speed
per_frame_63=q6 = vt*5; // colour cycle
per_frame_64=
per_frame_65=
per_frame_66=
per_frame_67=monitor = q4;
per_frame_68=
per_frame_69=//rot = .025*max(.7,vav);
per_frame_70=//rot = .025*(.7 + vav*.25);
per_frame_71=//rot = .025*vav;
per_frame_72=
per_pixel_1=mod = .1;
per_pixel_2=
per_pixel_3=//sw = above(x,.5);
per_pixel_4=
per_pixel_5=//dy = mod*pow(abs(y - .5)*2,1.5)*sign(y-.5);
per_pixel_6=
per_pixel_7=//dy = .2*sign(y-.5)*sw;
per_pixel_8=
per_pixel_9=//sy = 1 + (1-sw)*.116;
per_pixel_10=
per_pixel_11=
per_pixel_12=//rot = .05;
per_pixel_13=
per_pixel_14=//cx = if(above(y,.5),-1,2);
warp_1=`sampler sampler_rand01_escher;
warp_2=`
warp_3=`float figure_borders(float2 domain, float thickness){
warp_4=`   float2 help_uv = frac(domain-0.5);
warp_5=`   help_uv = min(help_uv,1-help_uv)*2;
warp_6=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_7=`}
warp_8=`
warp_9=`bool hex(float2 domain){
warp_10=`   float2 help_uv = frac(domain)*float2(8,12);
warp_11=`   float x,y; x = help_uv.x; y = help_uv.y;
warp_12=`   return (x>1)*(x<7)*(y>4)*(y<8)*(x+y>7)*(x+y<13)*(x-y<1)*(y-x<5);
warp_13=`}
warp_14=`
warp_15=`bool3 hexgrid(float2 domain){
warp_16=`   bool tile1, tile2;
warp_17=`   tile1 = hex(domain) + hex(domain + 0.5);
warp_18=`   tile2 = hex(domain + float2(0.5,1/6.0) )
warp_19=`         + hex(domain + float2(0,4/6.0)   );
warp_20=`   return bool3(tile1, tile2,  1 - tile1 - tile2);
warp_21=`}
warp_22=`
warp_23=`
warp_24=`float2 complex_div(float2 numerator, float2 denominator){
warp_25=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_26=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_27=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_28=`}
warp_29=`
warp_30=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
warp_31=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
warp_32=`}
warp_33=`
warp_34=`float2 uv_polar(float2 domain, float2 center){
warp_35=`   float2 c = domain - center;
warp_36=`   float rad_hq = length(c);
warp_37=`   float ang_hq = atan2(c.x,c.y);
warp_38=`   return float2(ang_hq, rad_hq);
warp_39=`}
warp_40=`
warp_41=`float2 uv_polar_logarithmic_inverse(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_42=`   float2 polar = uv_polar(domain, center)*float2(M_INV_PI_2,1);
warp_43=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
warp_44=`}
warp_45=`
warp_46=`float2 uv_bipolar_logarithmic_inverse(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
warp_47=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
warp_48=`   return uv_polar_logarithmic_inverse(help_uv,0.5,fins,log_factor,coord);
warp_49=`}
warp_50=`
warp_51=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
warp_52=`   float2 polar = uv_polar(domain, position);
warp_53=`   float cone = saturate(1-polar.y/radius);
warp_54=`   float halfsphere = sqrt(1-pow(cone-1,2));
warp_55=`   float w = atan2(1-cone,halfsphere);
warp_56=`   float refrac_w = w-asin(sin(w)/refractivity);
warp_57=`   float refrac_d = 1-cone - halfsphere*tan(refrac_w);
warp_58=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
warp_59=`   bool mask =(length(domain-position)<radius);
warp_60=`   return !mask*domain + 
warp_61=`           mask*refrac_uv;
warp_62=`}
warp_63=`
warp_64=`shader_body
warp_65=`{
warp_66=`float2 help_uv = uv_lens_half_sphere(uv_orig, float2(q1,q2),0.15,4);
warp_67=`help_uv = uv_bipolar_logarithmic_inverse(help_uv, float2(0.3,0.4), float2(0.7,0.4), 3, 0.5, float2(-time*0.1,-time*0.04));
warp_68=`help_uv = help_uv*float2(7,3);
warp_69=`
warp_70=`ret = tex2D(sampler_rand01_escher,help_uv);
warp_71=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_72=`                      ((help_uv.xyy*q27
warp_73=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_74=`                      ).xyz*
warp_75=`                      float3(1,1,0)*0.05 + 
warp_76=`                      time*float3(0,0,1)*q29
warp_77=`                     );
warp_78=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_79=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_80=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_81=`}
comp_1=`float2 uv_x, uv_y, uv_z, uv_echo;
comp_2=`shader_body
comp_3=`{
comp_4=`    float2 d = texsize.zw*4;
comp_5=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
comp_6=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
comp_7=`
comp_8=`    float grad_y = length(float2(dx.y,dy.y));
comp_9=`    float3 c2 = grad_y*0.8;
comp_10=`
comp_11=`    float3 emboss = (dx - dy*0.2)*0.8 + 0.5;
comp_12=`
comp_13=`    float2 uv_light1 = float2(0.8,0.2);
comp_14=`    float3 light1_dy = 1.04- pow(length( uv + float2(dx.y,dy.y)*2 - uv_light1),0.25);
comp_15=`
comp_16=`
comp_17=`    float3 plastic = lerp(0,light1_dy*2,c2*4);
comp_18=`
comp_19=`ret = -plastic*0 + emboss.y*0.3 + light1_dy*0.5 - 0.00;
comp_20=`ret = lerp(float3(0,0,-0.1),float3(1,0.5,0.2),saturate(ret));
comp_21=`ret = lerp(ret,float3(2,1,0),GetBlur1(uv - float2(dx.y,dy.y)*0.04).z*2);
comp_22=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_23=`                      ((uv_light1.xyy*q28
comp_24=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_25=`                      ).xyz*
comp_26=`                      float3(1,1,0)*0.05 + 
comp_27=`                      time*float3(0,0,1)*q31
comp_28=`                     );
comp_29=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_30=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_31=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_32=`ret = lerp(ret,lerp(float3(0.6,1.4,2),float3(0.1,0,0),GetPixel(uv + float2(dx.y,dy.y)*0.04).z*8), tex2D(sampler_fc_main,uv - float2(dx.y,dy.y)*0.1).x*emboss.y*1.2);
comp_33=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.995
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.401
fWaveScale=3.177
fWaveSmoothing=0.000
fWaveParam=-0.400
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=10.000
zoom=0.99990
rot=0.10000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.400
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.200
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.300
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=phs=-sample * 0.2;
wave_0_per_point3=tm=time*0.4 + phs;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=0;
wave_0_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_0_per_point10=zp=0;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=yq=yp;
wave_0_per_point19=zq=zp;
wave_0_per_point20=
wave_0_per_point21=ang=tm*8;
wave_0_per_point22=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point23=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point24=zp=zq;
wave_0_per_point25=
wave_0_per_point26=//forearm movement;
wave_0_per_point27=zp=zp-0.3;
wave_0_per_point28=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_0_per_point29=xq=xp;
wave_0_per_point30=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point31=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point32=
wave_0_per_point33=//upper arm twist
wave_0_per_point34=ang=-1.0 + cos(tm*3 + 0.5);
wave_0_per_point35=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point36=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point37=zp=zq;
wave_0_per_point38=
wave_0_per_point39=//upper arm outward;
wave_0_per_point40=zp=zp-0.35;
wave_0_per_point41=ang=cos(tm*2)*0.75 - 1.05;
wave_0_per_point42=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point43=yq=yp;
wave_0_per_point44=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point45=
wave_0_per_point46=//upper arm up down;
wave_0_per_point47=ang=cos(tm)*0.5 - 0.5;
wave_0_per_point48=xp=xq;
wave_0_per_point49=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point50=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point51=
wave_0_per_point52=//xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=
wave_0_per_point55=//project into screenspace and draw on screen
wave_0_per_point56=zp=zp+2;
wave_0_per_point57=xs=xp/zp;
wave_0_per_point58=ys=yp/zp;
wave_0_per_point59=
wave_0_per_point60=x=xs+0.5;
wave_0_per_point61=y=ys*1.3+0.5;
wave_0_per_point62=
wave_0_per_point63=
wave_0_per_point64=//a=(1-sample)*flip;
wave_0_per_point65=
wave_0_per_point66=//b=b+pow(1-sample,2)*0.3;
wave_0_per_point67=
wave_0_per_point68=x = 0.5 + (x-0.5)/q1;
wave_0_per_point69=y = 0.5 + (y-0.5)/q2 + 0.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=0.300
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.2;
wave_1_per_point3=tm=time*0.4 + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_1_per_point10=yp=-yp;
wave_1_per_point11=zp=0;
wave_1_per_point12=
wave_1_per_point13=//wrist movement;
wave_1_per_point14=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point15=
wave_1_per_point16=xq=xp;
wave_1_per_point17=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point18=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point19=yq=yp;
wave_1_per_point20=zq=zp;
wave_1_per_point21=
wave_1_per_point22=ang=tm*8;
wave_1_per_point23=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point24=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point25=zp=zq;
wave_1_per_point26=
wave_1_per_point27=//forearm movement;
wave_1_per_point28=zp=zp-0.3;
wave_1_per_point29=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point30=xq=xp;
wave_1_per_point31=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point32=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point33=
wave_1_per_point34=//upper arm twist
wave_1_per_point35=ang=-1.0 + cos(tm*3 + 0.5);
wave_1_per_point36=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point37=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point38=zp=zq;
wave_1_per_point39=
wave_1_per_point40=//upper arm outward;
wave_1_per_point41=zp=zp-0.35;
wave_1_per_point42=ang=cos(tm*2)*0.75 - 1.05;
wave_1_per_point43=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point44=yq=yp;
wave_1_per_point45=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point46=
wave_1_per_point47=//upper arm up down;
wave_1_per_point48=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point49=xp=xq;
wave_1_per_point50=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point51=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point52=
wave_1_per_point53=//xp=xq;yp=yq;zp=zq;
wave_1_per_point54=
wave_1_per_point55=
wave_1_per_point56=//project into screenspace and draw on screen
wave_1_per_point57=zp=zp+2;
wave_1_per_point58=xs=xp/zp;
wave_1_per_point59=ys=yp/zp;
wave_1_per_point60=
wave_1_per_point61=x=xs+0.5;
wave_1_per_point62=y=ys*1.3+0.5;
wave_1_per_point63=
wave_1_per_point64=
wave_1_per_point65=//a=(1-sample)*flip;
wave_1_per_point66=
wave_1_per_point67=
wave_1_per_point68=//b=b+pow(1-sample,2)*0.3;
wave_1_per_point69=
wave_1_per_point70=
wave_1_per_point71=x = 0.5 + (x-0.5)/q1;
wave_1_per_point72=y = 0.5 + (y-0.5)/q2 + 0.1;
wave_1_per_point73=
wavecode_2_enabled=0
wavecode_2_samples=61
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.44415
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point3=
wave_2_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wavecode_3_enabled=0
wavecode_3_samples=61
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q2;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_frame7=t7 = q7;
wave_3_per_frame8=t8 = q8;
wave_3_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_3_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_3_per_point3=
wave_3_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_3_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.550
shapecode_0_rad=0.06689
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.78748
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=
shape_0_per_frame3=d = 1.4; // makes the perspective impact
shape_0_per_frame4=zoom = 0.7;
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=// Kardan angles
shape_0_per_frame8=
shape_0_per_frame9=w1 = q3; // first rotation: clockwise in the desktop pane
shape_0_per_frame10=w2 = q4; // rotation around vertical axis
shape_0_per_frame11=w3 = q5; // rotation around horizontal axis
shape_0_per_frame12=
shape_0_per_frame13=
shape_0_per_frame14=// definition of the 3D shape
shape_0_per_frame15=
shape_0_per_frame16=i = instance;
shape_0_per_frame17=
shape_0_per_frame18=my_x = (i % 8)/8 - 0.5;
shape_0_per_frame19=my_y = (i % 64 - (i % 8))/64 - 0.5;
shape_0_per_frame20=my_z = (i - (i % 64 - (i % 8))/64)/512 - 0.5;
shape_0_per_frame21=
shape_0_per_frame22=
shape_0_per_frame23=// 3D rotations
shape_0_per_frame24=
shape_0_per_frame25=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame26=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame27=z1 = my_z;
shape_0_per_frame28=
shape_0_per_frame29=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame30=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame31=y2 = y1;
shape_0_per_frame32=
shape_0_per_frame33=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame34=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame35=x3 = x2;
shape_0_per_frame36=
shape_0_per_frame37=// perspective calculation
shape_0_per_frame38=
shape_0_per_frame39=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame40=w = atan2(x3,y3);
shape_0_per_frame41=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame42=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame43=
shape_0_per_frame44=rad = rad/d;
shape_0_per_frame45=my_x = zoom*sin(w)*p;
shape_0_per_frame46=my_y = zoom*cos(w)*p;
shape_0_per_frame47=
shape_0_per_frame48=x = 0.5 + my_x;
shape_0_per_frame49=y = 0.5 + my_y;
shape_0_per_frame50=
shape_0_per_frame51=x = 0.5 + (x-0.5)/q2;
shape_0_per_frame52=y = 0.5 + (y-0.5)/q1;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.520
shapecode_1_y=0.410
shapecode_1_rad=0.52160
shapecode_1_ang=0.18850
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.73458
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.750
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=vx = 0
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.480
shapecode_2_y=0.410
shapecode_2_rad=0.61162
shapecode_2_ang=5.96903
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73458
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.750
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=vx = 0
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.750
shapecode_3_rad=0.07059
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.73458
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=vx = 0
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=warp=0;
per_frame_26=wave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));
per_frame_27=wave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));
per_frame_28=wave_g = wave_g + 0.4*sin(time*1.931);
per_frame_29=wave_r = 0.2125*wave_r + 0.7154*wave_g + 0.0721*wave_b;
per_frame_30=wave_g = wave_r;
per_frame_31=wave_b = wave_r;
per_frame_32=vol = 0.167*(bass+mid);
per_frame_33=xamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);
per_frame_34=xamp = xamp + 0.5*(xamptarg-xamp);
per_frame_35=xdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
per_frame_36=xspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);
per_frame_37=xpos = xpos + 0.001*xspeed;
per_frame_38=wave_x = 1.25*xpos + 0.5;
per_frame_39=yamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);
per_frame_40=yamp = yamp + 0.5*(yamptarg-yamp);
per_frame_41=ydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
per_frame_42=yspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);
per_frame_43=ypos = ypos + 0.001*yspeed;
per_frame_44=wave_y = 1.25*ypos + 0.5;
per_frame_45=dx = dx + dx_residual;
per_frame_46=dy = dy + dy_residual;
per_frame_47=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_48=dx_residual = equal(bass_thresh,2)*0.003*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;
per_frame_49=dy_residual = equal(bass_thresh,2)*0.001*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;
per_frame_50=rot = 0.1;
per_frame_51=q2=1.1*xpos +0.25*ypos + 0.5;
per_frame_52=q1=1.1*ypos +0.25*xpos + 0.5;
per_frame_53=ib_r = 0.3+xpos;
per_frame_54=ib_b = 0.06*bass;
per_frame_55=ib_g = 0.25+ypos;
per_frame_56=ib_r = 0.2125*ib_r + 0.7154*ib_g + 0.0721*ib_b;
per_frame_57=ib_g = ib_r;
per_frame_58=ib_b = ib_r;
per_frame_59=
per_frame_60=zoom=1;
per_frame_61=
per_pixel_1=cx = (5&(x*10-0.5))*0.1+0.05;
per_pixel_2=cy = (5&(y*10-0.5))*0.1+0.05;
per_pixel_3=newx = q1-x;
per_pixel_4=newy = q2-y;
per_pixel_5=newrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;
per_pixel_6=newzoom = pow(1.05 + 0.03*newrad, pow(0.01+sin(newrad*newrad), newrad*2-1));
per_pixel_7=dx = (newx)*newzoom - newx;
per_pixel_8=dy = (newy)*newzoom - newy;
per_pixel_9=dx=dx*0.1;
per_pixel_10=dy=dy*0.1;
per_pixel_11=rot = 1*newrad*(0.5*(0.5-rad)+0.1);
per_pixel_12=sx=-1;
warp_1=`shader_body
warp_2=`{
warp_3=`    // PAINTERLY EFFECT:
warp_4=`    float2 uv2 = uv;
warp_5=`    const float mipbias = 0;
warp_6=`    float2 delta2 = texsize.zw*float2(1,1);
warp_7=`    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;
warp_8=`    uv2.xy += (blurry_color.xy-0.37) * 0.03;
warp_9=`
warp_10=`    // sample previous frame
warp_11=`    ret = tex2D( sampler_main, uv2 ).xyz;
warp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_13=`                      ((uv2.xyy*q27
warp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_15=`                      ).xyz*
warp_16=`                      float3(1,1,0)*0.05 + 
warp_17=`                      time*float3(0,0,1)*q29
warp_18=`                     );
warp_19=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_20=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_21=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_22=`
warp_23=`    // darken over time
warp_24=`    ret -= 0.004;
warp_25=`}
comp_1=`float2 uv_x, uv_y, uv_z, uv_echo;
comp_2=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
comp_3=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
comp_4=`}
comp_5=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_6=`   return center + (domain-center)*scale;
comp_7=`}
comp_8=`float2 uv_polar(float2 domain, float2 center){
comp_9=`   float2 c = domain - center;
comp_10=`   float rad_hq = length(c);
comp_11=`   float ang_hq = atan2(c.x,c.y);
comp_12=`   return float2(ang_hq, rad_hq);
comp_13=`}
comp_14=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_15=`   float2 polar = uv_polar(domain, position);
comp_16=`   float cone = saturate(1-polar.y/radius);
comp_17=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_18=`   float w = atan2(1-cone,halfsphere);
comp_19=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_20=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_21=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_22=`   bool mask =(length(domain-position)<radius);
comp_23=`   return !mask*domain + 
comp_24=`           mask*refrac_uv;
comp_25=`}
comp_26=`shader_body
comp_27=`{
comp_28=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);
comp_29=`float2 pos1 = 1-float2(q3,q4);
comp_30=`float rad1 = q5;
comp_31=`float2 pos2 = 1-float2(q6,q7);
comp_32=`float rad2 = q8;
comp_33=`float2 pos3 = 1-float2(q9,q10);
comp_34=`float rad3 = q11;
comp_35=`float2 pos4 = 1-float2(q12,q13);
comp_36=`float rad4 = q14;
comp_37=`float3 col1 = float3(2,1,-1);
comp_38=`float3 col2 = float3(2,-1,1);
comp_39=`float3 col3 = float3(-1,1,2);
comp_40=`float3 col4 = float3(1,-1,2);
comp_41=`float refractivity = -0.9;
comp_42=`float2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);
comp_43=`       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);
comp_44=`       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);
comp_45=`       lens_uv = uv_lens_half_sphere(lens_uv, pos4, rad4, refractivity);
comp_46=`
comp_47=`uv = lens_uv;
comp_48=`    float2 d = texsize.zw*1.2;
comp_49=`    float3 dx = ( GetPixel(uv + float2(1,0)*d) - GetPixel(uv-float2(1,0)*d) );
comp_50=`    float3 dy = ( GetPixel(uv + float2(0,1)*d) - GetPixel(uv-float2(0,1)*d) );
comp_51=`
comp_52=`    float c = 8;
comp_53=`    float dd = 1;
comp_54=`float3 light1 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos1),.2);
comp_55=`float3 light2 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos2),.2);
comp_56=`float3 light3 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos3),.2);
comp_57=`float3 light4 = dd - pow(length(uv-float2(lum(dx),lum(dy))*c-pos4),.2);
comp_58=`
comp_59=`ret = lerp(GetPixel(uv),max(max(light1*col1,light2*col2),max(light3*col3,light4*col4)),0.5)*1.25;
comp_60=`
comp_61=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_62=`                      ((uv.xyy*q28
comp_63=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_64=`                      ).xyz*
comp_65=`                      float3(1,1,0)*0.05 + 
comp_66=`                      time*float3(0,0,1)*q31
comp_67=`                     );
comp_68=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_69=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_70=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_71=`}
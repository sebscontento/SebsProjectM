MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=2.000
fDecay=0.900
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=-18.86024
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.200
ib_size=0.010
ib_r=0.000
ib_g=0.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wave_0_per_point16=pi23=4*asin(1)*.333333333;
wave_0_per_point17=vol=bass+mid+treb;
wave_0_per_point18=r=(sin(time*.3+vol-0*pi23)+1)*.5;
wave_0_per_point19=g=(sin(time*.3+vol-1*pi23)+1)*.5;
wave_0_per_point20=b=(sin(time*.3+vol-2*pi23)+1)*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wave_1_per_point16=pi23=4*asin(1)*.333333333;
wave_1_per_point17=vol=bass+mid+treb;
wave_1_per_point18=r=(sin(time*.3+vol-0*pi23)+1)*.5;
wave_1_per_point19=g=(sin(time*.3+vol-1*pi23)+1)*.5;
wave_1_per_point20=b=(sin(time*.3+vol-2*pi23)+1)*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wave_2_per_point16=pi23=4*asin(1)*.333333333;
wave_2_per_point17=vol=bass+mid+treb;
wave_2_per_point18=r=(sin(time*.3+vol-0*pi23)+1)*.5;
wave_2_per_point19=g=(sin(time*.3+vol-1*pi23)+1)*.5;
wave_2_per_point20=b=(sin(time*.3+vol-2*pi23)+1)*.5;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
wave_3_per_point16=pi23=4*asin(1)*.333333333;
wave_3_per_point17=vol=bass+mid+treb;
wave_3_per_point18=r=(sin(time*.3+vol-0*pi23)+1)*.5;
wave_3_per_point19=g=(sin(time*.3+vol-1*pi23)+1)*.5;
wave_3_per_point20=b=(sin(time*.3+vol-2*pi23)+1)*.5;
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=state = 0;
per_frame_1=q20=bass+mid+treb;
per_frame_2=basstime = basstime + bass*0.06;
per_frame_3=q1 = basstime;
per_frame_4=
per_frame_5=q9 = basstime * 0.005;
per_frame_6=q8 = basstime*0.1;
per_frame_7=
per_frame_8=q13 = sin(basstime)*0.001;
per_frame_9=q11 = difftime + state*2;
per_frame_10=q12 = difftime + state*2.5;
per_frame_11=q14 =  abs(cos(basstime*0.05))*5 + 1;
per_frame_12=q15 = cos(basstime*0.1);
per_frame_13=
per_frame_14=
per_frame_15=basstime = if(below(basstime,1000),1000,basstime);
per_frame_16=
per_frame_17=vol = pow(bass+mid+treb,2);
per_frame_18=basssum = vol;
per_frame_19=
per_frame_20=stickybit = time%2;
per_frame_21=
per_frame_22=//avg vol
per_frame_23=//buffer 1
per_frame_24=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_25=//number of samples 1 or framerate
per_frame_26=sample1 = sample1 + equal(stickybit,1);
per_frame_27=//buffer 2
per_frame_28=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_29=//number of samples 2
per_frame_30=sample2 = sample2 + equal(stickybit,0);
per_frame_31=
per_frame_32=//transision
per_frame_33=edge = bnot(equal(bit2,stickybit));
per_frame_34=
per_frame_35=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_36=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_37=
per_frame_38=sample1 = sample1  - sample1*edge*stickybit;
per_frame_39=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_40=
per_frame_41=//test vol against avg buffer lvl
per_frame_42=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_43=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_44=
per_frame_45=q3 = diff;
per_frame_46=
per_frame_47=bit2 = time%2;
per_frame_48=
per_frame_49=difftime = difftime + diff*0.03;
per_frame_50=q2 = difftime;
per_frame_51=
per_frame_52=//fix a strange error
per_frame_53=difftime = if(above(difftime,2000),0, difftime);
per_frame_54=monitor = q1;
per_frame_55=
per_frame_56=
per_frame_57=state = state + above(diff,3);
per_frame_58=
per_frame_59=//fix a strange error
per_frame_60=difftime = if(above(difftime,2000),0, difftime);
per_frame_61=
per_frame_62=//another state machine for shape tracking
per_frame_63=state = state + equal(diff,3);
per_frame_64=state = if(above(state,5), 0, state);
per_frame_65=
per_frame_66=xs = 0;
per_frame_67=ys = 0;
per_frame_68=
per_frame_69=//state 0 elipse
per_frame_70=xs = xs + (equal(0,state))*atan(bass_time*4)*0.1;
per_frame_71=ys = ys + (equal(0,state))*cos(bass_time*4)*0.1;
per_frame_72=
per_frame_73=//state 1 diag
per_frame_74=xs = xs + (equal(1,state))*cos(bass_time*4)*0.1;
per_frame_75=ys = ys + (equal(1,state))*cos(bass_time*4)*0.1;
per_frame_76=
per_frame_77=//state 2 -circle
per_frame_78=xs = xs + (equal(2,state))*cos(bass_time*4)*0.1;
per_frame_79=ys = ys + (equal(2,state))*sin(bass_time*4)*0.1;
per_frame_80=
per_frame_81=//state 3 parametric arc
per_frame_82=xs = xs + (equal(3,state))*cos(bass_time*5)*0.1;
per_frame_83=ys = ys + (equal(3,state))*cos(bass_time*9)*0.1;
per_frame_84=
per_frame_85=//state 4 arc
per_frame_86=xs = xs + (equal(4,state))*atan(bass_time*6)*0.1;
per_frame_87=ys = ys + (equal(4,state))*cos(bass_time*2)*0.1;
per_frame_88=
per_frame_89=//state 5 infinity
per_frame_90=xs = xs + (equal(5,state))*cos(bass_time*2)*0.1;
per_frame_91=ys = ys + (equal(5,state))*sin(bass_time*1)*0.1;
per_frame_92=
per_frame_93=//count
per_frame_94=xpass = xs + xpass;
per_frame_95=ypass = ys + ypass;
per_frame_96=
per_frame_97=//project and publish
per_frame_98=q6 = 0.3*sin(xpass*0.5);
per_frame_99=q7 = 0.3*sin(ypass*0.5);
per_pixel_1=zoom = 1;
per_pixel_2=rot = 0;
warp_1=`sampler sampler_grad3;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`
warp_6=`    float3 txr = float3(uv,q1*0.1);
warp_7=`    float2  uv2 =  uv;
warp_8=`    uv2 = uv + texsize.zx*(q3,q3);
warp_9=`    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; 
warp_10=`    color += tex2D(sampler_noise_mq, uv2) - 0.5; 
warp_11=`    color += tex2D(sampler_noise_hq, uv2) - 0.5; 
warp_12=`//    uv += color*0.01; 
warp_13=`    //uv.y += abs(color*0.01) + bass_att*0.01;
warp_14=`    
warp_15=`    float2x2 rot = { cos(q9), sin(q9),
warp_16=`                      -sin(q9), cos(q9) }; 
warp_17=`
warp_18=`
warp_19=`    ret = tex2D( sampler_main, ((uv-0.5)*(1 - 0.01)) + 0.5  + GetBlur1((uv - 0.5)*0.9 + 0.5)*0.1 - 0.01).xyz;    
warp_20=`    ret = ret-0.002;// - 0.08; //or try: ret -= 0.004;
warp_21=`}
comp_1=`
comp_2=`shader_body
comp_3=`{
comp_4=`    float2 d = texsize.zw*8;
comp_5=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_6=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_7=`float2 uv_y = uv-.25*(float2(lum(dx),lum(dy)));
comp_8=`float2 uv_y2 = uv+.25*(float2(lum(dx),lum(dy)));
comp_9=`
comp_10=`
comp_11=`ret = .8*GetBlur3(uv_y)-GetBlur1(uv_y);
comp_12=`ret += .6*GetBlur1(uv);
comp_13=`ret -= (GetBlur2(uv_y2)-GetBlur1(uv_y2));
comp_14=`ret += 1.2*GetPixel(uv_y2)+.15*GetBlur1(uv_y2);
comp_15=`ret += .9;
comp_16=`ret = lum(ret);
comp_17=`ret -= .15*lum(tex2d(sampler_noise_hq,(uv+.01*time)));
comp_18=`ret = lerp(ret,.75*ret*lum(.6*GetBlur3(uv_y)-.7*GetPixel(uv)-.3*GetBlur1(uv_y2)),pow(hue_shader,q20*ret));
comp_19=`ret *= .8;
comp_20=`ret *= ret;
comp_21=`ret = sqrt(ret);
comp_22=`    float2x2 rot = { cos(q8), sin(q8), 
comp_23=`                     -sin(q8), cos(q8)}; 
comp_24=` 
comp_25=`    ret +=  tex2D(sampler_main,(mul(uv*q14 - q15,rot)) + 0.5).xyz;
comp_26=`}

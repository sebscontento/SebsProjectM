MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=282
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=3.91581
wavecode_0_smoothing=0.10000
wavecode_0_r=0.200
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.600
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=23
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.02060
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=1.000
shape_0_per_frame1=x = 1-q3;
shape_0_per_frame2=y = q4;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=44
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_1=
per_frame_2=w = time*0.2;
per_frame_3=q32 = sin(w);
per_frame_4=q31 = cos(w);
per_frame_5=q30 = w;
per_frame_6=
per_frame_7=q1 = aspectx;
per_frame_8=q2 = aspecty;
per_frame_9=
per_frame_10=
per_frame_11=q3 = 0.3;
per_frame_12=q4 = 0.4;
per_frame_13=
per_frame_14=q5 = 0.7;
per_frame_15=q6 = 0.3;
per_frame_16=
per_frame_17=q7 = 0.7;
per_frame_18=q8 = 0.6;
per_frame_19=
per_frame_20=q9 = 0.2;
per_frame_21=q10 = 0.6;
warp_1=`float2 complex_mul(float2 factorA, float2 factorB){
warp_2=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_3=`}
warp_4=`
warp_5=`float2 complex_div(float2 numerator, float2 denominator){
warp_6=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_7=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_8=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_9=`}
warp_10=`
warp_11=`float figure_border(float2 domain, float thickness){
warp_12=`   float2 help_uv = frac(domain-0.5);
warp_13=`   help_uv = min(help_uv,1-help_uv)*2;
warp_14=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_15=`}
warp_16=`
warp_17=`shader_body
warp_18=`{
warp_19=`
warp_20=`   // change here
warp_21=`
warp_22=`   float d = 2;   // camera distance from roots
warp_23=`   float dc = 0.2;  // distance corridor width
warp_24=`   float hc = 0.06;  // camera height corridor
warp_25=`
warp_26=`  
warp_27=`   // rheotomic surface below
warp_28=`
warp_29=`
warp_30=`   float x = uv.x;
warp_31=`   float y = uv.y;
warp_32=`   float z = time; // stepping through slices of the 3D function
warp_33=`   // In fact, only the angular component of the outcome of the 2D function will be incremented by z
warp_34=`
warp_35=`   float2 pos1 = float2(q3, q4); // Positions for the complex roots.
warp_36=`   float2 pos2 = float2(q5, q6); // The surface coils around these roots with increasing z
warp_37=`   float2 pos3 = float2(q7, q8); // 
warp_38=`   float2 pos4 = float2(q9, q10);
warp_39=`
warp_40=`   float2 domain = float2(x,y);
warp_41=`
warp_42=`   domain = complex_div(  0.003,
warp_43=`                          complex_mul(  complex_mul(domain-pos1, domain - pos2),
warp_44=`                                        complex_mul(domain-pos3, domain - pos4)
warp_45=`                          )
warp_46=`                       );
warp_47=`   domain -= 0.5;
warp_48=`
warp_49=`   float rheotomic = sin(atan2(domain.x,domain.y) + z)*0.5 + 0.5;
warp_50=`   // the angular component of the complex number, calculated by the complex polynomial from uv.xy, z only rotates
warp_51=`   // so to say a "height map" of the rheotomic surface
warp_52=`
warp_53=`   int heightFilter = (abs(rheotomic-0.5) < hc);
warp_54=`   // this filter marks the z corridor between the surfaces
warp_55=`
warp_56=`   float distance = 1/length(domain); // distance to any of the complex roots
warp_57=`   // at the roots the gradient becomes infinite, that's definitely not where we want a camera to be near
warp_58=`
warp_59=`
warp_60=`   int distanceFilter = (abs(distance-d) < dc);
warp_61=`   // this filter marks a xy corridor
warp_62=`   // try different distances. The nearer to one root, the more they look like circles.
warp_63=`
warp_64=`   float2 my_uv = complex_div(  0.01, 
warp_65=`                                complex_mul(  complex_mul(uv_orig-pos1, uv_orig - pos2),
warp_66=`                                              complex_mul(uv_orig-pos3, uv_orig - pos4)
warp_67=`                                )
warp_68=`                             );
warp_69=`   float grid = figure_border(my_uv, 0.05);
warp_70=`
warp_71=`
warp_72=`   // actual composition
warp_73=`
warp_74=`   ret = rheotomic*0.5;
warp_75=`   ret = lerp(ret, 0, grid);
warp_76=`
warp_77=`   ret = lerp(ret, float3(1,0,0), heightFilter*0.2); // vertical corridor (red)
warp_78=`   ret = lerp(ret, float3(0,0,1), distanceFilter*0.2); // horizontal cooridor (blue)
warp_79=`
warp_80=`   ret = lerp(ret, float3(1,1,1), distanceFilter*heightFilter); // 2D spatiotemporal corridor for the camera (white)
warp_81=`
warp_82=`      
warp_83=`
warp_84=`}
warp_85=`
comp_1=`
comp_2=`shader_body
comp_3=`{
comp_4=`   ret = GetPixel(uv);
comp_5=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.935
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=2.850
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.500
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.800
mv_r=0.300
mv_g=0.210
mv_b=0.110
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=basstime=basstime+(bass*bass);
wave_0_per_frame2=t1=basstime*0.03;
wave_0_per_frame3=
wave_0_per_point1=//plot x,y,z to point on circle
wave_0_per_point2=smp=sample*6.283;
wave_0_per_point3=xp=sin(smp )*0.20;
wave_0_per_point4=yp=cos(smp )*0.20;
wave_0_per_point5=zp=0;
wave_0_per_point6=
wave_0_per_point7=
wave_0_per_point8=//alter shape;
wave_0_per_point9=angy=sin(sample*6.28*4 +t1 )*6.28;
wave_0_per_point10=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point11=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point12=xp=xq;
wave_0_per_point13=zp=zq;
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=//rotate on y axis;
wave_0_per_point17=angy=t1*0.1;
wave_0_per_point18=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point19=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point20=xp=xq;
wave_0_per_point21=zp=zq;
wave_0_per_point22=
wave_0_per_point23=//rotate on x axis
wave_0_per_point24=axs1 = sin(t1*0.15) + 1.6;
wave_0_per_point25=yq= yp*cos(axs1) - zp*sin(axs1);
wave_0_per_point26=zq= yp*sin(axs1) + zp*cos(axs1);
wave_0_per_point27=yp=yq;
wave_0_per_point28=zp=zq;
wave_0_per_point29=
wave_0_per_point30=//rotate on y axis again
wave_0_per_point31=axs2 = sin(t1*0.1)*3.3;
wave_0_per_point32=xq=xp*cos(axs2) - zp*sin(axs2);
wave_0_per_point33=zq=xp*sin(axs2) + zp*cos(axs2);
wave_0_per_point34=xp=xq;
wave_0_per_point35=zp=zq;
wave_0_per_point36=
wave_0_per_point37=//stretch y axis to compensate for aspect ratio
wave_0_per_point38=yp=yp*1.2;
wave_0_per_point39=
wave_0_per_point40=//push forward into viewpace
wave_0_per_point41=zp=zp+2.1;
wave_0_per_point42=
wave_0_per_point43=//project x,y,z into screenspace
wave_0_per_point44=xs=xp/zp;
wave_0_per_point45=ys=yp/zp;
wave_0_per_point46=
wave_0_per_point47=//center 0,0 in middle of screen
wave_0_per_point48=x=xs+0.5+q4;
wave_0_per_point49=y=ys+0.5+q5;
wave_0_per_point50=
wave_0_per_point51=r=1-q1;
wave_0_per_point52=g=1-q2;
wave_0_per_point53=b=1-q3;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=23
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.700
shapecode_0_rad=0.15493
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.01000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=y=bass_att*0.5+0.2;
shape_0_per_frame2=x=cos(time*2)*0.5+0.5;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.80200
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.57268
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//ang = ang + (bass*.2) + (time*.4);
shape_1_per_frame2=//rad=1.781+(bass*0.025);
shape_1_per_frame3=ang=above(0.5,treb_att)*.063;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.01000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = sin(time*5) * .4 + .5;
shape_2_per_frame2=y=treb_att*0.5;
shape_2_per_frame3=
shape_2_per_frame4=pow( (bass*.15),2);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03300
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.01000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x=.5+(bass*0.07);
per_frame_init_1=db=.01;
per_frame_init_2=beatrate=1;
per_frame_init_3=avgbeatrate=2;
per_frame_init_4=lbbtime=time;
per_frame_init_5=avgdb=.01;
per_frame_init_6=vol=1;
per_frame_init_7=avgvol=.2;
per_frame_init_8=phase=0;
per_frame_init_9=bool=0;
per_frame_init_10=const=.02;
per_frame_init_11=
per_frame_init_12=mtime=1000+bass_att*1000;
per_frame_init_13=t1=500+bass*500;
per_frame_init_14=t2=500+treb*500;
per_frame_init_15=t3=500+mid*500;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=db=(bass-lbass)*fps;
per_frame_26=lbass=bass;
per_frame_27=avgdb=avgdb*.99+abs(db)*.01;
per_frame_28=avgvol=avgvol*.99+(bass+mid+treb)*.0033;
per_frame_29=
per_frame_30=//beatdection
per_frame_31=rawbeatb=above(abs(db),avgdb*avgvol*4);
per_frame_32=beatb=rawbeatb*above(time-lbbtime,avgbeatrate*.5);
per_frame_33=beathard=beatb*(abs(db)-avgdb*4);
per_frame_34=//beatrate calc
per_frame_35=beatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;
per_frame_36=avgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;
per_frame_37=lbbtime=time*beatb+(1-beatb)*lbbtime;
per_frame_38=
per_frame_39=ph=(time-lbbtime)*(60/avgbeatrate)*const;
per_frame_40=phase=max(min( ph, 1 ),0);
per_frame_41=
per_frame_42=//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;
per_frame_43=const=const*(1-beatb)+beatb*( const+ (.01*bool) );
per_frame_44=
per_frame_45=bool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);
per_frame_46=
per_frame_47=bc=bc+beatb;
per_frame_48=
per_frame_49=vol=(rawbeatb*(abs(db)-(avgdb))*.01);
per_frame_50=avgvol=avgvol*.999+vol*.001;
per_frame_51=
per_frame_52=mtime=mtime+min(avgvol*.5,.25)*(60/fps);
per_frame_53=
per_frame_54=decay=1;
per_frame_55=warp=0;
per_frame_56=wrap=1;
per_frame_57=
per_frame_58=
per_frame_59=// This is the version you should use...
per_frame_60=// ----------- start copying -----------
per_frame_61=hue=(mtime*.01+phase*.5); // change this
per_frame_62=h=6*(hue-int(hue));
per_frame_63=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
per_frame_64=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
per_frame_65=ob_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
per_frame_66=ob_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
per_frame_67=ob_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
per_frame_68=// ----------- end ----------------
per_frame_69=
per_frame_70=bpm=(60/avgbeatrate)*.01;
per_frame_71=t1=t1+min(avgvol*bass_att*.5,.25)*(60/fps)*bpm;
per_frame_72=t2=t2+min(avgvol*treb_att*.5,.25)*(60/fps)*bpm;
per_frame_73=t3=t3+min(avgvol*mid_att*.5,.25)*(60/fps)*bpm;
per_frame_74=monitor=avgvol;
per_frame_75=q1=mtime;
per_frame_76=q2=t1;
per_frame_77=q3=t2;
per_frame_78=q4=t3;
per_frame_79=
per_frame_80=cx=sin(q2*.01)*.5+.5;
per_frame_81=cy=cos(q3*.01)*.5+.5;
per_frame_82=rot=sin(q2*.01-(q3*.01))*15+103;
per_frame_83=
per_frame_84=mv_a=phase;
per_pixel_1=
per_pixel_2=c=sin(q2*.1);
per_pixel_3=cc=sin(q3*.1);
per_pixel_4=ccc=sin(q4*.1);
per_pixel_5=cx1=.5+ccc*.3;
per_pixel_6=cy1=.5+cc*.4;
per_pixel_7=
per_pixel_8=myx=(cx1-x);
per_pixel_9=myy=(cy1-(1-y));
per_pixel_10=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_11=mang=asin( abs(myy)/(mrad) );
per_pixel_12=
per_pixel_13=ax=mang;
per_pixel_14=ay=mang;
per_pixel_15=
per_pixel_16=mrot=.1*(1-mrad)*sin(q1*.01+q2*.1);
per_pixel_17=
per_pixel_18=dx= sign(myy)*sin(ax)*mrot;
per_pixel_19=dy= sign(myx)*(cos(ay)*mrot);
per_pixel_20=
per_pixel_21=
per_pixel_22=
per_pixel_23=cx1=.5+cc*.3;
per_pixel_24=cy1=.5+c*.25+ccc*.25;
per_pixel_25=
per_pixel_26=myx=(cx1-x);
per_pixel_27=myy=(cy1-(1-y));
per_pixel_28=mrad=pow( myx*myx + myy*myy , .5);
per_pixel_29=mang=asin( abs(myy)/(mrad) );
per_pixel_30=
per_pixel_31=ax=mang;
per_pixel_32=ay=mang;
per_pixel_33=
per_pixel_34=mrot=.1*(1-mrad)*sin(q3*.02+q1*.3);
per_pixel_35=
per_pixel_36=dx= dx - sign(myy)*sin(ax)*mrot;
per_pixel_37=dy= dy - sign(myx)*(cos(ay)*mrot);
per_pixel_38=
per_pixel_39=
per_pixel_40=
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`float2 center=float2(q1,q2);
warp_5=`
warp_6=`float2 uv2=uv;
warp_7=`uv2.x=uv.x+sin(uv2.x*10);
warp_8=`uv2.y=uv.y+cos(uv2.y*10);
warp_9=`
warp_10=`float2 uv2m=uv2;
warp_11=`uv2m.y+=time*.11;
warp_12=`
warp_13=`float2 uv1 = uv-center;
warp_14=`float2 uv3=float2(atan2(uv1.x,uv1.y), .25/length(uv1));
warp_15=`
warp_16=`//You can change the speed and direction of rotation by changing this variable
warp_17=`float rot=.5;
warp_18=`
warp_19=`//This variable defines the center of rotation (cx, cy)
warp_20=`float2 cxy=float2(.5,.5);
warp_21=`
warp_22=`float2 xymod=uv-cxy;
warp_23=`float2 xy1=0;
warp_24=`
warp_25=`//Rotate xy plane
warp_26=`xy1.x=sin(time*rot)*xymod.x-cos(time*rot)*xymod.y;
warp_27=`xy1.y=cos(time*rot)*xymod.x+sin(time*rot)*xymod.y;
warp_28=`
warp_29=`float2 rt=(xy1);
warp_30=`float2 rmod=rt;
warp_31=`
warp_32=`uv3+=rmod;
warp_33=`
warp_34=`//ret = tex2D( sampler_main, uv ).xyz;
warp_35=`ret=GetBlur1(uv);
warp_36=`    // mix in img...
warp_37=`    float pic = tex2D(sampler_noise_hq, uv3).xyz;
warp_38=`    float lum = lum(pic);
warp_39=`    float use_it = abs(lum*0.8+0.05 - (roam_sin));
warp_40=`    float LFNoise = tex2D(sampler_noise_lq, uv3*0.1 + time*0.01).x*6-2;
warp_41=`    use_it = saturate(1 - use_it*(3+9*rand_preset.x) - LFNoise);
warp_42=`    ret = lerp(ret, pic.x, use_it.x);
warp_43=`
warp_44=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_45=`                      ((uv3.xyy*q27
warp_46=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_47=`                      ).xyz*
warp_48=`                      float3(1,1,0)*0.05 + 
warp_49=`                      time*float3(0,0,1)*q29
warp_50=`                     );
warp_51=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_52=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_53=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_54=`
warp_55=`ret*=float3(.94+.5*q21,.943+.5*q22,.941+.5*q23);
warp_56=`}
warp_57=`
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uvc = uv-.5;
comp_5=`float2 uv1 = uv-float2(q1,q2);
comp_6=`float2 uv1a= uv-float2(q2,q1);
comp_7=`float2 uvm = float2(atan2(uvc.x,uvc.y), 1/length(uvc));
comp_8=`uvm=uv;
comp_9=`
comp_10=`float tun=atan2(uv1a.x,uv1a.y)-12*length(uv1);
comp_11=`tun-=.2*q11-time;
comp_12=`
comp_13=`
comp_14=`float3 blur = GetBlur1(uvm);
comp_15=`float3 sharp = tex2D(sampler_main, uvm);
comp_16=`float3 fix = GetPixel(frac(uvm));
comp_17=`
comp_18=`float mod = (fix/((1.3)-cos(tun)));
comp_19=`
comp_20=`float3 fret = (fix-blur-sin(time))*mod;
comp_21=`float3 inv = 1-fret;
comp_22=`
comp_23=`float melt = dot(fret, inv);
comp_24=`
comp_25=`ret=tex2D(sampler_main, float2(uv.x, uv.y))*inv+.55*fret;
comp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_27=`                      ((uvm.xyy*q28
comp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_29=`                      ).xyz*
comp_30=`                      float3(1,1,0)*0.05 + 
comp_31=`                      time*float3(0,0,1)*q31
comp_32=`                     );
comp_33=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_34=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_35=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_36=`ret=lerp(ret, inv, 1.5*saturate(melt));
comp_37=`
comp_38=`//ret=GetPixel(uv);
comp_39=`}

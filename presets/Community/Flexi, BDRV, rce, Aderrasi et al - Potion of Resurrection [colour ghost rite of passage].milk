MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.010
fWarpScale=1.766
fZoomExponent=1.00016
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00001
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.600
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.100
nMotionVectorsX=6.400
nMotionVectorsY=4.800
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_0_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0008*cos(ma));
wave_0_per_point5=my=my+(.0008*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.2));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.15774
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang = 1.571;
shape_0_per_frame2=x = int(rand(11))*.1;
shape_0_per_frame3=y = int(rand(11))*.13;
shape_0_per_frame4=
shape_0_per_frame5=r = int(rand(100))*.01;
shape_0_per_frame6=g = int(rand(100))*.01;
shape_0_per_frame7=b = int(rand(100))*.01;
shape_0_per_frame8=r2 = int(rand(100))*.01;
shape_0_per_frame9=g2 = int(rand(100))*.01;
shape_0_per_frame10=b2 = int(rand(100))*.01;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.800
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=q11 = 0.5/asin(1);
per_frame_1=wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);
per_frame_2=wave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);
per_frame_3=wave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);
per_frame_4=warp = 0;
per_frame_5=
per_frame_6=ob_r = wave_g;
per_frame_7=ob_b = wave_r;
per_frame_8=ob_g = wave_b;
per_frame_9=ib_r = wave_r;
per_frame_10=ib_b = wave_g;
per_frame_11=ib_g = wave_r;
per_frame_12=
per_frame_13=bb = bb*0.98 + bass*0.5;
per_frame_14=mm = mm*0.98 + mid*0.5;
per_frame_15=tt = tt*0.98 + treb*0.5;
per_frame_16=
per_frame_17=mx = max(max(bb,mm),tt);
per_frame_18=mn = min(min(bb,mm),tt);
per_frame_19=
per_frame_20=h1 = (bb-mn)/(mx-mn);
per_frame_21=h2 = (mm-mn)/(mx-mn);
per_frame_22=h3 = (tt-mn)/(mx-mn);
per_frame_23=
per_frame_24=v = 0.2/fps;
per_frame_25=bm = bm + (h1-h2)*v;
per_frame_26=mt = mt + (h2-h3)*v;
per_frame_27=bt = bt + (h1-h3)*v;
per_frame_28=
per_frame_29=w = bm;
per_frame_30=q3 = sin(w);
per_frame_31=q4 = cos(w);
per_frame_32=
per_frame_33=
per_frame_34=q10 = bm;
per_frame_35=q11 = mt;
per_frame_36=q12 = bt;
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=
per_pixel_5=six = sin(x);
per_pixel_6=
per_pixel_7=dx = dx + 0.01*sin(abs(12*y))*sin(time);
per_pixel_8=dy = dy + 0.01*sin(abs(12*x))*cos(time);
per_pixel_9=zoom = zoom + 0.0095*(sin(8+4*sin(0.2*time)*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);
per_pixel_10=rot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));
per_pixel_11=sx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);
per_pixel_12=sy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);
per_pixel_13=zoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);
per_pixel_14=dx = if(above(y,.93),.01,if(below(y,.01),if(below(x,.3),if(below(y,.5),0,-.01),-.01),0));
per_pixel_15=dy = if(below(x,.05),.01,if(above(x,(0.94 - q7)),-.01,0));
per_pixel_16=zoom = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),.95,1),1),1),1);
per_pixel_17=dy = if(below(y,.5),if(below(x,.3),.01,dy),dy);
per_pixel_18=rot = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),0.1*sin(sin(ang*0.1*ang)+rad*6+q8*.444),0),0),0),0);
warp_1=`float3 maxNeumann(float2 domain){
warp_2=`   float3 maxneumann = float3(0,0,0);
warp_3=`   float2 pixel = texsize.zw;
warp_4=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2(-1, 0) ));
warp_5=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0,-1) ));
warp_6=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 0) ));
warp_7=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 0, 1) ));
warp_8=`   maxneumann = max(maxneumann, tex2D(sampler_fc_main, domain + pixel*float2( 1, 0) ));
warp_9=`   return maxneumann;
warp_10=`}
warp_11=`
warp_12=`
warp_13=`
warp_14=`shader_body
warp_15=`{
warp_16=`
warp_17=`   float pixelDistance   = 4;
warp_18=`   float motionStrength  = 4;
warp_19=`
warp_20=`   float diffusionFactor = 1;  
warp_21=`   float decay           = -0.01 + GetPixel(uv).x*0;
warp_22=`
warp_23=`   float2 uv_y = lerp(uv_orig,uv,1);
warp_24=`   float2 dither_uv = uv*texsize.xy*texsize_noise_lq.zw*diffusionFactor;
warp_25=`
warp_26=`   float2 d = texsize.zw*pixelDistance;
warp_27=`   float1 dx = ( 2*GetBlur1(uv_y + float2(1,0)*d) - 2*GetBlur1(uv_y-float2(1,0)*d) ).y*0.5;
warp_28=`   float1 dy = ( 2*GetBlur1(uv_y + float2(0,1)*d) - 2*GetBlur1(uv_y-float2(0,1)*d) ).y*0.5;
warp_29=`
warp_30=`   float2 my_uv = uv_y + float2(dx,dy)*texsize.zw*motionStrength;
warp_31=`
warp_32=`   ret.y = tex2D( sampler_fw_main, saturate(my_uv)).y;
warp_33=`
warp_34=`   ret.y += (ret - GetBlur1(uv_y)).y*0.025 + decay;
warp_35=`
warp_36=`
warp_37=`   ret.y += (tex2D(sampler_noise_lq, dither_uv).y-0.5)*0.02;
warp_38=`
warp_39=`/********************************************************************************************************/
warp_40=`
warp_41=`   dx = ( 2*GetBlur1(uv_y + float2(1,0)*d) - 2*GetBlur1(uv_y-float2(1,0)*d) ).z*0.5;
warp_42=`   dy = ( 2*GetBlur1(uv_y + float2(0,1)*d) - 2*GetBlur1(uv_y-float2(0,1)*d) ).z*0.5;
warp_43=`
warp_44=`   my_uv = uv_y - float2(dx,dy)*texsize.zw*motionStrength;
warp_45=`
warp_46=`   ret.z = GetPixel(my_uv).z - ret.y*0.01 + 0.004;    
warp_47=`   ret.z += (tex2D(sampler_noise_lq, dither_uv).y-0.5)*0.01;
warp_48=`
warp_49=`
warp_50=`/********************************************************************************************************/
warp_51=`
warp_52=`   dx = (2*GetBlur1(uv+d*float2(1,0))-2*GetBlur1(uv+d*float2(-1,0)) ).x*0.5;
warp_53=`   dy = (2*GetBlur1(uv+d*float2(0,1))-2*GetBlur1(uv+d*float2(0,-1)) ).x*0.5;
warp_54=`
warp_55=`   float2 d_red = +float2(dx,dy)*texsize.zw;
warp_56=`
warp_57=`   ret.x = maxNeumann(uv-d_red*2.5).x + (GetPixel(uv+d_red*4).x - GetBlur1(uv + d_red*4).x)*0.206 - 0.09;
warp_58=`
warp_59=`//ret = 0;
warp_60=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`uv = 0.5 + (uv-0.5)*1.5;
comp_39=`float2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.25, float2(q11,q12));
comp_41=`float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`uv = mirror_uv.yx;
comp_43=`    float2 uv_grid=uv+0.03*float2(sin(uv.y*31+0.59*time),sin(uv.x*26+0.37*time));
comp_44=`    ret = tex2D(sampler_main, uv).xyz;
comp_45=`    ret=max(ret,tex2D(sampler_main,uv_grid).xyz); //video distort
comp_46=`    ret *= 1.33; //gamma
comp_47=`    ret=lum(ret);
comp_48=`    ret=pow(ret,2.5);
comp_49=`    ret+=GetBlur1((uv+uv_grid)/2);
comp_50=` }

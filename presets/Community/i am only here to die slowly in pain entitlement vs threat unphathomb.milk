MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.104
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.22705
fShader=0.000
zoom=1.01000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=oldmd=md;
wave_0_per_point2=md=(md+int(rand(4)))%4;
wave_0_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_0_per_point4=
wave_0_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_0_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_0_per_point7=my=my+(equal(md,2)*.002*treb);
wave_0_per_point8=my=my-(equal(md,3)*.002*treb);
wave_0_per_point9=
wave_0_per_point10=mx=if(above(mx,.9),.5,mx);
wave_0_per_point11=mx=if(below(mx,.1),.5,mx);
wave_0_per_point12=my=if(above(my,.9),.5,my);
wave_0_per_point13=my=if(below(my,.1),.5,my);
wave_0_per_point14=
wave_0_per_point15=x=mx;
wave_0_per_point16=y=my;
wave_0_per_point17=a=bass*.1;
wave_0_per_point18=
wave_0_per_point19=r=bass*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_point1=oldmd=md;
wave_1_per_point2=md=(md+int(rand(4)))%4;
wave_1_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_1_per_point4=
wave_1_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_1_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_1_per_point7=my=my+(equal(md,2)*.002*treb);
wave_1_per_point8=my=my-(equal(md,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx=if(above(mx,.9),.5,mx);
wave_1_per_point11=mx=if(below(mx,.1),.5,mx);
wave_1_per_point12=my=if(above(my,.9),.5,my);
wave_1_per_point13=my=if(below(my,.1),.5,my);
wave_1_per_point14=
wave_1_per_point15=x=mx;
wave_1_per_point16=y=my;
wave_1_per_point17=a=bass*.1;
wave_1_per_point18=
wave_1_per_point19=g=treb*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_init2=my=.5;
wave_2_init3=md=2;
wave_2_per_point1=oldmd=md;
wave_2_per_point2=md=(md+int(rand(4)))%4;
wave_2_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_2_per_point4=
wave_2_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_2_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_2_per_point7=my=my+(equal(md,2)*.002*treb);
wave_2_per_point8=my=my-(equal(md,3)*.002*treb);
wave_2_per_point9=
wave_2_per_point10=mx=if(above(mx,.9),.5,mx);
wave_2_per_point11=mx=if(below(mx,.1),.5,mx);
wave_2_per_point12=my=if(above(my,.9),.5,my);
wave_2_per_point13=my=if(below(my,.1),.5,my);
wave_2_per_point14=
wave_2_per_point15=x=mx;
wave_2_per_point16=y=my;
wave_2_per_point17=a=bass*.1;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_init2=my=.4;
wave_3_init3=md=3;
wave_3_per_point1=oldmd=md;
wave_3_per_point2=md=(md+int(rand(4)))%4;
wave_3_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_3_per_point4=
wave_3_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_3_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_3_per_point7=my=my+(equal(md,2)*.002*treb);
wave_3_per_point8=my=my-(equal(md,3)*.002*treb);
wave_3_per_point9=
wave_3_per_point10=mx=if(above(mx,.9),.5,mx);
wave_3_per_point11=mx=if(below(mx,.1),.5,mx);
wave_3_per_point12=my=if(above(my,.9),.5,my);
wave_3_per_point13=my=if(below(my,.1),.5,my);
wave_3_per_point14=
wave_3_per_point15=x=mx;
wave_3_per_point16=y=my;
wave_3_per_point17=a=bass*.1;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=7
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03333
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = int(rand(100))*.01+instance-instance;
shape_0_per_frame2=y = int(rand(100))*.01+instance-instance;
shape_0_per_frame3=
shape_0_per_frame4=a =1;
shape_0_per_frame5=vol=bass+mid+treb;
shape_0_per_frame6=rad = int(rand(int(vol)))/7+instance-instance;
shapecode_1_enabled=1
shapecode_1_sides=23
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10262
shapecode_1_ang=0.43982
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.500
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*cos(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=rad=(bass+treb)/75;
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shape_1_per_frame16=r=int(rand(100))/100;
shape_1_per_frame17=g=int(rand(100))/100;
shape_1_per_frame18=b=int(rand(100))/100;
shape_1_per_frame19=r2=int(rand(100))/100;
shape_1_per_frame20=g2=int(rand(100))/100;
shape_1_per_frame21=b2=int(rand(100))/100;
shape_1_per_frame22=r_border=int(rand(100))/100;
shape_1_per_frame23=g_border=int(rand(100))/100;
shape_1_per_frame24=b_border=int(rand(100))/100;
shapecode_2_enabled=1
shapecode_2_sides=12
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=92
shapecode_2_x=0.800
shapecode_2_y=0.500
shapecode_2_rad=0.02705
shapecode_2_ang=1.57080
shapecode_2_tex_ang=1.25664
shapecode_2_tex_zoom=3.07268
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=t1 = time - int (time);
shape_2_per_frame2=sample = instance/num_inst;
shape_2_per_frame3=t_abs = sample*3;
shape_2_per_frame4=t_rel = sample-time/5;
shape_2_per_frame5=
shape_2_per_frame6=ampl = 2*t_abs/2 ;
shape_2_per_frame7=
shape_2_per_frame8=k1=sin(time/13);
shape_2_per_frame9=k2=sin(time/12);
shape_2_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_2_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_2_per_frame12=oz = -1  ;
shape_2_per_frame13=
shape_2_per_frame14=
shape_2_per_frame15=r = sqr(sin(t_rel*3.4));
shape_2_per_frame16=g = sqr(sin(t_rel));
shape_2_per_frame17=b = sqr (cos(t_rel*1.8));
shape_2_per_frame18=
shape_2_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_2_per_frame20=
shape_2_per_frame21=xang = time/9.5;
shape_2_per_frame22=yang = 0*time/7;
shape_2_per_frame23=zang = -time/22;
shape_2_per_frame24=fov = 0.5;
shape_2_per_frame25=
shape_2_per_frame26=
shape_2_per_frame27=// Rotation um x,y,z
shape_2_per_frame28=
shape_2_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_2_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_2_per_frame31=
shape_2_per_frame32=ox = mx;
shape_2_per_frame33=oy = my;
shape_2_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_2_per_frame36=ox = mx;
shape_2_per_frame37=oz = mz;
shape_2_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_2_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_2_per_frame40=oy = my;
shape_2_per_frame41=oz = mz;
shape_2_per_frame42=
shape_2_per_frame43=oz = oz - 6;
shape_2_per_frame44=x = ox*fov/oz +0.5;
shape_2_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_2_per_frame46=y = oy*fov/oz + 0.5;
shape_2_per_frame47=
shape_2_per_frame48=a=1/mz*.5;
shape_2_per_frame49=//a2=1/mz*.5;
shape_2_per_frame50=//border_a=1/mz*.5;
shape_2_per_frame51=rad=1/mz*.005;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=wave_r=wave_r+(0.6*sin(bass*2.500)+0.4*sin(time*0.70));
per_frame_29=wave_b=wave_b+(0.6*sin(treb*2.500)+0.4*sin(time*0.89));
per_frame_30=wave_g=wave_g+(0.6*sin(mid*2.500)+0.4*sin(time*0.74));
per_frame_31=q1=rot+0.005*sin(time*0.5);
per_frame_32=q30=(bass+treb+mid)*2;
per_pixel_1=rot=q1*2*rad*pow(0&(4+2*sin(rad*20+time))*.1,6);
warp_1=`shader_body
warp_2=`{
warp_3=`    float3 rc = lerp(float3(0,0,0), float3(0,1,0), uv.y);
warp_4=`    uv = float2(uv.x, uv.y+0.005*rc.y);
warp_5=`        
warp_6=`
warp_7=`    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q2,uv.y+texsize.w*q2)) +
warp_8=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y+texsize.w*q2)) +
warp_9=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y-texsize.w*q2)) +
warp_10=`                     GetPixel(float2(uv.x+texsize.z*q2,uv.y-texsize.w*q2)) ) / 4;
warp_11=`    ret = tex2D(sampler_main, uv);
warp_12=`float3 ret7=ret;
warp_13=`if(frame%3==0)ret.z=.71-ret7.x;
warp_14=`
warp_15=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_16=`                      ((uv.xyy*q27
warp_17=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_18=`                      ).xyz*
warp_19=`                      float3(1,1,0)*0.05 + 
warp_20=`                      time*float3(0,0,1)*q29
warp_21=`                     );
warp_22=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_23=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_24=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_25=`
warp_26=`if(frame%5==0)ret.x=.71-ret7.y;
warp_27=`
warp_28=`    ret = cross(boxave, 1-ret)*1.2;
warp_29=`
warp_30=`if(frame%7==0)ret.y=.71-ret7.z;
warp_31=`    
warp_32=`    //ret -= 0.002;
warp_33=`    //ret *= 0.995;
warp_34=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`
comp_89=`float2 d = texsize.zw;
comp_90=`float cutoff = 0.02;
comp_91=`float3 dx = saturate(GetPixel(uv + float2(1,0)*d)-cutoff) - saturate(GetPixel(uv + float2(-1,0)*d)-cutoff);
comp_92=`float3 dy = saturate(GetPixel(uv + float2(0,1)*d)-cutoff) - saturate(GetPixel(uv + float2(0,-1)*d)-cutoff);
comp_93=`float3 gx = length(float2(dx.x, dy.x));
comp_94=`d = texsize.zw*3;
comp_95=`dx = GetBlur1(uv_orig + float2(1,0)*d) - GetBlur1(uv_orig - float2(1,0)*d);
comp_96=`dy = GetBlur1(uv_orig + float2(0,1)*d) - GetBlur1(uv_orig - float2(0,1)*d);
comp_97=`
comp_98=`float z = GetPixel(uv-float2(dx.x,dy.x)*0.03).x*(1-GetPixel(uv+float2(dx.x,dy.x)*0.5).z);
comp_99=`float y = (1-GetPixel(uv-float2(dx.x,dy.x)*0.4).y)*(1-GetPixel(uv+float2(dx.x,dy.x)*0.03).x);
comp_100=`
comp_101=`ret = lerp(ret, float3(1,0.5,0), length(float2(dx.x,dy.x))*2.4);
comp_102=`
comp_103=`float3 ret7=ret;
comp_104=`if(frame%02==0)ret.x=.71-ret7.y;
comp_105=`
comp_106=`ret = lerp(ret,float3(1,0,0),z)*(0.9-2*(dx+dy).z);
comp_107=`
comp_108=`if(frame%11==0)ret.y=.71-ret7.z;
comp_109=`
comp_110=`ret = lerp(ret,float3(1,1,1),y)*(0.9-2*(dx+dy).y);
comp_111=`
comp_112=`ret *= 1 - (dx+dy).x;
comp_113=`
comp_114=`//ret = lerp(ret,1-GetPixel(uv)*1.5,stars);
comp_115=`ret-=slow_roam_sin.wyx*roam_cos.zwx*.7;
comp_116=`
comp_117=`if(frame%13==0)ret.z=.71-ret7.x;
comp_118=`ret=1-ret;
comp_119=`}
comp_120=`
comp_121=`

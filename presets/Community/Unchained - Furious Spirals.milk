[preset00]
fRating=4.000000
fGammaAdj=2.000000
fDecay=0.993000
fVideoEchoZoom=1.006435
fVideoEchoAlpha=0.500000
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=1
bWaveDots=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bMotionVectorsOn=0
bRedBlueStereo=0
nMotionVectorsX=12
nMotionVectorsY=9
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.028400
fWaveScale=0.591188
fWaveSmoothing=0.180000
fWaveParam=0.240000
fModWaveAlphaStart=0.950000
fModWaveAlphaEnd=0.750000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.001700
fShader=0.100000
zoom=0.970297
rot=0.000000
cx=0.439900
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.000000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=0.000000
ib_size=0.000000
ib_r=0.500000
ib_g=0.500000
ib_b=0.500000
ib_a=0.000000
per_frame_1=warp=0;
per_frame_2=old_bass_flop=bass_flop;
per_frame_3=old_treb_flop=treb_flop;
per_frame_4=old_mid_flop=mid_flop;
per_frame_5=chaos=.9+.1*sin(pulse);
per_frame_6=entropy=if(bnot(entropy),2,if(above(pulse,pulse_cap-entropy*10),1+int(rand(3)),entropy));
per_frame_7=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_8=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_9=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_10=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_11=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_12=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_13=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_14=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_15=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_16=bass_residual = bass_changed*sin(time*bass_thresh) + bnot(bass_changed)*bass_residual;
per_frame_17=treb_residual = treb_changed*sin(time*treb_thresh) + bnot(treb_changed)*treb_residual;
per_frame_18=mid_residual = mid_changed*sin(time*mid_thresh) + bnot(mid_changed)*mid_residual;
per_frame_19=pulse_cap=entropy*100;
per_frame_20=pulse=if(above(abs(pulse),pulse_cap),0-pulse_cap,pulse+.1*entropy*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.03);
per_frame_21=pulse_timer=sin(pulse);
per_frame_22=effect_1=1+1*bass_flop*above(pulse_timer,0);
per_frame_23=effect_2=1+2*treb_flop*below(pulse_timer,0);
per_frame_24=effect_3=1+4*mid_flop*above(pulse_timer,0);
per_frame_25=effect_4=1+6*mid_flop*below(pulse_timer,0);
per_frame_26=effect_5=1+10*treb_flop*above(pulse_timer,0);
per_frame_27=effect_6=1+12*bass_flop*below(pulse_timer,0);
per_frame_28=state=effect_1*effect_2*effect_3*effect_4*effect_5*effect_6;
per_frame_29=q1=mid_residual;
per_frame_30=q2=bass_residual;
per_frame_31=q3=treb_residual;
per_frame_32=q4=sin(time*state*entropy*chaos*.002);
per_frame_33=q5=entropy;
per_frame_34=wave_r=wave_r+.5*if(treb_flop,bass_residual,mid_residual);
per_frame_35=wave_r=wave_g+.5*if(treb_changed,mid_residual,treb_residual);
per_frame_36=wave_r=wave_b+.5*if(bass_flop,treb_residual,bass_residual);
per_frame_37=cx=.5+.1*bass_residual;
per_frame_38=cy=.5+.1*treb_residual;
per_frame_39=wave_x=cy;
per_frame_40=wave_y=cx;
per_frame_41=ob_r=if(bass_flop,treb_flop,wave_g);
per_frame_42=ob_b=if(treb_flop,wave_r,wave_b);
per_frame_43=ob_g=if(mid_flop,wave_g,wave_b);
per_frame_44=ob_a=.05+.04*wave_r;
per_frame_45=ob_size=.05+.04*wave_b;
per_frame_46=ib_r=ob_g;
per_frame_47=ib_b=ib_b+.5*if(bass_changed,mid_residual,bass_residual);
per_frame_48=ib_g=ib_g+.5*sin(time*.02*entropy);
per_frame_49=ib_a=.05+.04*wave_g;
per_frame_50=ib_size=.05+.04*ob_g;
per_frame_51=zoom=zoom+.19*mid_residual;
per_pixel_1=g1=sin(q4*time*q5*.01);
per_pixel_2=factor=q4*time*q5*.03;
per_pixel_3=flip=sin(factor);
per_pixel_4=flop=cos(factor);
per_pixel_5=funk=(x*flip+y*flop)*10*q1+rad*10*q2;
per_pixel_6=zoom=zoom+.2*cos(funk)*q3;
per_pixel_7=rot=if(above(q4,0),q1/3,q2/3);

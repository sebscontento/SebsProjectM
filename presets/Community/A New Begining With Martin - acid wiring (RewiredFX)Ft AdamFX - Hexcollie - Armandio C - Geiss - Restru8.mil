MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=2.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.231
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.800
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=0.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=ti = time*1;
wave_0_per_frame2=r = .75 + .25*sin(ti*1.789);
wave_0_per_frame3=g = .75 + .25*sin(ti*1.123);
wave_0_per_frame4=b = .75 + .25*sin(ti*1.465);
wave_0_per_point1=x = int(rand(1001))*.001;
wave_0_per_point2=Y = int(rand(1001))*.001;
wave_0_per_point3=
wave_0_per_point4=ti = time*.3;
wave_0_per_point5=
wave_0_per_point6=mx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));
wave_0_per_point7=my = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));
wave_0_per_point8=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_0_per_point9=tot = zm;
wave_0_per_point10=mx = x - .5 + .25*(sin(ti*1.3185) + sin(ti*.9105));
wave_0_per_point11=my = y - .5 + .25*(sin(ti*.8113) + sin(ti*1.0287));
wave_0_per_point12=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_0_per_point13=tot = tot + zm;
wave_0_per_point14=
wave_0_per_point15=mx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));
wave_0_per_point16=my = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));
wave_0_per_point17=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_0_per_point18=tot = tot + zm;
wave_0_per_point19=mx = x - .5 + .25*(sin(ti*1.1385) + sin(ti*.9901));
wave_0_per_point20=my = y - .5 + .25*(sin(ti*.7028) + sin(ti*1.3548));
wave_0_per_point21=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_0_per_point22=tot = tot + zm;
wave_0_per_point23=
wave_0_per_point24=
wave_0_per_point25=mx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));
wave_0_per_point26=my = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));
wave_0_per_point27=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_0_per_point28=tot = tot + zm;
wave_0_per_point29=mx = x - .5 + .25*(sin(ti*1.5416) + sin(ti*.7852));
wave_0_per_point30=my = y - .5 + .25*(sin(ti*.7436) + sin(ti*1.3266));
wave_0_per_point31=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_0_per_point32=tot = tot + zm;
wave_0_per_point33=
wave_0_per_point34=tot = abs(tot);
wave_0_per_point35=
wave_0_per_point36=mx = x - .5;
wave_0_per_point37=my = y - .5;
wave_0_per_point38=dis = pow(mx*mx + my*my,.1);
wave_0_per_point39=
wave_0_per_point40=a = min(1,max(0,tot*10))*max(0,1-dis);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=100.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.000
wave_1_per_point1=x = int(rand(1001))*.001;
wave_1_per_point2=Y = int(rand(1001))*.001;
wave_1_per_point3=
wave_1_per_point4=ti = time*.3;
wave_1_per_point5=
wave_1_per_point6=mx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));
wave_1_per_point7=my = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));
wave_1_per_point8=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_1_per_point9=tot = zm;
wave_1_per_point10=mx = x - .5 + .25*(sin(ti*1.3185) + sin(ti*.9105));
wave_1_per_point11=my = y - .5 + .25*(sin(ti*.8113) + sin(ti*1.0287));
wave_1_per_point12=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_1_per_point13=tot = tot + zm;
wave_1_per_point14=
wave_1_per_point15=mx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));
wave_1_per_point16=my = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));
wave_1_per_point17=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_1_per_point18=tot = tot + zm;
wave_1_per_point19=mx = x - .5 + .25*(sin(ti*1.1385) + sin(ti*.9901));
wave_1_per_point20=my = y - .5 + .25*(sin(ti*.7028) + sin(ti*1.3548));
wave_1_per_point21=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_1_per_point22=tot = tot + zm;
wave_1_per_point23=
wave_1_per_point24=
wave_1_per_point25=mx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));
wave_1_per_point26=my = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));
wave_1_per_point27=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_1_per_point28=tot = tot + zm;
wave_1_per_point29=mx = x - .5 + .25*(sin(ti*1.5416) + sin(ti*.7852));
wave_1_per_point30=my = y - .5 + .25*(sin(ti*.7436) + sin(ti*1.3266));
wave_1_per_point31=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_1_per_point32=tot = tot + zm;
wave_1_per_point33=
wave_1_per_point34=tot = abs(tot);
wave_1_per_point35=
wave_1_per_point36=mx = x - .5;
wave_1_per_point37=my = y - .5;
wave_1_per_point38=dis = pow(mx*mx + my*my,.1);
wave_1_per_point39=
wave_1_per_point40=a = min(1,max(0,tot*10))*max(0,1-dis);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03060
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.38615
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.330
shape_0_per_frame1=rad=rad+.3*sin(1*time);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.60915
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.01000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=0.900
shapecode_1_border_g=0.220
shapecode_1_border_b=0.000
shapecode_1_border_a=1.000
shape_1_per_frame1=rad=.35+.3*sin(time);
shape_1_per_frame2=border_b=.3+.7*sin(.2*bass);
shape_1_per_frame3=border_g=.3+.7*sin(.2*bass);
shape_1_per_frame4=
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.910
shapecode_2_y=0.500
shapecode_2_rad=0.23986
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.50833
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.180
shape_2_per_frame1=tex_zoom = 1.2*tex_zoom/rad;
shape_2_per_frame2=rad=.25+.02*sin(3*bass);
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.000
shapecode_3_y=0.500
shapecode_3_rad=1.88460
shapecode_3_ang=0.00000
shapecode_3_tex_ang=4.71230
shapecode_3_tex_zoom=0.80324
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.260
shape_3_per_frame1=rad=1.7+.2*sin(time);
shape_3_per_frame2=tex_zoom =.3*rad*tex_zoom;
per_frame_init_1=speed_=1;
per_frame_1=dec_med = pow (0.9, 30/fps);
per_frame_2=dec_slow = pow (0.96, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %12;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_10=
per_frame_11=q20 = avg;
per_frame_12=q21 = beat;
per_frame_13=q22 = peak;
per_frame_14=q24 = is_beat;
per_frame_15=vol = (bass_att + mid_att + treb_att)/2;
per_frame_16=vol_ = dec_med * vol_ + (1-dec_med)* vol;
per_frame_17=vol__ = dec_med * vol__ + (1-dec_med)* vol_;
per_frame_18=q27 = index + 1;
per_frame_19=q28 = index2 + 2;
per_frame_20=
per_frame_21=k1 =  is_beat*equal(index%4,0);
per_frame_22=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_23=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_24=rott = p2 * 3.1416/4;
per_frame_25=
per_frame_26=q1 = cos(rott);
per_frame_27=q2 = sin(rott);
per_frame_28=q3 = -q2;
per_frame_29=q4 = q1;
per_frame_30=
per_frame_31=trig = q24 * bnot(index%8);
per_frame_32=vx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);
per_frame_33=vy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);
per_frame_34=vz = vz*bnot(trig) + trig* (int(rand(100))/100-.5);
per_frame_35=
per_frame_36=speed = min(vol_-vol__+.5,1);
per_frame_37=speed = max(speed,-.5);
per_frame_38=speed_ = bnot(trig)*speed_ + trig*speed;
per_frame_39=spg = dec_med*spg + (1-dec_med)*speed_;
per_frame_40=movz = movz + 1/fps*(speed_+0*vol_/6);
per_frame_41=q9 = movz;
per_frame_42=q12 = min(q22,6)*2;
per_frame_43=
per_frame_44=//puls = puls*dec_med + (1-dec_med)*q22;
per_frame_45=
per_frame_46=q13 = 2* sin(movz/3-time/11);
per_frame_47=
per_frame_48=trig = bnot(index%4) * q24;
per_frame_49=dir = bnot(trig)*dir + trig*(int(rand(10))-5);
per_frame_50=trel = trel + .1/fps*dir;
per_frame_51=q5 = cos(trel-movz);
per_frame_52=q6 = sin(trel/2-movz);
per_frame_53=q7 = -q6;
per_frame_54=q8 = q5;
per_frame_55=
per_frame_56=ang0 = ang0*dec_med + vz*(1-dec_med);
per_frame_57=q17 = ang0*2; 
per_frame_58=q30 = .2*sin(time/8);
per_frame_59=
per_frame_60=q31 = .5 + .5*sin(time/3.3);
per_frame_61=
per_frame_62=zoom = 1;
per_frame_63=rot = .0;
per_frame_64=dx = .00;
per_frame_65=monitor = q28;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`
warp_6=`
warp_7=`float2 uv1 = (uv_orig-.5) * aspect.xy;
warp_8=`
warp_9=`float2 uv6 = uv1;
warp_10=`
warp_11=`float z = 6*q2*length(uv1) ;
warp_12=`float2 d = -normalize(1/uv1);
warp_13=`
warp_14=`float2 rs = clamp(tan(q1*z+q27/8)*d,-8,8);
warp_15=`
warp_16=`//rs *= cos(uv1.yx*q27*3) ;
warp_17=`
warp_18=`uv += rs/32;
warp_19=`
warp_20=`uv6 = 2*(float2(rad, length(uv1)));
warp_21=`
warp_22=`//uv6 = mul(uv6,float2x2(_qa));
warp_23=`
warp_24=`mus = (1/(sqrt(uv6.y-q27/18)));
warp_25=`//mus = 1/(length(.1*sin(22*uv+rand_frame*6)));
warp_26=`//mus *= float3 (1,.84,.5);
warp_27=`//mus *= roam_cos;
warp_28=`
warp_29=`float3 blur = GetBlur1(frac(uv));
warp_30=`
warp_31=`float3 crisp= tex2D(sampler_main,uv) - .03*rad;
warp_32=`
warp_33=`float3 ret1 = crisp - blur*.0 + .02*mus* roam_cos;
warp_34=`ret = q24*(ret1 * .99 -  .0206) + (1-q24)*GetPixel((uv_orig-.5)*1+.5);
warp_35=`
warp_36=`
warp_37=`}
comp_1=`float3 ret1, neu, neu2;
comp_2=`float2 uv1,uv2;
comp_3=`float k,m,n,zoom,dist,dist2,inten,mask;
comp_4=`float2x2 dir;
comp_5=`int i, anz;
comp_6=`
comp_7=`shader_body
comp_8=`{
comp_9=`uv -= 0.5;
comp_10=`uv *= aspect.xy;    
comp_11=`
comp_12=`ret1 = 0; anz = 4; n = 1; 
comp_13=`
comp_14=`float t_rel = q10;
comp_15=`float wat = .0*sin(rad*122)*rad*rad;
comp_16=`
comp_17=`uv = mul(uv,float2x2(_qa));
comp_18=`while (n <= anz) {
comp_19=`    m =  n-int(t_rel);
comp_20=`
comp_21=`    dist = 1-frac(n/anz-frac(-t_rel)/anz); 
comp_22=`   //evtl sqrt !
comp_23=`
comp_24=`   zoom = 4 ;
comp_25=`
comp_26=`uv2 = uv;
comp_27=`//if ((m%2)==0) {uv2=uv.yx;} else {uv2=uv;}
comp_28=`   uv2=uv.xy * (m%2) + uv.yx*((m+1)%2);
comp_29=`    dist2 = dist*dist;
comp_30=`    inten =  3*sqrt(dist)*(1-dist*dist);
comp_31=`    uv2 = zoom*uv2*dist+ .35*m +q9*dist2;
comp_32=`    neu = GetPixel (uv2+wat);
comp_33=`    mask = 1-.9*saturate(8*dist)*saturate(64*neu);
comp_34=`    ret1 = ret1*mask + neu*inten;
comp_35=`n++;
comp_36=`}
comp_37=`
comp_38=`ret = 1.8*ret1;
comp_39=`
comp_40=`ret-=roam_sin.wzy*roam_cos.zxy;
comp_41=`}

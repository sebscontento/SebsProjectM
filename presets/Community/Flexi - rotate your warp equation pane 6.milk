MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=0
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=0.312
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=0.107
fZoomExponent=6.22775
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01743
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=4
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.09348
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=ab = 1;
wave_0_per_frame1=t1 = q1;
wave_0_per_frame2=t2 = q2;
wave_0_per_frame3=t3 = q3;
wave_0_per_frame4=t4 = q4;
wave_0_per_frame5=t5 = q5;
wave_0_per_frame6=t6 = q6;
wave_0_per_point1=s8 = sample*383;
wave_0_per_point2=dir = s8*0.125*3.1415*0.5;
wave_0_per_point3=v = 0.0005;
wave_0_per_point4=t1 = 0;//value1*0.01;//t1*0.97 + value1*v;
wave_0_per_point5=d = 1;
wave_0_per_point6=xx = sin(dir+10*time)*(sample*d+t1);
wave_0_per_point7=yy = cos(dir+10*time)*(sample*d+t1);
wave_0_per_point8=zz = cos(sample*1000+time*5)*0.0;//value2*0.05*sample;
wave_0_per_point9=v = 0.001;
wave_0_per_point10=
wave_0_per_point11=w = 1-(sample-0.5)*t6;//(sample*sin(time*0.3)*0.02-1);
wave_0_per_point12=s1 = sin(t2*w);
wave_0_per_point13=s2 = sin(t3*w);
wave_0_per_point14=s3 = sin(t4*w);
wave_0_per_point15=c1 = cos(t2*w);
wave_0_per_point16=c2 = cos(t3*w);
wave_0_per_point17=c3 = cos(t4*w);
wave_0_per_point18=
wave_0_per_point19=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point20=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point21=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point22=
wave_0_per_point23=a = 2;
wave_0_per_point24=zoom = 0.5*atan2(a-z,a);//0.5*(1/(z+a));
wave_0_per_point25=x = 0.5 + zoom*x1;
wave_0_per_point26=y = 0.5 + zoom*y1;
wave_0_per_point27=
wavecode_1_enabled=0
wavecode_1_samples=484
wavecode_1_sep=4
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=9.94125
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=ab = 1;
wave_1_per_frame1=t1 = q1;
wave_1_per_frame2=t2 = q2;
wave_1_per_frame3=t3 = q3;
wave_1_per_frame4=t4 = q4;
wave_1_per_frame5=t5 = q5;
wave_1_per_frame6=t6 = q6;
wave_1_per_point1=s8 = sample*383;
wave_1_per_point2=
wave_1_per_point3=s = 0.25;
wave_1_per_point4=xx = ((sample*(465))%15 - 8)*s*2;
wave_1_per_point5=yy = ((sample*31)%31 - 16)*s;
wave_1_per_point6=zz = value1+sin(time+yy*0.3)*1;
wave_1_per_point7=
wave_1_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_1_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_1_per_point10=s1 = sin(t2*w);
wave_1_per_point11=s2 = sin(t3*w);
wave_1_per_point12=s3 = sin(t4*w);
wave_1_per_point13=c1 = cos(t2*w);
wave_1_per_point14=c2 = cos(t3*w);
wave_1_per_point15=c3 = cos(t4*w);
wave_1_per_point16=
wave_1_per_point17=
wave_1_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_1_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_1_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_1_per_point21=
wave_1_per_point22=a = 500;
wave_1_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_1_per_point24=x = 0.5 + zoom*x1;
wave_1_per_point25=y = 0.5 + zoom*y1;
wave_1_per_point26=
wave_1_per_point27=pi3 = 3.1415*2*0.3333;
wave_1_per_point28=t = -z*0.5+t5;
wave_1_per_point29=c = 10;
wave_1_per_point30=r = sin(t)*c;
wave_1_per_point31=
wave_1_per_point32=g = sin(t+pi3)*c;
wave_1_per_point33=
wave_1_per_point34=b = sin(t-pi3)*c;
wave_1_per_point35=
wave_1_per_point36=j = 0.71;
wave_1_per_point37=//r = 0.5+xx*j;
wave_1_per_point38=//g = 0.5+yy*j;
wave_1_per_point39=//b = 0.5+zz*j;
wave_1_per_point40=
wave_1_per_point41=r = if(above(r,1),1,r);
wave_1_per_point42=r = if(below(r,0),0,r);
wave_1_per_point43=g = if(above(g,1),1,g);
wave_1_per_point44=g = if(below(g,0),0,g);
wave_1_per_point45=b = if(above(b,1),1,b);
wave_1_per_point46=b = if(below(b,0),0,b);
wave_1_per_point47=
wave_1_per_point48=
wave_1_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
wavecode_2_enabled=0
wavecode_2_samples=484
wavecode_2_sep=4
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=9.94125
wavecode_2_smoothing=1.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=t2 = 0;
wave_2_init2=t3 = 0;
wave_2_init3=t4 = 0;
wave_2_init4=ab = 1;
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_point1=s8 = sample*383;
wave_2_per_point2=
wave_2_per_point3=s = 0.25;
wave_2_per_point4=xx = ((sample*(465))%15 - 8)*s*2;
wave_2_per_point5=zz = ((sample*31)%31 - 16)*s;
wave_2_per_point6=yy = value1+sin(time +xx*0.3)*1;
wave_2_per_point7=
wave_2_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_2_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_2_per_point10=s1 = sin(t2*w);
wave_2_per_point11=s2 = sin(t3*w);
wave_2_per_point12=s3 = sin(t4*w);
wave_2_per_point13=c1 = cos(t2*w);
wave_2_per_point14=c2 = cos(t3*w);
wave_2_per_point15=c3 = cos(t4*w);
wave_2_per_point16=
wave_2_per_point17=
wave_2_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_2_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_2_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_2_per_point21=
wave_2_per_point22=a = 500;
wave_2_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_2_per_point24=x = 0.5 + zoom*x1;
wave_2_per_point25=y = 0.5 + zoom*y1;
wave_2_per_point26=
wave_2_per_point27=pi3 = 3.1415*2*0.3333;
wave_2_per_point28=t = -z*0.5+t5;
wave_2_per_point29=c = 10;
wave_2_per_point30=r = sin(t)*c;
wave_2_per_point31=
wave_2_per_point32=g = sin(t+pi3)*c;
wave_2_per_point33=
wave_2_per_point34=b = sin(t-pi3)*c;
wave_2_per_point35=
wave_2_per_point36=j = 0.71;
wave_2_per_point37=//r = 0.5+xx*j;
wave_2_per_point38=//g = 0.5+yy*j;
wave_2_per_point39=//b = 0.5+zz*j;
wave_2_per_point40=
wave_2_per_point41=r = if(above(r,1),1,r);
wave_2_per_point42=r = if(below(r,0),0,r);
wave_2_per_point43=g = if(above(g,1),1,g);
wave_2_per_point44=g = if(below(g,0),0,g);
wave_2_per_point45=b = if(above(b,1),1,b);
wave_2_per_point46=b = if(below(b,0),0,b);
wave_2_per_point47=
wave_2_per_point48=
wave_2_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
wavecode_3_enabled=0
wavecode_3_samples=484
wavecode_3_sep=4
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=9.94125
wavecode_3_smoothing=1.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=ab = 1;
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q2;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_point1=s8 = sample*383;
wave_3_per_point2=
wave_3_per_point3=s = 0.25;
wave_3_per_point4=yy = ((sample*(465))%15 - 8)*s*2;
wave_3_per_point5=zz = ((sample*31)%31 - 16)*s;
wave_3_per_point6=xx = value1+ sin(time+yy*0.3)*1;
wave_3_per_point7=
wave_3_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_3_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_3_per_point10=s1 = sin(t2*w);
wave_3_per_point11=s2 = sin(t3*w);
wave_3_per_point12=s3 = sin(t4*w);
wave_3_per_point13=c1 = cos(t2*w);
wave_3_per_point14=c2 = cos(t3*w);
wave_3_per_point15=c3 = cos(t4*w);
wave_3_per_point16=
wave_3_per_point17=
wave_3_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_3_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_3_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_3_per_point21=
wave_3_per_point22=a = 500;
wave_3_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_3_per_point24=x = 0.5 + zoom*x1;
wave_3_per_point25=y = 0.5 + zoom*y1;
wave_3_per_point26=
wave_3_per_point27=pi3 = 3.1415*2*0.3333;
wave_3_per_point28=t = -z*0.5+t5;
wave_3_per_point29=c = 10;
wave_3_per_point30=r = sin(t)*c;
wave_3_per_point31=
wave_3_per_point32=g = sin(t+pi3)*c;
wave_3_per_point33=
wave_3_per_point34=b = sin(t-pi3)*c;
wave_3_per_point35=
wave_3_per_point36=j = 0.71;
wave_3_per_point37=//r = 0.5+xx*j;
wave_3_per_point38=//g = 0.5+yy*j;
wave_3_per_point39=//b = 0.5+zz*j;
wave_3_per_point40=
wave_3_per_point41=r = if(above(r,1),1,r);
wave_3_per_point42=r = if(below(r,0),0,r);
wave_3_per_point43=g = if(above(g,1),1,g);
wave_3_per_point44=g = if(below(g,0),0,g);
wave_3_per_point45=b = if(above(b,1),1,b);
wave_3_per_point46=b = if(below(b,0),0,b);
wave_3_per_point47=
wave_3_per_point48=
wave_3_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16611
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=21.85863
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.500
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=vx = 0;
shape_0_init2=vy = 0;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.99863
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.49831
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.080
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.21525
shapecode_2_ang=0.00000
shapecode_2_tex_ang=2.57611
shapecode_2_tex_zoom=0.55595
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0;
per_frame_init_2=y1 = 0;
per_frame_init_3=q11 = 0.5/asin(1);
per_frame_1=// high saturation color cycler //
per_frame_2=bb = bb*0.98 + bass*0.02;
per_frame_3=mm = mm*0.98 + mid*0.02;
per_frame_4=tt = tt*0.98 + treb*0.02;
per_frame_5=
per_frame_6=zoom = 0.999;
per_frame_7=
per_frame_8=mx = max(max(bb,mm),tt);
per_frame_9=mn = min(min(bb,mm),tt);
per_frame_10=ob_r  = (bb-mn)/(mx-mn);
per_frame_11=ob_g = (mm-mn)/(mx-mn);
per_frame_12=ob_b = (tt-mn)/(mx-mn);
per_frame_13=
per_frame_14=v = 0.2/fps;
per_frame_15=bm = bm + (ob_r-ob_g)*v;
per_frame_16=mt = mt + (ob_g-ob_b)*v;
per_frame_17=
per_frame_18=q26 = -bm; // rotation
per_frame_19=q27 = mt; // growth
per_pixel_1=
per_pixel_2=// have a nice warp effect? - rotate it like a shape!
per_pixel_3=
per_pixel_4=  angle = asin(1);
per_pixel_5=
per_pixel_6=/////////////////////////////////////////////////////////
per_pixel_7=X1 = (x-0.5)*aspectx; // center
per_pixel_8=Y1 = (y-0.5)*aspecty;
per_pixel_9=x = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane
per_pixel_10=y = sin(-angle)*X1 +cos(-angle)*Y1;
per_pixel_11=/////////////////////////////////////////////////////////
per_pixel_12=
per_pixel_13=  // place your original code here
per_pixel_14=
per_pixel_15=  t = time*2;
per_pixel_16=  v = 0.002;
per_pixel_17=  n = 12;
per_pixel_18=
per_pixel_19=  dx = v*(cos((-x+y)*n+t) + sin((x+y)*n+t)); // these are the 2 lines for my mushroom-movement ;-)
per_pixel_20=  dy = v*(cos((x-y)*n-t) + sin((-x-y)*n-t)); // insert here your dx/dy-code-to-rotate (but remember the shifting: center is @ 0,0)
per_pixel_21=
per_pixel_22=
per_pixel_23=
per_pixel_24=/////////////////////////////////////////////////////////
per_pixel_25=dx1 = cos(angle)*dx - sin(angle)*dy; // and finally the dx/dy pane is rotated to match the x/y pane
per_pixel_26=dy1 = sin(angle)*dx + cos(angle)*dy;
per_pixel_27=dx = dx1*aspectx;
per_pixel_28=dy = dy1*aspecty;
per_pixel_29=/////////////////////////////////////////////////////////
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`ret = lerp(GetPixel(uv),1-GetPixel(uv)*1.5,stars);
comp_89=`}
comp_90=`
comp_91=`

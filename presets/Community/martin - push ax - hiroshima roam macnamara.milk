MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.527
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.100
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=8
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.08081
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.300
wavecode_0_a=0.600
wave_0_per_point1=x = sample ;
wave_0_per_point2=trel = time*.1 + bass_att*.0;
wave_0_per_point3=y = 4*(trel - int(trel));
wave_0_per_point4=
wavecode_1_enabled=1
wavecode_1_samples=8
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=0.000
wavecode_1_g=0.400
wavecode_1_b=1.000
wavecode_1_a=0.600
wave_1_per_point1=y = sample ;
wave_1_per_point2=trel = time*.1;
wave_1_per_point3=x = 4*(trel - int(trel));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=33
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=81
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.04896
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=trel = time/8;
shape_0_per_frame3=k1 = instance/num_inst;
shape_0_per_frame4=k2 = k1 + trel - int(k1+trel);
shape_0_per_frame5=
shape_0_per_frame6=y0 = k2+.01 ;
shape_0_per_frame7=
shape_0_per_frame8=xwidth = .1*(cos(6*k1)+3); //breite
shape_0_per_frame9=xofs = .1*cos(k2*6+trel)*y0;
shape_0_per_frame10=x = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;
shape_0_per_frame11=//xwidth in der letzten Klammer : Test
shape_0_per_frame12=
shape_0_per_frame13=y = y0;
shape_0_per_frame14=
shape_0_per_frame15=bright = 1-sqr(y0); 
shape_0_per_frame16=a = max(bright,0); a2 = 0;
shape_0_per_frame17=rad = .1*y0+.1 - .0*sin(k1*954);
shape_0_per_frame18=
shape_0_per_frame19=r = .0; g = 0; b = .0;
shape_0_per_frame20=r2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !
shape_0_per_frame21=additive = 1; ///sonst andere farben im warp-s gestoert
shapecode_1_enabled=0
shapecode_1_sides=12
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=571
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.200
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=mov1 = q1;
shape_1_per_frame2=RotMode = q3;
shape_1_per_frame3=burst = q10;
shape_1_per_frame4=copies = q14;
shape_1_per_frame5=copy = (instance%copies)/copies;
shape_1_per_frame6=k1 = int(instance/copies)*copies/num_inst;
shape_1_per_frame7=k1 = int(k1*burst)/burst+k1/burst;
shape_1_per_frame8=
shape_1_per_frame9=mov1 = mov1 + k1 -copy*q2;//dt
shape_1_per_frame10=mov1 = mov1 - int(mov1);
shape_1_per_frame11=
shape_1_per_frame12=RotMode = RotMode - copy*q4;
shape_1_per_frame13=rota = mov1 * RotMode*q5*2 ;
shape_1_per_frame14=mov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);
shape_1_per_frame15=
shape_1_per_frame16=mov1 = pow(mov1,.9); //Schneller bei t=0;
shape_1_per_frame17=
shape_1_per_frame18=Tht = sin(k1*k1*123.2)*(.2 + RotMode*.0);
shape_1_per_frame19=Phi = k1*1613.3+rota;
shape_1_per_frame20=v0 = (1.0 + .3*cos(k1*13234.7))*q5;
shape_1_per_frame21=
shape_1_per_frame22=z0 = q18/q5; //proximity
shape_1_per_frame23=
shape_1_per_frame24=t0 = .4;
shape_1_per_frame25=spur = (mov1-t0) * above(mov1-t0,0)*q15 ;
shape_1_per_frame26=py = spur*sin(copy*6.28);
shape_1_per_frame27=px = spur*cos(copy*6.28);
shape_1_per_frame28=
shape_1_per_frame29=fov = z0*2; //kein vol hier, sonst y-skal daneben
shape_1_per_frame30=ox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5
shape_1_per_frame31=oy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;
shape_1_per_frame32=oz = mov1*v0*sin(Tht)*sin(Phi); 
shape_1_per_frame33=
shape_1_per_frame34=ox = ox +  (k1-.5)*q17 +px; 
shape_1_per_frame35=oy = oy -py;
shape_1_per_frame36=oz = oz +py*3;
shape_1_per_frame37=
shape_1_per_frame38=//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl
shape_1_per_frame39=//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl
shape_1_per_frame40=rad = .025*z0/(oz+z0)*(1-mov1*.5);
shape_1_per_frame41=
shape_1_per_frame42=x = .5 + fov*ox/(oz+z0);
shape_1_per_frame43=y = .5 + fov*oy/(oz+z0);
shape_1_per_frame44=vis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);
shape_1_per_frame45=
shape_1_per_frame46=a = vis*.7/sqrt(copies)*(1+above(spur,0));
shape_1_per_frame47=a2 = 0.;
shape_1_per_frame48=g = flim;
shapecode_2_enabled=1
shapecode_2_sides=13
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=5
shapecode_2_x=0.650
shapecode_2_y=0.380
shapecode_2_rad=0.57049
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.700
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=k1 = instance/num_inst + q27*.2;
shape_2_per_frame2=x = .5 + .3*sin(instance*k1*413);
shape_2_per_frame3=y = .5 + .3 * sin(instance*k1*113);
shape_2_per_frame4=
shape_2_per_frame5=rad = .1 + .4*sin(k1*333);
shape_2_per_frame6=
shape_2_per_frame7=r =  .5*sin(k1*234);
shape_2_per_frame8=b =  .5*sin(k1*534);
shape_2_per_frame9=g =  .5*sin(k1*34);
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=1.000
shapecode_3_y=0.550
shapecode_3_rad=0.97237
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.52010
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.800
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_per_frame1=//x = .5 + .2*cos(q27);
shape_3_per_frame2=//y = .5 + .2*sin(q27);
shape_3_per_frame3=tex_ang = 0;
shape_3_per_frame4=x = sin(time*.1)*.2+.5
per_frame_init_1=movx = int(rand(10));
per_frame_init_2=movy = int(rand(10));
per_frame_1=dec_m = pow (0.85, 30/fps); dec_s = pow (0.9, 30/fps); 
per_frame_2=
per_frame_3=beat = bass+mid+treb; 
per_frame_4=avg = avg*dec_s + beat*(1-dec_s);
per_frame_5=is_beat = above(beat, .4+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_8=index = (index + is_beat) %32;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_10=index3 = (index3 + is_beat* if(bnot(int(rand(8))%2),-1,1)*bnot(index%16))%6;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q22 = peak;
per_frame_14=q24 = is_beat;
per_frame_15=q27 = index +1;
per_frame_16=q28 = index2;
per_frame_17=ZDist =  .3 + .4*pow(sin(.5*(xang+zang_-movy)),4); //zoom ;
per_frame_18=q29 = .12/ZDist ;
per_frame_19=
per_frame_20=q30 = int(time*8) * .0 *  (index2%2); //lower zones shift
per_frame_21=q31 = above (beat,avg*2) * (beat-avg*2);
per_frame_22=
per_frame_23=dir = dir*dec_s + (1-dec_s)*index3*3.1416*1/2;
per_frame_24=speed = .08 + .14*(index2%2)*ZDist;
per_frame_25=movx = movx + cos(dir)*pow(cos(dir),8)/fps*speed ;
per_frame_26=movy = movy + sin(dir)*pow(sin(dir),8)/fps*speed ;
per_frame_27=monitor = index3;
per_frame_28=
per_frame_29=xang =  -cos((zang_+movx+movy*2)+time*.1) * .7;;
per_frame_30=q5 = movx; q6 = movy;; 
per_frame_31=yang = 0;
per_frame_32=tmp = sin(8* (movx+movy))  ;
per_frame_33=zang_ = zang_ + tmp*pow(tmp,6)/fps/(pow(xang,2)+.05)/2*sin(time/2.5);
per_frame_34=pulse = q27 * bnot((2+index2)%4);
per_frame_35=zang = zang_+pulse ;
per_frame_36=
per_frame_37=ox = -0; oy = .0; oz = ZDist;
per_frame_38=mx = ox*cos(zang) - oy*sin(zang);
per_frame_39=my = ox*sin(zang) + oy*cos(zang);
per_frame_40=ox = mx;oy = my;
per_frame_41=mx = ox*cos(yang) + oz*sin(yang);
per_frame_42=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_43=ox = mx;oz = mz;
per_frame_44=my = oy*cos(xang) - oz*sin(xang);
per_frame_45=mz = oy*sin(xang) + oz*cos(xang);
per_frame_46=oy = my;oz = mz;
per_frame_47=q11=ox; q12 = oy; q13 = oz; //Position
per_frame_48=
per_frame_49=//Vektor x nach rechts
per_frame_50=ox = 1; oy = 0; oz = 0;
per_frame_51=mx = ox*cos(zang) - oy*sin(zang);
per_frame_52=my = ox*sin(zang) + oy*cos(zang);
per_frame_53=ox = mx;oy = my;
per_frame_54=mx = ox*cos(yang) + oz*sin(yang);
per_frame_55=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_56=ox = mx;oz = mz;
per_frame_57=my = oy*cos(xang) - oz*sin(xang);
per_frame_58=mz = oy*sin(xang) + oz*cos(xang);
per_frame_59=oy = my;oz = mz;
per_frame_60=q14=ox; q15 = oy; q16 = oz;
per_frame_61=
per_frame_62=
per_frame_63=//Vektor z nach hinten
per_frame_64=ox = 0; oy = 0; oz = 1;;
per_frame_65=
per_frame_66=mx = ox*cos(zang) - oy*sin(zang);
per_frame_67=my = ox*sin(zang) + oy*cos(zang);
per_frame_68=ox = mx;oy = my;
per_frame_69=mx = ox*cos(yang) + oz*sin(yang);
per_frame_70=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_71=ox = mx;oz = mz;
per_frame_72=my = oy*cos(xang) - oz*sin(xang);
per_frame_73=mz = oy*sin(xang) + oz*cos(xang);
per_frame_74=oy = my;
per_frame_75=oz = mz;
per_frame_76=q17=ox; q18 = oy; q19 = oz;
warp_1=`shader_body {
warp_2=`
warp_3=`//uv = uv_orig;
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float2 tmp = uv1;
warp_8=`tmp.x = ang*3; tmp.y = rad;
warp_9=`uv1 = tmp;
warp_10=`
warp_11=`float3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);
warp_12=`
warp_13=`float3 ret1 = GetBlur1 (uv)-.3;
warp_14=`float3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;
warp_15=`float3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;
warp_16=`
warp_17=`ret = -.4*blur + crisp;
warp_18=`    
warp_19=` ret *= 0.98 * pow(1-.01*q28*q28*rad,2); 
warp_20=`  ret -= 0.04;
warp_21=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`sampler sampler_pw_noise_hq;
comp_3=`static const float quality = 5;
comp_4=`static float depth = q29*8;
comp_5=`float3 rsl, rsl2, rsl3, ret1, screen3, back, neu2;
comp_6=`float2 dz, uv0, uv1, uv2, uv4, rsk, dz1,tmp2, Kugel1;
comp_7=`float  lprof, gmask, tile,dist, tower;
comp_8=`static float lav_gnd = 0;
comp_9=`static float2 mov = float2 (q5,q6);
comp_10=`
comp_11=`static float3 t = float3(q14, q15,q16);
comp_12=`static float3 s = float3(q17,q18,q19);
comp_13=`static float3 ts = -cross(s,t);
comp_14=`static float3 pos = float3 (q11,q12,q13);
comp_15=`
comp_16=`float3 project (float dist) {  float z;
comp_17=`  z = dist/mul(cross(ts,-t),screen3) *(1-lav_gnd);
comp_18=`  gmask = (z >= -3) * (z <= 0);
comp_19=`  return gmask * float3(mul(float2x3(ts,t),cross(pos,screen3))*z,-z);}
comp_20=`
comp_21=`shader_body {uv0 = uv;
comp_22=`screen3 = float3 ((uv-.5)*aspect.xy,1) * (1+.0*tex2D (sampler_noise_hq,uv+time*.1));//wirkt wie zoom / Tele ###
comp_23=`
comp_24=`dist = .5; lav_gnd = 0; tower = 1; 
comp_25=`for (int m=1; m <= quality; m++) {
comp_26=`  rsl = project (dist)+float3 (mov,0);
comp_27=`  lprof =  (tex2D (sampler_pw_noise_lq,rsl.xy*.1).r <=.7); 
comp_28=`  uv2 = rsl.xy*.4*64;
comp_29=`  tile = saturate(2-3*max(abs(frac(uv2.x)-.5),abs(frac(uv2.y)-.5)))*.25+.75;
comp_30=`  lprof = 1-saturate(1-lprof)*tile;
comp_31=`  lprof *= tex2D (sampler_pw_noise_lq,rsl.xy*.1/16+tower+q30).r;
comp_32=`  lav_gnd -= lprof/quality*depth/rsl.z; 
comp_33=`  tower -= lprof/quality/2; 
comp_34=`  rsl3 = rsl;
comp_35=`} 
comp_36=`rsl = project (dist)+float3 (mov,0); 
comp_37=`float step = int(time*8)%14+q24;
comp_38=`float mask =         tex2D(sampler_pw_noise_lq,rsl.xy+step/128).r >= .9;
comp_39=`mask *=              tex2D(sampler_pw_noise_lq,rsl.xy + 1.0/8*int(tower*8)).r >= .9;
comp_40=`float3 windows = pow(tex2D(sampler_pw_noise_lq,rsl.xy),2).r* !mask;
comp_41=`
comp_42=`
comp_43=`uv2 = rsl.xy*4*64;
comp_44=`
comp_45=`tile = saturate(1-2*max(abs(frac(uv2.x)-.5),abs(frac(uv2.y)-.5)));
comp_46=`windows *= 2*tile*GetPixel(frac(rsl.xy*2));
comp_47=`
comp_48=`lav_gnd = 0;
comp_49=`rsl2 = project(dist) + float3 (mov,0);
comp_50=`float3 light = GetPixel(frac(rsl2*2));
comp_51=`ret1 =  lerp(8*light*saturate(1-tower),2*windows *(tower*2-1),saturate(2*tower-1.1)) ;
comp_52=`
comp_53=`uv4 = float2(frac(rsl.x),frac(rsl.y));
comp_54=`ret1 *= 1+pow(sin(4*(uv4.x/uv4.y)+8*time),24) *(q28%2)* roam_sin ;;  
comp_55=`
comp_56=`ret = 1-exp(-ret1*2);
comp_57=`//ret = GetPixel(uv);
comp_58=`ret-=roam_sin*roam_cos.zxy;
comp_59=`}
comp_60=`
comp_61=`written by martin
comp_62=`END
MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.312
fWaveScale=1.229
fWaveSmoothing=0.000
fWaveParam=0.200
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=5.996
fWarpScale=1.331
fZoomExponent=1.01000
fShader=0.000
zoom=1.00853
rot=0.00200
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.900
ob_b=0.200
ob_a=1.000
ib_size=0.000
ib_r=0.500
ib_g=0.500
ib_b=0.500
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.200
wavecode_0_g=1.000
wavecode_0_b=0.800
wavecode_0_a=1.000
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=
wave_0_per_point3=freq=sin(q7*0.15)*40+40;
wave_0_per_point4=
wave_0_per_point5=scale=sin(n*freq)*0.3+0.7;
wave_0_per_point6=xp=sin(n*1)*0.3*scale;
wave_0_per_point7=yp=cos(n*1)*0.3*scale;
wave_0_per_point8=zp=abs(sin(n*freq+time)*0.1);
wave_0_per_point9=
wave_0_per_point10=//rotate on y
wave_0_per_point11=ang=(q7+time*0.01)*0.2;
wave_0_per_point12=xp2=xp*sin(ang) + zp*cos(ang);
wave_0_per_point13=yp2=yp;
wave_0_per_point14=zp2=xp*cos(ang) - zp*sin(ang);
wave_0_per_point15=
wave_0_per_point16=//rotate on x
wave_0_per_point17=ang=(q7+time*0.01)*0.3;
wave_0_per_point18=xp3=xp2;
wave_0_per_point19=yp3=yp2*sin(ang) + zp2*cos(ang);
wave_0_per_point20=zp3=yp2*cos(ang) - zp2*sin(ang);
wave_0_per_point21=
wave_0_per_point22=
wave_0_per_point23=xp=xp3;
wave_0_per_point24=yp=yp3;
wave_0_per_point25=zp=zp3;
wave_0_per_point26=zp=zp+2.1;
wave_0_per_point27=xs=xp/zp;
wave_0_per_point28=ys=yp/zp;
wave_0_per_point29=
wave_0_per_point30=x=xs+0.5;
wave_0_per_point31=y=ys*1.3+0.5;
wave_0_per_point32=
wave_0_per_point33=
wave_0_per_point34=aflux=sin(n*8+time)*0.5+0.5;
wave_0_per_point35=a=1 - (aflux*aflux)*q8*3;
wave_0_per_point36=flip=flip+1;
wave_0_per_point37=flip=if (equal(flip,2), 0, flip);
wave_0_per_point38=a=a*flip
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=0.400
wavecode_1_b=0.100
wavecode_1_a=1.000
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=
wave_1_per_point3=freq=sin(q7*0.15)*40+40;
wave_1_per_point4=
wave_1_per_point5=scale=sin(n*freq)*0.3+0.7;
wave_1_per_point6=xp=sin(n*1)*0.3*scale;
wave_1_per_point7=yp=cos(n*1)*0.3*scale;
wave_1_per_point8=zp=-abs(sin(n*freq+time)*0.1);
wave_1_per_point9=
wave_1_per_point10=//rotate on y
wave_1_per_point11=ang=(q7+time*0.01)*0.2;
wave_1_per_point12=xp2=xp*sin(ang) + zp*cos(ang);
wave_1_per_point13=yp2=yp;
wave_1_per_point14=zp2=xp*cos(ang) - zp*sin(ang);
wave_1_per_point15=
wave_1_per_point16=//rotate on x
wave_1_per_point17=ang=(q7+time*0.01)*0.3;
wave_1_per_point18=xp3=xp2;
wave_1_per_point19=yp3=yp2*sin(ang) + zp2*cos(ang);
wave_1_per_point20=zp3=yp2*cos(ang) - zp2*sin(ang);
wave_1_per_point21=
wave_1_per_point22=
wave_1_per_point23=xp=xp3;
wave_1_per_point24=yp=yp3;
wave_1_per_point25=zp=zp3;
wave_1_per_point26=zp=zp+2.1;
wave_1_per_point27=xs=xp/zp;
wave_1_per_point28=ys=yp/zp;
wave_1_per_point29=
wave_1_per_point30=x=xs+0.5;
wave_1_per_point31=y=ys*1.3+0.5;
wave_1_per_point32=
wave_1_per_point33=
wave_1_per_point34=aflux=sin(n*8+time)*0.5+0.5;
wave_1_per_point35=a=1 - (aflux*aflux)*q8*3;
wave_1_per_point36=flip=flip+1;
wave_1_per_point37=flip=if (equal(flip,2), 0, flip);
wave_1_per_point38=a=a*flip
wave_1_per_point39=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=
wave_2_per_point3=freq=sin(q7*0.5)*4+4;
wave_2_per_point4=
wave_2_per_point5=aflux=sin(n*0.5);
wave_2_per_point6=
wave_2_per_point7=scale=sin(n*freq)*0.3+0.7;
wave_2_per_point8=xp=int(rand(10))-5;
wave_2_per_point9=xp=xp*0.0008*aflux;
wave_2_per_point10=yp=int(rand(10))-5;
wave_2_per_point11=yp=yp*0.0008*aflux;
wave_2_per_point12=zp=sample*3-1.5;
wave_2_per_point13=
wave_2_per_point14=//rotate on y
wave_2_per_point15=ang=(q7+time*0.01)*0.2;
wave_2_per_point16=xp2=xp*sin(ang) + zp*cos(ang);
wave_2_per_point17=yp2=yp;
wave_2_per_point18=zp2=xp*cos(ang) - zp*sin(ang);
wave_2_per_point19=
wave_2_per_point20=//rotate on x
wave_2_per_point21=ang=(q7+time*0.01)*0.3;
wave_2_per_point22=xp3=xp2;
wave_2_per_point23=yp3=yp2*sin(ang) + zp2*cos(ang);
wave_2_per_point24=zp3=yp2*cos(ang) - zp2*sin(ang);
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=xp=xp3;
wave_2_per_point28=yp=yp3;
wave_2_per_point29=zp=zp3;
wave_2_per_point30=
wave_2_per_point31=zp=zp+2.1;
wave_2_per_point32=xs=xp/zp;
wave_2_per_point33=ys=yp/zp;
wave_2_per_point34=
wave_2_per_point35=x=xs+0.5;
wave_2_per_point36=y=ys*1.3+0.5;
wave_2_per_point37=
wave_2_per_point38=
wave_2_per_point39=
wave_2_per_point40=a=aflux
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=
wave_3_per_point3=
wave_3_per_point4=
wave_3_per_point5=scale=sin(n*freq)*0.3+0.7;
wave_3_per_point6=zp=sin(time);
wave_3_per_point7=aflux=sin(zp*3.1415+3.1415);
wave_3_per_point8=xp=sin(n)*0.1*aflux;
wave_3_per_point9=yp=cos(n)*0.1*aflux;
wave_3_per_point10=xp=xp+(int(rand(4))-2)*0.003;
wave_3_per_point11=yp=yp+(int(rand(4))-2)*0.003;
wave_3_per_point12=zp=zp+(int(rand(4))-2)*0.003;
wave_3_per_point13=
wave_3_per_point14=
wave_3_per_point15=//rotate on y
wave_3_per_point16=ang=(q7+time*0.01)*0.2;
wave_3_per_point17=xp2=xp*sin(ang) + zp*cos(ang);
wave_3_per_point18=yp2=yp;
wave_3_per_point19=zp2=xp*cos(ang) - zp*sin(ang);
wave_3_per_point20=
wave_3_per_point21=//rotate on x
wave_3_per_point22=ang=(q7+time*0.01)*0.3;
wave_3_per_point23=xp3=xp2;
wave_3_per_point24=yp3=yp2*sin(ang) + zp2*cos(ang);
wave_3_per_point25=zp3=yp2*cos(ang) - zp2*sin(ang);
wave_3_per_point26=
wave_3_per_point27=
wave_3_per_point28=xp=xp3;
wave_3_per_point29=yp=yp3;
wave_3_per_point30=zp=zp3;
wave_3_per_point31=
wave_3_per_point32=zp=zp+2.1;
wave_3_per_point33=xs=xp/zp;
wave_3_per_point34=ys=yp/zp;
wave_3_per_point35=
wave_3_per_point36=x=xs+0.5;
wave_3_per_point37=y=ys*1.3+0.5;
wave_3_per_point38=
wave_3_per_point39=
wave_3_per_point40=
wave_3_per_point41=a=abs(aflux)*0.1
wave_3_per_point42=
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=6.65013
shapecode_0_ang=3.64425
shapecode_0_tex_ang=3.14159
shapecode_0_tex_zoom=0.27429
shapecode_0_r=0.500
shapecode_0_g=0.500
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.500
shapecode_0_border_a=0.000
shape_0_init1=t1 = int(rand(100))*0.01;
shape_0_init2=t2 = int(rand(100))*0.01;
shape_0_per_frame1=border_a=treb;
shape_0_per_frame2=rad=bass;
shapecode_1_enabled=0
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.370
shapecode_1_y=0.490
shapecode_1_rad=0.75000
shapecode_1_ang=3.64425
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=2.21671
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=t1 = int(rand(100))*0.01;
shape_1_init2=t2 = int(rand(100))*0.01;
shape_1_init3=te = 1;
shape_1_init4=poly = 4;
shape_1_per_frame1=
shape_1_per_frame2=rate = fps/(fps+1/2);
shape_1_per_frame3=beat = above(bass,bassthresh);
shape_1_per_frame4=bassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);
shape_1_per_frame5=ran = int(rand(8))+4;
shape_1_per_frame6=poly = if(beat,if(equal(ran,poly),poly+1,ran),poly);
shape_1_per_frame7=//poly = if(above(poly,8),4,poly);
shape_1_per_frame8=sides = poly;
shape_1_per_frame9=
shape_1_per_frame10=rate2 = fps/(fps+10);
shape_1_per_frame11=out = (1-beat)*rate2*out + beat;
shape_1_per_frame12=border_a = out;
shape_1_per_frame13=te = bass/fps/2 + te;
shape_1_per_frame14=x = x + 0.056*sin(te*1.67);
shape_1_per_frame15=y = y + 0.043*sin(te*1.23);
shape_1_per_frame16=ang = 3*sin(-te*0.67) + 3*cos(te*0.4);
shape_1_per_frame17=rad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;
shape_1_per_frame18=r = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));
shape_1_per_frame19=g = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));
shape_1_per_frame20=b = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));
shape_1_per_frame21=r2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));
shape_1_per_frame22=g2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));
shape_1_per_frame23=b2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));
shapecode_2_enabled=1
shapecode_2_sides=40
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.85357
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.22019
shapecode_2_r=0.980
shapecode_2_g=0.700
shapecode_2_b=0.890
shapecode_2_a=0.200
shapecode_2_r2=0.920
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.050
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_init1=t1 = int(rand(100))*0.01;
shape_2_init2=t2 = int(rand(100))*0.01;
shape_2_init3=te = 1;
shape_2_init4=poly = 5;
shape_2_per_frame1=ang=sin(time*0.4)*0.05 * (sin(time*0.4)*0.5+0.5)
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.26515
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=1.000
shapecode_3_border_a=1.000
shape_3_per_frame1=rate = fps/(fps+1/2);
shape_3_per_frame2=
shape_3_per_frame3=ang = time*0.5;
shape_3_per_frame4=vol = (bass_att+mid_att+treb_att)/6;
shape_3_per_frame5=te = vol/fps + te;
shape_3_per_frame6=x = x + 0.2*sin(te*1.14);
shape_3_per_frame7=y = y + 0.2*sin(te*0.96+2);
shape_3_per_frame8=
shape_3_per_frame9=beat = above(vol*1.5,bassthresh);
shape_3_per_frame10=bassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);
shape_3_per_frame11=poly = if(beat,int(rand(5))+3,poly);
shape_3_per_frame12=poly = if(equal(poly,7),int(rand(50))+7,poly);
shape_3_per_frame13=sides = poly;
shape_3_per_frame14=rad = rad-log(poly)/100;
shape_3_per_frame15=
shape_3_per_frame16=a=pow(vol*2,2);
shape_3_per_frame17=border_a=a;
shape_3_per_frame18=rad=rad*0.7+a*0.015
per_frame_init_1=q8=0;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q1=.4+sin(atime*.006        )*.4;
per_frame_21=q2=.4+cos(atime*.00613828348)*.4;
per_frame_22=q3=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q3;
per_frame_24=
per_frame_25=q8 =oldq8+ 0.001*(pow(1.2*bass+0.4*bass_att+0.2*treb+0.2*treb_att+0.2*mid+0.2*mid_att,6)/fps) +0.1/fps;
per_frame_26=oldq8 = q8;
per_frame_27=ob_r = 0.3 - 0.3*(0.5*sin(q8*0.701)+ 0.3*cos(q8*0.438));
per_frame_28=ob_g = 0.6- 0.4*sin(q8*2.924);
per_frame_29=ob_b = 0.35 - 0.3*cos(q8*0.816);
per_frame_30=warp =0;
per_frame_31=ib_size = 0.0;
per_frame_32=ib_r = ib_r + 0.5*sin(q8*3.034);
per_frame_33=ib_g = ib_g + 0.5*sin(q8*2.547);
per_frame_34=ib_b = ib_b - 0.5*sin(q8*1.431);
per_frame_35=ib_r =0;
per_frame_36=ib_g =0;
per_frame_37=ib_b =0;
per_frame_38=volume = 0.15*(bass_att+bass+mid+mid_att);
per_frame_39=beatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));
per_frame_40=lastbeat = if(equal(lastbeat,0),time,lastbeat);
per_frame_41=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_42=peakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);
per_frame_43=beat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);
per_frame_44=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_45=peakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);
per_frame_46=lastbeat = if(beat,time,lastbeat);
per_frame_47=mybeat = if(beat,mybeat+1,mybeat);
per_frame_48=mybeat = if(above(mybeat,7),0,mybeat);
per_frame_49=mybeat2 = if(equal(mybeat,1),1,0);
per_frame_50=q7 = if(beat*mybeat2,0.001+0.0001*int(rand(40)),oldq7);
per_frame_51=oldq7=q7;
per_frame_52=q6 = if(beat*mybeat2,0.001+0.0001*int(rand(40)),oldq6);
per_frame_53=oldq6=q6;
per_frame_54=q5= if(beat*mybeat2,0.001+0.0001*int(rand(40)),oldq5);
per_frame_55=oldq5=q5;
per_frame_56=q4 = if(beat*mybeat2,0.001+0.0001*int(rand(40)),oldq4);
per_frame_57=oldq4=q4;
per_frame_58=Flag = If(beat*mybeat2,if(int(rand(2))-1,1,0),oldFlag);
per_frame_59=oldflag = flag;
per_frame_60=Ratio = If(Beat*mybeat2,100+int(rand(60)),oldRatio);
per_frame_61=OldRatio = Ratio;
per_frame_62=q3 = if(beat*mybeat2,if(flag,ratio,0.75*ratio),oldq3);
per_frame_63=oldq3=q3;
per_frame_64=q2 = if(beat*mybeat2,if(flag,0.75*ratio,ratio),oldq2);
per_frame_65=oldq2=q2;
per_pixel_1=box=1+(rd*5.9*sin(time*0.1))%2 + 2*(y*3*sin(time*0.076))%2;
per_pixel_2=q1 = 8.3+(sin(x+0.137*q8)-cos(y+0.213*q8));
per_pixel_3=zoom=if(above(box,1), (rd*sin(x*40))*(rd*sin(Y*40))*0.1+.9,zoom);
per_pixel_4=rot = if(above(box,1),5*sin(0.000185* time ),rot);
per_pixel_5=dx=if(above(box,1),dx,q4*sin((y-0.5)*q3)+q5*sin((y-0.5)*q2));
per_pixel_6=dy=if(above(box,1),dy,-q6*0.03*cos((x-0.5)*q2)+q7*cos((x-0.5)*q3));
per_pixel_7=rd=(1.2+0.3*sin(time*0.2)+0.4*sin(q8))*sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );
per_pixel_8=cx=0.5+0.3*sin(time*0.051);
per_pixel_9=cy=0.5-22*q5;
per_pixel_10=
per_pixel_11=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_12=dx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_13=dy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_14=
per_pixel_15=six = sin(x);
per_pixel_16=
per_pixel_17=dx = dx + 0.1*sin(abs(12*y))*sin(time);
per_pixel_18=dy = dy + 0.1*sin(abs(12*x))*cos(time);
per_pixel_19=dx = if(above(y,.93),.01,if(below(y,.01),if(below(x,.3),if(below(y,.5),0,-.01),-.01),0));
per_pixel_20=dy = if(below(x,.05),.01,if(above(x,(0.94 - q7)),-.01,0));
per_pixel_21=zoom = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),.95,1),1),1),1);
per_pixel_22=dy = if(below(y,.5),if(below(x,.3),.01,dy),dy);
per_pixel_23=rot = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),0.1*sin(sin(ang*0.1*ang)+rad*6+q8*.444),0),0),0),0);
per_pixel_24=//cen_x = cos(time)*.2+.3;
per_pixel_25=//cen_y = sin(time)*.5+.5;
per_pixel_26=cen_x = q1;
per_pixel_27=cen_y = q2;
per_pixel_28=radxy = sin(time*.1)*.2+.3;
per_pixel_29=
per_pixel_30=dist_x = (x-cen_x)/(radxy*(sin(time*.2*0)*.3+cos((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_31=dist_y = (y-cen_y)/(radxy*(sin(time*.2*0)*.3+sin((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_32=in = below(abs(dist_x),1)*below(abs(dist_y),1);
per_pixel_33=//in = bnot(in);
per_pixel_34=out = bnot(in);
per_pixel_35=inx =(cen_x-q1)+.1*sign(dist_x)*(1-abs(dist_x));
per_pixel_36=iny =(cen_y-q2) +.1*sign(dist_y)*(1-abs(dist_y)); // .05*pow(dist_y,1);
per_pixel_37=
per_pixel_38=//**********outside
per_pixel_39=vang=time*.1;
per_pixel_40=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_41=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_42=
per_pixel_43=dvx=.01*sin(time+vy*80*radxy);
per_pixel_44=dvy=.01*cos(time+vx*80*radxy);
per_pixel_45=
per_pixel_46=outx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_47=outy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_48=
per_pixel_49=dx=in*inx+out*outx;
per_pixel_50=dy=in*iny+out*outy;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.5;        // maximum random pixel offset
warp_6=`float diffusion = 0.006;      // dither strength
warp_7=`float fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));
warp_11=`uv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`
warp_14=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_15=`                      ((uv.xyy*q27
warp_16=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_17=`                      ).xyz*
warp_18=`                      float3(1,1,0)*0.05 + 
warp_19=`                      time*float3(0,0,1)*q29
warp_20=`                     );
warp_21=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; 
warp_22=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; 
warp_23=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; 
warp_24=`}
comp_1=`sampler sampler_fw_sky;
comp_2=`shader_body
comp_3=`{
comp_4=`float2 uvm = frac(uv + time*.0);
comp_5=`
comp_6=`ret = tex2D(sampler_main,uvm);
comp_7=`float diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;
comp_8=`diff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;
comp_9=`ret.xy *= diff;
comp_10=`ret.z = pow(diff,1/(1-uvm.x));
comp_11=`
comp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uvm.xyy*q28
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*q30 
comp_18=`                     );
comp_19=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; 
comp_20=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; 
comp_21=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; 
comp_22=`}

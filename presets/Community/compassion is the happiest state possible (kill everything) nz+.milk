MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.002
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01010
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.100
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=6.400
nMotionVectorsY=14.400
mv_dx=0.000
mv_dy=-0.010
mv_l=0.350
mv_r=0.900
mv_g=0.500
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=//wave1
wave_0_per_point2=oldmd1=md1;
wave_0_per_point3=md1=(md1+int(rand(4)))%4;
wave_0_per_point4=md1=if(equal(md1,oldmd1),(md1+1)%4,md1);
wave_0_per_point5=
wave_0_per_point6=mx1=mx1+(equal(md1,0)*.002*bass);
wave_0_per_point7=mx1=mx1-(equal(md1,1)*.002*bass);
wave_0_per_point8=my1=my1+(equal(md1,2)*.002*treb);
wave_0_per_point9=my1=my1-(equal(md1,3)*.002*treb);
wave_0_per_point10=
wave_0_per_point11=mx1=if(above(mx1,.99),.5,mx1);
wave_0_per_point12=mx1=if(below(mx1,.01),.5,mx1);
wave_0_per_point13=my1=if(above(my1,.99),.5,my1);
wave_0_per_point14=my1=if(below(my1,.01),.5,my1);
wave_0_per_point15=
wave_0_per_point16=//wave2
wave_0_per_point17=oldmd2=md2;
wave_0_per_point18=md2=(md2+int(rand(4)))%4;
wave_0_per_point19=md2=if(equal(md2,oldmd2),(md2+1)%4,md2);
wave_0_per_point20=
wave_0_per_point21=mx2=mx2+(equal(md2,0)*.002*bass);
wave_0_per_point22=mx2=mx2-(equal(md2,1)*.002*bass);
wave_0_per_point23=my2=my2+(equal(md2,2)*.002*treb);
wave_0_per_point24=my2=my2-(equal(md2,3)*.002*treb);
wave_0_per_point25=
wave_0_per_point26=mx2=if(above(mx2,.99),.5,mx2);
wave_0_per_point27=mx2=if(below(mx2,.01),.5,mx2);
wave_0_per_point28=my2=if(above(my2,.99),.5,my2);
wave_0_per_point29=my2=if(below(my2,.01),.5,my2);
wave_0_per_point30=
wave_0_per_point31=
wave_0_per_point32=f2=equal(frame%2,0);
wave_0_per_point33=x=(mx1*f2+mx2*(1-f2));
wave_0_per_point34=y=(my1*f2+my2*(1-f2));
wave_0_per_point35=a=bass*.1*q8;
wave_0_per_point36=
wave_0_per_point37=
wave_0_per_point38=
wave_0_per_point39=r=f2*bass+(1-f2)*sin(q3*treb);
wave_0_per_point40=g=f2*treb+(1-f2)*cos(q3*bass);
wave_0_per_point41=b=f2*(1-mid)+(1-f2)*sin(time*q4);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_frame1=r=0;
wave_1_per_frame2=g=0;
wave_1_per_frame3=b=0;
wave_1_per_point1=oldmd1=md1;
wave_1_per_point2=md1=(md1+int(rand(4)))%4;
wave_1_per_point3=md1=if(equal(md1,oldmd1),(md1+1)%4,md1);
wave_1_per_point4=
wave_1_per_point5=mx1=mx1+(equal(md1,0)*.002*bass);
wave_1_per_point6=mx1=mx1-(equal(md1,1)*.002*bass);
wave_1_per_point7=my1=my1+(equal(md1,2)*.002*treb);
wave_1_per_point8=my1=my1-(equal(md1,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx1=if(above(mx1,.99),.5,mx1);
wave_1_per_point11=mx1=if(below(mx1,.01),.5,mx1);
wave_1_per_point12=my1=if(above(my1,.99),.5,my1);
wave_1_per_point13=my1=if(below(my1,.01),.5,my1);
wave_1_per_point14=
wave_1_per_point15=
wave_1_per_point16=oldmd2=md2;
wave_1_per_point17=md2=(md2+int(rand(4)))%4;
wave_1_per_point18=md2=if(equal(md2,oldmd2),(md2+1)%4,md2);
wave_1_per_point19=
wave_1_per_point20=mx2=mx2+(equal(md2,0)*.002*bass);
wave_1_per_point21=mx2=mx2-(equal(md2,1)*.002*bass);
wave_1_per_point22=my2=my2+(equal(md2,2)*.002*treb);
wave_1_per_point23=my2=my2-(equal(md2,3)*.002*treb);
wave_1_per_point24=
wave_1_per_point25=mx2=if(above(mx2,.99),.5,mx2);
wave_1_per_point26=mx2=if(below(mx2,.01),.5,mx2);
wave_1_per_point27=my2=if(above(my2,.99),.5,my2);
wave_1_per_point28=my2=if(below(my2,.01),.5,my2);
wave_1_per_point29=
wave_1_per_point30=
wave_1_per_point31=f2=equal(frame%2,0);
wave_1_per_point32=x=mx1*f2+mx2*(1-f2);
wave_1_per_point33=y=my1*f2+my2*(1-f2);
wave_1_per_point34=a=q8;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=0.700
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_per_frame1=r=0;
wave_2_per_frame2=g
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=phs=-sample * 0.2;
wave_2_per_point3=tm=q1 + phs*4;
wave_2_per_point4=
wave_2_per_point5=flip=flip+1;
wave_2_per_point6=flip=flip*below(flip,2);
wave_2_per_point7=
wave_2_per_point8=xp=0;
wave_2_per_point9=yp=(flip*0.1-0.05)*(sample);
wave_2_per_point10=zp=0;
wave_2_per_point11=
wave_2_per_point12=//spin;
wave_2_per_point13=ang=tm*20 + sin(tm*76 + time*4)*0.4;
wave_2_per_point14=sa=sin(ang);ca=cos(ang);
wave_2_per_point15=xr=xp*sa + yp*ca;
wave_2_per_point16=yr=xp*ca - yp*sa;
wave_2_per_point17=zr=zp;
wave_2_per_point18=
wave_2_per_point19=xp=xr;
wave_2_per_point20=yp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;
wave_2_per_point21=zp=zr;
wave_2_per_point22=
wave_2_per_point23=//wrist movement;
wave_2_per_point24=ang=sin(tm*2);
wave_2_per_point25=
wave_2_per_point26=xq=xp;
wave_2_per_point27=sa=sin(ang);ca=cos(ang);
wave_2_per_point28=yq=yp*sa + zp*ca;
wave_2_per_point29=zq=yp*ca - zp*sa;
wave_2_per_point30=
wave_2_per_point31=
wave_2_per_point32=ang=tm*8;
wave_2_per_point33=sa=sin(ang);ca=cos(ang);
wave_2_per_point34=xp=xq*sa + yq*ca;
wave_2_per_point35=yp=xq*ca - yq*sa;
wave_2_per_point36=zp=zq;
wave_2_per_point37=
wave_2_per_point38=//forearm movement;
wave_2_per_point39=zp=zp-0.3;
wave_2_per_point40=ang=3.14 + sin(tm*2 - 0.5)*2.5;
wave_2_per_point41=xq=xp;
wave_2_per_point42=sa=sin(ang);ca=cos(ang);
wave_2_per_point43=yq=yp*sa + zp*ca;
wave_2_per_point44=zq=yp*ca - zp*sa;
wave_2_per_point45=
wave_2_per_point46=//upper arm twist
wave_2_per_point47=ang=-1.0 + cos(tm*3 + 0.5);
wave_2_per_point48=xp=xq*sa + yq*ca;
wave_2_per_point49=yp=xq*ca - yq*sa;
wave_2_per_point50=zp=zq;
wave_2_per_point51=
wave_2_per_point52=//upper arm outward;
wave_2_per_point53=zp=zp-0.35;
wave_2_per_point54=ang=cos(tm*1)*1.75 - 1.05;
wave_2_per_point55=sa=sin(ang);ca=cos(ang);
wave_2_per_point56=xq=xp*sa + zp*ca;
wave_2_per_point57=yq=yp;
wave_2_per_point58=zq=xp*ca - zp*sa;
wave_2_per_point59=
wave_2_per_point60=//upper arm up down;
wave_2_per_point61=ang=cos(tm);
wave_2_per_point62=xp=xq;
wave_2_per_point63=sa=sin(ang);ca=cos(ang);
wave_2_per_point64=yp=yq*ca - zq*sa;
wave_2_per_point65=zp=yq*sa + zq*ca;
wave_2_per_point66=
wave_2_per_point67=//xp=xq;yp=yq;zp=zq;
wave_2_per_point68=
wave_2_per_point69=
wave_2_per_point70=//project into screenspace and draw on screen
wave_2_per_point71=zp=zp+1.5;
wave_2_per_point72=xs=xp/zp;
wave_2_per_point73=ys=yp/zp;
wave_2_per_point74=
wave_2_per_point75=x1=xs+0.5;
wave_2_per_point76=y1=ys*1.3+0.5;
wave_2_per_point77=
wave_2_per_point78=
wave_2_per_point79=phs=-sample * 0.4 ;
wave_2_per_point80=tm=q1 + phs*2 - 0.01;
wave_2_per_point81=
wave_2_per_point82=flip=flip+1;
wave_2_per_point83=flip=flip*below(flip,2);
wave_2_per_point84=
wave_2_per_point85=xp=0;
wave_2_per_point86=yp=(flip*0.2-0.1)*(sample);
wave_2_per_point87=zp=0;
wave_2_per_point88=
wave_2_per_point89=//spin;
wave_2_per_point90=ang=-tm*29 + sin(tm*76 + time*4)*0.4;;
wave_2_per_point91=sa=sin(ang);ca=cos(ang);
wave_2_per_point92=xr=xp*sa + yp*ca;
wave_2_per_point93=yr=xp*ca - yp*sa;
wave_2_per_point94=zr=zp;
wave_2_per_point95=
wave_2_per_point96=xp=xr;
wave_2_per_point97=yp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;
wave_2_per_point98=zp=zr;
wave_2_per_point99=
wave_2_per_point100=//wrist movement;
wave_2_per_point101=ang=sin(tm*2);
wave_2_per_point102=
wave_2_per_point103=xq=xp;
wave_2_per_point104=sa=sin(ang);ca=cos(ang);
wave_2_per_point105=yq=yp*sa + zp*ca;
wave_2_per_point106=zq=yp*ca - zp*sa;
wave_2_per_point107=
wave_2_per_point108=
wave_2_per_point109=ang=tm*8;
wave_2_per_point110=sa=sin(ang);ca=cos(ang);
wave_2_per_point111=xp=xq*sa + yq*ca;
wave_2_per_point112=yp=xq*ca - yq*sa;
wave_2_per_point113=zp=zq;
wave_2_per_point114=
wave_2_per_point115=//forearm movement;
wave_2_per_point116=zp=zp-0.3;
wave_2_per_point117=ang=3.14 + sin(tm*2 - 0.5)*2.5;
wave_2_per_point118=xq=xp;
wave_2_per_point119=sa=sin(ang);ca=cos(ang);
wave_2_per_point120=yq=yp*sa + zp*ca;
wave_2_per_point121=zq=yp*ca - zp*sa;
wave_2_per_point122=
wave_2_per_point123=//upper arm twist
wave_2_per_point124=ang=-1.0 + cos(tm*3 + 0.5);
wave_2_per_point125=xp=xq*sa + yq*ca;
wave_2_per_point126=yp=xq*ca - yq*sa;
wave_2_per_point127=zp=zq;
wave_2_per_point128=
wave_2_per_point129=//upper arm outward;
wave_2_per_point130=zp=zp-0.35;
wave_2_per_point131=ang=cos(tm*1)*1.75 - 1.05;
wave_2_per_point132=sa=sin(ang);ca=cos(ang);
wave_2_per_point133=xq=xp*sa + zp*ca;
wave_2_per_point134=yq=yp;
wave_2_per_point135=zq=xp*ca - zp*sa;
wave_2_per_point136=
wave_2_per_point137=//upper arm up down;
wave_2_per_point138=ang=cos(tm);
wave_2_per_point139=xp=xq;
wave_2_per_point140=sa=sin(ang);ca=cos(ang);
wave_2_per_point141=yp=yq*ca - zq*sa;
wave_2_per_point142=zp=yq*sa + zq*ca;
wave_2_per_point143=
wave_2_per_point144=//xp=xq;yp=yq;zp=zq;
wave_2_per_point145=
wave_2_per_point146=
wave_2_per_point147=//project into screenspace and draw on screen
wave_2_per_point148=zp=zp+1.5;
wave_2_per_point149=xs=xp/zp;
wave_2_per_point150=ys=yp/zp;
wave_2_per_point151=
wave_2_per_point152=x2=xs+0.5;
wave_2_per_point153=y2=ys*1.3+0.5;
wave_2_per_point154=
wave_2_per_point155=
wave_2_per_point156=
wave_2_per_point157=a=q7*(1.2-sample);
wave_2_per_point158=
wave_2_per_point159=f2=equal(frame%2,0);
wave_2_per_point160=x=x1*f2+x2*(1-f2);
wave_2_per_point161=y=y1*f2+y2*(1-f2);
wave_2_per_point162=
wave_2_per_point163=
wave_2_per_point164=rr=rr+q5*.2;
wave_2_per_point165=gg=gg+q5*bass*.1;
wave_2_per_point166=bb=bb+q5*treb*.1+q2*bass;
wave_2_per_point167=
wave_2_per_point168=r=f2*sin(rr);
wave_2_per_point169=g=f2*sin(gg);
wave_2_per_point170=b=f2*sin(bb);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.720
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_per_frame1=r=0;
wave_3_per_frame2=g
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=phs=-sample * 0.4 ;
wave_3_per_point3=tm=q1 + phs*2 - 0.02;
wave_3_per_point4=
wave_3_per_point5=flip=flip+1;
wave_3_per_point6=flip=flip*below(flip,2);
wave_3_per_point7=
wave_3_per_point8=xp=0;
wave_3_per_point9=yp=(flip*0.4-0.2)*(sample);
wave_3_per_point10=zp=0;
wave_3_per_point11=
wave_3_per_point12=//spin;
wave_3_per_point13=ang=tm*23 + sin(tm*76 + time*4)*0.3;;
wave_3_per_point14=sa=sin(ang);ca=cos(ang);
wave_3_per_point15=xr=xp*sa + yp*ca;
wave_3_per_point16=yr=xp*ca - yp*sa;
wave_3_per_point17=zr=zp;
wave_3_per_point18=
wave_3_per_point19=xp=xr;
wave_3_per_point20=yp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;
wave_3_per_point21=zp=zr;
wave_3_per_point22=
wave_3_per_point23=//wrist movement;
wave_3_per_point24=ang=sin(tm*2);
wave_3_per_point25=
wave_3_per_point26=xq=xp;
wave_3_per_point27=sa=sin(ang);ca=cos(ang);
wave_3_per_point28=yq=yp*sa + zp*ca;
wave_3_per_point29=zq=yp*ca - zp*sa;
wave_3_per_point30=
wave_3_per_point31=
wave_3_per_point32=ang=tm*8;
wave_3_per_point33=sa=sin(ang);ca=cos(ang);
wave_3_per_point34=xp=xq*sa + yq*ca;
wave_3_per_point35=yp=xq*ca - yq*sa;
wave_3_per_point36=zp=zq;
wave_3_per_point37=
wave_3_per_point38=//forearm movement;
wave_3_per_point39=zp=zp-0.3;
wave_3_per_point40=ang=3.14 + sin(tm*2 - 0.5)*2.5;
wave_3_per_point41=xq=xp;
wave_3_per_point42=sa=sin(ang);ca=cos(ang);
wave_3_per_point43=yq=yp*sa + zp*ca;
wave_3_per_point44=zq=yp*ca - zp*sa;
wave_3_per_point45=
wave_3_per_point46=//upper arm twist
wave_3_per_point47=ang=-1.0 + cos(tm*3 + 0.5);
wave_3_per_point48=xp=xq*sa + yq*ca;
wave_3_per_point49=yp=xq*ca - yq*sa;
wave_3_per_point50=zp=zq;
wave_3_per_point51=
wave_3_per_point52=//upper arm outward;
wave_3_per_point53=zp=zp-0.35;
wave_3_per_point54=ang=cos(tm*1)*1.75 - 1.05;
wave_3_per_point55=sa=sin(ang);ca=cos(ang);
wave_3_per_point56=xq=xp*sa + zp*ca;
wave_3_per_point57=yq=yp;
wave_3_per_point58=zq=xp*ca - zp*sa;
wave_3_per_point59=
wave_3_per_point60=//upper arm up down;
wave_3_per_point61=ang=cos(tm);
wave_3_per_point62=xp=xq;
wave_3_per_point63=sa=sin(ang);ca=cos(ang);
wave_3_per_point64=yp=yq*ca - zq*sa;
wave_3_per_point65=zp=yq*sa + zq*ca;
wave_3_per_point66=
wave_3_per_point67=//xp=xq;yp=yq;zp=zq;
wave_3_per_point68=
wave_3_per_point69=
wave_3_per_point70=//project into screenspace and draw on screen
wave_3_per_point71=zp=zp+1.5;
wave_3_per_point72=xs=xp/zp;
wave_3_per_point73=ys=yp/zp;
wave_3_per_point74=
wave_3_per_point75=x1=xs+0.5;
wave_3_per_point76=y1=ys*1.3+0.5;
wave_3_per_point77=phs=-sample * 0.4 ;
wave_3_per_point78=tm=q1 + phs*2 - 0.03;
wave_3_per_point79=
wave_3_per_point80=flip=flip+1;
wave_3_per_point81=flip=flip*below(flip,2);
wave_3_per_point82=
wave_3_per_point83=xp=0;
wave_3_per_point84=yp=(flip*0.6-0.3)*(sample);
wave_3_per_point85=zp=0;
wave_3_per_point86=
wave_3_per_point87=//spin;
wave_3_per_point88=ang=-tm*4 + sin(tm*76 + time*4)*0.2;;
wave_3_per_point89=sa=sin(ang);ca=cos(ang);
wave_3_per_point90=xr=xp*sa + yp*ca;
wave_3_per_point91=yr=xp*ca - yp*sa;
wave_3_per_point92=zr=zp;
wave_3_per_point93=
wave_3_per_point94=xp=xr;
wave_3_per_point95=yp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;
wave_3_per_point96=zp=zr;
wave_3_per_point97=
wave_3_per_point98=//wrist movement;
wave_3_per_point99=ang=sin(tm*2);
wave_3_per_point100=
wave_3_per_point101=xq=xp;
wave_3_per_point102=sa=sin(ang);ca=cos(ang);
wave_3_per_point103=yq=yp*sa + zp*ca;
wave_3_per_point104=zq=yp*ca - zp*sa;
wave_3_per_point105=
wave_3_per_point106=
wave_3_per_point107=ang=tm*8;
wave_3_per_point108=sa=sin(ang);ca=cos(ang);
wave_3_per_point109=xp=xq*sa + yq*ca;
wave_3_per_point110=yp=xq*ca - yq*sa;
wave_3_per_point111=zp=zq;
wave_3_per_point112=
wave_3_per_point113=//forearm movement;
wave_3_per_point114=zp=zp-0.3;
wave_3_per_point115=ang=3.14 + sin(tm*2 - 0.5)*2.5;
wave_3_per_point116=xq=xp;
wave_3_per_point117=sa=sin(ang);ca=cos(ang);
wave_3_per_point118=yq=yp*sa + zp*ca;
wave_3_per_point119=zq=yp*ca - zp*sa;
wave_3_per_point120=
wave_3_per_point121=//upper arm twist
wave_3_per_point122=ang=-1.0 + cos(tm*3 + 0.5);
wave_3_per_point123=xp=xq*sa + yq*ca;
wave_3_per_point124=yp=xq*ca - yq*sa;
wave_3_per_point125=zp=zq;
wave_3_per_point126=
wave_3_per_point127=//upper arm outward;
wave_3_per_point128=zp=zp-0.35;
wave_3_per_point129=ang=cos(tm*1)*1.75 - 1.05;
wave_3_per_point130=sa=sin(ang);ca=cos(ang);
wave_3_per_point131=xq=xp*sa + zp*ca;
wave_3_per_point132=yq=yp;
wave_3_per_point133=zq=xp*ca - zp*sa;
wave_3_per_point134=
wave_3_per_point135=//upper arm up down;
wave_3_per_point136=ang=cos(tm);
wave_3_per_point137=xp=xq;
wave_3_per_point138=sa=sin(ang);ca=cos(ang);
wave_3_per_point139=yp=yq*ca - zq*sa;
wave_3_per_point140=zp=yq*sa + zq*ca;
wave_3_per_point141=
wave_3_per_point142=//xp=xq;yp=yq;zp=zq;
wave_3_per_point143=
wave_3_per_point144=
wave_3_per_point145=//project into screenspace and draw on screen
wave_3_per_point146=zp=zp+1.5;
wave_3_per_point147=xs=xp/zp;
wave_3_per_point148=ys=yp/zp;
wave_3_per_point149=
wave_3_per_point150=x2=xs+0.5;
wave_3_per_point151=y2=ys*1.3+0.5;
wave_3_per_point152=
wave_3_per_point153=
wave_3_per_point154=a=q7*(1-sample);
wave_3_per_point155=
wave_3_per_point156=
wave_3_per_point157=f2=equal(frame%2,0);
wave_3_per_point158=x=x1*f2+x2*(1-f2);
wave_3_per_point159=y=y1*f2+y2*(1-f2);
wave_3_per_point160=
wave_3_per_point161=r=f2*bass_att;
wave_3_per_point162=g=f2*sin(q3);
wave_3_per_point163=b=f2*mid;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.30177
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.700
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.800
shapecode_0_border_g=0.800
shapecode_0_border_b=0.500
shapecode_0_border_a=0.000
shape_0_per_frame1=tm=q1;
shape_0_per_frame2=
shape_0_per_frame3=flip=flip+1;
shape_0_per_frame4=flip=flip*below(flip,2);
shape_0_per_frame5=
shape_0_per_frame6=xp=0;
shape_0_per_frame7=yp=0;
shape_0_per_frame8=zp=0;
shape_0_per_frame9=
shape_0_per_frame10=//spin;
shape_0_per_frame11=ang=tm*20 + sin(tm*76 + time*4)*0.4;
shape_0_per_frame12=sa=sin(ang);ca=cos(ang);
shape_0_per_frame13=xr=xp*sa + yp*ca;
shape_0_per_frame14=yr=xp*ca - yp*sa;
shape_0_per_frame15=zr=zp;
shape_0_per_frame16=
shape_0_per_frame17=xp=xr;
shape_0_per_frame18=yp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;
shape_0_per_frame19=zp=zr;
shape_0_per_frame20=
shape_0_per_frame21=//wrist movement;
shape_0_per_frame22=ang=sin(tm*2);
shape_0_per_frame23=
shape_0_per_frame24=xq=xp;
shape_0_per_frame25=sa=sin(ang);ca=cos(ang);
shape_0_per_frame26=yq=yp*sa + zp*ca;
shape_0_per_frame27=zq=yp*ca - zp*sa;
shape_0_per_frame28=
shape_0_per_frame29=
shape_0_per_frame30=ang=tm*8;
shape_0_per_frame31=sa=sin(ang);ca=cos(ang);
shape_0_per_frame32=xp=xq*sa + yq*ca;
shape_0_per_frame33=yp=xq*ca - yq*sa;
shape_0_per_frame34=zp=zq;
shape_0_per_frame35=
shape_0_per_frame36=//forearm movement;
shape_0_per_frame37=zp=zp-0.3;
shape_0_per_frame38=ang=3.14 + sin(tm*2 - 0.5)*2.5;
shape_0_per_frame39=xq=xp;
shape_0_per_frame40=sa=sin(ang);ca=cos(ang);
shape_0_per_frame41=yq=yp*sa + zp*ca;
shape_0_per_frame42=zq=yp*ca - zp*sa;
shape_0_per_frame43=
shape_0_per_frame44=//upper arm twist
shape_0_per_frame45=ang=-1.0 + cos(tm*3 + 0.5);
shape_0_per_frame46=xp=xq*sa + yq*ca;
shape_0_per_frame47=yp=xq*ca - yq*sa;
shape_0_per_frame48=zp=zq;
shape_0_per_frame49=
shape_0_per_frame50=//upper arm outward;
shape_0_per_frame51=zp=zp-0.35;
shape_0_per_frame52=ang=cos(tm*1)*1.75 - 1.05;
shape_0_per_frame53=sa=sin(ang);ca=cos(ang);
shape_0_per_frame54=xq=xp*sa + zp*ca;
shape_0_per_frame55=yq=yp;
shape_0_per_frame56=zq=xp*ca - zp*sa;
shape_0_per_frame57=
shape_0_per_frame58=//upper arm up down;
shape_0_per_frame59=ang=cos(tm);
shape_0_per_frame60=xp=xq;
shape_0_per_frame61=sa=sin(ang);ca=cos(ang);
shape_0_per_frame62=yp=yq*ca - zq*sa;
shape_0_per_frame63=zp=yq*sa + zq*ca;
shape_0_per_frame64=
shape_0_per_frame65=//xp=xq;yp=yq;zp=zq;
shape_0_per_frame66=
shape_0_per_frame67=
shape_0_per_frame68=//project into screenspace and draw on screen
shape_0_per_frame69=zp=zp+1.5;
shape_0_per_frame70=xs=xp/zp;
shape_0_per_frame71=ys=yp/zp;
shape_0_per_frame72=
shape_0_per_frame73=x=xs+0.5;
shape_0_per_frame74=y=ys*1.3+0.5;
shape_0_per_frame75=
shape_0_per_frame76=border_a=q7;
shape_0_per_frame77=a=0.7*q7;
shape_0_per_frame78=
shape_0_per_frame79=
shape_0_per_frame80=// This is the version you should use...
shape_0_per_frame81=// ----------- start copying -----------
shape_0_per_frame82=hue=hue*(1-q5)+q5*(bass-treb*mid)*q4; // change this
shape_0_per_frame83=h=6*(hue-int(hue));
shape_0_per_frame84=sw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);
shape_0_per_frame85=sw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);
shape_0_per_frame86=r1=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1
shape_0_per_frame87=g1=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2
shape_0_per_frame88=b1=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3
shape_0_per_frame89=// ----------- end ----------------
shape_0_per_frame90=
shape_0_per_frame91=border_r=r1;
shape_0_per_frame92=border_g=g1;
shape_0_per_frame93=border_b=b1;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//martin no religion / my omniversal absence for changing the background light
per_frame_2=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=runbass=runbass+vvb;
per_frame_12=runmids=runmids+vvm ;
per_frame_13=runtreb=runtreb+vvt;
per_frame_14=pi23=4*asin(-1)*.33333333333333;
per_frame_15=atime=(runtreb+runmids+runbass)*1.85;
per_frame_16=q8= (sin(atime-0*pi23)+1)*.4;
per_frame_17=q9= (sin(atime-1*pi23)+1)*.4;
per_frame_18=q10=(sin(atime-2*pi23)+1)*.4;
per_frame_19=
per_frame_20=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_21=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_22=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_23=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_24=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_25=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_26=vvb = min(1,max(0,vvb));
per_frame_27=vvm = min(1,max(0,vvm));
per_frame_28=vvt = min(1,max(0,vvt));
per_frame_29=q1 = (vvt+vvm+vvb)*100;
per_frame_30=q2 = (vvt+vvm+vvb)*100;
per_frame_31=q3 = (vvt+vvm+vvb)*100;
per_frame_32=q4 =(vvt+vvm+vvb)*100;
per_frame_33=q5 =(vvt+vvm+vvb)*100;
per_frame_34=q6 =(vvt+vvm+vvb)*100;
per_frame_35=q4 =(vvt+vvm+vvb)*100;
per_frame_36=q5 =(vvt+vvm+vvb)*100;
per_frame_37=q6 =(vvt+vvm+vvb)*100;
per_frame_38=q7 =(vvt+vvm+vvb)*100;
per_frame_39=q11=(vvt+vvm+vvb)*100;
per_frame_40=q12=(vvt+vvm+vvb)*100;
per_frame_41=q13=(vvt+vvm+vvb)*100;
per_frame_42=q14=(vvt+vvm+vvb)*100;
per_frame_43=q15=(vvt+vvm+vvb)*100;
per_frame_44=q16=(vvt+vvm+vvb)*100;
per_frame_45=q17=(vvt+vvm+vvb)*100;
per_frame_46=q18=(vvt+vvm+vvb)*100;
per_frame_47=q19=(vvt+vvm+vvb)*100;
per_frame_48=q20=(vvt+vvm+vvb)*100;
per_frame_49=q21=(vvt+vvm+vvb)*100;
per_frame_50=q22=(vvt+vvm+vvb)*100;
per_frame_51=q23=(vvt+vvm+vvb)*100;
per_frame_52=q24=(vvt+vvm+vvb)*100;
per_frame_53=q25=(vvt+vvm+vvb)*100;
per_frame_54=q26=(vvt+vvm+vvb)*100;
per_frame_55=q27=(vvt+vvm+vvb)*100;
per_frame_56=q28=(vvt+vvm+vvb)*100;
per_frame_57=q29=(vvt+vvm+vvb)*100;
per_frame_58=q30=(vvt+vvm+vvb)*100;
per_frame_59=q31=(vvt+vvm+vvb)*100;
per_frame_60=q32=(vvt+vvm+vvb)*100;
per_frame_61=wave_r = wave_r + 0.5*sin(time*1.13);
per_frame_62=wave_g = wave_g + 0.5*sin(time*1.23);
per_frame_63=wave_b = wave_b + 0.5*sin(time*1.33);
per_frame_64=
per_frame_65=wave_x = wave_x + 0.2*sin(0.32*time);
per_frame_66=wave_y = wave_y + 0.2*cos(0.32*time);
per_frame_67=
per_frame_68=ob_r = wave_r;
per_frame_69=ob_g = wave_g;
per_frame_70=ob_b = wave_b;
per_frame_71=
per_frame_72=q1 = ob_r;
per_frame_73=q2 = ob_g;
per_frame_74=q3 = ob_b;
per_frame_75=//spiral collide frame
per_frame_76=t = t + 2.5/fps;
per_frame_77=t = if(above(t,2),t-2,t);
per_frame_78=q22 = -t;
per_frame_79=// Flexis dampened sound response functions
per_frame_80=db = db*0.98 + bass_att*0.2; // dampener
per_frame_81=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_82=dt = dt*0.98 + treb_att*0.2;
per_frame_83=tt = tt + dt*0.1;
per_frame_84=dm = dm*0.98 + mid_att*0.2;
per_frame_85=mm = mm + dm*0.1;
per_frame_86=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_87=// change
per_frame_88=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_89=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_90=w = (bb-tt)*0.1;                   // angle
per_frame_91=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_92=//don't change
per_frame_93=q11 = sin(w);
per_frame_94=q12 = cos(w);
per_frame_95=q17 = sin(-w);
per_frame_96=q18 = cos(-w);
per_frame_97=q15 = 1/q16;
per_frame_98=wave_mystery = time*0.2;
per_frame_99=
per_frame_100=zoom = (sin(treb_att));
per_frame_101=chng=sin(time*.5);
per_frame_102=cthr=.9999;
per_frame_103=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_104=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_105=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_106=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_107=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_108=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_109=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_110=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_111=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_112=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_113=monitor=chng;
per_frame_114=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_115=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_116=
per_frame_117=monitor=mq1;
per_frame_118=vol=bass+treb+mid;
per_frame_119=atime=atime+vol;
per_frame_120=q11=.4+sin(atime*.006        )*.4;
per_frame_121=q12=.4+cos(atime*.00613828348)*.4;
per_frame_122=q13=.4+sin(atime*.00598593455)*.4;
per_frame_123=monitor=q13;
per_frame_124=q4=sin(atime*.03);
per_frame_125=q5=cos(atime*.030383824);
per_frame_126=q6=tan(atime*.029384834);
per_frame_127=
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=zoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);
per_pixel_5=rot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));
per_pixel_6=sx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);
per_pixel_7=sy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);
per_pixel_8=zoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);
warp_1=`sampler sampler_grad16;
warp_2=`
warp_3=`float2 cmul(float2 mul1, float2 mul2) {
warp_4=`  float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);
warp_5=`  return mul;
warp_6=`}
warp_7=`float2 cdiv(float2 div1, float2 div2) {
warp_8=`  float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),
warp_9=`  (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );
warp_10=`  return div;
warp_11=`}
warp_12=`float2 cpow(float2 base, float ex) {
warp_13=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_14=`   float thetaz = atan2(base.y, base.x);
warp_15=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_16=`   return pow;
warp_17=` }
warp_18=` float2 cexp(float2 base, float2 ex) {
warp_19=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_20=`   float thetaz = atan2(base.y, base.x);
warp_21=`   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);
warp_22=`   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));
warp_23=`   return sol;
warp_24=` }
warp_25=`
warp_26=`shader_body 
warp_27=`{ 
warp_28=`// F(Z) = sqrt(Z^-4+C)
warp_29=`    float2 zoom = lerp(2,2.5,q20);
warp_30=`    float2 c = float2(q4, q5);
warp_31=`    float2 uv1 = (float2(uv.x-0.5, uv.y-0.5))*zoom;
warp_32=`
warp_33=`    int n = 0;
warp_34=`    
warp_35=`    for(n=0; n<5; n++) {
warp_36=`      float2 tmp = cpow(uv1,-4)+c;
warp_37=`      uv1 = cpow(tmp,0.5);
warp_38=`    }
warp_39=`
warp_40=`    float domain = dot(uv1,uv1);
warp_41=`    ret = lerp(float3(1-q11, 1-q12, 1-q13), ret, saturate(domain-2));
warp_42=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_43=`                      ((uv1.xyy*q27
warp_44=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_45=`                      ).xyz*
warp_46=`                      float3(1,1,0)*0.05 + 
warp_47=`                      time*float3(0,0,1)*q29
warp_48=`                     );
warp_49=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_50=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_51=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_52=`    ret = lerp(float3(0,0,0), ret, saturate(domain-1));
warp_53=`    float3 reta = tex2D(sampler_grad16, uv1); 
warp_54=`    ret += reta;
warp_55=`}
warp_56=` 
comp_1=`float3 ret1, neu;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`ret1 = 0;
comp_12=`int anz = 9;
comp_13=`int n = 0;
comp_14=`while (n <= anz) {
comp_15=`    ang2 = 6.28*n/anz;
comp_16=`    c = cos(ang2);
comp_17=`    s = sin(ang2);
comp_18=`    uv2.x =  uv.x*c - uv.y*s;
comp_19=`    uv2.y =  uv.x*s + uv.y*c;
comp_20=`    neu = tex2D(sampler_main, uv2 + 0.5 );
comp_21=`neu-=roam_sin.wzy*roam_cos;
comp_22=`    ret1 = max(ret1,neu-.0);
comp_23=`n++;
comp_24=`}
comp_25=`
comp_26=`ret = ret1*2;
comp_27=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_28=`                      ((uv.xyy*q28
comp_29=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_30=`                      ).xyz*
comp_31=`                      float3(1,1,0)*0.05 + 
comp_32=`                      time*float3(0,0,1)*q31
comp_33=`                     );
comp_34=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_35=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_36=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_37=`ret=.61-ret;
comp_38=`}

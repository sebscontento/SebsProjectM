MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.002
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=11.202
fWaveScale=0.976
fWaveSmoothing=0.900
fWaveParam=-0.500
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01010
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.100
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.80000
wavecode_0_r=0.500
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.500
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.27048
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = x + 0.362*cos(2.452*time);
shape_0_per_frame2=y = y + 0.352*sin(1.52*time);
shape_0_per_frame3=r = q3;
shape_0_per_frame4=b = q2;
shape_0_per_frame5=g = 1-abs(q1);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.27048
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = x + 0.362*sin(2.452*time);
shape_1_per_frame2=y = y + 0.352*cos(1.52*time);
shape_1_per_frame3=r = 1-abs(q3);
shape_1_per_frame4=g = q1;
shape_1_per_frame5=b = 1-abs(q2);
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//martin no religion / my omniversal absence for changing the background light
per_frame_2=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=runbass=runbass+vvb;
per_frame_12=runmids=runmids+vvm ;
per_frame_13=runtreb=runtreb+vvt;
per_frame_14=pi23=4*asin(-1)*.33333333333333;
per_frame_15=atime=(runtreb+runmids+runbass)*1.85;
per_frame_16=q8= (sin(atime-0*pi23)+1)*.4;
per_frame_17=q9= (sin(atime-1*pi23)+1)*.4;
per_frame_18=q10=(sin(atime-2*pi23)+1)*.4;
per_frame_19=
per_frame_20=vb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;
per_frame_21=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_22=vm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;
per_frame_23=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_24=vt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;
per_frame_25=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_26=vvb = min(1,max(0,vvb));
per_frame_27=vvm = min(1,max(0,vvm));
per_frame_28=vvt = min(1,max(0,vvt));
per_frame_29=q1 = (vvt+vvm+vvb)*100;
per_frame_30=q2 = (vvt+vvm+vvb)*100;
per_frame_31=q3 = (vvt+vvm+vvb)*100;
per_frame_32=q4 =(vvt+vvm+vvb)*100;
per_frame_33=q5 =(vvt+vvm+vvb)*100;
per_frame_34=q6 =(vvt+vvm+vvb)*100;
per_frame_35=q4 =(vvt+vvm+vvb)*100;
per_frame_36=q5 =(vvt+vvm+vvb)*100;
per_frame_37=q6 =(vvt+vvm+vvb)*100;
per_frame_38=q7 =(vvt+vvm+vvb)*100;
per_frame_39=q11=(vvt+vvm+vvb)*100;
per_frame_40=q12=(vvt+vvm+vvb)*100;
per_frame_41=q13=(vvt+vvm+vvb)*100;
per_frame_42=q14=(vvt+vvm+vvb)*100;
per_frame_43=q15=(vvt+vvm+vvb)*100;
per_frame_44=q16=(vvt+vvm+vvb)*100;
per_frame_45=q17=(vvt+vvm+vvb)*100;
per_frame_46=q18=(vvt+vvm+vvb)*100;
per_frame_47=q19=(vvt+vvm+vvb)*100;
per_frame_48=q20=(vvt+vvm+vvb)*100;
per_frame_49=q21=(vvt+vvm+vvb)*100;
per_frame_50=q22=(vvt+vvm+vvb)*100;
per_frame_51=q23=(vvt+vvm+vvb)*100;
per_frame_52=q24=(vvt+vvm+vvb)*100;
per_frame_53=q25=(vvt+vvm+vvb)*100;
per_frame_54=q26=(vvt+vvm+vvb)*100;
per_frame_55=q27=(vvt+vvm+vvb)*100;
per_frame_56=q28=(vvt+vvm+vvb)*100;
per_frame_57=q29=(vvt+vvm+vvb)*100;
per_frame_58=q30=(vvt+vvm+vvb)*100;
per_frame_59=q31=(vvt+vvm+vvb)*100;
per_frame_60=q32=(vvt+vvm+vvb)*100;
per_frame_61=wave_r = wave_r + 0.5*sin(time*1.13);
per_frame_62=wave_g = wave_g + 0.5*sin(time*1.23);
per_frame_63=wave_b = wave_b + 0.5*sin(time*1.33);
per_frame_64=
per_frame_65=wave_x = wave_x + 0.2*sin(0.32*time);
per_frame_66=wave_y = wave_y + 0.2*cos(0.32*time);
per_frame_67=
per_frame_68=ob_r = wave_r;
per_frame_69=ob_g = wave_g;
per_frame_70=ob_b = wave_b;
per_frame_71=
per_frame_72=q1 = ob_r;
per_frame_73=q2 = ob_g;
per_frame_74=q3 = ob_b;
per_frame_75=//spiral collide frame
per_frame_76=t = t + 2.5/fps;
per_frame_77=t = if(above(t,2),t-2,t);
per_frame_78=q22 = -t;
per_frame_79=// Flexis dampened sound response functions
per_frame_80=db = db*0.98 + bass_att*0.2; // dampener
per_frame_81=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_82=dt = dt*0.98 + treb_att*0.2;
per_frame_83=tt = tt + dt*0.1;
per_frame_84=dm = dm*0.98 + mid_att*0.2;
per_frame_85=mm = mm + dm*0.1;
per_frame_86=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_87=// change
per_frame_88=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_89=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_90=w = (bb-tt)*0.1;                   // angle
per_frame_91=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_92=//don't change
per_frame_93=q11 = sin(w);
per_frame_94=q12 = cos(w);
per_frame_95=q17 = sin(-w);
per_frame_96=q18 = cos(-w);
per_frame_97=q15 = 1/q16;
per_frame_98=wave_mystery = time*0.2;
per_frame_99=
per_frame_100=zoom = (sin(treb_att));
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=zoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);
per_pixel_5=rot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));
per_pixel_6=sx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);
per_pixel_7=sy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);
per_pixel_8=zoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);
warp_1=`sampler sampler_grad16;
warp_2=`
warp_3=`float2 cmul(float2 mul1, float2 mul2) {
warp_4=`  float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);
warp_5=`  return mul;
warp_6=`}
warp_7=`float2 cdiv(float2 div1, float2 div2) {
warp_8=`  float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),
warp_9=`  (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );
warp_10=`  return div;
warp_11=`}
warp_12=`float2 cpow(float2 base, float ex) {
warp_13=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_14=`   float thetaz = atan2(base.y, base.x);
warp_15=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_16=`   return pow;
warp_17=` }
warp_18=` float2 cexp(float2 base, float2 ex) {
warp_19=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_20=`   float thetaz = atan2(base.y, base.x);
warp_21=`   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);
warp_22=`   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));
warp_23=`   return sol;
warp_24=` }
warp_25=`
warp_26=`shader_body 
warp_27=`{ 
warp_28=`// F(Z) = sqrt(Z^-4+C)
warp_29=`    float2 zoom = lerp(2,2.5,q20);
warp_30=`    float2 c = float2(q4, q5);
warp_31=`    float2 uv1 = (float2(uv.x-0.5, uv.y-0.5))*zoom;
warp_32=`
warp_33=`    int n = 0;
warp_34=`    
warp_35=`    for(n=0; n<5; n++) {
warp_36=`      float2 tmp = cpow(uv1,-4)+c;
warp_37=`      uv1 = cpow(tmp,0.5);
warp_38=`    }
warp_39=`
warp_40=`    float domain = dot(uv1,uv1);
warp_41=`    ret = lerp(float3(1-q11, 1-q12, 1-q13), ret, saturate(domain-2));
warp_42=`    ret = lerp(float3(0,0,0), ret, saturate(domain-1));
warp_43=`    float3 reta = tex2D(sampler_grad16, uv1); 
warp_44=`    ret += reta;
warp_45=`}
warp_46=` 
comp_1=`float d;
comp_2=`float3 emboss, dx, dy;
comp_3=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
comp_4=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
comp_5=`}
comp_6=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_7=`   return center + (domain-center)*scale;
comp_8=`}
comp_9=`float2 uv_polar(float2 domain, float2 center){
comp_10=`   float2 c = domain - center;
comp_11=`   float rad_hq = length(c);
comp_12=`   float ang_hq = atan2(c.x,c.y);
comp_13=`   return float2(ang_hq, rad_hq);
comp_14=`}
comp_15=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_16=`   float2 polar = uv_polar(domain, position);
comp_17=`   float cone = saturate(1-polar.y/radius);
comp_18=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_19=`   float w = atan2(1-cone,halfsphere);
comp_20=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_21=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_22=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_23=`   bool mask =(length(domain-position)<radius);
comp_24=`   return !mask*domain + 
comp_25=`           mask*refrac_uv;
comp_26=`}
comp_27=`shader_body
comp_28=`{
comp_29=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);
comp_30=`
comp_31=`float2 pos1 = 1-float2(q13,q14);
comp_32=`float rad1 = q15;
comp_33=`float2 pos2 = 1-float2(q16,q17);
comp_34=`float rad2 = q18;
comp_35=`float2 pos3 = 1-float2(q19,q20);
comp_36=`float rad3 = q21;
comp_37=`float2 pos4 = 1-float2(q22,q23);
comp_38=`float rad4 = q24;
comp_39=`/*
comp_40=`float2 pos1 = 0.25;
comp_41=`float rad1 = 0.1;
comp_42=`float2 pos2 = 0.75;
comp_43=`float rad2 = 0.1;
comp_44=`float2 pos3 = float2(0.25,0.75);
comp_45=`float rad3 = 0.1;
comp_46=`float2 pos4 = float2(0.75,0.25);
comp_47=`float rad4 = 0.1;
comp_48=`*/
comp_49=`
comp_50=`float refractivity =1.5;
comp_51=`float2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);
comp_52=`       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);
comp_53=`       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);
comp_54=`       lens_uv = uv_lens_half_sphere(lens_uv, pos4, rad4, refractivity);
comp_55=`uv = lens_uv;
comp_56=`
comp_57=`    d = texsize.zw*1;
comp_58=`    dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) )*8;
comp_59=`    d = texsize.zw*2;
comp_60=`    dx += ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) )*4;
comp_61=`    d = texsize.zw*3;
comp_62=`    dx += ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) )*2;
comp_63=`    d = texsize.zw*4;
comp_64=`    dx += ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_65=`
comp_66=`
comp_67=`float3 wires = (dx.x*0.15 + 0.5)*GetBlur3(uv).x*lerp(float3(2,1.6,1),float3(2,0,-2),GetBlur2(uv).z*2);
comp_68=`ret = lerp(GetPixel(uv).z*float3(0.3,0,0.8),1,wires);
comp_69=`
comp_70=`    d = texsize.zw * 4;
comp_71=`    dx = ( 2*GetBlur1(uv + float2(1,0)*d) - 2*GetBlur1(uv-float2(1,0)*d) )*0.5;
comp_72=`    dy = ( 2*GetBlur1(uv + float2(0,1)*d) - 2*GetBlur1(uv-float2(0,1)*d) )*0.5;
comp_73=`
comp_74=`uv = uv - float2(dx.x,dy.x)*0.04;
comp_75=`
comp_76=`
comp_77=`ret = lerp(ret,float3(0,0,0)-0.2,GetBlur2(uv).y);
comp_78=`ret = lerp(ret,float3(0,0,0)+1,GetPixel(uv).y*1.2);
comp_79=`
comp_80=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.220
fVideoEchoAlpha=0.000
nVideoEchoOrientation=2
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=1
bInvert=1
fWaveAlpha=11.202
fWaveScale=0.976
fWaveSmoothing=0.900
fWaveParam=-0.500
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=2.853
fZoomExponent=1.00000
fShader=1.000
zoom=1.00034
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=0.160
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=x = .5 + (bass*.02)*sin(sample*2*(time*10));
wave_0_per_point2=y = .5 + (bass*.02)*cos(sample*2*(time*10));
wave_0_per_point3=r = 1 + .5*sin(sample*2+(time*10));
wave_0_per_point4=g = 1 + .5*sin(sample*2+(time*50));
wave_0_per_point5=b = 1 + .5*sin(sample*2+(time*20));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.36457
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.64566
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = x + 0.362*cos(2.452*time);
shape_0_per_frame2=y = y + 0.352*sin(1.52*time);
shape_0_per_frame3=r = q3;
shape_0_per_frame4=b = q2;
shape_0_per_frame5=g = 1-abs(q1);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.33004
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = x + 0.362*sin(2.452*time);
shape_1_per_frame2=y = y + 0.352*cos(1.52*time);
shape_1_per_frame3=r = 1-abs(q3);
shape_1_per_frame4=g = q1;
shape_1_per_frame5=b = 1-abs(q2);
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_r = 0.65 + 0.5*sin(time*1.13);
per_frame_2=wave_g = 0.65 + 0.5*sin(time*1.23);
per_frame_3=wave_b = 0.65 + 0.5*sin(time*1.33);
per_frame_4=q1 = wave_r;
per_frame_5=q2 = wave_g;
per_frame_6=q3 = wave_b;
per_frame_7=
per_frame_8=
per_frame_9=xy1 = x*above(sin(time),0)+y*below(sin(time),0);
per_frame_10=xy2 = x*below(sin(time),0)+y*above(sin(time),0);
per_frame_11=q1 = xy1;
per_frame_12=q2 = xy2;
per_frame_13=
per_frame_14=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_frame_15=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_frame_16=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_frame_17=rg4 = abs(sin(0.4*time));
per_frame_18=rg5 = 0*above(rg4,0.75) + 1*below(rg4,0.25) + 2*above(rg4,0.25)*below(rg4,0.5)+
per_frame_19=3*below(rg4,0.75)*above(rg4,0.5);
per_frame_20=rg6 = if(equal(thresh,2),rg5,rg6);
per_frame_21=
per_frame_22=echo_orient = echo_orient + rg6;
per_frame_23=
per_frame_24=decay = min(0.995+abs(0.05*sin(time)),1);
per_frame_25=pfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);
per_frame_26=pfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;
per_frame_27=pfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;
per_frame_28=rg1 = abs(sin(0.76*time));
per_frame_29=rg2 = 0*above(rg1,0.5) + 1*below(rg1,0.5);
per_frame_30=rg3 = if(equal(pfthresh,2),rg2,rg3);
per_frame_31=invert = 1;
per_frame_32=darken = 1-invert;
per_frame_33=echo_alpha = echo_alpha - 0.1*rg6;
per_frame_34=brighten = invert;
per_frame_35=//solarize = dx_r*50;
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=
per_pixel_5=six = sin(x);
per_pixel_6=
per_pixel_7=dx = dx + 0.1*sin(abs(12*y))*sin(time);
per_pixel_8=dy = dy + 0.1*sin(abs(12*x))*cos(time);
per_pixel_9=dx = if(above(y,.93),.01,if(below(y,.01),if(below(x,.3),if(below(y,.5),0,-.01),-.01),0));
per_pixel_10=dy = if(below(x,.05),.01,if(above(x,(0.94 - q7)),-.01,0));
per_pixel_11=zoom = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),.95,1),1),1),1);
per_pixel_12=dy = if(below(y,.5),if(below(x,.3),.01,dy),dy);
per_pixel_13=rot = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),0.1*sin(sin(ang*0.1*ang)+rad*6+q8*.444),0),0),0),0);
per_pixel_14=//cen_x = cos(time)*.2+.3;
per_pixel_15=//cen_y = sin(time)*.5+.5;
per_pixel_16=cen_x = q1;
per_pixel_17=cen_y = q2;
per_pixel_18=radxy = sin(time*.1)*.2+.3;
per_pixel_19=
per_pixel_20=dist_x = (x-cen_x)/(radxy*(sin(time*.2*0)*.3+cos((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_21=dist_y = (y-cen_y)/(radxy*(sin(time*.2*0)*.3+sin((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_22=in = below(abs(dist_x),1)*below(abs(dist_y),1);
per_pixel_23=//in = bnot(in);
per_pixel_24=out = bnot(in);
per_pixel_25=inx =(cen_x-q1)+.1*sign(dist_x)*(1-abs(dist_x));
per_pixel_26=iny =(cen_y-q2) +.1*sign(dist_y)*(1-abs(dist_y)); // .05*pow(dist_y,1);
per_pixel_27=
per_pixel_28=//**********outside
per_pixel_29=vang=time*.1;
per_pixel_30=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_31=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_32=
per_pixel_33=dvx=.01*sin(time+vy*80*radxy);
per_pixel_34=dvy=.01*cos(time+vx*80*radxy);
per_pixel_35=
per_pixel_36=outx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_37=outy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_38=
per_pixel_39=dx=in*inx+out*outx;
per_pixel_40=dy=in*iny+out*outy;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz*.8;
warp_5=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*0.4 
warp_11=`                     );
warp_12=`if(ret.x+ret.y+ret.z>.5)ret += (noise2)*.5; 
warp_13=`
warp_14=`    ret += GetBlur1(uv)*.2;
warp_15=`
warp_16=`    // darken (decay) over time and distance from center
warp_17=`    ret *= ret/(1.4*rad); //or try: ret -= 0.004;
warp_18=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    
comp_4=`    //rotate texture cords
comp_5=`    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);
comp_6=`    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);
comp_7=`
comp_8=`	
comp_9=`	    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);
comp_10=`
comp_11=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;
comp_12=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_13=`                tex2D(sampler_main, uv_echo).xyz, 
comp_14=`                0.50 
comp_15=`              )*0.8;
comp_16=`    
comp_17=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_18=`                      ((uv.xyy
comp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_20=`                      ).xyz*
comp_21=`                      float3(1,1,0)*0.05 + 
comp_22=`                      time*float3(0,0,1)*0.4 
comp_23=`                     );
comp_24=`if(ret.x+ret.y+ret.z<.1)ret += (noise2)*.3; 
comp_25=`
comp_26=`    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;
comp_27=`    ret *= 1.00; //gamma
comp_28=`    ret = 1 - ret*(1 - ret)*4; //invert
comp_29=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.140
fDecay=0.999
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.550
fWaveScale=2.000
fWaveSmoothing=0.630
fWaveParam=1.000
fModWaveAlphaStart=1.600
fModWaveAlphaEnd=2.000
fWarpAnimSpeed=0.820
fWarpScale=13.125
fZoomExponent=0.36680
fShader=0.000
zoom=0.82733
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.40518
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.000
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx*1.25-0.1;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx*1.25-0.125;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx*1.25-0.125;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx*1.25-0.125;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=bb = bb*0.99 + bass*0.02;
per_frame_2=mm = mm*0.99 + mid*0.02;
per_frame_3=tt = tt*0.99 + treb*0.02;
per_frame_4=
per_frame_5=mx = max(max(bb,mm),tt);
per_frame_6=mn = min(min(bb,mm),tt);
per_frame_7=
per_frame_8=h1 = (bb-mn)/(mx-mn);
per_frame_9=h2 = (mm-mn)/(mx-mn);
per_frame_10=h3 = (tt-mn)/(mx-mn);
per_frame_11=
per_frame_12=v = 0.1333/fps;
per_frame_13=bm = bm + (h1-h2)*v;
per_frame_14=mt = mt + (h2-h3)*v;
per_frame_15=bt = bt + (h1-h3)*v;
per_frame_16=
per_frame_17=w = bm*2;
per_frame_18=q3 = sin(w);
per_frame_19=q4 = cos(w);
per_frame_20=
per_frame_21=
per_frame_22=q10 = bm;
per_frame_23=q11 = mt;
per_frame_24=q12 = bt;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`uv = lerp(uv_orig,uv,.15);
warp_5=`
warp_6=`float error     = .5;        // maximum random pixel offset
warp_7=`float diffusion = 0.03;      // dither strength
warp_8=`float fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;
warp_9=`
warp_10=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_11=`float magic = lum(GetPixel(lerp(uv_orig,uv, 8))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));
warp_12=`uv = lerp(uv_orig,uv, magic*0.75 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_13=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_14=`
warp_15=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`sampler sampler_pw_noise_lq;
comp_35=`/* code from Martin's hardcore mix - Danke ;) */
comp_36=`float hardcore_stars(float2 domain, float2 center, float o){
comp_37=`   float2 rss, rss0, tmp;
comp_38=`   float2 uv1 = domain-center;
comp_39=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_40=`   rss0.y = .003/(length (uv1));
comp_41=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_42=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_43=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_44=`   tmp = abs(frac(rss*8)-.5);
comp_45=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_46=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_47=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_48=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_49=`   tmp = abs(frac(rss*8)-.5);
comp_50=`   dots += saturate(.02/length(tmp)) * noise;
comp_51=`   dots *= saturate(.2/abs(rss0.y));
comp_52=`   return dots*dots;
comp_53=`return 0;
comp_54=`}
comp_55=`
comp_56=`
comp_57=`float2 uvo, factorA, factorB, product, numerator, denominator, fraction;
comp_58=`shader_body
comp_59=`{
comp_60=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_61=`time *= 0.4;
comp_62=`
comp_63=`float2 pole1 =float2(0,0.5);
comp_64=`float2 pole2 =float2(1,0.5);
comp_65=`
comp_66=`float stars = hardcore_stars(rotate_uv,pole1,0) + hardcore_stars(rotate_uv,pole2,2);
comp_67=`float2 uvo = uv;
comp_68=`
comp_69=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.25, float2(q11,q12));
comp_70=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 )).yx;
comp_71=`
comp_72=`uvo = 0.5 + (uv-0.5)*float2(1.1,0.81);
comp_73=`factorA = uv-float2(1-0.5,0.5);
comp_74=`factorB = float2(0,-1024);
comp_75=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_76=`numerator = float2(1,0);
comp_77=`denominator = product;
comp_78=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_79=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_80=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_81=`uv = fraction.yx*float2(-1,1)*100;
comp_82=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_83=`
comp_84=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,1) + 0.5;
comp_85=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_86=`                tex2D(sampler_main, uv_echo).xyz, 
comp_87=`                0.50 
comp_88=`              ); //video echo
comp_89=`    ret *= 1.14; //gamma
comp_90=`
comp_91=`//ret = lerp(ret,1-ret*1,stars);
comp_92=`}

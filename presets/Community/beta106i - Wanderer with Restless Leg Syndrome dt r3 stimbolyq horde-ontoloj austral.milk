MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.900
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=0.889
fWaveSmoothing=0.360
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.010
fWarpScale=1.766
fZoomExponent=1.00016
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00001
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=6.400
nMotionVectorsY=4.800
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=41
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.300
wave_0_per_frame1=samples=rand(512);
wave_0_per_point1=vol = 0;//bass+mid+treb;
wave_0_per_point2=u = abs(cos(vol+q1*0.1))*3.14159;
wave_0_per_point3=v = abs(cos(-vol+q1*0.015))*3.14159*2;
wave_0_per_point4=s = sample*3.14*100;
wave_0_per_point5=ss = sample*6.28*1000;
wave_0_per_point6=
wave_0_per_point7=//draw
wave_0_per_point8=xs = 0.3*sin(s)*cos(ss);
wave_0_per_point9=ys = 0.3*sin(vol*.3+s)*sin(ss);
wave_0_per_point10=zs = 0.3*cos(s);
wave_0_per_point11=
wave_0_per_point12=
wave_0_per_point13=//rotate x axis
wave_0_per_point14=angle = sin(q1*0.027)*6.28;
wave_0_per_point15=yx = ys*cos(angle) - zs*sin(.2+angle);
wave_0_per_point16=zx = ys*sin(angle) + zs*cos(angle);
wave_0_per_point17=xx = xs;
wave_0_per_point18=
wave_0_per_point19=//rotate y axis
wave_0_per_point20=angle2 = sin(q1*0.03)*6.28;
wave_0_per_point21=xd = xx*cos(angle2) - zx*sin(angle2);
wave_0_per_point22=zd = xx*sin(angle2) + zx*cos(0);
wave_0_per_point23=yd = yx;
wave_0_per_point24=
wave_0_per_point25=//rotaye z axis
wave_0_per_point26=angle3 = sin(q1*0.028)*6.28;
wave_0_per_point27=xn = xd*cos(angle3) - yd*sin(angle3);
wave_0_per_point28=yn = xd*sin(.8+angle3) + yd*cos(angle3);
wave_0_per_point29=
wave_0_per_point30=zd = zd + 2;
wave_0_per_point31=
wave_0_per_point32=x = xn*zd*0.3 + 0.5;
wave_0_per_point33=y = yn*zd*0.3*1.2 + 0.5;
wave_0_per_point34=
wave_0_per_point35=
wave_0_per_point36=r = 0.1 + 0.5*sin(q1 + x + x) + xn;
wave_0_per_point37=g = 0.1 + 0.5*sin(.2+q1 + x + y) + yn;
wave_0_per_point38=b = 0.1 + 0.5*sin(.4+q1 + y + y) + zn;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=samples=256+sin(q20*.0001)*256;
wave_1_per_frame2=basstime=basstime+(bass*bass);
wave_1_per_frame3=t1=basstime*0.01;
wave_1_per_point1=sam=if(equal(int(512*sample)%2,0),
wave_1_per_point2=       sample,
wave_1_per_point3=       1-sample);
wave_1_per_point4=
wave_1_per_point5=//plot x,y,z to point on circle
wave_1_per_point6=smp=sam*6.283+q20*.0001;//*sin(q20*.01);
wave_1_per_point7=xp=sin(smp )*0.55;
wave_1_per_point8=yp=cos(smp )*0.55;
wave_1_per_point9=zp=0;
wave_1_per_point10=
wave_1_per_point11=
wave_1_per_point12=//alter shape;
wave_1_per_point13=angy=sin(sam*6.28*4 +t1 )*6.28;
wave_1_per_point14=xq=xp*cos(angy) - zp*sin(angy);
wave_1_per_point15=zq=xp*sin(angy) + zp*cos(angy);
wave_1_per_point16=xp=xq;
wave_1_per_point17=zp=zq;
wave_1_per_point18=
wave_1_per_point19=
wave_1_per_point20=//rotate on y axis;
wave_1_per_point21=angy=t1*0.1;
wave_1_per_point22=xq=xp*cos(angy) - zp*sin(angy);
wave_1_per_point23=zq=xp*sin(angy) + zp*cos(angy);
wave_1_per_point24=xp=xq;
wave_1_per_point25=zp=zq;
wave_1_per_point26=
wave_1_per_point27=//rotate on x axis
wave_1_per_point28=axs1 = sin(t1*0.15) + 1.6;
wave_1_per_point29=yq= yp*cos(axs1) - zp*sin(axs1);
wave_1_per_point30=zq= yp*sin(axs1) + zp*cos(axs1);
wave_1_per_point31=yp=yq;
wave_1_per_point32=zp=zq;
wave_1_per_point33=
wave_1_per_point34=//rotate on y axis again
wave_1_per_point35=axs2 = sin(t1*0.1)*3.3;
wave_1_per_point36=xq=xp*cos(axs2) - zp*sin(axs2);
wave_1_per_point37=zq=xp*sin(axs2) + zp*cos(axs2);
wave_1_per_point38=xp=xq;
wave_1_per_point39=zp=zq;
wave_1_per_point40=
wave_1_per_point41=//stretch y axis to compensate for aspect ratio
wave_1_per_point42=yp=yp*1.2;
wave_1_per_point43=
wave_1_per_point44=//push forward into viewpace
wave_1_per_point45=zp=zp+4.5-(bass_att*0.1);
wave_1_per_point46=
wave_1_per_point47=//project x,y,z into screenspace
wave_1_per_point48=xs=xp/zp;
wave_1_per_point49=ys=yp/zp;
wave_1_per_point50=
wave_1_per_point51=//center 0,0 in middle of screen
wave_1_per_point52=x=xs+0.5;
wave_1_per_point53=y=ys+0.5;
wave_1_per_point54=
wave_1_per_point55=vol=bass;
wave_1_per_point56=
wave_1_per_point57=r=0.1*vol;
wave_1_per_point58=g=0.6*vol;
wave_1_per_point59=b=0.7*vol;
wave_1_per_point60=
wavecode_2_enabled=1
wavecode_2_samples=102
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=samples = 256 + 50*sin(time*.939493949);
wave_2_per_frame2=vol = (bass_att + mid_att + treb_att)*.333333;
wave_2_per_frame3=vol_avg = .1*(vol_avg*9 + vol);
wave_2_per_frame4=vg = vol_avg*.1;
wave_2_per_frame5=t1 = if(above(vg,1.8),1.8,vg);
wave_2_per_point1=tm = q1;
wave_2_per_point2=sp = sample*6.28*8*6*sin(time)*100;
wave_2_per_point3=
wave_2_per_point4=vol = (value1+value2)*.5;
wave_2_per_point5=it = it*above(sample,0);
wave_2_per_point6=it = it + 1;
wave_2_per_point7=//rad = .5 + vol + .01;
wave_2_per_point8=rad=1;
wave_2_per_point9=ra = rad*sin(sample*3.14);
wave_2_per_point10=ox = ra*sin(sp);
wave_2_per_point11=oy = sin(sample*3.14-1.57)*rad;
wave_2_per_point12=oz = ra*cos(sp);
wave_2_per_point13=
wave_2_per_point14=xang = q4;
wave_2_per_point15=yang = q5;
wave_2_per_point16=zang = q6;
wave_2_per_point17=fov = .5;
wave_2_per_point18=
wave_2_per_point19=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point20=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point21=ox = mx;
wave_2_per_point22=oy = my;
wave_2_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point25=ox = mx;
wave_2_per_point26=oz = mz;
wave_2_per_point27=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point28=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point29=oy = my;
wave_2_per_point30=oz = mz;
wave_2_per_point31=
wave_2_per_point32=yang = 0;//q8;
wave_2_per_point33=oz = oz + 5;
wave_2_per_point34=
wave_2_per_point35=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point36=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point37=ox = mx;
wave_2_per_point38=oz = mz;
wave_2_per_point39=
wave_2_per_point40=oz = oz - 5;
wave_2_per_point41=
wave_2_per_point42=oz = oz - 2;
wave_2_per_point43=x = ox*fov/oz + 0.5;
wave_2_per_point44=x = (x-.5)*0.75 + 0.5;
wave_2_per_point45=y = oy*fov/oz + 0.5;
wave_2_per_point46=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.26465
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.340
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.100
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_init1=//samples = 256 + 50*sin(time*.939493949);
shape_0_init2=//num_inst = 256 + 50*sin(time*.939493949);
shape_0_init3=//samples = .5 + sin(time*.939493949);
shape_0_init4=num_inst = .5 + sin(time*.939493949);
shape_0_per_frame1=
shape_0_per_frame2=sample = instance/1024;
shape_0_per_frame3=//num_inst = .5 + sin(time*.939493949);
shape_0_per_frame4=tm = q1;
shape_0_per_frame5=sp = sample*6.28*8*6*sin(time)*100;
shape_0_per_frame6=
shape_0_per_frame7=vol = (value1+value2)*.5;
shape_0_per_frame8=it = it*above(sample,0);
shape_0_per_frame9=it = it + 1;
shape_0_per_frame10=//rad = .5 + vol + .01;
shape_0_per_frame11=rad2=1.3;
shape_0_per_frame12=ra = rad2*sin(sample*3.14);
shape_0_per_frame13=ox = ra*sin(sp);
shape_0_per_frame14=oy = sin(sample*3.14-1.57)*rad2;
shape_0_per_frame15=oz = ra*cos(sp);
shape_0_per_frame16=
shape_0_per_frame17=xang = q4;
shape_0_per_frame18=yang = q5;
shape_0_per_frame19=zang = q6;
shape_0_per_frame20=fov = .5;
shape_0_per_frame21=
shape_0_per_frame22=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame23=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame24=ox = mx;
shape_0_per_frame25=oy = my;
shape_0_per_frame26=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame27=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame28=ox = mx;
shape_0_per_frame29=oz = mz;
shape_0_per_frame30=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame31=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame32=oy = my;
shape_0_per_frame33=oz = mz;
shape_0_per_frame34=
shape_0_per_frame35=yang = 0;//q8;
shape_0_per_frame36=oz = oz + 5;
shape_0_per_frame37=rad=rad*instance*.0041;//3d
shape_0_per_frame38=
shape_0_per_frame39=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame40=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame41=ox = mx;
shape_0_per_frame42=oz = mz;
shape_0_per_frame43=
shape_0_per_frame44=oz = oz - 5;
shape_0_per_frame45=
shape_0_per_frame46=oz = oz - 2;
shape_0_per_frame47=x = ox*fov/oz + 0.5;
shape_0_per_frame48=x = (x-.5)*0.75 + 0.5;
shape_0_per_frame49=y = oy*fov/oz + 0.5;
shape_0_per_frame50=
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=33
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.500
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.500
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_1_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_1_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_1_per_frame4=a = trans;
shape_1_per_frame5=
shape_1_per_frame6=x = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame7=y = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame8=rad = .09 + rand(int(q30))/15+instance-instance;
shape_1_per_frame9=r=rand(q30)*.1+instance-instance;
shape_1_per_frame10=g=rand(q30)*.1+instance-instance;
shape_1_per_frame11=b=rand(q30)*.1+instance-instance;
shape_1_per_frame12=r2=rand(q30)*.1+instance-instance;
shape_1_per_frame13=g2=rand(q30)*.1+instance-instance;
shape_1_per_frame14=b2=rand(q30)*.1+instance-instance;
shape_1_per_frame15=border_r=rand(q30)*.1+instance-instance;
shape_1_per_frame16=border_g=rand(q30)*.1+instance-instance;
shape_1_per_frame17=border_b=rand(q30)*.1+instance-instance;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=7
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03333
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = int(rand(100))*.01+instance-instance;
shape_2_per_frame2=y = int(rand(100))*.01+instance-instance;
shape_2_per_frame3=
shape_2_per_frame4=a =1;
shape_2_per_frame5=vol=bass+mid+treb;
shape_2_per_frame6=rad = int(rand(int(vol)))/7+instance-instance;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=wave_r = wave_r + 0.35*sin(1.4*time) + 0.16*sin(2.5*time);
per_frame_29=wave_g = wave_g + 0.36*sin(1.7*time) + 0.15*sin(2.11*time);
per_frame_30=wave_b = wave_b + 0.37*sin(2.84*time) + 0.15*sin(2.3*time);
per_frame_31=warp = 0;
per_frame_32=
per_frame_33=wave_x = wave_x + 0.08*sin(time*0.2*sin(0.2*time)*0.21*sin(0.05*time));
per_frame_34=wave_y = wave_y + 0.08*cos(time*0.21*cos(0.3*time)*0.25*cos(0.04*time));
per_frame_35=
per_frame_36=
per_frame_37=q30=bass+treb+mid;
per_frame_38=q20=atime;
per_pixel_1=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_2=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_3=dy_r = equal(thresh,2)*0.0165*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_4=
per_pixel_5=rot = rot - 5*dx_r*max(0,sin(time*2.2));
per_pixel_6=dx = dx + dx_r*max(0,-sin(time*1.2));
per_pixel_7=dy =dy + dy_r*max(0,-sin(time*2.1));
per_pixel_8=zoom = zoom + dx_r*max(0,cos(time*2));
per_pixel_9=cx = cx + 1.45*max(0,-cos(time*1.52));
per_pixel_10=cy = cy + 1.45*max(0,-cos(time*1.25));
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with
warp_4=`    float1 d = 0.005;
warp_5=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_6=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_7=`    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_8=`    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_9=`    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;
warp_10=`
warp_11=`
warp_12=`
warp_13=`    float2 v = 0.01;
warp_14=`
warp_15=`    
warp_16=`    ret.x += (ret.x - GetBlur3(uv).x)*.1;
warp_17=`    ret.x += 0.004;
warp_18=`
warp_19=`
warp_20=`//--------------------------------
warp_21=`
warp_22=`    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);
warp_23=`
warp_24=`
warp_25=`
warp_26=`    v = 0.01;
warp_27=`    
warp_28=`    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);
warp_29=`    ret.z *= 0.8;
warp_30=`    ret.z += 0.004;
warp_31=`
warp_32=`
warp_33=`
warp_34=`//--------------------------------
warp_35=`
warp_36=`    d = 0.01;
warp_37=`    my_uv = float2(-dy,dx)*0.045;
warp_38=`
warp_39=`    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;
warp_40=`    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;
warp_41=`    my_uv += uv - float2(dx,dy)*0.03;
warp_42=`
warp_43=`
warp_44=`
warp_45=`    v = 0.01;
warp_46=`    ret.y =tex2D( sampler_fw_main, my_uv).y;
warp_47=`    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;
warp_48=`    ret.z = tex2D( sampler_fw_main, my_uv).z;
warp_49=`
warp_50=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_51=`                      ((my_uv.xyy*q27
warp_52=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_53=`                      ).xyz*
warp_54=`                      float3(1,1,0)*0.05 + 
warp_55=`                      time*float3(0,0,1)*q29
warp_56=`                     );
warp_57=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_58=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_59=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_60=`    
warp_61=`    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;
warp_62=`ret-=slow_roam_sin*roam_cos.zxy*.4;
warp_63=`//ret = 0;
warp_64=`}
comp_1=`shader_body
comp_2=`{
comp_3=`//ret=tex2D(sampler_main,uv);
comp_4=`// ***** Flexis rotating caleidoscope code *****
comp_5=`float2 cntr = float2(q13,q14); float sin = q11; float cos = q12; float scale = q15;
comp_6=`float2 uv_r = (uv-cntr)*aspect.xy;
comp_7=`       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation
comp_8=`       uv_r = cntr + uv_r*aspect.zw;
comp_9=`       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror
comp_10=`sin = q17; cos = q18; scale = q16;
comp_11=`float2 uv_rr = (uv_r-cntr);
comp_12=`       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation
comp_13=`       uv_rr = cntr + (uv_rr);
comp_14=`float t = q22;
comp_15=`float2 c = ((uv_rr-0.5));
comp_16=`float1 ang_hq = atan2(c.x,c.y);
comp_17=`float2 spiral = float2(ang_hq*q21*1.5,0.666*log(length(c))-ang_hq*q21+t);
comp_18=`spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*float2(0.96,1.02); // mirror
comp_19=`ret = GetPixel(saturate(spiral));
comp_20=`
comp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_22=`                      ((uv_rr.xyy*q28
comp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_24=`                      ).xyz*
comp_25=`                      float3(1,1,0)*0.05 + 
comp_26=`                      time*float3(0,0,1)*q31
comp_27=`                     );
comp_28=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_29=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_30=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_31=`//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;
comp_32=`ret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));
comp_33=`ret-=slow_roam_sin.wzy*roam_cos*.4;
comp_34=`ret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));
comp_35=`//ret=1-ret;
comp_36=`}
